{"paper_id": "d9445f0bb21694062b2ab94b778aa4c29d167569", "metadata": {"title": "Inference, prediction and optimization of non-pharmaceutical interventions using compartment models: the PyRoss library", "authors": [{"first": "R", "middle": [], "last": "Adhikari", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Austen", "middle": [], "last": "Bolitho", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Fernando", "middle": [], "last": "Caballero", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Michael", "middle": ["E"], "last": "Cates", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Jakub", "middle": [], "last": "Dolezal", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Timothy", "middle": [], "last": "Ekeh", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Jules", "middle": [], "last": "Guioth", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Robert", "middle": ["L"], "last": "Jack", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Julian", "middle": [], "last": "Kappler", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Lukas", "middle": [], "last": "Kikuchi", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Hideki", "middle": [], "last": "Kobayashi", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Yuting", "middle": ["I"], "last": "Li", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Joseph", "middle": ["D"], "last": "Peterson", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Patrick", "middle": [], "last": "Pietzonka", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Benjamin", "middle": [], "last": "Remez", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Paul", "middle": ["B"], "last": "Rohrbach", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "Rajesh", "middle": [], "last": "Singh", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}, {"first": "G\u00fcnther", "middle": [], "last": "Turk", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Cambridge", "location": {"country": "United Kingdom"}}, "email": ""}]}, "abstract": [{"text": "PyRoss 1 is an open-source Python library that offers an integrated platform for inference, prediction and optimisation of non-pharmaceutical interventions in age-and contactstructured epidemiological compartment models. This report outlines the rationale and functionality of the PyRoss library, with various illustrations and examples focusing on wellmixed, age-structured populations. The PyRoss library supports arbitrary age-structured compartment models formulated stochastically (in terms of master equations) or deterministically (as systems of differential equations) and allows mid-run transitioning from one to the other. By supporting additional compartmental subdivision ad libitum, PyRoss can emulate time-since-infection models and allows medical stages such as hospitalization or quarantine to be modelled and forecast. The PyRoss library enables fitting to epidemiological data, as available, using Bayesian parameter inference, so that competing models can be weighed by their evidence. PyRoss allows fully Bayesian forecasts of the impact of idealized non-pharmaceutical interventions (NPIs) by convolving uncertainties arising from epidemiological data, model choice, parameters, and intrinsic stochasticity. Algorithms to optimize time-dependent NPI scenarios against user-defined cost functions are included. PyRoss's current age-structured compartment framework for well-mixed populations will in future reports be extended to include compartments structured by location, occupation, use of travel networks and other attributes relevant to assessing disease spread and the impact of NPIs. We argue that such compartment models, by allowing social data of arbitrary granularity to be combined with Bayesian parameter estimation for poorly-known disease variables, could enable more powerful and robust prediction than other approaches to detailed epidemic modelling. We invite others to use the PyRoss library for research to address today's COVID-19 crisis, and to plan for future pandemics.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}, {"text": "Accordingly, PyRoss supports fitting to epidemiological (and other) data using Bayesian parameter inference and model selection. We use the Gauss-Markov limit of the discretestate continuous-time Markov process described by the relevant chemical master equation for this purpose. Then, the standard machinery of Gaussian process regression can be used to infer parameters. The kernels of the Gaussian process are adapted, via the Gauss-Markov limit, to the models being fitted and these adapted kernels are obtained from the solution of systems of ordinary differential equations. The numerous advantages of Gaussian process 7", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "This report introduces PyRoss, a Python library for inference, forecasting and optimisation of non-pharmaceutical interventions (NPIs), using compartment models of epidemics. These models are very widely used in epidemiology [1] [2] [3] , including simple examples such as SIR, but also more complicated variants [4] [5] [6] [7] , some of which are discussed further below. The central modelling philosophy is to group individuals into compartments, which correspond to disease states (such as susceptible / infectious) and may be further divided by age, and by objective medical states (for example, seropositive, hospitalized, in ICU, on ventilator). This leads to a broad class of models that are intermediate in detail between simple compartment models (such as SIR [1] ) and agent-based or similar models where the population is disaggregated into synthetic individuals [8] .", "cite_spans": [{"start": 225, "end": 228, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 229, "end": 232, "text": "[2]", "ref_id": "BIBREF1"}, {"start": 233, "end": 236, "text": "[3]", "ref_id": "BIBREF2"}, {"start": 313, "end": 316, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 317, "end": 320, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 321, "end": 324, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 325, "end": 328, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 770, "end": 773, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 875, "end": 878, "text": "[8]", "ref_id": "BIBREF7"}], "ref_spans": [], "section": "Introduction"}, {"text": "The functionality of PyRoss not only includes simulation of such compartment models, but also automates inference of their parameters from data, and construction of Bayesian forecasts. In addition, it offers framework for modelling NPIs, and optimisation of their parameters (for example, the length of a lockdown) against user-defined cost functions. While the simulation aspects of PyRoss may be comparable to those available elsewhere (such as epiModel [9] ), its integration of inference and optimisation engines create enhanced functionality within a unified and relatively transparent open-source coding environment.", "cite_spans": [{"start": 456, "end": 459, "text": "[9]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Introduction"}, {"text": "PyRoss is built around Markovian compartment models, in which a system's future evolution depends only on the current occupancies of the compartments. This leads to several useful simplifications --the average dynamics of a large population can be obtained by solving a system of ordinary differential equations, and the stochastic dynamics of a finite population can be simulated by a simple (Markovian) stochastic process. On the other hand, such models are sometimes criticised [2] because they result in exponential distributions of residence times in each compartment, which is often inconsistent with realistic disease progression. To address this, time-since-infection (TSI) models may be used [2, [10] [11] [12] [13] [14] [15] .", "cite_spans": [{"start": 481, "end": 484, "text": "[2]", "ref_id": "BIBREF1"}, {"start": 701, "end": 704, "text": "[2,", "ref_id": "BIBREF1"}, {"start": 705, "end": 709, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 710, "end": 714, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 715, "end": 719, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 720, "end": 724, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 725, "end": 729, "text": "[14]", "ref_id": "BIBREF13"}, {"start": 730, "end": 734, "text": "[15]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Rationale for compartment models"}, {"text": "Nevertheless, the behaviour of TSI models can be captured by compartment models, at the modest cost of introducing additional compartments. This is called the method of stages [4] [5] [6] [7] . In stochastic modelling, it amounts to replacing a non-Markovian model by a Markovian one on a larger space (which here is a model with extra compartments). Py-Ross supports an unlimited number of compartments, which achieves high generality while 5 retaining the conceptual and computational advantages of compartment models. Subdivision of a compartment into k stages, even for modest values such as k = 5, already allow considerable flexibility in capturing non-Markovian distributions of residence times within different disease states. Larger values of k can of course be used, if required.", "cite_spans": [{"start": 176, "end": 179, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 180, "end": 183, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 184, "end": 187, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 188, "end": 191, "text": "[7]", "ref_id": "BIBREF6"}], "ref_spans": [], "section": "Rationale for compartment models"}, {"text": "Lifting any restriction on the number of compartments has advantages beyond the TSI issue just described. For example, the medical data used to infer parameters is often provided in the form of compartment populations, such as ICU occupancy or serological test data (perhaps segregated by age). The observed population of these added compartments can then inform the parameters of the model, improving predictions of the future prevalence of these (and other) outcomes. This is valuable when, as with COVID-19, avoiding saturation of ICU or ventilator provision is a policy objective.", "cite_spans": [], "ref_spans": [], "section": "Rationale for compartment models"}, {"text": "One standard use of compartment models is to address age-structured populations. Crucially, this resolves the assortative character of social contacts through which disease transmission occurs. By compartmenting into age bands, representing the contact rates between each pair of bands in terms of a contact matrix, and partitioning this matrix further into home-based, school-based, workplace-based and 'other' components (on which NPIs have separately estimable effects) one can, within a well-mixed population model, prediction epidemic evolution and NPIs outcomes in countries with different demographic and societal structures. Indeed the first use of PyRoss was to make such predictions for COVID-19 in India [16] where three-generation households are widespread. More generally, resolving the age structure of an epidemic is clearly essential in modelling diseases whose transmission and/or morbidity shows a strong age-dependence.", "cite_spans": [{"start": 715, "end": 719, "text": "[16]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "Rationale for compartment models"}, {"text": "NPIs are modelled in PyRoss using either user-specified or inference-based modifications to the contact matrices. For instance the closure of schools reduces the matrix elements between school-going age groups by the school-based contact contribution. It is clear in this context that subdivision to resolve the contact matrix more finely (for instance, splitting work environments by occupation or sector, and adding retail, catering and entertainment contributions) would improve predictive power. Such models could address the fact that NPIs such as social distancing will have different efficacies (and also different costs, see below) in each context. Although PyRoss currently implements only home, school and work compartments, finer subdivision requires no fundamental change to its structure.", "cite_spans": [], "ref_spans": [], "section": "NPIs and compartment structure"}, {"text": "A further extension of PyRoss adds a compartment-based treatment of spatial structure whereby locally well-mixed populations in different neighbourhoods exchange individuals by means of additional, reversibly populated compartments describing a \"commuterverse\". The resulting codebase, PyRossGeo 1 , which has been implemented for a model of Greater London, will be the subject of a separate report. As described there, this approach to spatial 1 https://github.com/lukastk/PyRossGeo 6 modelling could offer advantages over agent-based and other approaches, particularly in mid-epidemic where disease dynamics may become effectively deterministic even at local scale (at least in a city as densely populated as London).", "cite_spans": [], "ref_spans": [], "section": "NPIs and compartment structure"}, {"text": "Of course, compartment models are not universally applicable. One drawback emerges on considering strong lockdown scenarios in which transmission between households becomes extremely low. This violates the concept of a well-mixed population; disease cannot spread no matter how high the intra-household contact rate. However, it seems plausible that by transferring attention from individuals to households (each described as a set of several individuals that becomes exposed when any one of them is infected) a compartment model for this situation could also be developed. Challenges also arise in modeling track-and-test, quarantine and other individually resolved NPIs, but we suspect some of these challenges can also be overcome by careful compartment design.", "cite_spans": [], "ref_spans": [], "section": "Limitations"}, {"text": "We surmise that the full potential of compartment models in epidemic modelling remains unrealized. To help achieve this potential, the PyRoss library currently supports general age-structured compartment models formulated stochastically (in terms of so-called 'chemical master equations' or CMEs) or deterministically (as systems of differential equations). The library can automatically switch between stochastic and deterministic descriptions such that the more expensive stochastic sampling is used when compartment numbers are small, as they are in the early and late stages of an epidemic, while the less expensive deterministic sampling is used when compartment numbers are large, as they are near the peak of the epidemic, at least within well-mixed models. This allows for accurate and efficient sampling of entire epidemiological trajectories taking into account the intrinsic stochasticity of the transmission process.", "cite_spans": [], "ref_spans": [], "section": "Limitations"}, {"text": "Perhaps the greatest limitation of compartment models is the tendency toward proliferation within such models of large numbers of parameters to describe the transition rates between compartments, many of which cannot be directly measured. A disciplined methodology for parameter estimation is then essential. regression, in particular tractable inference and the ability to admit latent variables, accrue automatically. The Bayesian model evidence, necessary for model comparison, model selection and model averaging, alongside the Fisher information matrix, necessary for assessing parameter sensitivities, are thereby obtained in PyRoss without the need for computationally expensive sampling methods such as Markov Chain Monte Carlo.", "cite_spans": [], "ref_spans": [], "section": "Limitations"}, {"text": "Within PyRoss the future course of an epidemic can be predicted, with Bayesian confidence estimation, from models fitted to data gathered up to the present. These forecasts take into the account uncertainties in data, the epidemiological parameters, choice of models, and the intrinsic stochasticity of the transmission. The Bayesian methodology is known to provide a principled way of managing uncertainty [17, 18] , which is inherent in epidemic modelling and prediction.", "cite_spans": [{"start": 407, "end": 411, "text": "[17,", "ref_id": "BIBREF16"}, {"start": 412, "end": 415, "text": "18]", "ref_id": "BIBREF17"}], "ref_spans": [], "section": "Limitations"}, {"text": "Bayesian methods also defend against over-fitting, which is a risk in all models with large numbers of parameters. For instance, the CovidSim model of [19] has, we estimate, over 600 parameters, many of which are not readily accounted for even after geographical, social and other data inputs are identified. Over-fitted models, containing parameters unconstrained by data, are liable to be precise but inaccurate forecasters, particularly under data-poor conditions as is currently the case for COVID-19. In contrast, relatively simple compartment models can be adequate forecasters under these same conditions. An appendix to this report gives a tutorial discussion of the Bayesian approach to this topic for the benefit of those unfamiliar with it.", "cite_spans": [{"start": 151, "end": 155, "text": "[19]", "ref_id": "BIBREF18"}], "ref_spans": [], "section": "Limitations"}, {"text": "NPIs such as lockdown or social distancing each carry a cost (including, but not limited to, economic, medical, social and ethical costs). This can differ substantially between interventions. For measures that treat different age groups differently, age-structured models can be used to assess the their differential impact. Similar remarks apply to other types of compartmenting in more general models, for instance by geographic, social or industrial sector, as we plan to consider in subsequent reports.", "cite_spans": [], "ref_spans": [], "section": "Optimising the outcomes of NPIs"}, {"text": "By representing NPIs through their effects on contact matrices, PyRoss can provide Bayesian forecasts of the impact of specific interventions (albeit limited in the currently implemented examples to the age-structured case). Intervention strategies that extremise imputed costs can then be found without leaving the platform.", "cite_spans": [], "ref_spans": [], "section": "Optimising the outcomes of NPIs"}, {"text": "The optimisation methodology provided within PyRoss a principled way of minimising harm in sustained application of NPIs. The exact definition of 'harm' is of course controversial and subjective. To create a well posed optimization problem, the first step is formulation of a cost function which encodes mathematically how one type of harm (such as fatalities) is weighed against another (such as unemployment). For obvious reasons, PyRoss leaves the choice of cost function to the user, although a schematic example of the approach is described later in this report. 8 ", "cite_spans": [{"start": 568, "end": 569, "text": "8", "ref_id": "BIBREF7"}], "ref_spans": [], "section": "Optimising the outcomes of NPIs"}, {"text": "PyRoss is named after Sir Ronald Ross, doctor, mathematician and poet. In 1898 he made \"the great discovery\" in his laboratory in Calcutta \"that malaria is conveyed by the bite of a mosquito\". Ross won the Nobel Prize for Physiology or Medicine in 1902 and helped lay the foundations of the mathematical modelling of infectious diseases.", "cite_spans": [], "ref_spans": [], "section": "Provenance"}, {"text": "As previously mentioned, PyRoss was initially developed to study the age-structured impact of social distancing on the COVID-19 epidemic in India [16] . Currently it is being developed by the authors of this report who form a task team of the RAMP initiative (Rapid Assistance in Modelling the Pandemic) coordinated by the Royal Society. The library can be used directly to study the transmission, and mitigation through NPIs, of infectious diseases for any well mixed demographic where age and social contact structures are available. As described already, extensions to more general compartment models are either nearing completion (PyRossGeo), or readily envisaged within the same coding structure. More will be added as resources allow.", "cite_spans": [{"start": 146, "end": 150, "text": "[16]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "Provenance"}, {"text": "Compartment models in epidemiology have a long history and while a number of references are cited below, we have not had time to survey the literature as thoroughly as we would like in preparing this report. Some parts may therefore cover territory familiar to experts, but our aim here is to present PyRoss to a wider scientific community as an open-source, well coded Python library that combines the flexibility and generality of agestratified (and prospectively more general) compartment models with appropriate inference and optimization tools. We hope this resource might prove equally valuable to seasoned epidemic modellers and to the many now entering the field for the first time.", "cite_spans": [], "ref_spans": [], "section": "Provenance"}, {"text": "The remainder of this report is structured as follows. In Chapter 2 we provide an overview of metapopulation models of infectious diseases, focussing on age and contact structures. We then sketch a pipeline where models and epidemiological data can be combined, forecasts can be made, and the impact of interventions can be studied in a fully Bayesian manner. In Chapter 3 we outline the theory of inference, prediction, and optimal control of the abstract Markovian epidemic where the pipeline of the preceding chapter can be feasibly realised. In Chapter 4 we provide a bestiary of epidemiological compartment models that illustrate but by no means exhaust PyRoss's capabilities for model construction. We discuss compartment subdivision to allow non-exponentially distributed infectious periods and also to uncouple combinations of rate parameters that would otherwise not be independent. Although the specific examples we discuss have been hard-optimized for the PyRoss library, we also describe how user-defined models can be implemented with only mildly reduced efficiency while retaining full use of the surrounding inference and optimisation tools. In Chapter 5 we present several fully coded worked examples in PyRoss, touching upon sampling, inference, prediction, control and optimal control. As in the preceding chapter, our purpose 2 Inference, Prediction and Optimized Intervention for Compartment Models", "cite_spans": [], "ref_spans": [], "section": "Remaining chapters"}, {"text": "We now specify in more detail the types of model PyRoss currently implements and outline how these form part of an integrated inference, prediction and optimization pipeline, shown schematically in Fig. 2 .0.1.", "cite_spans": [], "ref_spans": [{"start": 198, "end": 204, "text": "Fig. 2", "ref_id": "FIGREF2"}], "section": "Remaining chapters"}, {"text": "PyRoss is designed to simulate structured epidemiological compartment models. The basic variable in this class of models is a metapopulation labeled by its epidemiological state (susceptible, infectious, recovered/removed, etc.,) and additional attributes like age, gender, geographic location and so on [1, 2, [20] [21] [22] . These additional attributes define the structure of the model. The user can specify more disease-state compartments than is traditional, and examples described later in this report include not only susceptible (S), infectious (I), exposed (E), quarantined (Q) and recovered/removed (R) states but also, for example, subdivisions of I into asymptomatic and symptomatic, with the latter further divided into hospitalized and in intensive care. Additionally, the infectious class or classes can be subdivided into k time stages [4] [5] [6] [7] to approximate fixed overall residence times as described in Chapter 1. Similar latent compartments can also be used to overcome other constraints on the disease dynamics that arise from a few-compartment approach. The compartment subdivision scheme exploits PyRoss's efficient representation of transitions between compartments as Markovian jump processes of given rate. This means that the residence time in any (sub-)compartment is exponentially distributed unless the jump rates themselves vary in time (as they do if an NPI regime is changed). The time evolution of the compartment occupancy variables are accordingly described by chemical master equations with time-dependent rates and, when compartmental fluctuations are small so that deterministic dynamics arises, by ordinary differential equations.", "cite_spans": [{"start": 304, "end": 307, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 308, "end": 310, "text": "2,", "ref_id": "BIBREF1"}, {"start": 311, "end": 315, "text": "[20]", "ref_id": "BIBREF19"}, {"start": 316, "end": 320, "text": "[21]", "ref_id": "BIBREF20"}, {"start": 321, "end": 325, "text": "[22]", "ref_id": "BIBREF21"}, {"start": 853, "end": 856, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 857, "end": 860, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 861, "end": 864, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 865, "end": 868, "text": "[7]", "ref_id": "BIBREF6"}], "ref_spans": [], "section": "Compartment models"}, {"text": "An infectious disease is spread by social contacts which are typically assortative in age [1, 23] . Therefore, it is important to account for the country-specific age and social contact structures when modelling the spread of infection. Also, in diseases where morbidity and ", "cite_spans": [{"start": 90, "end": 93, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 94, "end": 97, "text": "23]", "ref_id": "BIBREF22"}], "ref_spans": [], "section": "Age structure and contact matrices"}, {"text": "Basic reproductive ratio mortality are strongly age-dependent, as with COVID-19, it is important not only to know how many people are likely to be infected but also how they are distributed in age. For example, India is one of the few countries in the world with a high prevalence of threegeneration households. This poses a large risk to the elderly, as they are more likely to catch the disease from second-and third-generation members of the household with greater social contacts. PyRoss has already provided the first age-structured forecasts of morbidity and mortality of the COVID-19 epidemic in India [16] and can do so for any community in which the appropriate age stratified contact structure is available, including the 152 countries reported in [24] ; see The resulting differences between countries can be substantial. For instance, with a simple SIR model [1] [2] [3] 25] , the difference between age and contact structures in UK and India leads to a basic reproduction ratio R 0 that is more than 50 percent higher in the latter case; see Table 2 .1. This of course means that identical NPIs could suppress the epidemic in one country and fail completely to do so in another. (For similar reasons it could fail in cities but succeed in the countryside, for example.) ", "cite_spans": [{"start": 609, "end": 613, "text": "[16]", "ref_id": "BIBREF15"}, {"start": 758, "end": 762, "text": "[24]", "ref_id": "BIBREF23"}, {"start": 871, "end": 874, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 875, "end": 878, "text": "[2]", "ref_id": "BIBREF1"}, {"start": 879, "end": 882, "text": "[3]", "ref_id": "BIBREF2"}, {"start": 883, "end": 886, "text": "25]", "ref_id": "BIBREF24"}], "ref_spans": [{"start": 1055, "end": 1062, "text": "Table 2", "ref_id": "TABREF0"}], "section": "Country"}, {"text": "The purpose of many NPIs, such as lockdown and social distancing, is to reduce either the frequency of social contacts or the transmission rates at each contact. Absorbing the latter into the former, such NPIs simply alter the contact matrix. Age-structured models can therefore address age-structured NPIs; the examples in this report are limited to such cases, retaining for simplicity the simplest three-way breakdown of contact spaces ( Fig. 2. 2.1). As mentioned in Chapter 1, further compartmenting in principle allows resolution of NPIs that affect specific subsets of social contacts, such as closing restaurants or public transport systems, without raising major issues of principle. An obvious example is schools closure, an NPI for which the schools channel of the contact matrix is set to zero -or perhaps some nonzero multiplier of its normal value to describe partial opening. Another simple case is a phased unlock stratified by age-bands. A model with additional structure, such as workplaces stratified by occupation or sector, should allow the outcome of more nuanced NPIs to be predicted in the same way. In PyRoss, we partition contacts into spheres of home, workplace, school and all other categories, such that the contact matrix can be written as", "cite_spans": [], "ref_spans": [{"start": 441, "end": 448, "text": "Fig. 2.", "ref_id": "FIGREF2"}], "section": "Modelling and optimizing NPIs"}, {"text": "The social contact matrix C ij denotes the average number of contacts made per day by an individual in class i with an individual in class j. Clearly, the total number of contacts between group i to group j must equal the total number of contacts from group j to group i, and thus, for populations of fixed size the contact matrices obey the reciprocity relation [26, 27] , where N i is the population in age-group i.", "cite_spans": [{"start": 363, "end": 367, "text": "[26,", "ref_id": "BIBREF25"}, {"start": 368, "end": 371, "text": "27]", "ref_id": "BIBREF26"}], "ref_spans": [], "section": "Modelling and optimizing NPIs"}, {"text": "In general, PyRoss expects NPIs to be represented by time-dependent contact matrices. Its inference platform for learning from data is structured accordingly to infer time dependent parameters where appropriate. For example, sufficient age-stratified disease data spanning an initially unlocked and subsequently locked-down state, should allow Bayesian prediction of the effects not just of full unlock but of a partial unlock comprising school closure plus home sequestration of people over 70 (say). There are clearly limitations to this, in that the effect of a completely novel intervention cannot be predicted without prior knowledge of its likely effects on contact matrices. However such priors might be provided by expert judgement. Then, upon actually starting the intervention, incoming data can refine and update model parameters to give increasingly confident prediction of its future effects.", "cite_spans": [], "ref_spans": [], "section": "Modelling and optimizing NPIs"}, {"text": "For policy purposes it is obviously desirable to allow objective comparison of alternative NPIs. PyRoss supports user-defined cost functions to allow this. Intervention strategies that extremise the chosen cost function can then be found using optimization tools which are built into PyRoss as detailed in Chapter 3. 14 ", "cite_spans": [{"start": 317, "end": 319, "text": "14", "ref_id": "BIBREF13"}], "ref_spans": [], "section": "Modelling and optimizing NPIs"}, {"text": "In this chapter, we describe age-structured epidemiological compartment models formulated as discrete-state continuous-time Markov processes. We present the chemical master equation (CME) that describes such processes and then provide the diffusion and Gauss-Markov approximations of the process. The Gauss-Markov approximation is used for Bayesian parameter inference and to compute the model evidence. Bayesian posterior predictive distributions are used to provide forecasts given epidemiological data. Such forecasts convolve uncertainties arising from epidemiological data, parameters, models, and intrinsic stochasticity. Non-pharmaceutical interventions (NPI) are imposed by altering the contact structures of the models. Incorporating uncertainties, a Bayesian forecast of the effect of such interventions can be obtained. The protocol of the NPI -defined for instance by points of triggering and its duration -can be optimized by extremizing a supplied cost function. This sequence of inference, prediction and intervention can be applied iteratively with the arrival of newer data, as shown pictorially in Fig.( 2.0.1), leading to improved epidemiological compartment models.", "cite_spans": [], "ref_spans": [{"start": 1116, "end": 1121, "text": "Fig.(", "ref_id": null}], "section": "Techniques"}, {"text": "We consider a structured metapopulation n = (n 1 , . . . n L\u00d7M ) (3.1.1)", "cite_spans": [], "ref_spans": [], "section": "Discrete-state continuous-time Markov process"}, {"text": "consisting of L classes of epidemiological states and M age-compartments. The \u03be-th transition between compartments can be written down in its most general form as \u03be-th transition step: n", "cite_spans": [], "ref_spans": [], "section": "Discrete-state continuous-time Markov process"}, {"text": "where r \u03be is the vector of change and w \u03be is the rate for the transition \u03be. This gives the chemical master equation (CME) for the evolution of joint distribution over states P (n, t) :", "cite_spans": [], "ref_spans": [], "section": "Discrete-state continuous-time Markov process"}, {"text": "Here \u03b8 = (\u03b8 1 , . . . , \u03b8 k ) is the set of parameters for transitions between the states. The CME describes a discrete-state continuous-time Markov process on the positive integers.", "cite_spans": [], "ref_spans": [], "section": "Discrete-state continuous-time Markov process"}, {"text": "The CME resists solution for all but the simplest form of the transition rates, which can 15 be at most linear. Since the transmission of contagion necessarily involves the contact of, at least, pairs the rates in epidemiological models cannot be linear. Numerical sampling, or, analytical approximations become necessary to extract model behavior from the CME. We describe the analytical approximations in the next section and numerical sampling in Section (3.7).", "cite_spans": [], "ref_spans": [], "section": "Discrete-state continuous-time Markov process"}, {"text": "The family of approximations we consider here replaces the discrete-state continuous-time Markov process by a continuous-time continuous-state Markov process. In this diffusion limit, the transitions n \u2212 \u2192 n + r \u03be in the discrete state space n are replaced by transitions x \u2212 \u2192 x+dr, in a continuous state space x with continuous increments dr and appropriately chosen rates. The continuous state x is usually the discrete state rescaled by the size of the population, x = n/N . This makes it apparent that the diffusion approximation is appropriate when the population size N is large. Here N = M i=1 N i and N i is total population in the age-group i = 1, 2, . . . M .", "cite_spans": [], "ref_spans": [], "section": "Approximations"}, {"text": "Formally, the diffusion limit is obtained by truncating the Kramers-Moyal expansion of the CME to second order. The theorem due to Pawula [28] constrains this truncation to be the only one that yields positive-definite probability distributions. The result is the so-called chemical Fokker-Planck equation (CFPE) with drift and diffusion coefficients that are jump moments of the transition rates of the CME [29, 30] :", "cite_spans": [{"start": 138, "end": 142, "text": "[28]", "ref_id": "BIBREF27"}, {"start": 408, "end": 412, "text": "[29,", "ref_id": "BIBREF28"}, {"start": 413, "end": 416, "text": "30]", "ref_id": "BIBREF29"}], "ref_spans": [], "section": "Diffusion limit and the \u2126-expansion"}, {"text": "The equivalent It\u00f4 stochastic differential equation (SDE) is,", "cite_spans": [], "ref_spans": [], "section": "Diffusion limit and the \u2126-expansion"}, {"text": "where \u03c3 is such that \u03c3\u03c3 T = B and W is a L \u00d7 M dimensional Wiener process with zero mean and unit variance.", "cite_spans": [], "ref_spans": [], "section": "Diffusion limit and the \u2126-expansion"}, {"text": "The diffusion approximation yields an Ito process with configuration-dependent noise. A further approximation due to Van Kampen decomposes the diffusion process into a mean process without noise and a fluctuation which is described by a time-dependent Ornstein-Uhlenbeck process. The resulting process is both Markovian and Gaussian. In this linear noise approximation (LNA), the state is expressed as,", "cite_spans": [], "ref_spans": [], "section": "16"}, {"text": "where \u2126 = N is the system size. The two components satisfy", "cite_spans": [], "ref_spans": [], "section": "16"}, {"text": "is the time-dependent Jacobian evaluated at x 0 (t). The lowest order term x 0 describes the mean evolution whereas the next order term x 1 characterises the Gaussian fluctuation around the deterministic trajectory. The fluctuation x 1 is a non-stationary Ornstein Uhlenbeck process whose mean and variance can be obtained for any point on the mean trajectory.", "cite_spans": [], "ref_spans": [], "section": "16"}, {"text": "As a note of caution, there are some subtleties associated with whether the high order terms can grow significantly over time. This is particularly relevant to us as the growth is exponential at the early stage of an epidemic, where the approximation is not likely to be good.", "cite_spans": [], "ref_spans": [], "section": "16"}, {"text": "From the \u2126-expansion, we obtain the deterministic limit for free as the evolution of the meanx = x 0 + x 1 . It is simple to show that the mean obeys the same equation as x 0 ,", "cite_spans": [], "ref_spans": [], "section": "Deterministic limit"}, {"text": "In pyross.deterministic, the rescaling of \u03b2 is built in to suit simulations with both intensive and extensive variables.", "cite_spans": [], "ref_spans": [], "section": "Deterministic limit"}, {"text": "In this section, we describe inference of parameters \u03b8 = (\u03b8 1 , . . . , \u03b8 k ) performed by the pyross.inference module. The data consists of the time series", "cite_spans": [], "ref_spans": [], "section": "Inference"}, {"text": "of the values of the components x i (t \u03bd ) at the times t \u03bd . The module is capable of inferring the parameters with full and partial information; in the latter case, the latent variables are also inferred. The module determines Bayesian credible intervals for the inferred parameters, which can be supplied to pyross.forecast to perform Bayesian forecasting with both parameter uncertainty and inherent stochasticity. In the future, mode selection will be added to pyross.inference to measure how well the various epidemiological models fit the data.", "cite_spans": [], "ref_spans": [], "section": "Inference"}, {"text": "Consider the time interval (t \u03bd , t \u00b5 ) with initial condition x(t \u03bd ) = x . The outcome of the \u2126-expansion is a Gauss-Markov process, implying that the conditional probability P 1|1 (x, t \u00b5 |x , t \u03bd ) follows a Gaussian distribution determined uniquely by its conditional meanx(t \u00b5 ) = x(t \u00b5 )|x and conditional variance, denoted as \u03a3 [31] .", "cite_spans": [{"start": 336, "end": 340, "text": "[31]", "ref_id": "BIBREF30"}], "ref_spans": [], "section": "Non-stationary Gauss-Markov process"}, {"text": "Recall from section 3.2.2 that the mean obeys the deterministic equation,", "cite_spans": [], "ref_spans": [], "section": "Non-stationary Gauss-Markov process"}, {"text": "with the initial conditionx(t \u03bd ) = x , which can be solved numerically with pyross.deterministic . The conditional variance, defined as,", "cite_spans": [], "ref_spans": [], "section": "Non-stationary Gauss-Markov process"}, {"text": "only has contributions from the fluctuating term x 1 since x 0 evolves deterministically,", "cite_spans": [], "ref_spans": [], "section": "Non-stationary Gauss-Markov process"}, {"text": "where we note that the mean of x 1 remains zero as long as we choose x 1 (t \u03bd ) = 0 (which can always be done as the splitting of the initial condition x' into x 0 and x 1 is arbitrary). It is a well established result that the covariance of an Ornstein-Uhlenbeck process evolves according to the time-dependent differential Lyapunov equation [29, 30] ,", "cite_spans": [{"start": 343, "end": 347, "text": "[29,", "ref_id": "BIBREF28"}, {"start": 348, "end": 351, "text": "30]", "ref_id": "BIBREF29"}], "ref_spans": [], "section": "Non-stationary Gauss-Markov process"}, {"text": "For our models of interest, the Lyapunov equation cannot be solved analytically and is computed numerically in pyross.inference. For improved accuracy, J and B, both of which are functions ofx(t), are computed by interpolating the numerical solution of the deterministic equation using Chebyshev polynomials. Once both the mean and the variance are computed, the conditional probability P 1|1 (x, t \u03bd+1 |x(t \u03bd ), t \u03bd ) is given by", "cite_spans": [], "ref_spans": [], "section": "Non-stationary Gauss-Markov process"}, {"text": "is the deviation of the endpoint x from the deterministic trajectory.", "cite_spans": [], "ref_spans": [], "section": "Non-stationary Gauss-Markov process"}, {"text": "The conditional probability can be computed as above for each time step, the posterior, using flat priors enforcing positive parameters, is given as the sum of the conditional probabilities,", "cite_spans": [], "ref_spans": [], "section": "Parameter inference"}, {"text": ". This is then used to numerically obtain the MAP estimates for the parameters. Near the onset of an epidemic, the higher order fluctuations can grow exponentially and significantly deviate from the mean trajectory, to resolve this issue, one needs to sample more frequently where the growth rate (effectively R 0 ) is large.", "cite_spans": [], "ref_spans": [], "section": "Parameter inference"}, {"text": "With limited information, we may only be able to observe a few components", "cite_spans": [], "ref_spans": [], "section": "Latent variables"}, {"text": "g. the number of confirmed cases and deaths. The first step towards inference for latent variables is to express the probability of an full time series for a given set of parameters. One would then need to trace out unobserved degrees of freedom. However, this is hard to do in practice, because the joint distribution may be highly non-Gaussian. This is the case even though the propagator itself is Gaussian, because \u03a3 andx may depend on x. Nonetheless, Gaussian inference is possible for latent variables if the system-size expansion remains approximately valid for time intervals as long as the whole observed time series. Then, all typical trajectories remain close to the mean of the time series, evolving according to the ODE", "cite_spans": [], "ref_spans": [], "section": "Latent variables"}, {"text": "with the drift vector A. One has to be careful, though, because the Jacobian of A typically has positive eigenvalues which results in exponential growth of any deviation from the mean. We need a sufficiently large system size N . We now write x(t) =x(t) + \u2206(t). The variable \u2206 = x 1 / \u221a \u2126 and therefore also evolves according to an Ornstein Uhlenbeck process. The conditional probability distribution for \u2206 at time t \u00b5 given its value at time t \u03bd is", "cite_spans": [], "ref_spans": [], "section": "Latent variables"}, {"text": "where the matrix U \u00b5 = U (t \u00b5 ) is the time evolution operator, defined by the equation", "cite_spans": [], "ref_spans": [], "section": "Latent variables"}, {"text": "It yields the mean of \u2206(t \u00b5 ) for given \u2206(t \u03bd ). \u03a3 \u00b5 is calculated from Eq.3.3.2, butx is different, since we couldn't update it with a recent initial condition. For a Gaussian initial distribution with covariance \u03a3 0 , the conditional probabilities are concatenated to yield the joint distribution. The overall covariance matrix for the vectors (\u2206(t 1 ), . . . , \u2206(t Nt )) T is given by the inverse of the following tridiagonal block matrix:", "cite_spans": [], "ref_spans": [], "section": "Latent variables"}, {"text": "Note that after the inversion \u03a3 typically has nonzero entries everywhere. With latent observable, we simply eliminate all rows and columns associated with (sub-)indices other than those known. The joint distribution of the remaining then follows as a multivariate Gaussian with the reduced covariance and the mean for the observed variables. In the pyross.inference module, the initial conditions for x are also treated as parameters to be inferred, as they are unknown for the unobserved variables.", "cite_spans": [], "ref_spans": [], "section": "Latent variables"}, {"text": "Bayesian credible intervals (BCI), or standard deviation of the maximum a posteriori (MAP) estimates, can be understood by writing H = \u2212\u2207\u2207 ln P (\u03b8|X, M i )| \u03b8 * for the Hessian, and Taylor expanding the log posterior of the parameters \u03b8, given the data X and the model M i with \u2206\u03b8 = \u03b8 \u2212 \u03b8 * , where \u03b8 * are the MAPs [17, 32] ,", "cite_spans": [{"start": 316, "end": 320, "text": "[17,", "ref_id": "BIBREF16"}, {"start": 321, "end": 324, "text": "32]", "ref_id": "BIBREF31"}], "ref_spans": [], "section": "Model evidence"}, {"text": "This is a local Gaussian approximation to the posterior around its mode with covariance matrix H \u22121 . The square root of the diagonal elements of this covariance matrix gives the BCIs.", "cite_spans": [], "ref_spans": [], "section": "Model evidence"}, {"text": "In case the functional form of the posterior distribution is known, numerical errors associated with finite differences methods can be circumvent by using automatic differentiation 20 (eg 'autograd [33] '). This allows for exact and rapid computation of the Hessian matrix, neither over-nor underestimating the uncertainty of our estimates. Mostly branded 'the second level of inference' after the first level of obtaining the MAP estimates, the arguably most important feature of Bayesian inference is model selection. The posterior probability for each model is by Bayes' theorem", "cite_spans": [{"start": 198, "end": 202, "text": "[33]", "ref_id": "BIBREF32"}], "ref_spans": [], "section": "Model evidence"}, {"text": "In the following we assume a flat model prior P (M i ), ie we a priori have no reason to prefer one model over an other. This leaves us with the model evidence P (X|M i ), which at the same time is the normalization constant in Bayes' theorem for the posterior of the parameters \u03b8 given the data", "cite_spans": [], "ref_spans": [], "section": "Model evidence"}, {"text": "In order to evaluate the evidence, we have to marginalize the likelihood function over the often high-dimensional parameter space", "cite_spans": [], "ref_spans": [], "section": "Model evidence"}, {"text": "However, if the posterior in equation (3.3.9) is reasonably well approximated by a Gaussian, which is expected to be increasingly accurate the more data we use, we can use Laplace's method to approximate the evidence by", "cite_spans": [], "ref_spans": [], "section": "Model evidence"}, {"text": "the height of the peak of the integrand in equation (3.3.10) times its width. The Occam factor automatically penalizes over-fitting [17] . By comparing the contributions of best fit likelihood and Occam factor one can at least qualitatively decide whether this approximation is expected to be sufficient. The evaluation is of course orders of magnitude faster than computing the integral in equation (3.3.10).", "cite_spans": [{"start": 132, "end": 136, "text": "[17]", "ref_id": "BIBREF16"}], "ref_spans": [], "section": "Model evidence"}, {"text": "Nested sampling (eg via 'nestle' package [34] ) is an algorithm invented by John Skilling [35] , dealing with those high-dimensional integrals in the evidence calculation equation (3.3.10) by reducing them to one-dimensional integrals over unit range. We have found this to be rather slow for most of our models, but since the evidence has to be calculated only once per model, it might still be feasible to use nested sampling. Especially, when not enough data is available and the Gaussian approximation equation (3.3.11) fails to be sufficient, this should be used. The method is slow when running on a single core for the inference on the manifold as described in sec 3.3. However, we have found that for the tangent space inference described in section 3.4, nestle is actually reasonably fas. This is simply because of the much faster log-posterior evaluations. With parallel processing of the nested sampling, log-posterior evaluation takes few seconds on a 8 core machine for M = 2 and N = 5 \u00d7 10 4 .", "cite_spans": [{"start": 41, "end": 45, "text": "[34]", "ref_id": null}, {"start": 90, "end": 94, "text": "[35]", "ref_id": "BIBREF33"}], "ref_spans": [], "section": "Nested sampling"}, {"text": "As mentioned before, a self-consistent method of taking the diffusion limit of equation equation (3.1.3) is van Kampen's system size expansion [30] . With the population densities x \u2261 n/\u2126, where \u2126 is the system size -the total population size, the a posteriori justified ansatz of the \u2126-expansion is where x \u03bd = x(t \u03bd ). The mean in 3.2.4 evolves according to the macroscopic rate equations (MRE)\u1e8b", "cite_spans": [{"start": 143, "end": 147, "text": "[30]", "ref_id": "BIBREF29"}], "ref_spans": [], "section": "Tangent space inference"}, {"text": "and can thus be found by solving this system of ODEs. The CFPE is equivalent to the Ito stochastic differential equation describing the dynamics of u, the so called chemical Langevin equation (CLE),", "cite_spans": [], "ref_spans": [], "section": "Tangent space inference"}, {"text": "with J ab = \u2202 b A a , and W being a multi-dimensional Wiener process. Thus, in this approximation the population density evolves according to the stochastic process", "cite_spans": [], "ref_spans": [], "section": "Tangent space inference"}, {"text": "driven by a small (suppressed by a factor of \u2126 \u2212 1 2 ) Ornstein-Uhlenbeck noise. Formally re-writing equation equation (3.4 .3) we ge\u1e6b", "cite_spans": [{"start": 119, "end": 123, "text": "(3.4", "ref_id": null}], "ref_spans": [], "section": "Tangent space inference"}, {"text": "and the Jacobian \u2202\u03b7 i \u03bd /\u2202x j \u03bd = \u03b4 ij we obtain a multivariate normal distribution for the likelihood of\u1e8b, given the parameters \u03b8", "cite_spans": [], "ref_spans": [], "section": "Tangent space inference"}, {"text": "with the mean velocity defined by", "cite_spans": [], "ref_spans": [], "section": "Tangent space inference"}, {"text": "Assuming improper informative priors, i.e\" flat priors enforcing positive parameters, the log-posterior distribution is", "cite_spans": [], "ref_spans": [], "section": "Tangent space inference"}, {"text": "This posterior distribution, albeit complicated, is analytical up to integration of equation equation (3.4.1) and thus, can be easily traced by automatic differentiation.", "cite_spans": [], "ref_spans": [], "section": "Tangent space inference"}, {"text": "Having obtained the maximum a posteriori (MAP) estimates \u03b8 * one can therefore easily obtain the Hessian H \u2261 \u2212\u2207\u2207 ln P (\u03b8|\u1e8b)| \u03b8 * of the posterior distribution and thus, calculate the Laplacian approximation to the evidence for the model M i [17] ", "cite_spans": [{"start": 241, "end": 245, "text": "[17]", "ref_id": "BIBREF16"}], "ref_spans": [], "section": "Tangent space inference"}, {"text": "and most importantly the Bayesian credible intervals, or error bars of the MAP estimates. Not relying on finite differences-methods enables us to quantify the uncertainties of our predictions in a much more reliable manner. Due to the just-in-time (JIT) compilation of 'JAX' [36] , a python machine learning library, it is even possible to compute the multi-dimensional integral for the model evidence", "cite_spans": [{"start": 275, "end": 279, "text": "[36]", "ref_id": "BIBREF34"}], "ref_spans": [], "section": "Tangent space inference"}, {"text": "exactly within seconds (nestle). With this, we can pursue the task of Bayesian model averaging for epidemiological models.", "cite_spans": [], "ref_spans": [], "section": "Tangent space inference"}, {"text": "Operationally , the stochastic population density vector x is given by the data itself. Its derivative\u1e8b is simply obtained by finite differences (jax.numpy.gradient) [36] , no fitting is applied. The meanx satisfying the MREs equation (3.4.1) can be found by solving this system of ODEs for a given set of parameters \u03b8 (jax.experimental.ode.odeint), and therefore, is part of the optimization process of finding the MAPs \u03b8 * . The coefficients of the system size expansion A, J and B depend on the mean.", "cite_spans": [{"start": 166, "end": 170, "text": "[36]", "ref_id": "BIBREF34"}], "ref_spans": [], "section": "Tangent space inference"}, {"text": "In the previous section, we described the inference of model parameters \u03b8 = (\u03b8 1 , . . . , \u03b8 k ) given data X in the form of a time series, c.f. equation (3.3.1). We now discuss how the results of this inference are used for prediction in the pyross.forecast module. An example where the forecasting module is used is given in section 5.5.", "cite_spans": [], "ref_spans": [], "section": "Prediction"}, {"text": "Once given data X has been used to infer parameters \u03b8 of a model M i , the probability to make an observation Y is given by", "cite_spans": [], "ref_spans": [], "section": "Posterior predictive distributions"}, {"text": "where Y is the observation whose probability one wants to predict. The first term in the integral, called model uncertainty, is the probability that, for given data X and parameters \u03b8, one observes Y . The second term, called parameter uncertainty, represents the probability of the parameters \u03b8 itself given the data X. As indicated in the notation, all three probabilities are conditional on M i . In the present context, X is typically a fully or partially observed time series up to the present, and Y denotes future values of the time series, or more generally any function of the time series. To use the right-hand side of equation (3.5.1) for calculating predictions, explicit expressions for both factors need to be obtained. We first approximate the equation as", "cite_spans": [], "ref_spans": [], "section": "Posterior predictive distributions"}, {"text": "where \u03b8 j are N independent samples drawn from the distribution P (\u03b8|X, M i ). In the following sections, we describe both this sampling process, and how the corresponding terms in equation (3.5.2) are evaluated in pyross.forecast.", "cite_spans": [], "ref_spans": [], "section": "Posterior predictive distributions"}, {"text": "Uncertainty in the available data needs to be considered when fitting model parameters. Sources of uncertainty are twofold. On the one hand, authorities may be not able to report all the infected cases or deads. On the other hand, uncertainty arises from the fact that tests can never be perfect. The consequence of this uncertainty is that the reported numbers of infectives do not match the actual numbers considered in our models. One way to reduce data uncertainty is to focus on refined models that attribute specific compartments to the data available with the least uncertainty. These compartments can be (see the bestiary 4) compartments for hospitalised individual, people in ICU, deads, etc. Our inference methods in principle allow one to extract model parameters from such incomplete information. However, as it can be expected that these three classes cover only a small fraction of the overall infected population (in particular older age groups), the suitability of these data for extensive model fitting is questionable.", "cite_spans": [], "ref_spans": [], "section": "Data uncertainty"}, {"text": "It would therefore be desirable to also use data from more universal testing campaigns. The only way to handle uncertainty in these numbers is to model the testing process explicitly. Such testing models typically need to be informed by the number of tests being performed per day and a guess for the specificity of the tests.", "cite_spans": [], "ref_spans": [], "section": "Data uncertainty"}, {"text": "To do so, all individuals who are positively tested are moved in a new class T + (confirmed cases) 1 . Note that people in T + are not isolated by default and can still infect others if they are not quarantined.", "cite_spans": [{"start": 99, "end": 100, "text": "1", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "24"}, {"text": "For the same reasons as every compartment models considered in PyRoss, the testing process is intrinsically stochastic (although it becomes deterministic in the law of large numbers limit). It is generically defined by:", "cite_spans": [], "ref_spans": [], "section": "24"}, {"text": "1. the probability to actually report a confirmed case when a test is conducted, 2. the distribution of tests in time.", "cite_spans": [], "ref_spans": [], "section": "24"}, {"text": "When a test is conducted, it can be performed completely at random by selecting one individual in the whole population or it can be restricted to some subpopulation.", "cite_spans": [], "ref_spans": [], "section": "Random testing in the population"}, {"text": "By noting I(t) the number of infected -yet not tested -individuals, and T + (t) the number of positively tested individuals, the simplest model is to consider a perfectly random testing procedure among the N testpop (t) = N \u2212 T + (t) individuals in the population who have not been tested positive yet. The probability to detect one infected individual at time t thus reads as", "cite_spans": [], "ref_spans": [], "section": "Random testing in the population"}, {"text": ".", "cite_spans": [], "ref_spans": [], "section": "Random testing in the population"}, {"text": "Possible refinements of the testing process include more selective processes like symptomatic testing, contact tracing, etc.", "cite_spans": [], "ref_spans": [], "section": "Random testing in the population"}, {"text": "To go further, one needs to make some assumption about the distribution of tests in time. The simplest assumption is to assume that the tests are also performed randomly in time, without any memory of the tests conducted earlier (Markov assumption). If one denotes by \u03c4 (t) the rate at which tests are performed, the number of tests conducted between t and t + \u2206t is drawn from a Poisson distribution of parameter t+\u2206t t \u03c4 (u)du. The rates at which infected people are tested positive thus reads", "cite_spans": [], "ref_spans": [], "section": "Markovian testing process"}, {"text": "We recall that when a positive case is detected, the global state of the system (I(t),", "cite_spans": [], "ref_spans": [], "section": "Markovian testing process"}, {"text": "In practice, one typically knows from data the average number of tests per day. If one assumes \u03c4 (t) to be constant over one day, the average number of tests conducted in one day is \u03c4 \u00d7 1 day.", "cite_spans": [], "ref_spans": [], "section": "Markovian testing process"}, {"text": "At the expense of introducing non-Markovian features into the dynamics, the distribution of tests in time is not limited to be Poissonian, and one can imagine to conduct a strictly fixed number of tests per day, or even more complex time distributions.", "cite_spans": [], "ref_spans": [], "section": "Markovian testing process"}, {"text": "With equation (3.3.7) we have a Gaussian approximation for the distribution of the parameters \u03b8, which, for data X and model M i , is given by", "cite_spans": [], "ref_spans": [], "section": "Parameter uncertainty"}, {"text": "where N is a normalisation constant, \u2206\u03b8 = \u03b8 \u2212 \u03b8 * with \u03b8 * the MAPs, and H the Hessian of the log-likelihood function. To generate numerical samples \u03b8 j for system parameters, we draw from this Gaussian distribution. While in the parameter inference for compartment models, the components of the parameters \u03b8 typically represent rates between compartments, which are positive, the Gaussian distribution equation (3.5.5) in principle allows for arbitrary real values. To avoid unphysical values for system parameters, we redraw a sample \u03b8 j if any of its vector component is negative, meaning we use a truncated version of the Gaussian distribution.", "cite_spans": [], "ref_spans": [], "section": "Parameter uncertainty"}, {"text": "For a deterministic model and a definite initial condition we have", "cite_spans": [], "ref_spans": [], "section": "Model uncertainty"}, {"text": "where Y (X, \u03b8, M i ) is the deterministic value for Y , calculated from model M i using the parameters \u03b8 and the initial condition determined by the data X. For a deterministic model, the approximate posterior predictive distribution equation (3.5.2) is thus given by", "cite_spans": [], "ref_spans": [], "section": "Model uncertainty"}, {"text": "Obtaining Y (X, \u03b8, M i ) in practice means one has to integrate the model equations, which for the nonlinear ODEs corresponding to the compartment models is achieved by numerical integration using pyross.deterministic. To estimate (3.5.2) for a stochastic model, we also use (3.5.7), but now Y (X, \u03b8 j , M i ) represents a realisation of the stochastic dynamics, generated using pyross.stochastic.", "cite_spans": [], "ref_spans": [], "section": "Model uncertainty"}, {"text": "In section 3.5.1 we discussed predicting the outcome of an observation Y , assuming a given observation X and a model M i . However, typically there are multiple models that are, in principle, compatible with the observation X. A more refined forecast is thus obtained by not only averaging over parameter uncertainties and model uncertainties, but also over models, i.e. by considering", "cite_spans": [], "ref_spans": [], "section": "Model averaging"}, {"text": "where the summation is over the models M i considered, the first term in the sum was discussed in section 3.5.1, and the second term in the sum is the probability that, of all the models considered, M i is the correct model, was discussed in section 3.3.4. In practice, incorporating a model-average in the prediction formula 3.5.2, we thus obtain", "cite_spans": [], "ref_spans": [], "section": "Model averaging"}, {"text": "where now for the j-th trajectory, first a model M j is randomly drawn with probability given by equation (3.3.11) (properly normalised so that the sum over all models considered is unity), and then a random sample \u03b8 j for the parameters of that model is drawn from the distribution P (\u03b8|X, M j ), as discussed in section (3.5.3). Finally, the probability appearing in the j-th term is obtained as described in section (3.5.4).", "cite_spans": [], "ref_spans": [], "section": "Model averaging"}, {"text": "To achieve a desired goal, such as reducing the number of infectives, one would like to understand how a given intervention influences the time evolution of a model. As will be discussed in this chapter, pyross offers several ways of implementing and optimising intervention parameters. See examples 5.6 and 5.6 for examples involving prescribed-and optimised intervention parameters.", "cite_spans": [], "ref_spans": [], "section": "Interventions"}, {"text": "Non-pharmaceutical interventions (NPIs) are strategies that mitigate the spread of a disease by suppressing its normal pathways for transmission. These include social distancing, wearing masks, working from home, and isolation of vulnerable populations. In contrast to pharmaceutical interventions, which are slow to develop but effective in the long term, NPIs can be rapidly implemented but are generally too costly to maintain indefinitely. In the modelling framework of pyross, we represent NPIs as modifications to the contact matrix 27 C, the elements C ij of which describe the number of contacts between age groups i and j (see Eq.2.3.1). Without any NPI, we typically consider the contact matrix as a sum", "cite_spans": [], "ref_spans": [], "section": "Non-pharmaceutical interventions (NPI)"}, {"text": "where the four terms denote the number of contact at home, at work, at school, and the other remaining contacts. We have written the above by setting the constants a H = a S = a W = a 0 = 1 in Eq.2.3.1. The class pyross.contactMatrix provides an interface to retrieve the individual contact matrices C H , C W , C S , C O , for several countries, obtained from Ref. [24] .", "cite_spans": [{"start": 366, "end": 370, "text": "[24]", "ref_id": "BIBREF23"}], "ref_spans": [], "section": "Non-pharmaceutical interventions (NPI)"}, {"text": "In the presence of a NPI, typically in at least one of these spheres contacts are reduced, and the corresponding contact matrix is to be replaced by", "cite_spans": [], "ref_spans": [], "section": "Non-pharmaceutical interventions (NPI)"}, {"text": "where X \u2208 {H, W, S, O} labels the sphere, u i is the fraction by which susceptible members of age group i reduce their contacts and v j is the corresponding fraction for infective members.", "cite_spans": [], "ref_spans": [], "section": "Non-pharmaceutical interventions (NPI)"}, {"text": "An intervention typically consists of a time-and state-dependent protocol for the contact matrix. The pyross module currently allows for two kinds of intervention strategies. Purely time-dependent interventions, meaning a given time-dependent contact matrix C(t), are available directly in the main simulation modules pyross.deterministic and pyross.stochastic . An example for purely time-dependent interventions is a full lockdown starting at time t 0 and released at time t 1 , for which the time-dependent contact matrix is", "cite_spans": [], "ref_spans": [], "section": "Intervention protocols"}, {"text": "(3.6.3)", "cite_spans": [], "ref_spans": [], "section": "Intervention protocols"}, {"text": "If one considers a system with uncertainty, either intrinsic from the model or because of imperfect knowledge of system parameters, then a purely time-dependent protocol could be insufficient. For example, if at time t 1 in the protocol given by equation (3.6.3), the number of infectives has not decreased below some threshold, one might not want to release the lockdown yet before that threshold is met. To allow for interventions that dependent on time and state, the submodule pyross.control allows to consider event-driven protocols.", "cite_spans": [], "ref_spans": [], "section": "Intervention protocols"}, {"text": "is the state of the dynamics, and it occurs at a time t * if E i (y(t * ), t * ) = 0, possibly with the additional requirement that the total derivative d/dt E i (y(t * ), t * ) be either positive or negative. In pyross.control, the user provides the program with a list of events (E 1 , E 2 , ..., E M ), and for each event supplies a contact matrix C i which is used in the further time evolution of the model once the event E i has occurred. An example for a protocol defined by events is given by the two functions", "cite_spans": [], "ref_spans": [], "section": "Intervention protocols"}, {"text": "where c 1 > c 2 and we require that the total derivative 28 of E 1 be positive for an event, while the total derivative of E 2 be negative for an event. For the contact matrix, we consider", "cite_spans": [], "ref_spans": [], "section": "Intervention protocols"}, {"text": "This protocol puts a lockdown into place once the population y i of compartment i exceeds a threshold c 1 , and releases this lockdown once the population drops below c 2 . In pyross. control, the user can define whether each event can only occur once or repeatedly; if each event can only occur once, the user can furthermore set whether the events can occur in arbitrary order, or only in the order they are given. For quarantine and contact tracing (Testing, contact-Tracing and Isolation procedures), one can also imagine to model such interventions by adding new compartments explicitly in the model (see for instance SEAIIRQ in Sec. 4.10). For instance, when quarantine is decided after a test has been performed, the rate at which the quarantine compartment is filled is directly proportional to the average number of tests currently conducted, which can be a priori controlled. This other kind of intervention is currently being implemented within PyRoss.", "cite_spans": [], "ref_spans": [], "section": "Intervention protocols"}, {"text": "Simulations can be used to determine whether a given control strategy achieves a desired goal. If all system parameters are known exactly, and if the dynamics of the model is deterministic, then a single simulation using pyross.control is sufficient to explore the consequences of a given intervention strategy. For the case of uncertain parameters, or a stochastic model, pyross.forecast can be used to generate an ensemble-forecasting for both purely time-dependent and event-driven intervention strategies.", "cite_spans": [], "ref_spans": [], "section": "Bayesian forecast of NPI"}, {"text": "Intervention protocols are typically considered to achieve a desired goal, such as reducing the number of infectives. To frame this in the language of an optimisation problem, we consider events (E 1 , E 2 , ..., E M ) which depend on a parameter c \u2208 R m . An example for this are the two thresholds c \u2261 (c 1 , c 2 ) \u2208 R 2 from the protocol considered in section 3.6.2. We furthermore consider a cost functional C c [y c ], which quantifies the cost of a given realisation y c (t) of the dynamics. With the index c we emphasise that the functional can depend on c both explicitly, and implicitly because the model dynamics depends on the protocol. Taking into account both model-and parameter uncertainty, the average cost is given by", "cite_spans": [], "ref_spans": [], "section": "Optimised intervention parameters"}, {"text": "where P \u03b8 [y c ]D[y c ] denotes the path-integral density of the trajectory y c for given system parameters \u03b8. The optimal protocol c * is defined as the protocol which minimises the average cost, 6.6) and to determine it numerically, a practical means of evaluating the average cost of a protocol needs to be established. For deterministic dynamics, there is only one path which occurs with probability one, and the mean cost of a protocol is given by", "cite_spans": [{"start": 197, "end": 201, "text": "6.6)", "ref_id": null}], "ref_spans": [], "section": "Optimised intervention parameters"}, {"text": "where y c denotes the deterministic solution corresponding to the parameters \u03b8 and a given initial conditions. An estimate for this average cost can be obtained numerically by approximating P (\u03b8) by a Gaussian, drawing N samples \u03b8 j for this Gaussian, and averaging over the resulting cost, i.e.", "cite_spans": [], "ref_spans": [], "section": "Optimised intervention parameters"}, {"text": "where y j c is the deterministic solution of the model dynamics subject to the protocol with parameters c and model parameters \u03b8 j . If the model dynamics is furthermore stochastic, we approximate the path-integral in equation (3.6.5) by additionally averaging over realisations of the model dynamics; then, equation (3.6.8) is still valid and y j c simply denotes a stochastic realisation subject to the protocol with parameters c and model parameters \u03b8 j . Equation (3.6.8) constitutes a numerically accessible means of evaluating the average cost of a protocol, which can be used for numerical solution of the minimisation problem (3.6.6). While an optimisation framework within pyross is in the works, pyross.control can be conveniently used to generate the sample trajectories y j c which appear in equation (3.6.8). For an example of a problem with optimised intervention parameters, see example 5.7.", "cite_spans": [], "ref_spans": [], "section": "Optimised intervention parameters"}, {"text": "The generate a realization of a discrete-state continuous time model as described in section 3.1, pyross.stochastic by default uses the Gillespie SSA algorithm [37] . In this algorithm, an integration step (t, n(t)) \u2212\u2192 (t + \u2206t, n(t + \u2206t)) (3.7.1)", "cite_spans": [{"start": 160, "end": 164, "text": "[37]", "ref_id": "BIBREF35"}], "ref_spans": [], "section": "Exact sampling"}, {"text": "consists of two parts, each of which involves a random choice: 30 1. Determine a waiting time \u2206t until any population in the compartment model changes (a \"reaction\" takes place).", "cite_spans": [], "ref_spans": [], "section": "Exact sampling"}, {"text": "2. Decide which population changes.", "cite_spans": [], "ref_spans": [], "section": "Exact sampling"}, {"text": "For step 1, first the total reaction rate is calculated as W = \u03b1 w \u03b1 , and then an exponentially distributed random variable \u2206t with mean 1/W is generated to determine the time at which the next reaction occurs. For step 2, a random reaction \u03b1 is then chosen with probability p \u03b1 = w \u03b1 /W . The population vector n is finally updated by adding the vector r \u03b1 , as described in equation (3.1.2), i.e.", "cite_spans": [], "ref_spans": [], "section": "Exact sampling"}, {"text": "n(t + \u2206t) = n(t) + r \u03b1 . ", "cite_spans": [], "ref_spans": [], "section": "Exact sampling"}, {"text": "For large populations the Gillespie algorithm described in section 3.7.1, which simulates every event individually, can be very slow. To accelerate stochastic simulations of large populations, pyross.stochastic also supports an integration method called tau-leaping [38] .", "cite_spans": [{"start": 266, "end": 270, "text": "[38]", "ref_id": "BIBREF36"}], "ref_spans": [], "section": "Acceleration by \u03c4 -leaping"}, {"text": "Here, an integration step (3.7.1) consists of the following two parts:", "cite_spans": [], "ref_spans": [], "section": "Acceleration by \u03c4 -leaping"}, {"text": "1. A time interval \u03c4 is chosen deterministically, as discussed further below.", "cite_spans": [], "ref_spans": [], "section": "Acceleration by \u03c4 -leaping"}, {"text": "2. For each possible reaction \u03b1, a random sample q \u03b1 for the number of occurring reactions in the time interval \u03c4 is drawn from a Poisson distribution with mean w \u03b1 \u00b7 \u03c4 .", "cite_spans": [], "ref_spans": [], "section": "Acceleration by \u03c4 -leaping"}, {"text": "The population vector n is then updated by adding up all the population changes, i.e.", "cite_spans": [], "ref_spans": [], "section": "Acceleration by \u03c4 -leaping"}, {"text": "where the vector r \u03b1 was introduced in equation (3.1.2). The time interval \u03c4 needs to be so small that the rates, which depends on the current state, w \u03b1 \u2261 w \u03b1 (n), does not change appreciably during all the reactions that take place during \u03c4 . To select \u03c4 , pyross.stochastic uses the algorithm by Cao, Gillespie, and Petzold [39] . To avoid unphysical negative populations, which can be the consequence of a tau-leaping step (3.7.3), pyross.stochastic switches to the Gillespie SSA algorithm if any population is below a threshold; identifying critical reaction channels and only propagating those via the Gillespie SSA algorithm, as described in Ref. [39] , will be added soon.", "cite_spans": [{"start": 327, "end": 331, "text": "[39]", "ref_id": "BIBREF37"}, {"start": 654, "end": 658, "text": "[39]", "ref_id": "BIBREF37"}], "ref_spans": [], "section": "Acceleration by \u03c4 -leaping"}, {"text": "The deterministic dynamic of the models given in 4 is obtained by numerical integration in pyross.deterministic. By default PyRoss uses scipy.integrate.odeint for numerical integrations. This is an adaptive time step integrator, which switches between the backward differentiation formula for stiff problems [40] and Adams method for non-stiff problems [41] . Alternatively, we also allow to use integration methods from the package Odespy [42] and other integrators from Scipy [43] such as scipy.integrate.solve_ivp. See chapter 4, for deterministic dynamical systems.", "cite_spans": [{"start": 308, "end": 312, "text": "[40]", "ref_id": "BIBREF38"}, {"start": 353, "end": 357, "text": "[41]", "ref_id": "BIBREF39"}, {"start": 440, "end": 444, "text": "[42]", "ref_id": null}, {"start": 478, "end": 482, "text": "[43]", "ref_id": "BIBREF41"}], "ref_spans": [], "section": "Integration in the deterministic limit"}, {"text": "In this chapter, we describe the implementations of age-structured epidemiological compartment models in PyRoss. The basic variable in this class of models is a metapopulation labeled by its epidemiological state (susceptible, infectious, removed, etc) and additional attributes like age, gender, geographic location and so on. The additional attributes are what comprise the \"structure\" of the model. Currently, PyRoss supports the models with susceptible (S), infected (I), exposed (E), activated (A), quarantined (Q) and removed (R) epidemiological states. Additionally, the infectious class can be subdivided into kstages. The progress of these variables in time are described by chemical master equations and, when compartmental fluctuations (CME) are small, by ordinary differential equations (ODE). A hybrid method is also possible which switches from CME to ODE when the population reaches a user defined threshold, at which point it is assumed that random fluctuations are a negligible percentage of the total population. These integration methods build the foundation of PyRoss, upon which investigation into the effects of control such as self-isolation or forecasting made from real world data can be performed.", "cite_spans": [], "ref_spans": [], "section": "32"}, {"text": "PyRoss takes the inputs -age, contact structure and an epidemiological compartment model -to simulate the deterministic and stochastic trajectories. The age [44] and contact structures [24] can be obtained from published data. The demographic parameters which determine contact matrices, together with their uncertainties, will be discussed elsewhere. In this work, we assumed they are user-supplied. In what follows, 4.1-4.11.1, we describe various models available in PyRoss with increasing complexity. We also provide a class to implement a generic user-defined compartment model in 4.12.", "cite_spans": [{"start": 185, "end": 189, "text": "[24]", "ref_id": "BIBREF23"}], "ref_spans": [], "section": "32"}, {"text": "We first present the well studied SIR model, where population within age group i, is partitioned into susceptibles S i , infectives I i , and removed individuals R i . The sum of these is the size of the population in age group i, N i = S i + I i + R i [1, 2, [20] [21] [22] . For this model, vital dynamics and the change in age structure on the time scale of the epidemic in this model is ignored. Therefore each N i and, consequently, the total population size", "cite_spans": [{"start": 253, "end": 256, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 257, "end": 259, "text": "2,", "ref_id": "BIBREF1"}, {"start": 260, "end": 264, "text": "[20]", "ref_id": "BIBREF19"}, {"start": 265, "end": 269, "text": "[21]", "ref_id": "BIBREF20"}, {"start": 270, "end": 274, "text": "[22]", "ref_id": "BIBREF21"}], "ref_spans": [], "section": "SIR"}, {"text": "remain constant in time. With these assumptions the progress of the epidemic is governed by the age-structured SIR model. limit of the SIR model is given by the ODE:", "cite_spans": [], "ref_spans": [], "section": "SIR"}, {"text": "The rate of infection of a susceptible individual in age group i is", "cite_spans": [], "ref_spans": [], "section": "SIR"}, {"text": "where \u03b2 is the probability of infection on contact (assumed intrinsic to the pathogen) . We take the age-independent removal rate \u03b3 to be identical for both asymptomatic and symptomatic individuals whose fractions are, respectively, \u03b1 i and\u1fb1 i = 1 \u2212 \u03b1 i . The social contact matrix C ij denotes the average number of contacts made per day by an individual in class i with an individual in class j. Clearly, the total number of contacts between group i to group j must equal the total number of contacts from group j to group i, and thus,", "cite_spans": [], "ref_spans": [], "section": "SIR"}, {"text": "The SIR model can be improved by adding more epidemiological states as we describe below. Addition epidemiological states, like exposed (E), where the individual has contracted the diseases but is not infectious, or quarantined (Q), where the individual has contracted the disease, is infectious, but cannot spread contagion because of confinement, may be necessary for a better-resolved description. Despite these limitations, the SIR model and its age-structured variant provide the most parsimonious description of infectious disease and provide a null model against which all others must be compared.", "cite_spans": [], "ref_spans": [], "section": "SIR"}, {"text": "The SIR model considers only three mutually exclusive epidemiological states: S, I, R. This leads to an exponentially distributed residence time in the infectious state. Within the compartment framework, the simplest way to make infectious period distributions more realistic is to use stages (k stages of infectious) [7] . The model SIR with stages (SIkR) is obtained by allowing I class is the SIR to have k-stages [7] . The SIkR model then has an infectious period with Erlang, Gamma distributions with integer shape parameter, distribution [4] [5] [6] . The number of states k can be adjusted to match empirically observed infectious periods. ", "cite_spans": [{"start": 318, "end": 321, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 417, "end": 420, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 544, "end": 547, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 548, "end": 551, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 552, "end": 555, "text": "[6]", "ref_id": "BIBREF5"}], "ref_spans": [], "section": "SIR with stages (SIkR)"}, {"text": "The rate of infection of a susceptible individual in age group i is ", "cite_spans": [], "ref_spans": [], "section": "SIR with stages (SIkR)"}, {"text": "We now extend the classic SIR model to an SIIR model, where the infective class has been divided in asymptomatic I a i and symptomatic I s i . We assume that the rate of infection of a susceptible individual in age group i is", "cite_spans": [], "ref_spans": [], "section": "SIIR"}, {"text": "where \u03b2 is the probability of infection on contact (assumed intrinsic to the pathogen) and C a ij and C s ij are, respectively, the number of contacts between asymptomatic and symptomatic infectives in age-group j with susceptibles in age-group i (reflecting the structure 35 of social contacts). We assume that symptomatic infectives reduce their contacts compared to asymptomatic infectives and set C s", "cite_spans": [], "ref_spans": [], "section": "SIIR"}, {"text": "where 0 \u2264 f s \u2264 1 is the proportion of contacts that are now avoided by these self-isolating individuals (allowing also for compliance rates)", "cite_spans": [], "ref_spans": [], "section": "SIIR"}, {"text": "With these assumptions the progress of the epidemic is governed by the age-structured SIIR model. Figure 4 .3.1 shows the schematic. The deterministic limit is given as,", "cite_spans": [], "ref_spans": [{"start": 98, "end": 106, "text": "Figure 4", "ref_id": "FIGREF7"}], "section": "SIIR"}, {"text": "Here \u03b3 I a is the removal rate for asymptomatic infectives, \u03b3 I s is the removal rate for symptomatic infectives, \u03b1 i is the fraction of asymptomatic infectives.", "cite_spans": [], "ref_spans": [], "section": "3.2)"}, {"text": "The SIR model does not model the incubation period of a virus. This can be included by adding to the SIR model an exposed E compartment (to give an age-structured SEIR model) [3, [45] [46] [47] . ", "cite_spans": [{"start": 175, "end": 178, "text": "[3,", "ref_id": "BIBREF2"}, {"start": 179, "end": 183, "text": "[45]", "ref_id": "BIBREF42"}, {"start": 184, "end": 188, "text": "[46]", "ref_id": "BIBREF43"}, {"start": 189, "end": 193, "text": "[47]", "ref_id": "BIBREF44"}], "ref_spans": [], "section": "SEIR"}, {"text": "The rate of infection of a susceptible individual in age group i is", "cite_spans": [], "ref_spans": [], "section": "ODE giving its time-evolution is\u1e60"}, {"text": "The SEIR model considers only four mutually exclusive epidemiological states: S, E, I, R. This leads to an exponentially distributed residence time in the incubating and infectious state. We use the same resolution as in SIkR model, see 4.2, to obtain a more realistic distribution of incubation and infectious times. The SEIR model can be extended to an age-structured k\u2212staged SEkIkR model. ", "cite_spans": [], "ref_spans": [], "section": "SEIR with stages (SEkIkR)"}, {"text": "The rate of infection of a susceptible individual in age group i is ", "cite_spans": [], "ref_spans": [], "section": "SEIR with stages (SEkIkR)"}, {"text": "We now extend the classic SIR model to an SIIR model, where the infective class has been divided in asymptomatic I a i and symptomatic I s i . We assume that the rate of infection of 38 ", "cite_spans": [], "ref_spans": [], "section": "SEIIR"}, {"text": "The deterministic dynamics is given by the following ODE: ", "cite_spans": [], "ref_spans": [], "section": "SEIIR"}, {"text": "We now extend the SEIIR model to have stages in exposed, asymptomatic infectives, and symptomatic infectives classes. This is the the same resolution as in SIkR model, see 4.2, to obtain a more realistic distribution of incubation and infectious times. ", "cite_spans": [], "ref_spans": [], "section": "SEIIR with stages (SEkIkIkR)"}, {"text": "We assume that the rate of infection of a susceptible individual in age group i is ", "cite_spans": [], "ref_spans": [], "section": "SEIIR with stages (SEkIkIkR)"}, {"text": "This model is an extension of the SEIR model, introducing the additional class A, which is both asymptomatic and infectious. In other words, this models shows what ensues if everyone who gets infected, undergoes a latency period where they are both asymptomatic and infectious. This class is potentially quite important, as there is some evidence that people are infectious before they start showing symptoms. The deterministic limit of this case\u1e60", "cite_spans": [], "ref_spans": [], "section": "SEAIIR"}, {"text": "The rate of infection of a susceptible individual in age group i is", "cite_spans": [], "ref_spans": [], "section": "SEAIIR"}, {"text": "The A and I a classes should behave virtually the same (so their contact matrices should be equal). The two are kept distinct to keep track of the fact that some people remain asymptomatic even in the I stage. Since it's difficult to find data on the ratio of I s to I a , it is possible to disregard the distinction and simply use I instead.", "cite_spans": [], "ref_spans": [], "section": "SEAIIR"}, {"text": "This ", "cite_spans": [], "ref_spans": [], "section": "SEAI8R"}, {"text": "The class SEAIIRQ can be instantiated in PyRoss using pyross.deterministic.SEAIRQ.", "cite_spans": [], "ref_spans": [], "section": "SEAI8R"}, {"text": "The rate of infection of a susceptible individual in age group i is", "cite_spans": [], "ref_spans": [], "section": "SEAI8R"}, {"text": "We note the individuals can be removed at any stage from either of the eight infection classes.", "cite_spans": [], "ref_spans": [], "section": "SEAI8R"}, {"text": "This model is an extension of the SEAIIR model. We introduce the Q i class, which may model individuals who have been tested and put into quarantine (and can therefore not infect anyone else). This point of Q i class is to model a possible an implementation of 43 ", "cite_spans": [], "ref_spans": [], "section": "SEAIIRQ"}, {"text": "The rate of infection of a susceptible individual in age group i is", "cite_spans": [], "ref_spans": [], "section": "SEAIIRQ"}, {"text": "Here \u03c4 E,A,I s ,I a is the testing rate in the population, these are in general different for different classes. We have presumed that people in the incubation stage E can also be tested.", "cite_spans": [], "ref_spans": [], "section": "SEAIIRQ"}, {"text": "We now extend the age-structured SIR model to allow for removed persons to be susceptible and for change in the population of each age group. The deterministic dynamics of the resulting SIRS model is:", "cite_spans": [], "ref_spans": [], "section": "SIIRS"}, {"text": "Here is fraction of removed who is susceptible. \u03c3 i denotes of the arrival of new susceptibles, while l i are new asymptomatic infectives. This means that N i is now dynamical. The rate of infection of a susceptible individual in age group i is same as in the SIIR model.", "cite_spans": [], "ref_spans": [], "section": "SIIRS"}, {"text": "If the plethora of models described in the preceding sections are not enough, then PyRoss provides the additional class pyross.deterministic.Spp (pronounced \"S plus plus\"), which has the ability to simulate any generic compartmental model. The model is specified by providing a Python dictionary, and supports age-differentiated parameters. As an example, the SIR model, defined in the Spp class, is given in Fig.4.12.1 .", "cite_spans": [], "ref_spans": [{"start": 409, "end": 419, "text": "Fig.4.12.1", "ref_id": "FIGREF2"}], "section": "Generic user-defined model"}, {"text": "Currently, the Spp class supports the two types of terms which all the compartmental models above share: linear terms and infection terms. The class could be used to simulate 45 any generic age-structured epidemiological compartment model, where the rates could be both time and state dependent.", "cite_spans": [], "ref_spans": [], "section": "Generic user-defined model"}, {"text": "Note that pyross.deterministic.Spp is designed with generality rather than optimality in mind. A model implemented using pyross.deterministic.Spp will in general perform worse than any of the corresponding hard-coded classes above. 46 ", "cite_spans": [{"start": 232, "end": 234, "text": "46", "ref_id": "BIBREF43"}], "ref_spans": [], "section": "Generic user-defined model"}, {"text": "In this chapter, we provide illustrative examples of usage of the PyRoss library.", "cite_spans": [], "ref_spans": [], "section": "Applications"}, {"text": "Our first example is on computing the basic reproductive ratio R 0 as a function of intervention measures. In a population of susceptibles S i , the expected number of secondary infections arising from a single individual during the entire infectious period is defined as R 0 [14, 48] . We obtain the basic reproductive ratio of the SIR model, defined in section 4.1, by linearising the dynamics about the disease-free fixed point, where S i = N i . The time evolution of infectives is governed by", "cite_spans": [{"start": 276, "end": 280, "text": "[14,", "ref_id": "BIBREF13"}, {"start": 281, "end": 284, "text": "48]", "ref_id": "BIBREF45"}], "ref_spans": [], "section": "Basic reproductive ratio R 0 from local rate of growth"}, {"text": "Here 1 is the identity matrix and", "cite_spans": [], "ref_spans": [], "section": "Basic reproductive ratio R 0 from local rate of growth"}, {"text": "It is sufficient for the spectral radius of L to be greater than unity for the epidemic to grow. The R 0 is then obtained as the spectral radius of L [14, 48] :", "cite_spans": [{"start": 150, "end": 154, "text": "[14,", "ref_id": "BIBREF13"}, {"start": 155, "end": 158, "text": "48]", "ref_id": "BIBREF45"}], "ref_spans": [], "section": "Basic reproductive ratio R 0 from local rate of growth"}, {"text": "We can now extend the linearisation at any point in time t by making the replacements N i \u2212\u2192 S i (t) and C ij \u2212\u2192 C ij (t) in the expression for L, giving the time-dependent stability matrix L (t) [16] , and thus, define effective time-dependent basic reproductive ratio", "cite_spans": [{"start": 196, "end": 200, "text": "[16]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "Basic reproductive ratio R 0 from local rate of growth"}, {"text": "We now provide illustrative examples of measuring R 0 and R eff 0 (t). In Fig.(5.1.1) , we obtain the basic reproductive ration as intervention measures are changed. The y-axis is normalized by the case without no intervention measures. Here 'W+S close' means both work and school are closed and R 1 0 is the basic reproductive ration without any intervention measure.", "cite_spans": [], "ref_spans": [{"start": 74, "end": 85, "text": "Fig.(5.1.1)", "ref_id": "FIGREF24"}], "section": "Basic reproductive ratio R 0 from local rate of growth"}, {"text": "In the previous section, we used linearisation to study growth of epidemic. The prediction made by linearised theory is based on the fact that the growth rate of a linear system is exponential in the largest eigenvalue. This is well known in the epidemiology community, where the value of R 0 is used as a measure of how dangerous an epidemic will become and on what timescale. On the other hand, far less well known is the transient effect due to non-normality of J on the initial dynamics. There have been some papers [49, 50] in the ecology community on this effect in the context of population dynamics. The best way to understand why non-normality can be important is through an instructive example. Let x =x + u, # matrix for linearised dynamics C = contactMatrix (0) A =(( beta *C -gamma * np . identity ( len ( C ) ) ) . T * fi ) . T / fi mcA = pyross . contactMatrix . c ha rac te ris e_t ra nsi en t Obviously the eigenvalues are \u22121, \u22122 so a simple eigenvalue criterion would expect an exponential decay of any initial perturbations. However, let u 0 = (0, 1) and it is obvious that |u| is dramatically magnified in value. After a long enough time, the system will obviously decay to 0 but in a non-linear system, transient amplification may have a dramatic effect on the long term dynamics if a system is only locally stable around some fixed point [51, 52] . The behaviour results from the non-normality of J . Normal matrices are defined as J J T = J T J , which, by the spectral theorem, is the criterion for diagonalisability. Obviously eigenvalues alone cannot hope to encapsulate the full picture here. Here we show these effects can be encapsulated by the introduction of a single new multiplicative parameter and can be used to better understand the initial growth dynamics. The transient is best characterized by the Kreiss constant K(J ) which provides a lower bound to the maximum amplitude of a system evolving under J [49, 51, 53] . For a system that grows with time, the \"extra increase\" can be estimated by In practice, the bound is well saturated over the time scale of the transient \u03c4 which is usually much faster than any other dynamics of the system (and can be estimated from pseudospectral methods [53] )", "cite_spans": [{"start": 520, "end": 524, "text": "[49,", "ref_id": "BIBREF46"}, {"start": 525, "end": 528, "text": "50]", "ref_id": "BIBREF47"}, {"start": 1360, "end": 1364, "text": "[51,", "ref_id": "BIBREF48"}, {"start": 1365, "end": 1368, "text": "52]", "ref_id": "BIBREF49"}, {"start": 1942, "end": 1946, "text": "[49,", "ref_id": "BIBREF46"}, {"start": 1947, "end": 1950, "text": "51,", "ref_id": "BIBREF48"}, {"start": 1951, "end": 1954, "text": "53]", "ref_id": "BIBREF50"}, {"start": 2230, "end": 2234, "text": "[53]", "ref_id": "BIBREF50"}], "ref_spans": [], "section": "Beyond R 0 : Kreiss constant K(J )"}, {"text": "Thus, the solution to our initial equationu = J u can be estimated as", "cite_spans": [], "ref_spans": [], "section": "Beyond R 0 : Kreiss constant K(J )"}, {"text": "In summary, the maximum eigenvalue and the Kreiss constant of the associated system together characterise the initial growth of non-normal evolution as seen in Eq.(5.2.1) and 5.2.1. This new parameter acts as an amplification of the initial conditions based on the degree of non-normality of our network and is general for any type of network, for example age structure or geographical information.", "cite_spans": [], "ref_spans": [], "section": "Beyond R 0 : Kreiss constant K(J )"}, {"text": "We now illustrate the usage of PyRoss for stochastic sampling of epidemics. ", "cite_spans": [], "ref_spans": [], "section": "Stochastic sampling"}, {"text": "We now illustrate the usage of PyRoss for deterministic sampling of epidemics.", "cite_spans": [], "ref_spans": [], "section": "Deterministic integration"}, {"text": "import numpy as np import pyross import matplotlib . pyplot as plt M = 1 # the SIR model has no age structure Ni = 1000* np . ones ( M ) # so there is only one age group 54 N = np . sum ( Ni ) # and the total population is the size of this age group beta = 0.2 # infection rate gIa = 0.1 # recovery rate of asymptomatic infectives gIs = 0.1 # recovery rate of symptomatic infectives alpha = 0 # fraction of asymptomatic infectives fsa = 1 # self -isolation of symtomatic infectives ", "cite_spans": [], "ref_spans": [], "section": "Deterministic integration"}, {"text": "In this example, a trajectory of an SIIR model with two age groups is generated using pyross .stochastic. Based on the first 20 datapoints of the trajectory, pyross.inference is then used to infer the parameters of the time series. Finally, using pyross.forecast, predictions based the inferred parameters are made and compared to the original SIIR trajectory. [2] , ' gIs ': params [3] , ", "cite_spans": [{"start": 361, "end": 364, "text": "[2]", "ref_id": "BIBREF1"}, {"start": 383, "end": 386, "text": "[3]", "ref_id": "BIBREF2"}], "ref_spans": [], "section": "Bayesian inference and forecasting"}, {"text": "In this example, an event-driven protocol is defined: Once the number of symptomatic infectives exceeds a threshold, the contact matrix is reduced to the home contact; then, once the number of infectives falls below another threshold, the original contact matrix is restored. For an SEkIkIkR model with 16 age groups based on the UK age structure, and UK contact matrices, we run this protocol in two variations: First, we allow every event to happen at most one time; in the second run, we allow events to repeat. Note that while this example employs UK age groups and contact structure, the model parameters are not fitted to real epidemiological data. ", "cite_spans": [], "ref_spans": [], "section": "Effect of event-driven NPI"}, {"text": "In the present example, an intervention protocol is optimised. We consider the SIIR model with two age groups, with fictitious parameters and a fictitious contact matrix. The protocol consists of two durations, namely", "cite_spans": [], "ref_spans": [], "section": "Optimising parameters of NPI"}, {"text": "\u2022 the duration T 1 of a full lockdown (implemented in this toy model by reducing the initial contact matrix via a prefactor 1/4), and", "cite_spans": [], "ref_spans": [], "section": "Optimising parameters of NPI"}, {"text": "\u2022 the duration T 2 a subsequent partial lockdown (implemented in this toy model by reducing the initial contact matrix via a prefactor 3/4).", "cite_spans": [], "ref_spans": [], "section": "Optimising parameters of NPI"}, {"text": "For illustrative purposes we choose the cost function", "cite_spans": [], "ref_spans": [], "section": "Optimising parameters of NPI"}, {"text": "where t f = 1000 days is the final time of the simulation, and I s (t) is the total number of symptomatic infectives at time t. The first term in equation (5.7.1) can be thought of as a cost for social distancing, while the second terms models a cost of infection. The time scale \u03c4 determines the relative importance of the two terms, and in our example we use \u03c4 = 1.", "cite_spans": [], "ref_spans": [], "section": "Optimising parameters of NPI"}, {"text": "We additionally set C = \u221e if at any time I s (t) > 2000, which serves as a hard constraint that every protocol must keep the number of infectives below a threshold. The rate \u03ba in the first term of equation (5.7.1) determines the exponential increase in cost per time during lockdown, and in the present example we minimise the total cost as a function of (T 1 , T 2 ), considering three distinct scenarios: i) low cost of social distancing (\u03ba = 0.01/day), ii) intermediate cost of social distancing (\u03ba = 0.1/day), and iii) high cost of social distancing (\u03ba = 1/day). Finally, we compare the time series corresponding to these optimal protocols.", "cite_spans": [], "ref_spans": [], "section": "Optimising parameters of NPI"}, {"text": "import numpy as np import matplotlib . pyplot as plt import pyross from multiprocessing import Pool import cma import time from functools import partial # ( For any model , the order for the event functions is # exactly the same as in the arguments of model . simulation ) # # This is a dummy event which will never occur ; # it is used to set the initial contact matrix events . append ( lambda t , xt : 1. ) contactMatrices . append ( C ) # Event 1: contact matrix reduced by a factor of 4 once # number of symptomatic infectives exceeds a threshold # (\" start of full lockdown \") l o c kdown_ thres hold_o n = 1900 def event1 (t , xt ) : return np . sum ( xt [2* M :3* M ]) -l ockdo wn_thr eshol d_on event1 . direction = +1 # need to pass threshold from below for event events . append ( event1 ) ; contactMatrices . append ( 0.25* C ) # Event 2: contact matrix at 75% of original contact matrix after # a given time (\" start of partial lockdown \") . def event2 (t , xt ) : return t -end_phase_1 events . append ( event2 ) ; contactMatrices . append ( 0.75* C ) # Event 3: original contact matrix is restored after a given time # (\" end of partial lockdown \") . def event3 (t , xt ) : return t -end_phase_2 events . append ( event3 ) ; contactMatrices . append ( C ) return events , contactMatrices # 3. Define cost function m a x i m a l_value_for_Is = 2000 def e v a lua te_ co st_ fu nct io n ( t_arr , traj , protocol , events_occured , sdc_prefactor =1. , sdc_rate =1/7.) : infinity = 1 e300 # using np . inf would be more proper , but will # result in warnings throughout the minimization once a protocol # is probed that violates one of the hard constraints . # # hard constraints : # -times of protocol need to be non -negative if ( np . array ( protocol ) < 0) . any () : return infinity # -second stage of intervention needs to end after first stage ends if protocol [0] > protocol [1] : return infinity # -second stage of intervention needs to end before 700 days if protocol [ ", "cite_spans": [{"start": 1896, "end": 1899, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 1991, "end": 1992, "text": "[", "ref_id": null}], "ref_spans": [], "section": "Optimising parameters of NPI"}, {"text": "Here we illustrate the usage of PyRoss to study model sensitivity. We use four different models, SIR, SEIR, SIR with stages, and SEIR with stages. The models predict similar epidemic curve before the lockdown, while the they show distinct behavior after lockdown. We show that the addition of an exposed E i compartment (to give an age-structured SEIR model) makes the infectious number grows beyond the lockdown for the time scale of the incubation. Note that while this example employs UK age groups and contact structure, the model parameters are not fitted to real epidemiological data. Parameters are chosen such that the initial grow rates are comparable. Initially, all models use the full contact matrix, which is the sum of home, work, school, and other contacts. At a fixed time, a lockdown is modeled by retaining only the home contacts. This plot illustrates the resulting different model dynamics at the initial phase of the lockdown.", "cite_spans": [], "ref_spans": [], "section": "Model sensitivity"}, {"text": "This report has presented an overview of PyRoss, a Python library that integrates compartment models of epidemics with Bayesian inference and optimization tools. The current focus of PyRoss, and hence of this report, is on well-mixed, age-structured models with a modest number of contact channels (home, school, workplace, other). However, PyRoss allows these channels to be expanded indefinitely in principle, so that more complex contact information relating to particular working or social environments can be incorporated as available.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}, {"text": "Likewise PyRoss allows the disease stages themselves to be subdivided at will. This enables the statistics of objective medical states, such as hospitalization and intensive care or ventilator use, to be modelled. By also allowing an indefinitely expandable number of compartments per disease stage, the residence time distribution in such stages can be varied from the exponential decay of simple compartment models to the sharply-peaked distribution that underlies time-since-infection models [10] [11] [12] [13] [14] [15] . Certain other mathematical limitations can be overcome similarly.", "cite_spans": [{"start": 495, "end": 499, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 500, "end": 504, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 505, "end": 509, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 510, "end": 514, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 515, "end": 519, "text": "[14]", "ref_id": "BIBREF13"}, {"start": 520, "end": 524, "text": "[15]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Conclusion"}, {"text": "NPIs are viewed within PyRoss as strategies to influence contact matrices, generally in a time-dependent fashion, through variations in contact rate, or transmission rate at contact, or both. These interventions can be represented in as much social detail as is resolved by the contact matrices themselves.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}, {"text": "A Bayesian system of inference for model parameters, and for forecasting with error estimation, is fully integrated into PyRoss. The former is a crucial feature which allows comparison between models based on evidence. This can guide a principled expansion in the number of compartments up to a level of granularity justified by the data, and can warn when this has gone too far. The approach guards against over-fitting of historic data, leading to precise but inaccurate forecasting -a risk faced by parameter-rich, data-poor models in any field of science.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}, {"text": "One can expect robust inference from historic data to prove crucial for forecasting the future course of an epidemic, particularly where sequenced or nuanced NPIs are involved. Accordingly, PyRoss's Bayesian parameter estimation tools allow the fitting of time-dependent contact-matrix parameters representing NPIs. Prior estimates (supplied perhaps by expert judgement) of the effect of an NPI on contact statistics can therefore be continuously improved, after the NPI is implemented, by feeding the observed results back into the system (Fig. 2.0.1) . Observed outcomes for one NPI (such as sudden lockdown) can inform the prediction of others (such as a sequential, age-stratified unlock).", "cite_spans": [], "ref_spans": [{"start": 540, "end": 552, "text": "(Fig. 2.0.1)", "ref_id": "FIGREF2"}], "section": "Conclusion"}, {"text": "Within PyRoss, given a user-defined cost function that encodes their harm, NPIs can be optimized and ranked by minimization of the chosen cost function. The actual choice of cost functions is, of course, morally and politically problematic. However, there are many other areas of planning where saving life is weighed against economic cost, including decisions about where and whether to build a new hospital, or indeed a new road. The principles of compartment modelling embraced by PyRoss, when constrained by a disciplined approach to parameter and uncertainty estimation, are, we believe, more powerful than is widely assumed, but of course not all-powerful. Known challenges include situations in which the well-mixed approximation does not hold at small scales, such as the fact that isolation by household can allow rapid disease spread within each household while preventing it at societal level. Redesign of the compartment structure to reflect a different 'unit of infection', such as a household, may help in some such cases.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}, {"text": "In contrast, there is no problem of principle in extending compartment models to societies that are locally well mixed but heterogeneous at larger scales. Different contact matrices can be assigned at regional level and/or to micro-locations such as specific workplaces or social venues. Once such geo-social compartments are resolved, the transition rates between them are controlled by human mobility which can itself be modelled by jumps into and out of compartments representing journeys (within which infection can of course occur). NPIs can then separately target either the locationally specific contact matrices, or the transfer of people between locations. In a forthcoming report we will describe PyRossGeo, an extension of PyRoss along these lines.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}, {"text": "This report has focussed on the design principles and capabilities of PyRoss, illustrated by very simple examples of its use. We have not deployed it directly here to address aspects of the current COVID-19 crisis, but for an example of its use in doing so, see [16] . (Note that since that paper was written, the capabilities of PyRoss have advanced dramatically.)", "cite_spans": [{"start": 262, "end": 266, "text": "[16]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "Conclusion"}, {"text": "The PyRoss library is open-source. We positively encourage its use by other scientists, whether seasoned epidemic modellers or those new to the field. We hope it can contribute to a stronger scientific platform for evidence-based decision making as the current pandemic continues, and also before the next one.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}, {"text": "Let us imagine an alternative universe which contains a country resembling the UK, called Simulana, for which the CovidSim model, with a specific parameter set as selected in [19] , describes the disease dynamics as well as one could wish. The government of Simulana allow the epidemic to run its course without NPIs. Suppose that the only data available to modellers in Simulana are time-resolved national aggregate statistics (S(t), I(t), R(t)) for the number of susceptibles, infecteds, and removeds. To forecast the epidemic, the modellers adopt an age-unstructured SIkR model, with k, the number of infected subcompartments discussed above, set to k = 5. We emphasise that this is an utterly basic model. Nonetheless, by fitting to the available data up to (say) the point where S = I, Simulana's modellers are able to predict its remaining course reasonably well, as shown in Figure 6 .0.1. Note that only the maximum a posteriori (MAP) prediction is shown although PyRoss can deliver the full posterior distribution if required.", "cite_spans": [{"start": 175, "end": 179, "text": "[19]", "ref_id": "BIBREF18"}], "ref_spans": [{"start": 882, "end": 890, "text": "Figure 6", "ref_id": null}], "section": "Appendix: Simple versus Complicated Models"}, {"text": "These predictions raise the following question: Unless the specific CovidSim parameters that correctly describe epidemics in Simulana are disclosed upfront by revelation, is Covid-Sim in general much better at predicting epidemics there than, say, SI5R?", "cite_spans": [], "ref_spans": [], "section": "Appendix: Simple versus Complicated Models"}, {"text": "Interpreting this question in a strictly Bayesian sense of 'which model has more evidence', we suspect the answer is 'no' -although to confirm this quantitatively would require a more precise delineation of CovidSim's free parameters than we currently have. This is because the Bayesian 'Occam factors' penalize models with parameters that are unconstrained by the data available: the evidence for these models is small, whereas parsimonious models always have larger evidence if equally capable of fitting the data.", "cite_spans": [], "ref_spans": [], "section": "Appendix: Simple versus Complicated Models"}, {"text": "But even if the question is interpreted less formally, we might also suspect a negative answer. Given the limited medical data available in Simulana, it is not clear that this can constrain CovidSim's parameters sufficiently to give forecasts that are any more reliable than those of much simpler models. This is despite the fact that using CovidSim the epidemic in Simulana's could be forecast perfectly in principle if the correct parameters were known.", "cite_spans": [], "ref_spans": [], "section": "Appendix: Simple versus Complicated Models"}, {"text": "In the above example, the modellers of Simulana received only aggregate patient data; alternatively they might receive data stratified by age, geography etc.. In this case the shortcomings of SI5R for Simulana would soon be revealed by the Bayesian approach. However, a generalized compartment model might well still beat CovidSim at 'predicting its own future'. Of particular promise are models whose compartments broadly aligned is an imagined country where epidemics are correctly described by the Covid-Sim algorithm of [19] with some particular parameter set.", "cite_spans": [{"start": 524, "end": 528, "text": "[19]", "ref_id": "BIBREF18"}], "ref_spans": [], "section": "Appendix: Simple versus Complicated Models"}, {"text": "with the granularity of the data available, creating inbuilt parsimony. It is very important to recognize that the above paragraphs contain no specific criticism of CovidSim itself, or any other particular model. Instead they express a more general concern about basing predictions on any model whose parameters have proliferated beyond the ability of data to estimate them. Such concerns apply not only for epidemics but across many other disciplines. They are one of the reasons so many scientists today prefer a Bayesian approach to model and parameter selection, as offered by PyRoss for compartment models.", "cite_spans": [], "ref_spans": [], "section": "Appendix: Simple versus Complicated Models"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Infectious diseases of humans: dynamics and control", "authors": [{"first": "R", "middle": ["M"], "last": "Anderson", "suffix": ""}, {"first": "B", "middle": [], "last": "Anderson", "suffix": ""}, {"first": "R", "middle": ["M"], "last": "May", "suffix": ""}], "year": 1992, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Modeling infectious diseases in humans and animals", "authors": [{"first": "M", "middle": ["J"], "last": "Keeling", "suffix": ""}, {"first": "P", "middle": [], "last": "Rohani", "suffix": ""}], "year": 2011, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "The mathematical theory of infectious diseases and its applications. Charles Griffin & Company Ltd, 5a Crendon Street, High Wycombe, Bucks HP13 6LE", "authors": [{"first": "N", "middle": ["T J"], "last": "Bailey", "suffix": ""}], "year": 1975, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "On the spread of a disease with gamma distributed latent and infectious periods", "authors": [{"first": "D", "middle": [], "last": "Anderson", "suffix": ""}, {"first": "R", "middle": [], "last": "Watson", "suffix": ""}], "year": 1980, "venue": "Biometrika", "volume": "67", "issn": "1", "pages": "191--198", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Appropriate models for the management of infectious diseases", "authors": [{"first": "H", "middle": ["J"], "last": "Wearing", "suffix": ""}, {"first": "P", "middle": [], "last": "Rohani", "suffix": ""}, {"first": "M", "middle": ["J"], "last": "Keeling", "suffix": ""}], "year": 2005, "venue": "PLoS medicine", "volume": "2", "issn": "7", "pages": "", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Effects of the infectious period distribution on predicted transitions in childhood disease dynamics", "authors": [{"first": "O", "middle": [], "last": "Krylova", "suffix": ""}, {"first": "D", "middle": ["J D"], "last": "Earn", "suffix": ""}], "year": 2013, "venue": "Journal of The Royal Society Interface", "volume": "10", "issn": "84", "pages": "", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Realistic distributions of infectious periods in epidemic models: changing patterns of persistence and dynamics", "authors": [{"first": "A", "middle": ["L"], "last": "Lloyd", "suffix": ""}], "year": 2001, "venue": "Theoretical population biology", "volume": "60", "issn": "1", "pages": "59--71", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Human mobility: Models and applications", "authors": [{"first": "H", "middle": [], "last": "Barbosa", "suffix": ""}, {"first": "M", "middle": [], "last": "Barthelemy", "suffix": ""}, {"first": "G", "middle": [], "last": "Ghoshal", "suffix": ""}], "year": 2018, "venue": "Physics Reports", "volume": "734", "issn": "", "pages": "1--74", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "Epimodel: an r package for mathematical modeling of infectious disease over networks", "authors": [{"first": "S", "middle": ["M"], "last": "Jenness", "suffix": ""}, {"first": "S", "middle": ["M"], "last": "Goodreau", "suffix": ""}, {"first": "M", "middle": [], "last": "Morris", "suffix": ""}], "year": 2018, "venue": "Journal of statistical software", "volume": "84", "issn": "", "pages": "", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Containing papers of a mathematical and physical character", "authors": [{"first": "W", "middle": ["O"], "last": "Kermack", "suffix": ""}, {"first": "A", "middle": ["G"], "last": "Mckendrick", "suffix": ""}], "year": 1927, "venue": "Proceedings of the royal society of london. Series A", "volume": "115", "issn": "772", "pages": "700--721", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Notes on the mathematical theory of epidemics", "authors": [{"first": "J", "middle": [], "last": "Reddingius", "suffix": ""}], "year": 1971, "venue": "Acta biotheoretica", "volume": "20", "issn": "3-4", "pages": "125--157", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "A structured epidemic model incorporating geographic mobility among regions", "authors": [{"first": "L", "middle": [], "last": "Sattenspiel", "suffix": ""}, {"first": "K", "middle": [], "last": "Dietz", "suffix": ""}], "year": 1995, "venue": "Mathematical biosciences", "volume": "128", "issn": "1", "pages": "71--92", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "An age dependent epidemic model", "authors": [{"first": "F", "middle": [], "last": "Hoppensteadt", "suffix": ""}], "year": 1974, "venue": "Journal of the Franklin Institute", "volume": "297", "issn": "5", "pages": "325--333", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "The construction of nextgeneration matrices for compartmental epidemic models", "authors": [{"first": "O", "middle": [], "last": "Diekmann", "suffix": ""}, {"first": "J", "middle": ["A P"], "last": "Heesterbeek", "suffix": ""}, {"first": "M", "middle": ["G"], "last": "Roberts", "suffix": ""}], "year": 2010, "venue": "J. Royal Soc. Int", "volume": "7", "issn": "47", "pages": "873--885", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "How may infection-age-dependent infectivity affect the dynamics of HIV/AIDS?", "authors": [{"first": "H", "middle": ["R"], "last": "Thieme", "suffix": ""}, {"first": "C", "middle": [], "last": "Castillo-Chavez", "suffix": ""}], "year": 1993, "venue": "SIAM Journal on Applied Mathematics", "volume": "53", "issn": "5", "pages": "1447--1479", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Age-structured impact of social distancing on the covid-19 epidemic in india", "authors": [{"first": "Rajesh", "middle": [], "last": "Singh", "suffix": ""}, {"first": "R", "middle": [], "last": "Adhikari", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"arXiv": ["arXiv:2003.12055"]}}, "BIBREF16": {"ref_id": "b16", "title": "Information theory, inference and learning algorithms", "authors": [{"first": "D", "middle": ["J C"], "last": "Mackay", "suffix": ""}], "year": 2003, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Bayesian interpolation", "authors": [{"first": "D", "middle": ["J C"], "last": "Mackay", "suffix": ""}], "year": 1992, "venue": "Neural computation", "volume": "4", "issn": "3", "pages": "415--447", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Impact of non-pharmaceutical interventions (npis) to reduce covid-19 mortality and healthcare demand. London: Imperial College COVID-19 Response Team", "authors": [{"first": "N", "middle": ["M"], "last": "Ferguson", "suffix": ""}], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Social contact patterns and control strategies for influenza in the elderly", "authors": [{"first": "S", "middle": [], "last": "Towers", "suffix": ""}, {"first": "Z", "middle": [], "last": "Feng", "suffix": ""}], "year": 2012, "venue": "Math. Biosci", "volume": "240", "issn": "2", "pages": "241--249", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Strategies for mitigating an influenza pandemic", "authors": [{"first": "N", "middle": ["M"], "last": "Ferguson", "suffix": ""}], "year": 2006, "venue": "Nature", "volume": "442", "issn": "7101", "pages": "448--452", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "The mathematics of infectious diseases", "authors": [{"first": "H", "middle": ["W"], "last": "Hethcote", "suffix": ""}], "year": 2000, "venue": "SIAM review", "volume": "42", "issn": "4", "pages": "599--653", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Mixing in age-structured population models of infectious diseases", "authors": [{"first": "J", "middle": [], "last": "Glasser", "suffix": ""}, {"first": "Z", "middle": [], "last": "Feng", "suffix": ""}, {"first": "A", "middle": [], "last": "Moylan", "suffix": ""}, {"first": "S", "middle": ["Del"], "last": "Valle", "suffix": ""}, {"first": "C", "middle": [], "last": "Castillo-Chavez", "suffix": ""}], "year": 2012, "venue": "Mathematical Biosciences", "volume": "235", "issn": "1", "pages": "1--7", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "Projecting social contact matrices in 152 countries using contact surveys and demographic data", "authors": [{"first": "K", "middle": [], "last": "Prem", "suffix": ""}, {"first": "A", "middle": ["R"], "last": "Cook", "suffix": ""}, {"first": "M", "middle": [], "last": "Jit", "suffix": ""}], "year": 2017, "venue": "PLoS Comp. Bio", "volume": "13", "issn": "9", "pages": "", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "An application of the theory of probabilities to the study of a priori pathometry", "authors": [{"first": "R", "middle": [], "last": "Ross", "suffix": ""}], "year": 1916, "venue": "Proceedings of the Royal Society of London", "volume": "92", "issn": "638", "pages": "204--230", "other_ids": {}}, "BIBREF25": {"ref_id": "b25", "title": "A general solution of the problem of mixing of subpopulations and its application to risk-and age-structured epidemic models for the spread of aids", "authors": [{"first": "S", "middle": [], "last": "Busenberg", "suffix": ""}, {"first": "C", "middle": [], "last": "Castillo-Chavez", "suffix": ""}], "year": 1991, "venue": "Mathematical Medicine and Biology: A Journal of the IMA", "volume": "8", "issn": "1", "pages": "1--29", "other_ids": {}}, "BIBREF26": {"ref_id": "b26", "title": "Using data on social contacts to estimate age-specific transmission parameters for respiratory-spread infectious agents", "authors": [{"first": "J", "middle": [], "last": "Wallinga", "suffix": ""}, {"first": "T", "middle": [], "last": "Peter", "suffix": ""}, {"first": "M", "middle": [], "last": "Kretzschmar", "suffix": ""}], "year": 2006, "venue": "American journal of epidemiology", "volume": "164", "issn": "10", "pages": "936--944", "other_ids": {}}, "BIBREF27": {"ref_id": "b27", "title": "Approximation of the linear boltzmann equation by the fokker-planck equation", "authors": [{"first": "R", "middle": ["F"], "last": "Pawula", "suffix": ""}], "year": 1967, "venue": "Phys. Rev", "volume": "162", "issn": "", "pages": "186--188", "other_ids": {}}, "BIBREF28": {"ref_id": "b28", "title": "Handbook of stochastic methods", "authors": [{"first": "C", "middle": ["W"], "last": "Gardiner", "suffix": ""}], "year": 1985, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF29": {"ref_id": "b29", "title": "Stochastic processes in physics and chemistry", "authors": [{"first": "N", "middle": ["G"], "last": "Van Kampen", "suffix": ""}], "year": 1992, "venue": "", "volume": "1", "issn": "", "pages": "", "other_ids": {}}, "BIBREF30": {"ref_id": "b30", "title": "Bayesian inference of biochemical kinetic parameters using the linear noise expansion", "authors": [{"first": "M", "middle": [], "last": "Komorowski", "suffix": ""}, {"first": "B", "middle": [], "last": "Finkenstaedt", "suffix": ""}, {"first": "C", "middle": [], "last": "Harper", "suffix": ""}, {"first": "D", "middle": [], "last": "Rand", "suffix": ""}], "year": 2009, "venue": "BMC Bioinformatics", "volume": "10", "issn": "343", "pages": "", "other_ids": {}}, "BIBREF31": {"ref_id": "b31", "title": "Fast bayesian inference of the multivariate ornstein-uhlenbeck process", "authors": [{"first": "R", "middle": [], "last": "Singh", "suffix": ""}, {"first": "D", "middle": [], "last": "Ghosh", "suffix": ""}, {"first": "R", "middle": [], "last": "Adhikari", "suffix": ""}], "year": 2018, "venue": "Phys. Rev. E", "volume": "98", "issn": "", "pages": "", "other_ids": {}}, "BIBREF32": {"ref_id": "b32", "title": "Autograd: Effortless gradients in numpy", "authors": [{"first": "D", "middle": [], "last": "Maclaurin", "suffix": ""}, {"first": "D", "middle": [], "last": "Duvenaud", "suffix": ""}, {"first": "R", "middle": ["P"], "last": "Adams", "suffix": ""}], "year": 2015, "venue": "ICML 2015 AutoML Workshop", "volume": "238", "issn": "", "pages": "", "other_ids": {}}, "BIBREF33": {"ref_id": "b33", "title": "Nested sampling for general bayesian computation", "authors": [{"first": "J", "middle": [], "last": "Skilling", "suffix": ""}], "year": 2006, "venue": "Bayesian analysis", "volume": "1", "issn": "4", "pages": "833--859", "other_ids": {}}, "BIBREF34": {"ref_id": "b34", "title": "JAX: composable transformations of Python+NumPy programs", "authors": [{"first": "James", "middle": [], "last": "Bradbury", "suffix": ""}, {"first": "Roy", "middle": [], "last": "Frostig", "suffix": ""}, {"first": "Peter", "middle": [], "last": "Hawkins", "suffix": ""}, {"first": "Matthew", "middle": ["James"], "last": "Johnson", "suffix": ""}, {"first": "Chris", "middle": [], "last": "Leary", "suffix": ""}, {"first": "Dougal", "middle": [], "last": "Maclaurin", "suffix": ""}, {"first": "Skye", "middle": [], "last": "Wanderman-Milne", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF35": {"ref_id": "b35", "title": "Exact stochastic simulation of coupled chemical reactions", "authors": [{"first": "D", "middle": ["T"], "last": "Gillespie", "suffix": ""}], "year": 1977, "venue": "The Journal of Physical Chemistry", "volume": "81", "issn": "25", "pages": "2340--2361", "other_ids": {}}, "BIBREF36": {"ref_id": "b36", "title": "Approximate accelerated stochastic simulation of chemically reacting systems", "authors": [{"first": "D", "middle": ["T"], "last": "Gillespie", "suffix": ""}], "year": 2001, "venue": "The Journal of Chemical Physics", "volume": "115", "issn": "4", "pages": "1716--1733", "other_ids": {}}, "BIBREF37": {"ref_id": "b37", "title": "Efficient step size selection for the tauleaping simulation method", "authors": [{"first": "Y", "middle": [], "last": "Cao", "suffix": ""}, {"first": "D", "middle": ["T"], "last": "Gillespie", "suffix": ""}, {"first": "L", "middle": ["R"], "last": "Petzold", "suffix": ""}], "year": 2006, "venue": "The Journal of Chemical Physics", "volume": "124", "issn": "4", "pages": "", "other_ids": {}}, "BIBREF38": {"ref_id": "b38", "title": "Solving ordinary differential equations II: Stiff and differential-algebraic problems", "authors": [{"first": "G", "middle": [], "last": "Wanner", "suffix": ""}, {"first": "E", "middle": [], "last": "Hairer", "suffix": ""}], "year": 1996, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF39": {"ref_id": "b39", "title": "Solving ordinary differential equations I: Nonstiff problems", "authors": [{"first": "E", "middle": [], "last": "Hairer", "suffix": ""}, {"first": "S", "middle": [], "last": "N\u00f8rsett", "suffix": ""}, {"first": "G", "middle": [], "last": "Wanner", "suffix": ""}], "year": 1993, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF41": {"ref_id": "b41", "title": "Scipy 1.0: fundamental algorithms for scientific computing in python", "authors": [{"first": "P", "middle": [], "last": "Virtanen", "suffix": ""}, {"first": "R", "middle": [], "last": "Gommers", "suffix": ""}, {"first": "T", "middle": ["E"], "last": "Oliphant", "suffix": ""}], "year": 2020, "venue": "Nature methods", "volume": "17", "issn": "3", "pages": "261--272", "other_ids": {}}, "BIBREF42": {"ref_id": "b42", "title": "Endemic models with arbitrarily distributed periods of infection i: Fundamental properties of the model", "authors": [{"first": "Z", "middle": [], "last": "Feng", "suffix": ""}, {"first": "H", "middle": ["R"], "last": "Thieme", "suffix": ""}], "year": 2000, "venue": "SIAM Journal on Applied Mathematics", "volume": "61", "issn": "3", "pages": "803--833", "other_ids": {}}, "BIBREF43": {"ref_id": "b43", "title": "Epidemic processes in complex networks", "authors": [{"first": "R", "middle": [], "last": "Pastor-Satorras", "suffix": ""}, {"first": "C", "middle": [], "last": "Castellano", "suffix": ""}, {"first": "P", "middle": [], "last": "Van Mieghem", "suffix": ""}, {"first": "A", "middle": [], "last": "Vespignani", "suffix": ""}], "year": 2015, "venue": "Reviews of modern physics", "volume": "87", "issn": "3", "pages": "", "other_ids": {}}, "BIBREF44": {"ref_id": "b44", "title": "Global stability for the seir model in epidemiology", "authors": [{"first": "M", "middle": ["Y"], "last": "Li", "suffix": ""}, {"first": "J", "middle": [], "last": "Muldowney", "suffix": ""}], "year": 1995, "venue": "Mathematical biosciences", "volume": "125", "issn": "2", "pages": "155--164", "other_ids": {}}, "BIBREF45": {"ref_id": "b45", "title": "A brief history of R 0 and a recipe for its calculation", "authors": [{"first": "J", "middle": ["A P"], "last": "Heesterbeek", "suffix": ""}], "year": 2002, "venue": "Acta biotheoretica", "volume": "50", "issn": "3", "pages": "189--204", "other_ids": {}}, "BIBREF46": {"ref_id": "b46", "title": "Predicting transient amplification in perturbed ecological systems", "authors": [{"first": "S", "middle": [], "last": "Townley", "suffix": ""}, {"first": "D", "middle": [], "last": "Carslake", "suffix": ""}, {"first": "O", "middle": [], "last": "Kellie-Smith", "suffix": ""}, {"first": "D", "middle": [], "last": "Mccarthy", "suffix": ""}, {"first": "D", "middle": [], "last": "Hodgson", "suffix": ""}], "year": 2007, "venue": "Journal of Applied Ecology", "volume": "44", "issn": "6", "pages": "1243--1251", "other_ids": {}}, "BIBREF47": {"ref_id": "b47", "title": "Beyond sensitivity: Nonlinear perturbation analysis of transient dynamics", "authors": [{"first": "I", "middle": [], "last": "Stott", "suffix": ""}, {"first": "D", "middle": ["J"], "last": "Hodgson", "suffix": ""}, {"first": "S", "middle": [], "last": "Townley", "suffix": ""}], "year": 2012, "venue": "Methods in Ecology and Evolution", "volume": "3", "issn": "4", "pages": "673--684", "other_ids": {}}, "BIBREF48": {"ref_id": "b48", "title": "Structure and dynamical behavior of nonnormal networks", "authors": [{"first": "M", "middle": [], "last": "Asllani", "suffix": ""}, {"first": "R", "middle": [], "last": "Lambiotte", "suffix": ""}, {"first": "T", "middle": [], "last": "Carletti", "suffix": ""}], "year": 2018, "venue": "Science Advances", "volume": "4", "issn": "12", "pages": "1--9", "other_ids": {}}, "BIBREF49": {"ref_id": "b49", "title": "Topological resilience in non-normal networked systems", "authors": [{"first": "M", "middle": [], "last": "Asllani", "suffix": ""}, {"first": "T", "middle": [], "last": "Carletti", "suffix": ""}], "year": 2018, "venue": "Physical Review E", "volume": "97", "issn": "4", "pages": "1--12", "other_ids": {}}, "BIBREF50": {"ref_id": "b50", "title": "Spectra and pseudospectra: the behavior of nonnormal matrices and operators", "authors": [{"first": "L", "middle": ["N"], "last": "Trefethen", "suffix": ""}, {"first": "M", "middle": [], "last": "Embree", "suffix": ""}], "year": 2005, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "for compartment models . . . . . . . . . . . . . . . . . . . . . . . 5 1.2 NPIs and compartment structure . . . . . . . . . . . . . . . . . . . . . . . . 6 1.3 Limitations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 1.4 Bayesian parameter inference and forecasting . . . . . . . . . . . . . . . . . 7 1.5 Optimising the outcomes of NPIs . . . . . . . . . . . . . . . . . . . . . . . . 8 1.6 Provenance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 1.7 Remaining chapters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 2 Inference, Prediction and Optimized Intervention for Compartment Models 11 2.1 Compartment models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2.2 Age structure and contact matrices . . . . . . . . . . . . . . . . . . . . . . . 11 2.3 Modelling and optimizing NPIs . . . . . . . . . . . . . . . . . . . . . . . . . 13 3 Techniques 15 3.1 Discrete-state continuous-time Markov process . . . . . . . . . . . . . . . . 15 3.2 Approximations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 3.2.1 Diffusion limit and the \u2126-expansion . . . . . . . . . . . . . . . . . . 16 3.2.2 Deterministic limit . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 3.3 Inference . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 3.3.1 Non-stationary Gauss-Markov process . . . . . . . . . . . . . . . . . 18 3.3.2 Parameter inference . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 3.3.3 Latent variables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 3.3.4 Model evidence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 3.3.5 Nested sampling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 3.4 Tangent space inference . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 3.5 Prediction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 3.5.1 Posterior predictive distributions . . . . . . . . . . . . . . . . . . . . 24 3.5.2 Data uncertainty . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 3.5.3 Parameter uncertainty . . . . . . . . . . . . . . . . . . . . . . . . . . 26 3.5.4 Model uncertainty . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26 3.5.5 Model averaging . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 3.6 Interventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 3.6.1 Non-pharmaceutical interventions (NPI) . . . . . . . . . . . . . . . . 27", "latex": null, "type": "figure"}, "FIGREF1": {"text": "Inference, prediction and intervention framework in PyRoss. For explanations of mathematical symbols see Chapter 3.", "latex": null, "type": "figure"}, "FIGREF2": {"text": "2.1 for examples.", "latex": null, "type": "figure"}, "FIGREF3": {"text": "Age and contact structures of the populations of UK (top), Italy and India (bottom). The first column shows population pyramids by age and gender. The second third and fourth columns show the contact structures in households, workplaces and schools respectively. The darker colours represent greater contacts. Taken from[24].", "latex": null, "type": "figure"}, "FIGREF5": {"text": "Schematic of the SIR model. The parameters for this model are: \u03b8 = (\u03b2, \u03b3 I ). The class SIR can be instantiated in PyRoss using pyross.deterministic .SIR.", "latex": null, "type": "figure"}, "FIGREF6": {"text": "Schematic of the SIR with stages (SIkR) model. The parameters for this model are: \u03b8 = (k I , \u03b2, \u03b3 I ). The class SIkR can be instantiated in PyRoss using pyross.deterministic.SIkR.", "latex": null, "type": "figure"}, "FIGREF7": {"text": "1.2 shows the schematic. The deterministic limit of the SIkR model is given as\u1e60", "latex": null, "type": "figure"}, "FIGREF8": {"text": "Schematic of the SIIR model. The parameters for this model are: \u03b8 = (\u03b1 i , \u03b2, \u03b3 I a , \u03b3 I s ). The class SIIR can be instantiated in PyRoss using pyross. deterministic.SIR. Please note that both SIIR and SIR have been implemented as pyross.deterministic.SIR in PyRoss, as it possible to go from one to another by correct choice of parameters.", "latex": null, "type": "figure"}, "FIGREF9": {"text": "4.1 shows the schematic of the SEIR model. The deterministic Schematic of the SEIR model. The parameters for this model are: \u03b8 = (\u03b2, \u03b3 I , \u03b3 E ). The class SEIR can be instantiated in PyRoss using pyross. deterministic.SEIR.", "latex": null, "type": "figure"}, "FIGREF10": {"text": "Schematic of the SEIR with stages (SEkIkR) model. The parameters for this model are: \u03b8 = (k I , k E , \u03b2, \u03b3 I , \u03b3 E ). The class SEkIkR can be instantiated in PyRoss using pyross.deterministic.SEkIkR.", "latex": null, "type": "figure"}, "FIGREF11": {"text": "Schematic of the SEIIR model. The parameters for this model are: \u03b8 = (\u03b1 i , \u03b2, \u03b3 E , \u03b3 I a , \u03b3 I s", "latex": null, "type": "figure"}, "FIGREF12": {"text": "Schematic of the SEIIR with stages (SEkIkIkR) model. The parameters for this model are: \u03b8 = (k I , k E , \u03b1 i , \u03b2, \u03b3 I a , \u03b3 I s , \u03b3 E ). The class SEkIkIkR can be instantiated in PyRoss using pyross.deterministic.SEkIkIkR. a susceptible individual in age group i is", "latex": null, "type": "figure"}, "FIGREF13": {"text": "Schematic of the SEAIIR model. The parameters for this model are:\u03b8 = (\u03b1 i , \u03b2, \u03b3 E , \u03b3 A , \u03b3 I a , \u03b3 I s ).The class SEAIIR can be instantiated in PyRoss using pyross.deterministic.SEAIR.", "latex": null, "type": "figure"}, "FIGREF14": {"text": "model is an extension of the SEAIIR model. There are now six more types of infectives (I h i : infectives who are hospitalized, I c i : infectives who are in ICU, I m i : mortality due to the infection from ICU, I s i : intermediate stage between symptomatic and removed, I c i : intermediate stage between hospitalized and removed, and I c i : intermediate stage between ICU and removed). The intermediate stages are needed to allow for a fast progression of the disease while retaining the longer recovery time and the ratios of people experiencing different levels of severity of the disease.", "latex": null, "type": "figure"}, "FIGREF15": {"text": "9.1 shows the schematic. The deterministic dynamics if given by the following ODE: Schematic of the SEAI8R model. The class SEAI8R can be instantiated in PyRoss using pyross.deterministic.SEAI8R. Schematic of the SEAIIRQ model. The parameters for this model are:", "latex": null, "type": "figure"}, "FIGREF16": {"text": "11.1: Schematic of the SIIRS model. The parameters for this model are: \u03b8 = (\u03b1 i , \u03b2, \u03b3 I a , \u03b3 I s , ). The class SIIRS can be instantiated in PyRoss using pyross.deterministic.SIRS.contact tracing in PyRoss.", "latex": null, "type": "figure"}, "FIGREF17": {"text": "10.1 shows the schematic. The deterministic dynamics of the SEAIRQ model is given as:", "latex": null, "type": "figure"}, "FIGREF18": {"text": "", "latex": null, "type": "figure"}, "FIGREF19": {"text": "12.1: Definition of the Spp class. The Spp class can be instantiated in PyRoss using pyross.deterministic.Spp.", "latex": null, "type": "figure"}, "FIGREF20": {"text": "The basic reproductive ratio as a function of intervention measures.", "latex": null, "type": "figure"}, "FIGREF21": {"text": "(A , ord =1) AP = A -np . max ( np . linalg . eigvals ( A ) ) * np . identity ( len ( A ) ) mcAA = pyross . contactMatrix . c h ara ct eri se _tr ans ie nt ( AP , ord =1) # plot the data and obtain the epidemic curve Sa = data [ 'X ' ][: ,:1]. flatten () ; Sk = data [ 'X ' ][: ,1: M ]. flatten () Isa = data [ 'X ' ][: ,2* M :2* M +1]. flatten () ; Isk = data [ 'X ' ][: ,2* M +1:3* M ]. flatten () St = Sa + Sk ; It = Isa + Isk # It = np . sqrt ( Isa **2 + Isk **2) t = data [ 't '] fig = plt . figure ( num = None , figsize =(10 , 8) , dpi =80 , facecolor = 'w ' , edgecolor = 'k ') plt . fill_between (t , 0 , St /N , color = \" #348 ABD \" , alpha =0.3) plt . plot (t , St /N , ' -' , color = \" #348 ABD \" , label = ' $S$ ' , lw =4) plt . fill_between (t , 0 , It /N , color = '# A60628 ' , alpha =0.3) plt . plot (t , It /N , ' -' , color = '# A60628 ' , label = ' $I$ ' , lw =4) Rt =N -St -It ; plt . fill_between (t , 0 , Rt /N , color = \" dimgrey \" , alpha =0.3) plt . plot (t , Rt /N , ' -' , color = \" dimgrey \" , label = ' $R$ ' , lw =4) plt . autoscale ( enable = True , axis = 'x ' , . yscale ( ' log ') ; plt . xlabel ( \" time \" ) ; plt . ylabel ( \" % of population \" ) ; plt . legend ( fontsize =26) ; plt . grid () ; plt . solve_ivp ( linear_system , (0 , tf ) , x0 , args =[ A2 ] , t_eval = np . arange (0 , tf ,.1) ) t = ivp_exp . t Gamma = A2 -np . max ( spl . eigvals ( A2 ) ) * np . identity ( len ( A2 ) ) mcA2 = ch ara ct eri se _tr ans ie nt ( Gamma ) ivp_exp2 = solve_ivp ( linear_system , (0 , tf ) , x0 , args =[ Gamma ] , t_eval = np . arange (0 , tf ,.01) ) f , ax = plt . subplots () plt . plot ( ivp_exp2 .t , spl . norm ( ivp_exp2 . y .T , axis =1) / spl . norm ( x0 ) ) ax . set_xlabel ( \" time \" ) ; ax . set_ylabel ( r '$ | u |/| u_0 | $ ') ax . plot (t , np . exp ( mcA2 [0]* t ) ,\" --\" , color = \" darkgreen \" ) ax . set_ylim (( -.1 , np . max ( spl . norm ( ivp_exp2 . y .T , axis =1) / spl . norm ( x0 ) ) *1.1) ) t_trunc = t [ np . where (t < mcA2 [3]) ] ax . plot ( t_trunc , np . exp ( mcA2 [1]* t_trunc ) ,\" --\" , color = \" orange \" ) plt . axhline ( y = mcA2 [2] , linestyle = \" dotted \" , color = \" black \" ) plt . ylim ([.98 ,1.4]) ; plt . annotate ( r ' Long time behaviour $ \\ alpha (\\ Gamma ) $ ' , [.2 ,1.01]) plt . annotate ( r ' Initial growth rate $ \\ omega (\\ Gamma ) $ ' ,[.0 ,1.05] , rotation =68) plt . annotate ( r ' Kreiss constant $ \\ mathcal { K } (\\ Gamma ) $ ' , [.4 ,1.3]) ; plt . show ()", "latex": null, "type": "figure"}, "FIGREF22": {"text": "The associated systemu = (J \u2212 \u03bb M ax I) u = \u0393u has the solution", "latex": null, "type": "figure"}, "FIGREF23": {"text": "Effect of non-normality on the dynamics. (a) The evolution of the associated : (a) The evolution of the associated . The non-normality of C results in a greater total number of infected, plotted in green. . The system quickly saturates the Kreiss bound and asymptotically tends towards normal evolution along it. (b) the 2-age structured SIR model with contact matrix", "latex": null, "type": "figure"}, "FIGREF24": {"text": "SIR model has no age structure Ni = 1000* np . ones ( M ) # so there is only one age group N = np . sum ( Ni ) # and the total population is the size of this np . array ([0]) # the SIR model has only one kind of infective Is0 = np . array ([5]) # we take these to be symptomatic R0 = np . array ([0]) # and assume there are no removed individuals initially S0 = N -( Ia0 + Is0 + R0 ) # so that the initial susceptibles are obtained from S + Ia + Is + R = N # there is no contact structure def contactMatrix ( t ) : return np . identity ( M ) # duration of simulation and data file Tf = 160; Nt =160; # instantiate model parameters = { ' alpha ': alpha , ' beta ': beta , ' gIa ': gIa , ' gIs ': gIs , ' fsa ': fsa } model = pyross . stochastic . SIR ( parameters , the basic reproductive ratio as a function of time C = np . identity ( M ) contactMatrix = pyross . contactMatrix . SIR (0.25* C , 0.25* C , 0.25* C , 0.25* C ) r0de = contactMatrix . b asi cR ep r odu ct ive Ra tio ( data , state = ' dynamic ') t = data [ 't '] plt . fill_between (t , 0 , t *0+1 , color = \" dimgrey \" , alpha =0.2) plt . plot ( r0de , '* ' , color = '# A60628 ') plt . xlabel ( ' Days ') ; plt . grid () plt . ylabel ( ' Basic reproductive ratio ') plt . autoscale ( enable = True , axis = 'x ' , tight = True ) ; plt . yticks ( np . arange (0 , 3 , step =0.5) ) ; plt . ylim (3.1: A stochastic realisation of the SIR model, c.f. example 5.3. Subplot (a) shows a resulting epidemic curve, i.e. a plot of the number of susceptibles, infectives and removed as a function of time. Subplot (b) depicts the corresponding basic reproductive ratio.", "latex": null, "type": "figure"}, "FIGREF25": {"text": "parameters = { ' alpha ': alpha , ' beta ': beta , ' gIa ': gIa , ' gIs ': gIs , ' fsa ': fsa } model = pyross . deterministic . SIR ( parameters , M , Ni ) # simulate model data = model . simulate ( S0 , Ia0 , Is0 , contactMatrix , Tf , Nt ) # plot the compartments pyross . utils . plotSIR ( data ) # plot the basic reproductive ratio as a function of time C = np . identity ( M ) ; contactMatrix = pyross . contactMatrix . SIR (0.25* C , 0.25* C , 0.25* C , 0.25* C ) r0de = contactMatrix . b asi cR ep r odu ct ive Ra tio ( data , state = ' dynamic ') plt . plot ( r0de , '* ' , color = '# A60628 ') 4.1: A deterministic realisation of the SIR model, c.f. example 5.4. The left panel shows a resulting epidemic curve, i.e. a plot of the number of susceptibles, infectives and removed as a function of time. The right panel depicts the corresponding basic reproductive ratio.", "latex": null, "type": "figure"}, "FIGREF26": {"text": "pyross . inference . SIR ( parameters , M , fi , int ( N ) , steps ) # initial guesses , bounds , and initial standard deviation for solver alpha_g =", "latex": null, "type": "figure"}, "FIGREF27": {"text": "' fsa ': fsa , ' cov ': cov } model_forecast = pyross . forecast . SIR ( parameters , Visualise result : plot fraction of symptomatic infectives traj_ref = np . sum ( data_array [: ,2* M :] , axis = -1) # reference trajectory trajs_fc = np . sum ( trajectories_fc [: ,2* M :] , axis =1) # predictions mean_fc = np . mean ( trajs_fc , axis =0) # mean prediction fig , ax = plt . subplots (1 ,1 , figsize =(7 ,5) ) ax . axvspan (0 , Tf_inf , label = ' Range used for inference ' , alpha =0.3 , color = ' dodgerblue ') for i , e in enumerate ( trajs_fc ) : # plot all forecasting trajectories ax . plot ( t_fc , e /N , alpha =0.1) ax . plot ( traj_ref /N , lw =3 , color = '# A60628 ' , label = ' Reference trajectory ') ax . plot ( t_fc , mean_fc /N , ls = ' --' , color = ' limegreen ' , label = ' Mean prediction ' , lw =3) ax . set_xlim (0 , np . max ( t_fc ) ) ax . set_xlabel ( r ' Days ') ax . set_ylabel ( ' Fraction of symptomatic infectives ') ax . legend ( loc = ' upper right ' , fontsize =12) plt . grid () ; plt . show () plt . close ( fig )", "latex": null, "type": "figure"}, "FIGREF28": {"text": "Bayesian inference and forecasting. Example 5.5 creates a trajectory (solid red line), estimates the model parameters based on the beginning of the trajectory (blue shaded region), and uses the estimated parameters to make predictions for the future time evolution (thin colored lines, with mean given by a thick dashed line).", "latex": null, "type": "figure"}, "FIGREF29": {"text": "Effect of event-driven NPI on model dynamics. In example 5.6, an event-driven protocol is defined. Once the number of symptomatic infectives exceeds a threshold, the contact matrix is reduced to the home contacts; once the number of infectives falls below another threshold, the original contact matrix is restored. Subfigures (a) and (b) use the same events, but while in (a) each event can only occur once, in (b) events can occur several times.", "latex": null, "type": "figure"}, "FIGREF30": {"text": ") plt . show () ; plt . close ( fig ) o p t i m a l _ pr ot o co l_ la b el s = [ ' Low cost of social distancing ' , ' Intermediate cost of social distancing ' , ' High cost of social distancing '] t_max = [700 ,250 ,250] for i , optimal_protocol in enumerate ( optimal_protocols ) : plot_result ( protocol = optimal_protocol , model = model , t_max = t_max [ i ] , title = op t im al _p r ot oc ol _ la be l s [ Optimisation of NPI protocol parameters, c.f. example 5.7. The protocol consists of two durations, namely the time of a full lockdown (initial contact matrix reduced via a prefactor 1/4), and a subsequent partial lockdown (initial contact matrix reduced via a prefactor 3/4). The cost of a protocol is comprised of a i) cost for social distancing (= reducing the entries of the contact matrix), and ii) a cost of infection. As a hard constraint, the protocol must keep the number of infectives below a defined threshold, shown as horizontal dashed line. The optimal protocol minimises the total cost. Subplots (a), (b), (c), show three results of optimisation for the same system, depending on the cost of social distancing.", "latex": null, "type": "figure"}, "FIGREF31": {"text": ". plot (t , asI2 , ' -' , lw = lwd , color = ' goldenrod ' , label = ' SEIR ') plt . plot (t , asI4 , ' -' , lw = lwd , color = ' forestgreen ' , label = ' SEkIkR ') plt . xlabel ( ' Days ') ; plt . ylabel ( ' Infected individuals ') ; Model-dependence of dynamics after lockdown. In example 5.8, the models SIR, SEIR, SIR with stages, and SEIR with stages, are considered.", "latex": null, "type": "figure"}, "FIGREF32": {"text": "Predictions from an unstructured SI5R model in Simulana. Simulana", "latex": null, "type": "figure"}, "TABREF0": {"text": "1: Country-specific basic reproductive ratio of the age-structured SIR model for fixed probability of infection on contact \u03b2 and recovery rate \u03b3 = 1/7.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Country </td><td>Basic reproductive ratio\n</td></tr><tr><td>UK </td><td>R0 = 82\u03b2\n</td></tr><tr><td>Italy </td><td>R0 = 119\u03b2\n</td></tr><tr><td>India </td><td>R0 = 136\u03b2\n</td></tr></table></body></html>"}, "TABREF2": {"text": "). The class SEIIR can be instantiated in PyRoss using pyross.deterministic.SEIR. Please note that both SEIIR and SEIR have been implemented as pyross.deterministic.SEIR in PyRoss as it possible to go from one to another by correct choice of parameters.", "latex": null, "type": "table"}, "TABREF7": {"text": "# contact structure of the UK ukCH , ukCW , ukCS , ukCO = pyross . contactMatrix . UK () aH , aW , aS , aO = 1 , 1 , 1 , 1 CH , CW , CS , CO = aH * ukCH , aW * ukCW , aS * ukCS , aO * ukCO", "latex": null, "type": "table"}, "TABREF11": {"text": "For any model , the order for the event functions is # exactly the same as in the arguments of model . simulation ) # This is a dummy event which will never occur ;", "latex": null, "type": "table"}, "TABREF13": {"text": "1] > 700: return infinity # -number of symptomatic infectives should # never exceed a given maximal value if np . max ( np . sum ( traj [2* M :3* M ] , axis =0 ) ) > maximal_value_for_Is : return infinity Define function that evaluates the cost of a given protocol def e v a l ua t e _ c o s t _ o f _p r o t o c o l ( model , protocol , verbose = False , return_trajectory = False , sdc_prefactor =10. , sdc_rate =1/7.) : # define events corresponding to given protocol events , contactMatrices = get_events ( protocol ) # run simulation Tf = 1000; Nt = ( Tf +1) *10 result = model . simulate ( S0 , Ia0 , Is0 , events = events , contactMatrices = contactMatrices , Tf = Tf , Nf = Nt ) # evaluate cost cost = ev alu at e_c os t_f unc ti on ( t_arr = result [ 't '] , traj = result [ 'X ' ]. return cost , result [ 't '] , result [ 'X '] , result [ ' events_occured '] This is the function that will be minimised by the cma -es algorithm costs = e v a l ua t e _ c o s t _ o f _p r o t o c o l ( model = model , protocol = protocol , sdc_prefactor = sdc_prefactor , sdc_rate = sdc_rate , return_trajectory = False ) return costs def f i nd_opt imal_ protoc ol ( initial_guess , sdc_prefactor , sdc_rate , model , verbose = True , initial_variance =5.) : func = partial ( minimizing_function , sdc_prefactor , sdc_rate ) # set parameters for minimisation based on cma -es algorithm number_of_threads = 4 number_iterations = 1000 p = Pool ( number_of_threads ) options = cma . CMAOptions () options [ ' popsize '] = 12 # run minimisation start_time = time . time () optim = cma . CMAEvolutionStrategy ( initial_guess , initial_variance , options ) iteration = 0 while not optim . stop () and iteration < number_iterations : Time : \" , end_time -start_time ) print ( \" Value : \" , optim . best . f ) print ( \" Parameters : \" , optim . best . x ) return optim . best . x # 6. Find optimal protocol for three different scenarios # Initialise model parameters = { ' alpha ': alpha , ' beta ': beta , ' gIa ': gIa , ' gIs ': gIs , ' fsa ': fsa } model = pyross . control . SIR ( parameters , M , Ni ) initial_guess =[70 ,200] # use same initial guess for all minimisations sdc_prefactor = 1. # means that social distancing cost and # cost of infection have the same weight in our model # Low , intermediate , and high cost rate for social distancing : sdc_rates = [1 e -2 ,1 e -1 ,1.] optim al_protocols = [] for i , sdc_rate in enumerate ( sdc_rates ) : optimal_protocol = fi nd_o p timal_ proto col ( initial_guess = initial_guess , sdc_prefactor = sdc_prefactor , sdc_rate = sdc_rate , model = model ) optimal_protocols . append ( optimal_protocol ) # 7. Visualise results def plot_result ( protocol , model , title = ' Optimised intervention parameters ' , t_max = None ) : # cost , t_arr , traj , events_occured = e v a lu a t e _ c o s t _ of _ p r o t o c o l ( model = model , protocol = protocol , return_trajectory = True ) Is = np . sum ( traj [: ,2* M :] , axis = -1) fig , ax = plt . subplots (1 ,1 , figsize =(7 ,5) ) ax . set_title ( title ) ax . axhline ( maximal_value_for_Is , color = ' red ' , ls = ' --' , label = r ' Constraint ')ax . axvspan ( events_occured [0][0] , events_occured [1][0] , color = ' crimson ' , label = ' Intervention 1 ' , alpha =0.2) ax . axvspan ( events_occured [1][0] , events_occured [2][0] , color = ' orange ' , label = ' Intervention 2 ' , alpha =0.2) ax . plot ( t_arr , Is ) if t_max == None : ax . set_xlim ( np . min ( t_arr ) , np . max ( t_arr ) ) else : ax . set_xlim ( np . min ( t_arr ) , t_max ) ax . set_ylabel ( ' Symptomatic infectives ') ax . set_xlabel ( r ' time [ days ] ') ax . legend ( loc = ' upper right ' , fontsize =12 , framealpha =1.", "latex": null, "type": "table"}, "TABREF14": {"text": "CW , CS , CO = pyross . contactMatrix . India () # Generate contact matrix generator = pyross . contactMatrix . Cont actMa trixFu nctio n ( CH , CW , CS , CO ) Tf =42; Nf =600 times = [21 , Tf ] # temporal boundaries between different contact -behaviour aW , aS , aO = 0.0 , 0.0 , 0.0 # prefactors for CW , CS , CO : interventions = [[1.0 ,1.0 ,1.0] , # before first time [ aW , aS , aO ] , # between first and second time ] # generate corresponding contact matrix function contactMatrix = generator . i nt erv en tio ns_ te mpo ra l ( times = times , interventions = interventions ) Is_0 = np . zeros (( M ) ) ; Is_0 [6:13]=14; Is_0 [2:6]=13 Ia_0 = np . zeros (( M ) ) R_0 = np . zeros (( M ) ) S_0 = Ni -( Ia_0 + Is_0 + R_0 ) parameters = { ' alpha ': alpha , ' beta ': beta , ' gIa ': gIa , ' gIs ': gIs , ' fsa ': fsa } model = pyross . deterministic . SIR ( parameters , M , Ni ) dataSIR = model . simulate ( S_0 , Ia_0 , Is_0 , contactMatrix , Tf , Nf ) I1 = model . Is ( dataSIR ) Is_0 = np . zeros (( M ) ) ; Is_0 [6:13]=14; Is_0 [2:6]=13 Ia_0 = np . zeros (( M ) ) E_0 = np . zeros (( M ) ) ; R_0 = np . zeros (( M ) ) S_0 = Ni -( Ia_0 + Is_0 + R_0 ) param ={ ' alpha ': alpha , ' beta ': beta , ' gIa ': gIa , ' gIs ': gIs , ' gE ': gE , ' fsa ': fsa } model = pyross . deterministic . SEIR ( param , M , Ni ) dataSEIR = model . simulate ( S_0 , E_0 , Ia_0 , Is_0 , contactMatrix , Tf , Nf ) I2 = model . Is ( dataSEIR ) of stages of I class I0 = np . zeros (( kI , M ) ) ; for i in range ( kI ) : I0 [i , 6:13]=14; I0 [i , 2:6]=13 S0 = np . zeros ( M ) for i in range ( M ) : S0 [ i ] = Ni [ i ] -np . sum ( I0 [: , i ]) I0 = np . reshape ( I0 , kI * M ) / kI parameters = { ' beta ': beta , ' gI ': gI , ' kI ': kI } model = pyross . deterministic . SIkR ( parameters , M , Ni ) dataSIkR = model . simulate ( S0 , I0 , contactMatrix , Tf , Nf ) I3 = model . I ( dataSIkR ) of stages of E class S0 = np . zeros ( M ) I0 = np . zeros (( kI , M ) ) ; E0 = np . zeros (( kE , M ) ) ; for i in range ( kI ) : I0 [i , 6:13]=14; I0 [i , 2:6]=13 for i in range ( kE ) : E0 [i , 0:16]=14 for i in range ( M ) : S0 [ i ] = Ni [ i ] -np . sum ( I0 [: , i ]) -np . sum ( E0 [: , i ]) I0 = np . reshape ( I0 , kI * M ) / kI ; E0 = np . reshape ( E0 , kE * M ) / kE ; parameters = { ' beta ': beta , ' gE ': gE , ' gI ': gI , ' kI ': kI , ' kE ' : kE } model = pyross . deterministic . SEkIkR ( parameters , M , Ni ) data = model . simulate ( S0 , E0 , I0 , contactMatrix , Tf , Nf ) ; I4 = model . I ( data )asI1 , asI2 , asI3 , asI4 = I1 . sum ( axis =1) , I2 . sum ( axis =1) , I3 . sum ( axis =1) , I4 . sum ( axis =1) # sum over all ages", "latex": null, "type": "table"}}, "back_matter": [{"text": "The work described in this report was completed in the six weeks spanning April to mid-May 2020 as a contribution to the Rapid Assistance in Modelling the Pandemic (RAMP) initiative, coordinated by the Royal Society. The GitLab platform enabled seamless collaboration under lockdown conditions. We are grateful to the numerous developers who contribute to the open-source platform on which PyRoss is built and without which it would not exist. We acknowledge advice from Graeme Ackland, Daan Frenkel, Julia Gog, Chris Rogers, and Richard Wilkinson. We thank the code review team of RAMP's Rapid Review Group at Oxford for their scrutiny of the PyRoss library and for their suggestions for improvement; RAMP's Red Team at Edinburgh further code review and stress testing; and those who opened issues and offered suggestions on GitHub. Remaining defects in the PyRoss library and in this report are the responsibility of the authors. This work was funded in part by the European Research Council under the EU's Horizon 2020 Program, Grant No. 740269; by the Royal Society through a Research Professorship held by MEC, and by an Early Career Grant to RA from the Isaac Newton Trust.", "cite_spans": [], "ref_spans": [], "section": "Acknowledgement"}]}