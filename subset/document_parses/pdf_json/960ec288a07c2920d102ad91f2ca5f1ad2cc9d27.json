{
    "paper_id": "960ec288a07c2920d102ad91f2ca5f1ad2cc9d27",
    "metadata": {
        "title": "Neuroevolutionary Approach to Metamodel-Based Optimization in Production and Logistics",
        "authors": [
            {
                "first": "Ilya",
                "middle": [],
                "last": "Jackson",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Telecommunication Institute (TTI)",
                    "location": {
                        "addrLine": "Lomonosova Iela 1",
                        "settlement": "Riga",
                        "country": "Latvia"
                    }
                },
                "email": "jackson.i@tsi.lv"
            }
        ]
    },
    "abstract": [
        {
            "text": "Considering recent success of neuroevolutionary approaches in automated machine learning, their application to metamodeling seems to be promising. This paper examines, whether it is feasible and efficient to combine artificial neural network with genetic algorithm for metamodeling automation of logistic and production systems. Besides, the possibility of using the proposed approach to derive optimal control parameters is discussed.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "The recent COVID-19 pandemic has tested sustainability of supply chains to its limits and revealed serious vulnerabilities of logistic and production systems across the globe. As a result, evolution of traditional ways of creating and distributing value has been notably accelerated [1] .",
            "cite_spans": [
                {
                    "start": 283,
                    "end": 286,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Problems in production and logistics are industry-specific and contain non-standard features. This fact along with complexity, dimensionality and stochasticity frequently leads to analytic intractability. That is why, approximate solutions, simulation-based optimization and derivative-free \"black-box\" optimization are common choice for solving real-world problems in production and logistics. Nevertheless, realistic and detailed models require sheer amount of computational resources. In the light of this fact, it is quite reasonable to take advantage on an alternative model, which is specifically built in order to approximate an original one with a tolerable degree of accuracy. Such an approach is widely known as metamodeling [2] .",
            "cite_spans": [
                {
                    "start": 735,
                    "end": 738,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Nowadays such machine learning (ML) algorithms as artificial neural networks (ANN), support-vector machines, gradient boosting algorithms and many others demonstrate state-of-the-art performance in such nontrivial tasks as image recognition, machine translation, speech recognition, and fitness approximation. This undisputable success could not bypass metamodeling. Smarter solutions that take advantage on MLbased metamodels significantly accelerate optimization search, thus lead to faster decision-making allowing companies to maintain business continuity in the face of disruptions and uncertainties, which is especially important in post-pandemic times.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Despite the promising potential of ML algorithms in metamodeling, there is a serious challenge that cannot be ignored. Although ML algorithms are universal and task-unspecific, they are sensitive to a plethora of design decisions. For example, data preparation and pre-processing, feature selection and extraction, model selection and hyperparameter optimization [3] . That is why, data scientists, artificial intelligence developers and other experts are deeply involved into development, fine-tuning and customization of ML models. This procedure is labor-intense and requires additional time of highly qualified specialists along with financial resources. Automation of machine learning (AutoML) clearly has potential to make advanced ML-based metamodels accessible to domain scientists working in the field of logistics and production, which can be considered as \"democratization\" of ML. However, recent publications emphasize that widespread industrial applications require AutoML solutions to be tailored for solving a particular class of problems within the domain [3] [4] [5] .",
            "cite_spans": [
                {
                    "start": 363,
                    "end": 366,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 1072,
                    "end": 1075,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 1076,
                    "end": 1079,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 1080,
                    "end": 1083,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "There are dozens of ML-based solutions for metamodeling of production and logistic systems. Jarosz et al. compared such metamodeling approaches as ANN, supportvector machines and random forest based on a two-stage production process of blister copper [6] . Yang et al. have demonstrated advantages of ML-based metamodeling techniques for optimization of additive manufacturing systems [7] . The recent paper reports on the computational framework for industrial lot-sizing. The framework incorporates the concepts of parallel computing, metaheuristics and ML (gradient tree boosting regressor) for solving an economic lot-size problem [8] .",
            "cite_spans": [
                {
                    "start": 251,
                    "end": 254,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 257,
                    "end": 268,
                    "text": "Yang et al.",
                    "ref_id": null
                },
                {
                    "start": 385,
                    "end": 388,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 635,
                    "end": 638,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "Notwithstanding the astonishing performance of ML metamodels there is a serpent in this Eden. Although the vast majority of ML models are universal function approximators, human experts still play a significant role. Taking into consideration recent success of neuroevolutionary approaches in neural architecture search and hyperparameter optimization, their application to metamodeling in logistics and production becomes promising.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "The neuroevolution comprises neural and evolutionary components. In the proposed computational framework GA is chosen as the evolutionary component and multilayer perceptron (MLP) as the neural one.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Methodology"
        },
        {
            "text": "The computational framework for automated metamodeling relies on the extension of the universal approximation theorem. The theorem states that any feedforward fully connected ANN with at least one hidden layer, finite number of neurons and non-linear activation function can approximate nonlinear input-output maps [9] . MLP is the most general feed-forward ANN, and other feedforward networks can be considered as its specific case. For this reason, MLP is used as a baseline for a metamodel. MLP derives its computational efficiency and robustness from distributed structure and capability to generalize. The generalization refers to the ability of producing correct output for inputs that have not been encountered during the learning phase.",
            "cite_spans": [
                {
                    "start": 315,
                    "end": 318,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Neural Component"
        },
        {
            "text": "In the proposed computational framework, the search space defines the plethora of attainable structures. Since this paper is rather focused on a proof of concept and does not attempt to develop the all-embracing solution, the search space contains only the most vital components of MLP, such as depth, width, activation functions, optimizer and learning rate.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Neural Component"
        },
        {
            "text": "Mimicking Darwinian natural selection, GA appears to be the driving force behind the neuroevolution. GA samples, crosses over, mutates and resamples the population of highly fit MLP-based metamodels in order to form a new even fitter population. As the result, instead of exhaustive search for nearly optimal topologies, GA improves the solution step by step from the most promising topologies. The implemented GA is distinguished by Gray-code chromosome encoding, uniform crossover and tournament selection. Components that define the search strategy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Evolutionary Component"
        },
        {
            "text": "An appropriate chromosome representation for the particular problem domain can drastically accelerate the search. Space-efficiency makes binary representation an apparent choice, however, chromosome representations vary noticeably even among binary schemes. The choice falls on the reflected Gray-code, because such encoding scheme can guarantee gradualism for the reason that exactly one bit has to be flipped in order to reach the nearest value [10] . This fact prevents problems related to large Hamming clefts (Fig. 1) .",
            "cite_spans": [
                {
                    "start": 447,
                    "end": 451,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [
                {
                    "start": 514,
                    "end": 522,
                    "text": "(Fig. 1)",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Evolutionary Component"
        },
        {
            "text": "Uniform crossover compensates a plethora of serious drawbacks of more traditional crossovers. Since the number of crossover points is not constant, the decision of flipping is made independently for every single bit, thus, the operator will not tend to split up the fit sections of a chromosome. Additionally, the uniform crossover makes premature convergence less likely to happen [11] . Tournament selection is a standard selection operator in contemporary neuroevolutionary techniques. It is distinguished by several significant benefits over alternatives, for instance it is simple to implement and robust to noisy fitness functions [12] .",
            "cite_spans": [
                {
                    "start": 382,
                    "end": 386,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 637,
                    "end": 641,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Evolutionary Component"
        },
        {
            "text": "In order to formalize automated metamodeling via neuroevolution, let's consider a nonlinear input-output map represented by the \"black-box\" function y = f(x), where x stands for the vector of input parameters and y is the output. Despite f(x) is a \"blackbox\", the set of observations s \u00bc f x i ; y i g N i\u00bc1 is given. Since MLP-based metamodel can be built from such components as layers, activation functions, optimizers and respective hyperparameters, this information is encoded into a single chromosome a 2 A. After that GA searches for such a * 2 A that allows MLP-based metamodel F(a*, x) to approximate the original model. Such that F a; x \u00f0 \u00de\u00c0f x \u00f0 \u00de k k \\e, where e is a positive value, small enough for the problem under consideration (Fig. 2 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 745,
                    "end": 752,
                    "text": "(Fig. 2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Metamodeling via Neuroevolution"
        },
        {
            "text": "In the following numerical studies, the search space encompasses the number of hidden layers from 0 to 10 and the number of neurons in each layer from 10 to 200 with the discretization step of 1. Additionally, the search space includes learning rates from 0.01 to 0.3 with the discretization step of 0.01 and all the activation functions and optimizers available in Keras 2.3.0 [13] . So that GA orchestrates evolutionary morphism to find a structure in feasible region that produces the metamodel with the highest coefficient of determination (R 2 ). The total number of trainable parameters that include both neurons and weights is restricted to 20000, because the obtained metamodel has to be more computationally efficient than the original one.",
            "cite_spans": [
                {
                    "start": 378,
                    "end": 382,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Metamodeling via Neuroevolution"
        },
        {
            "text": "An accurate metamodel can significantly ease computational burden. It can be trained once based on a dataset derived from experiments with the original model. After that optimization search can be conducted iteratively. There is a plethora of suitable optimization algorithms, but GA is a convenient choice for demonstration. The computational framework for metamodeling is already equipped with GA, which is universal can be applied for both neuroevolution and the following optimization. The logic behind metamodel-based optimization with GA is the same as for the network morphism. To be more specific, by applying genetic operators to the parental solutions, a set of new candidate solutions is obtained. After that, the produced offspring compete for a place in the next generation based on its fitness. This process continues until termination criteria is met (Fig. 3 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 866,
                    "end": 873,
                    "text": "(Fig. 3",
                    "ref_id": null
                }
            ],
            "section": "Metamodel-Based Optimization"
        },
        {
            "text": "This research takes into consideration the ongoing reproducibility crisis. Since the reproducibility of experiments is the cornerstone of the scientific method, all the source-code of models, metamodels and computational framework are available in the GitHub repository [14] .",
            "cite_spans": [
                {
                    "start": 270,
                    "end": 274,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "Numerical Study"
        },
        {
            "text": "The models of the considered systems are implemented in the form of a discrete-event simulation. The first model simulates an inventory control system and referred to as the Fig. 3 . The logic behind GA-driven metamodel-based optimization. model 1. It is mainly based on the recent work [15] . The model can be characterized as multiproduct and stochastic with lost-sales, discounts and perishability. The second model simulates production-inventory system and referred to as the model 2. The model adopts Markov-modulated demand, in which the demand process is related to an underlying Markov chain [16] . For both models averaged net-profit is considered as an output of interest (dependent variable).",
            "cite_spans": [
                {
                    "start": 287,
                    "end": 291,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 600,
                    "end": 604,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [
                {
                    "start": 174,
                    "end": 180,
                    "text": "Fig. 3",
                    "ref_id": null
                }
            ],
            "section": "Systems Under Consideration"
        },
        {
            "text": "The procedure begins with generation of random inputs in the feasible range. The model 1 comprises 151 independent variables and replicated 35 times. The model 2 comprises 81 independent variables and replicated 44 times. Storing the vector of inputs and the average output as an observation, the datasets s 1 and s 2 of 600 observations are generated. Both datasets are split by training and test subsets using 10-fold cross validation. As soon as s is generated, metamodeling can be formulated as multivariate regression problem. Therefore, the metamodeling procedure can be reduced to minimization of the mean squared error (MSE) between the actual output y and prediction made by the metamodel F(a, x).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Metamodeling as a Regression Problem"
        },
        {
            "text": "The data is standardized prior to training. AutoML procedure is driven by GA with the empirically adjusted parameters. Namely, tournament size of 5, crossover probability of 0.30 and mutation probability of 0.05. It is worth to point out that slight variations of hyperparameters have not notably affected either the convergence speed or the likelihood of premature convergence. The evolution lasts 10 generations, and each generation is populated with 40 MLPs. In 10 generations the metamodels with the average coefficients of determination of 0.81 and 0.82 have been trained (Fig. 4) .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 577,
                    "end": 585,
                    "text": "(Fig. 4)",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Metamodeling as a Regression Problem"
        },
        {
            "text": "Coefficients of determination calculated based on all the cross-validation slices are insignificant, which means that the MLPs have been capable to generalize nonlinear relations between the inputs and output (Fig. 5) . Furthermore, violin plots demonstrate that the original samples generated by the simulation and the samples recreated using the trained metamodels belong to the same population (Fig. 6) .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 209,
                    "end": 217,
                    "text": "(Fig. 5)",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 397,
                    "end": 405,
                    "text": "(Fig. 6)",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Metamodeling as a Regression Problem"
        },
        {
            "text": "The Table 1 contains several accuracy-related statistics. Besides, ordinary least squares regression is used in order to demonstrate the presence of nonlinearity. In the context of regression analysis, the role of residuals should not be disparaged. Residuals provide a general approach to indicate the quality of the metamodels and diagnose possible problems. The expected value of residuals for both metamodels is close to 0, namely \u22120.011 and 0.013 for the model 1 and 2 respectively. It implies that both metamodels are not systematically biased toward over-prediction or underprediction. After the distributions of residuals are plotted against theoretical standard normal, the possible issue related to heavy tails immediately catches the eye (Fig. 7) .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 4,
                    "end": 11,
                    "text": "Table 1",
                    "ref_id": "TABREF0"
                },
                {
                    "start": 749,
                    "end": 757,
                    "text": "(Fig. 7)",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "Metamodeling as a Regression Problem"
        },
        {
            "text": "Nevertheless, the Anderson-Darling normality test is confidently passed in both cases ( Table 2 ). The null hypothesis that a sample is taken from a normally distributed population is tested. Since the calculated statistic is smaller than the critical value for both samples, the null hypothesis that the data is drawn from normal distribution can be accepted for the significance level 0.05. It is also worth to test, whether residuals are homoscedastic. In practical sense, if residuals are heteroscedastic, this implies that the predictive power of the model is different for different sections of the data. Applying Goldfeld-Quandt test for heteroscedasticity, the null hypothesis that the two subsamples of the dataset have the same variance is not rejected for residuals of both metamodels (Table 3) . ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 88,
                    "end": 95,
                    "text": "Table 2",
                    "ref_id": "TABREF1"
                },
                {
                    "start": 796,
                    "end": 805,
                    "text": "(Table 3)",
                    "ref_id": "TABREF2"
                }
            ],
            "section": "Metamodeling as a Regression Problem"
        },
        {
            "text": "For the model 1 and model 2 all the inputs except control parameters are randomly generated producing 30 test scenarios. For each scenario, the output (net profit) is subject to maximization. Net-profit achieved by the metamodel-based optimization is compared with net-profit obtained by classical simulation-based optimization driven by the same GA. Metamodel-based optimization and simulation-based optimization last 31 generations with 100 candidate solutions in each generation. Percentage error is used for comparing the accuracy (Fig. 8 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 535,
                    "end": 542,
                    "text": "(Fig. 8",
                    "ref_id": null
                }
            ],
            "section": "Metamodel-Based Optimization"
        },
        {
            "text": "Mean percentage errors of 5.21 and 3.23 can be interpreted as insignificant taking into account complexity, computational budget and presence of stochastic noise. It is important to keep in mind that MLPs are approximations and an error is inevitable.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Metamodel-Based Optimization"
        },
        {
            "text": "MLP-based metamodels derived using neuroevolution have demonstrated capability to learn and generalize complex nonlinear relations between variables. Therefore, they can be applied for metamodeling of complex real-world systems in logistics and production. The experiments have been conducted to proof the concept, however, the accuracy of the metamodels can be improved further by performing more exhaustive search. However, exhaustive search is associated with an increase in the computational budget and the common trade-off between accuracy and computational efficiency. Optimization using MLP-based metamodels has several distinct advantages over the classical approaches. Firstly, the output of the MLP-based metamodel is always deterministic. Secondly, MLPs, by definition, are computationally less expensive, which is especially notable for shallow architectures that use activation functions from the linear unit family.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "A COVID-19 and shattered supply chains: Reducing vulnerabilities through smarter supply chains. IBM institute for business value",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Wright",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "The construction and implementation of metamodels",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Blanning",
                    "suffix": ""
                }
            ],
            "year": 1975,
            "venue": "Simulation",
            "volume": "24",
            "issn": "",
            "pages": "177--184",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Automated Machine Learning",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Hutter",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Kotthoff",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Vanschoren",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "AutoML: A Survey of the State-of-the-Art",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Chu",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1908.00709"
                ]
            }
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Evolutionary neural AutoML for deep learning",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Liang",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Meyerson",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Hodjat",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Fink",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Mutch",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Miikkulainen",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the Genetic and Evolutionary Computation Conference",
            "volume": "",
            "issn": "",
            "pages": "401--409",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Metamodeling and optimization of a blister copper two-stage production process",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Jarosz",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Kusiak",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Malecki",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Morkisz",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Oprocha",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Pietrucha",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Sztangret",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "JOM",
            "volume": "68",
            "issn": "6",
            "pages": "1535--1540",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "A domain-driven approach to metamodeling in additive manufacturing",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Hagedorn",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Eddy",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Krishnamurty",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Grosse",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Denno",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Lu",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Witherell",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "ASME 2017 International Design Engineering Technical Conferences and Computers and Information in Engineering Conference",
            "volume": "",
            "issn": "",
            "pages": "1--10",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Economic lotsize using machine learning, parallelism, metaheuristic and simulation",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "De Sousa Junior",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Montevechi",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Miranda",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Rocha",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Vilela",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Int. J. Simul. Model",
            "volume": "18",
            "issn": "2",
            "pages": "205--216",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Approximating Continuous Functions by ReLU Nets of Minimal Width",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Hanin",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1710.11278"
                ]
            }
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Representation and hidden bias: Gray vs. binary coding for genetic algorithms",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Caruana",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Schaffer",
                    "suffix": ""
                }
            ],
            "year": 1988,
            "venue": "Proceedings of the 5 th International Conference on Machine Learning",
            "volume": "",
            "issn": "",
            "pages": "153--161",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Evolution strategies and other methods",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Michalewicz",
                    "suffix": ""
                }
            ],
            "year": 1996,
            "venue": "Genetic Algorithms + Data Structures = Evolution Programs",
            "volume": "",
            "issn": "",
            "pages": "159--177",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Genetic algorithms, tournament selection, and the effects of noise",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Miller",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Goldberg",
                    "suffix": ""
                }
            ],
            "year": 1995,
            "venue": "Complex Syst",
            "volume": "9",
            "issn": "3",
            "pages": "193--212",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Keras: The python deep learning library",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Chollet",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Astrophysics Source Code Library",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "GitHub repository \"metainventory",
            "authors": [],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Simulation-optimisation approach to stochastic inventory control with perishability",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Jackson",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Inf. Technol. Manag. Sci",
            "volume": "22",
            "issn": "",
            "pages": "9--14",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Neuroevolutionary approach to metamodeling of production-inventory systems with lost-sales and markovian demand",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Jackson",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "International Conference on Reliability and Statistics in Transportation and Communication",
            "volume": "",
            "issn": "",
            "pages": "90--99",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Components of the MLP are encoded into the Gray's code.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Metamodeling automation with neuroevolution.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Evolution of the MLP-based metamodels (vertical arrows represent the standard deviation of the fitness function within the generation).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Box-plot of coefficients of R 2 calculated in 10-fold cross-validation.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Violin plots of the net profit generated with the model and recreated using the metamodel.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Quantile-quantile plots of the residuals.",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "Accuracy of the fittest MLPs compared to ordinary least squares.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "Anderson-Darling normality test for residuals",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "Parametric Goldfeld-Quandt test for heteroscedasticity. Models Statistic Critical F-value p-value Significance level Fig. 8. Metamodel-based optimization is compared to simulation-based optimization.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}