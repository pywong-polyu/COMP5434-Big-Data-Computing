{"paper_id": "9a731dc0eaeb4cbabe147361c3a903181875b439", "metadata": {"title": "MSGE: A Multi-step Gated Model for Knowledge Graph Completion", "authors": [{"first": "Chunyang", "middle": [], "last": "Tan", "suffix": "", "affiliation": {"laboratory": "National Key Laboratory for Novel Software Technology", "institution": "Nanjing University", "location": {"settlement": "Nanjing", "country": "China"}}, "email": ""}, {"first": "Kaijia", "middle": [], "last": "Yang", "suffix": "", "affiliation": {"laboratory": "National Key Laboratory for Novel Software Technology", "institution": "Nanjing University", "location": {"settlement": "Nanjing", "country": "China"}}, "email": "yangkj@smail.nju.edu.cn"}, {"first": "Xinyu", "middle": [], "last": "Dai", "suffix": "", "affiliation": {"laboratory": "National Key Laboratory for Novel Software Technology", "institution": "Nanjing University", "location": {"settlement": "Nanjing", "country": "China"}}, "email": ""}, {"first": "Shujian", "middle": [], "last": "Huang", "suffix": "", "affiliation": {"laboratory": "National Key Laboratory for Novel Software Technology", "institution": "Nanjing University", "location": {"settlement": "Nanjing", "country": "China"}}, "email": ""}, {"first": "Jiajun", "middle": [], "last": "Chen", "suffix": "", "affiliation": {"laboratory": "National Key Laboratory for Novel Software Technology", "institution": "Nanjing University", "location": {"settlement": "Nanjing", "country": "China"}}, "email": "chenjj@nju.edu.cn"}]}, "abstract": [{"text": "Knowledge graph embedding models aim to represent entities and relations in continuous low-dimensional vector space, benefiting many research areas such as knowledge graph completion and web searching. However, previous works do not consider controlling information flow, which makes them hard to obtain useful latent information and limits model performance. Specifically, as human beings, predictions are usually made in multiple steps with every step filtering out irrelevant information and targeting at helpful information. In this paper, we first integrate iterative mechanism into knowledge graph embedding and propose a multi-step gated model which utilizes relations as queries to extract useful information from coarse to fine in multiple steps. First gate mechanism is adopted to control information flow by the interaction between entity and relation with multiple steps. Then we repeat the gate cell for several times to refine the information incrementally. Our model achieves state-of-the-art performance on most benchmark datasets compared to strong baselines. Further analyses demonstrate the effectiveness of our model and its scalability on large knowledge graphs.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Large-scale knowledge graphs(KGs), such as Freebase [1] , YAGO3 [2] and DBpedia [3] , have attracted extensive interests with progress in artificial intelligence. Real-world facts are stored in KGs with the form of (subject entity, relation, object entity), denoted as (s, r, o), benefiting many applications and research areas such as question answering and semantic searching. Meanwhile, KGs are still far from complete with missing a lot of valid triplets. As a consequence, many researches have been devoted to knowledge graph completion task which aims to predict missing links in knowledge graphs.", "cite_spans": [{"start": 52, "end": 55, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 64, "end": 67, "text": "[2]", "ref_id": "BIBREF1"}, {"start": 80, "end": 83, "text": "[3]", "ref_id": "BIBREF2"}], "ref_spans": [], "section": "Introduction"}, {"text": "Knowledge graph embedding models try to represent entities and relations in low-dimensional continuous vector space. Benefiting from these embedding models, we can do complicated computations on KG facts and better tackle the KG completion task. Translation distance based models [4] [5] [6] [7] [8] regard predicting a relation between two entities as a translation from subject entity to tail entity with the relation as a media. While plenty of bilinear models [9] [10] [11] [12] [13] propose different energy functions representing the score of its validity rather than measure the distance between entities. Apart from these shallow models, recently, deeper models [14, 15] are proposed to extract information at deep level.", "cite_spans": [{"start": 280, "end": 283, "text": "[4]", "ref_id": "BIBREF4"}, {"start": 284, "end": 287, "text": "[5]", "ref_id": "BIBREF5"}, {"start": 288, "end": 291, "text": "[6]", "ref_id": "BIBREF6"}, {"start": 292, "end": 295, "text": "[7]", "ref_id": "BIBREF7"}, {"start": 296, "end": 299, "text": "[8]", "ref_id": "BIBREF8"}, {"start": 464, "end": 467, "text": "[9]", "ref_id": "BIBREF9"}, {"start": 468, "end": 472, "text": "[10]", "ref_id": "BIBREF10"}, {"start": 473, "end": 477, "text": "[11]", "ref_id": "BIBREF11"}, {"start": 478, "end": 482, "text": "[12]", "ref_id": "BIBREF12"}, {"start": 483, "end": 487, "text": "[13]", "ref_id": "BIBREF13"}, {"start": 670, "end": 674, "text": "[14,", "ref_id": "BIBREF14"}, {"start": 675, "end": 678, "text": "15]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "Introduction"}, {"text": "Though effective, these models do not consider: 1. Controlling information flow specifically, which means keeping relevant information and filtering out useless ones, as a result restricting the performance of models. 2. The multi-step reasoning nature of a prediction process. An entity in a knowledge graph contains rich latent information in its representation. As illustrated in Fig. 1 , the entity Michael Jordon has much latent information embedded in the knowledge graph and will be learned into the representation implicitly. However, when given a relation, not all latent semantics are helpful for the prediction of object entity. Intuitively, it is more reasonable to design a module that can capture useful latent information and filter out useless ones. At the meantime, for a complex graph, an entity may contain much latent information entailed in an entity, one-step predicting is not enough for complicated predictions, while almost all previous models ignore this nature. Multi-step architecture [16, 17] allows the model to refine the information from coarse to fine in multiple steps and has been proved to benefit a lot for the feature extraction procedure.", "cite_spans": [{"start": 1013, "end": 1017, "text": "[16,", "ref_id": "BIBREF16"}, {"start": 1018, "end": 1021, "text": "17]", "ref_id": "BIBREF17"}], "ref_spans": [{"start": 383, "end": 389, "text": "Fig. 1", "ref_id": "FIGREF0"}], "section": "Introduction"}, {"text": "In this paper, we propose a Multi-Step Gated Embedding (MSGE) model for link prediction in KGs. During every step, gate mechanism is applied several times, which is used to decide what features are retained and what are excluded at the dimension level, corresponding to the multi-step reasoning procedure. For partial dataset, gate cells are repeated for several times iteratively for more finegrained information. All parameters are shared among the repeating cells, which allows our model to target the right features in multi-steps with high parameter efficiency. We do link prediction experiments on 6 public available benchmark datasets and achieve better performance compared to strong baselines on most datasets. We further analyse the influence of gate mechanism and the length of steps to demonstrate our motivation.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "Link prediction in knowledge graphs aims to predict correct object entities given a pair of subject entity and relation. In a knowledge graph, there are a huge amount of entities and relations, which inspires previous work to transform the prediction task as a scoring and ranking task. Given a known pair of subject entity and relation (s, r), a model needs to design a scoring function for a triple (s, r, o), where o belongs to all entities in a knowledge graph. Then model ranks all these triples in order to find the position of the valid one. The goal of a model is to rank all valid triples before the false ones.", "cite_spans": [], "ref_spans": [], "section": "Link Prediction in Knowledge Graphs"}, {"text": "Knowledge graph embedding models aim to represent entities and relations in knowledge graphs with low-dimensional vectors (e s , e r , e t ). TransE [4] is a typical distance-based model with constraint formula e s + e r \u2212 e t \u2248 0. Many other models extend TransE by projecting subject and object entities into relationspecific vector space, such as TransH [5] , TransR [6] and TransD [18] . TorusE [7] and RotatE [8] are also extensions of distance-based models. Instead of measuring distance among entities, bilinear models such as RESCAL [9] , DistMult [10] and ComplEx [11] are proposed with multiplication operations to score a triplet. Tensor decomposition methods such as SimplE [12] , CP-N3 [19] and TuckER [13] can also be seen as bilinear models with extra constraints. Apart from above shallow models, several deeper non-linear models have been proposed to further capture more underlying features. For example, (R-GCNs) [15] applies a specific convolution operator to model locality information in accordance to the topology of knowledge graphs. ConvE [14] first applies 2-D convolution into knowledge graph embedding and achieves competitive performance.", "cite_spans": [{"start": 149, "end": 152, "text": "[4]", "ref_id": "BIBREF4"}, {"start": 357, "end": 360, "text": "[5]", "ref_id": "BIBREF5"}, {"start": 370, "end": 373, "text": "[6]", "ref_id": "BIBREF6"}, {"start": 385, "end": 389, "text": "[18]", "ref_id": "BIBREF18"}, {"start": 399, "end": 402, "text": "[7]", "ref_id": "BIBREF7"}, {"start": 414, "end": 417, "text": "[8]", "ref_id": "BIBREF8"}, {"start": 541, "end": 544, "text": "[9]", "ref_id": "BIBREF9"}, {"start": 556, "end": 560, "text": "[10]", "ref_id": "BIBREF10"}, {"start": 573, "end": 577, "text": "[11]", "ref_id": "BIBREF11"}, {"start": 686, "end": 690, "text": "[12]", "ref_id": "BIBREF12"}, {"start": 699, "end": 703, "text": "[19]", "ref_id": "BIBREF19"}, {"start": 715, "end": 719, "text": "[13]", "ref_id": "BIBREF13"}, {"start": 932, "end": 936, "text": "[15]", "ref_id": "BIBREF15"}, {"start": 1064, "end": 1068, "text": "[14]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Knowledge Graph Embedding"}, {"text": "The main idea of our model is to control information flow in a multi-step way. To our best knowledge, the most related work to ours is TransAt [20] which also mentioned the two-step reasoning nature of link prediction. However, in TransAt, the first step is categorizing entities with Kmeans and then it adopts a distance-based scoring function to measure the validity. This architecture is not an end-to-end structure which is not flexible. Besides, error propagation will happen due to the usage of Kmeans algorithm.", "cite_spans": [{"start": 143, "end": 147, "text": "[20]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "Knowledge Graph Embedding"}, {"text": "We denote a knowledge graph as G = {(s, r, o)} \u2286 E \u00d7 R \u00d7 E , where E and R are the sets of entities, relations respectively. The number of entities in G is n e , the number of relations in G is n r and we allocate the same dimension d to entities and relations for simplicity. E \u2208 R ne * d is the embedding matrix for The schematic diagram of our model with length of step 3. es and er represent embedding of subject entity and relation respectively. e i r means the query relation are fed into the i-th step to refine information.\u1ebds is the final output information, then matrix multiplication is operated between\u1ebds and embedding matrix of entities E. At last, logistic sigmoid function is applied to restrict the final score between 0 and 1.", "cite_spans": [], "ref_spans": [], "section": "Notations"}, {"text": "entities and R \u2208 R nr * d is the embedding matrix for relations. e s , e r and e o are used to represent the embedding of subject entity, relation and subject entity respectively. Besides, we denote a gate cell in our model as C.", "cite_spans": [], "ref_spans": [], "section": "Notations"}, {"text": "In order to obtain useful information, we need a specific module to extract needed information from subject entity with respect to the given relation, which can be regarded as a control of information flow guided by the relation. To model this process, we introduce gate mechanism, which is widely used in data mining and natural language processing models to guide the transmission of information, e.g. Long Short-Term Memory (LSTM) [21] and Gated Recurrent Unit (GRU) [22] . Here we adopt gating mechanism at dimension level to control information entailed in the embedding. To make the entity interact with relation specifically, we rewrite the gate cell in multi-steps with two gates as below:", "cite_spans": [{"start": 434, "end": 438, "text": "[21]", "ref_id": "BIBREF21"}, {"start": 470, "end": 474, "text": "[22]", "ref_id": "BIBREF22"}], "ref_spans": [], "section": "Multi-step Gate Mechanism"}, {"text": "Two gates z and r are called update gate and reset gate respectively for controlling the information flow. Reset gate is designed for generating a new e s or new information in another saying as follows:", "cite_spans": [], "ref_spans": [], "section": "Multi-step Gate Mechanism"}, {"text": "Update gate aims to decide how much the generated information are kept according to formula (3):\u1ebd Hardmard product is performed to control the information at a dimension level. The values of these two gates are generated by the interaction between subject entity and relation. \u03c3-Logistic sigmoid function is performed to project results between 0 and 1. Here 0 means totally excluded while 1 means totally kept, which is the core module to control the flow of information. We denote the gate cell as C.", "cite_spans": [], "ref_spans": [], "section": "Multi-step Gate Mechanism"}, {"text": "Besides, to verify the effectiveness of gate mechanism, we also list the formula of a cell that exclude gates as below for ablation study:", "cite_spans": [], "ref_spans": [], "section": "Multi-step Gate Mechanism"}, {"text": "With the gate cell containing several gating operations, the overall architecture in one gate cell is indeed a multi-step information controlling way.", "cite_spans": [], "ref_spans": [], "section": "Multi-step Gate Mechanism"}, {"text": "In fact, a single gate cell can generate useful information since the two gating operations already hold great power for information controlling. However, for a complex dataset, more fine and precise features are needed for prediction. The iterative multi-step architecture allows the model to refine the representations incrementally. During each step, a query is fed into the model to interact with given features from previous step to obtain relevant information for next step. As illustrated in Fig. 2 , to generate the sequence as the input for multi-step training, we first feed relation embedding into a fully connected layer:", "cite_spans": [], "ref_spans": [{"start": 499, "end": 505, "text": "Fig. 2", "ref_id": "FIGREF1"}], "section": "Iterative Multi-step Architecture"}, {"text": "We reshape the output as a sequence [e 0 r , e 1 r , ..., e k r ] = Reshape(e r ) which are named query relations. This projection aims to obtain query relations of different latent aspects such that we can utilize them to extract diverse information across multiple steps. Information of diversity can increase the robustness of a model, which further benefits the performance. Query relations are fed sequentially into the gate cell to interact with subject entity and generate information from coarse to fine. Parameters are shared across all steps so multi-step training are performed in an iterative way indeed.", "cite_spans": [], "ref_spans": [], "section": "Iterative Multi-step Architecture"}, {"text": "Our score function for a given triple can be summarized as:", "cite_spans": [], "ref_spans": [], "section": "Iterative Multi-step Architecture"}, {"text": "where C k means repeating gate cell for k steps and during each step only the corresponding e i r is fed to interact with output information from last step. See Fig. 2 for better understanding. After we extract the final information, it is interacted with object entity with a dot product operation to produce final score.", "cite_spans": [], "ref_spans": [{"start": 161, "end": 167, "text": "Fig. 2", "ref_id": "FIGREF1"}], "section": "Iterative Multi-step Architecture"}, {"text": "In previous RNN-like models, a cell is repeated several times to produce information of an input sequence, where the repeating times are decided by the length of the input sequence. Differently, we have two inputs e s and e r with totally different properties, which are embeddings of subject entity and relation respectively, which should not be seen as a sequence as usual. As a result, a gate cell is used for capturing interactive information among entities and relations iteratively in our model, rather than extracting information of just one input sequence. See Fig. 3 for differences more clearly.", "cite_spans": [], "ref_spans": [{"start": 569, "end": 575, "text": "Fig. 3", "ref_id": "FIGREF2"}], "section": "Differences with RNN-like Model."}, {"text": "Training. At last, matrix multiplication is applied between the final output information and embedding matrix E, which can be called 1-N scoring [14] to score all triples in one time for efficiency and better performance. We also add reciprocal triple for every instance in the dataset which means for a given (s, r, t), we add a reverse triple (t, r \u22121 , s) as the previous work. We use binary crossentropy loss as our loss function:", "cite_spans": [{"start": 145, "end": 149, "text": "[14]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Differences with RNN-like Model."}, {"text": "We add batch normalization to regularise our model and dropout is also used after layers. For optimization, we use Adam for a stable and fast training process. Embedding matrices are initialized with xavier normalization. Label smoothing [23] is also used to lessen overfitting.", "cite_spans": [{"start": 238, "end": 242, "text": "[23]", "ref_id": "BIBREF23"}], "ref_spans": [], "section": "Differences with RNN-like Model."}, {"text": "In this section we first introduce the benchmark datasets used in this paper, then we report the empirical results to demonstrate the effectiveness of our model. Analyses and ablation study are further reported to strengthen our motivation. Language System) are biomedical concepts such as disease and antibiotic. \u2022 Kinship [25] contains kinship relationships among members of the Alyawarra tribe from Central Australia.", "cite_spans": [{"start": 324, "end": 328, "text": "[25]", "ref_id": "BIBREF25"}], "ref_spans": [], "section": "Experiments"}, {"text": "The details of these datasets are reported in Table 1 .", "cite_spans": [], "ref_spans": [{"start": 46, "end": 53, "text": "Table 1", "ref_id": "TABREF0"}], "section": "Experiments"}, {"text": "The evaluation metric we use in our paper includes Mean Reciprocal Rank(MRR) and Hit@K. MRR represents the reciprocal rank of the right triple, the higher the better of the model. Hit@K reflects the proportion of gold triples ranked in the top K. Here we select K among {1, 3, 10}, consistent with previous work. When Hit@K is higher, the model can be considered as better. All results are reported with 'Filter' setting which removes all gold triples that have existed in train, valid and test data during ranking. We report the test results according to the best performance of MRR on validation data as the same with previous works. Table 3 . Link prediction results on UMLS and Kinship. For different datasets, the best setting of the number of iterations varies a lot. For FB15k and UMLS the number at 1 provides the best performance, however for other datasets, iterative mechanism is helpful for boosting the performance. The best number of iterations is set to 5 for WN18, 3 for WN18RR, 8 for FB15k-237 and 2 for Kinship.", "cite_spans": [], "ref_spans": [{"start": 636, "end": 643, "text": "Table 3", "ref_id": null}], "section": "Experiment Setup"}, {"text": "We do link prediction task on 6 benchmark datasets, comparing with several classical baselines such as TransE [4] , DistMult [10] and some SOTA strong baselines such as ConvE [14] , RotatE [8] and TuckER [13] . For smaller datasets UMLS and Kinship, we also compare with some non-embedding methods such as NTP [26] and NeuralLP [27] which learn logic rules for predicting, as well as MINERVA [28] which utilizes reinforcement learning for reasoning over paths in knowledge graphs.", "cite_spans": [{"start": 110, "end": 113, "text": "[4]", "ref_id": "BIBREF4"}, {"start": 125, "end": 129, "text": "[10]", "ref_id": "BIBREF10"}, {"start": 175, "end": 179, "text": "[14]", "ref_id": "BIBREF14"}, {"start": 189, "end": 192, "text": "[8]", "ref_id": "BIBREF8"}, {"start": 204, "end": 208, "text": "[13]", "ref_id": "BIBREF13"}, {"start": 310, "end": 314, "text": "[26]", "ref_id": "BIBREF26"}, {"start": 328, "end": 332, "text": "[27]", "ref_id": "BIBREF27"}, {"start": 392, "end": 396, "text": "[28]", "ref_id": "BIBREF28"}], "ref_spans": [], "section": "Link Prediction Results"}, {"text": "The results are reported in Table 2 and Table 3 . Overall, from the results we can conclude that our model achieves comparable or better performance than SOTA models on datasets. Even with datasets without inverse relations such as WN18RR, FB15k-237 which are more difficult datasets, our model can still achieve comparable performance.", "cite_spans": [], "ref_spans": [{"start": 28, "end": 47, "text": "Table 2 and Table 3", "ref_id": "TABREF1"}], "section": "Link Prediction Results"}, {"text": "To study the effectiveness of the iterative multi-step architecture, we list the performance of different number of steps on FB15k-237 in Table 4 . The model settings are all exactly the same except for length of steps. From the results on FB15k-237 we can conclude that the multi-step mechanism indeed boosts the performance for a complex knowledge graph like FB15k-237, which verify our motivation that refining information for several steps can obtain more helpful information for some complex datasets.", "cite_spans": [], "ref_spans": [{"start": 138, "end": 145, "text": "Table 4", "ref_id": "TABREF2"}], "section": "Analysis on Number of Iterations"}, {"text": "We report the convergence process of TuckER and MSGE on FB15k-237 dataset and WN18RR dataset in Fig. 4 . We re-run TuckER with exactly the same settings ", "cite_spans": [], "ref_spans": [{"start": 96, "end": 102, "text": "Fig. 4", "ref_id": null}], "section": "Convergence Study"}, {"text": "In Table 5 , we report the parameter counts of ConvE, TuckER and our model for comparison. Our model can achieve better performance on most datasets with much less parameters, which means our model can be more easily migrated to large knowledge graphs. As for TuckER, which is the current SOTA method, the parameter count is mainly due to the core interaction tensor W , whose size is d e * d r * d e . As the grow of embedding dimension, this core tensor will lead to a large increasing on parameter size. However, note that our model is an iterative architecture therefore only a very few parameters are needed apart from the embedding, the complexity is O(n e d + n r d). For evaluating time efficiency, we re-run TuckER and our model on Telsa K40c. TuckER needs 29 s/28 s to run an epoch on FB15k-237/WN18RR respectively, MSGE needs 17 s/24 s respectively, which demonstrate the time efficiency due to few operations in our model.", "cite_spans": [], "ref_spans": [{"start": 3, "end": 10, "text": "Table 5", "ref_id": null}], "section": "Efficiency Analysis"}, {"text": "To further demonstrate our motivation that gate mechanism and multi-step reasoning are beneficial for extracting information. We do ablation study with the following settings:", "cite_spans": [], "ref_spans": [], "section": "Ablation Study"}, {"text": "\u2022 No gate: Remove the gates in our model to verify the necessity of controlling information flow. \u2022 Concat: Concatenate information extracted in every step together and feed them into a fully connected layer to obtain another kind of final information, which is used to verify that more useful information are produced by the procedure of multi-step. \u2022 Replicate: Replicate the relation to gain k same query relations for training. This is to prove that extracting diverse information from multi-view query relations is more helpful than using the same relation for k times.", "cite_spans": [], "ref_spans": [], "section": "Ablation Study"}, {"text": "The experiment results are reported in Table 6 . All results demonstrate our motivation that controlling information flow in a multi-step way is beneficial for link prediction task in knowledge graphs. Especially a gated cell is of much benefit for information extraction.", "cite_spans": [], "ref_spans": [{"start": 39, "end": 46, "text": "Table 6", "ref_id": null}], "section": "Ablation Study"}, {"text": "In this paper, we propose a multi-step gated model MSGE for link prediction task in knowledge graph completion. We utilize gate mechanism to control information flow generated by the interaction between subject entity and relation. Then we repeat gated module to refine information from coarse to fine. It has been proved from the empirical results that utilizing gated module for multiple steps is beneficial for extracting more useful information, which can further boost the performance on link prediction. We also do analysis from different views to demonstrate this conclusion. Note that, all information contained in embeddings are learned across the training procedure implicitly. In future work, we would like to aggregate more information for entities to enhance feature extraction, for example, from the neighbor nodes and relations.", "cite_spans": [], "ref_spans": [], "section": "Conclusion and Future Work"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Freebase: a collaboratively created graph database for structuring human knowledge", "authors": [{"first": "K", "middle": ["D"], "last": "Bollacker", "suffix": ""}, {"first": "C", "middle": [], "last": "Evans", "suffix": ""}, {"first": "P", "middle": [], "last": "Paritosh", "suffix": ""}, {"first": "T", "middle": [], "last": "Sturge", "suffix": ""}, {"first": "J", "middle": [], "last": "Taylor", "suffix": ""}], "year": 2008, "venue": "ACM SIGMOD", "volume": "", "issn": "", "pages": "1247--1250", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Yago3: A knowledge base from multilingual wikipedias", "authors": [{"first": "F", "middle": [], "last": "Mahdisoltani", "suffix": ""}, {"first": "J", "middle": [], "last": "Biega", "suffix": ""}, {"first": "F", "middle": ["M"], "last": "Suchanek", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "DBpedia: a nucleus for a web of open data", "authors": [{"first": "S", "middle": [], "last": "Auer", "suffix": ""}, {"first": "C", "middle": [], "last": "Bizer", "suffix": ""}, {"first": "G", "middle": [], "last": "Kobilarov", "suffix": ""}, {"first": "J", "middle": [], "last": "Lehmann", "suffix": ""}, {"first": "R", "middle": [], "last": "Cyganiak", "suffix": ""}, {"first": "Z", "middle": [], "last": "Ives", "suffix": ""}], "year": null, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Translating embeddings for modeling multi-relational data", "authors": [{"first": "A", "middle": [], "last": "Bordes", "suffix": ""}, {"first": "N", "middle": [], "last": "Usunier", "suffix": ""}, {"first": "A", "middle": [], "last": "Garcia-Duran", "suffix": ""}, {"first": "J", "middle": [], "last": "Weston", "suffix": ""}, {"first": "O", "middle": [], "last": "Yakhnenko", "suffix": ""}], "year": 2013, "venue": "NIPS", "volume": "", "issn": "", "pages": "2787--2795", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Knowledge graph embedding by translating on hyperplanes", "authors": [{"first": "Z", "middle": [], "last": "Wang", "suffix": ""}, {"first": "J", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "J", "middle": [], "last": "Feng", "suffix": ""}, {"first": "Z", "middle": [], "last": "Chen", "suffix": ""}], "year": 2014, "venue": "AAAI", "volume": "14", "issn": "", "pages": "1112--1119", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Learning entity and relation embeddings for knowledge graph completion", "authors": [{"first": "Y", "middle": [], "last": "Lin", "suffix": ""}, {"first": "Z", "middle": [], "last": "Liu", "suffix": ""}, {"first": "M", "middle": [], "last": "Sun", "suffix": ""}, {"first": "Y", "middle": [], "last": "Liu", "suffix": ""}, {"first": "X", "middle": [], "last": "Zhu", "suffix": ""}], "year": 2015, "venue": "AAAI", "volume": "15", "issn": "", "pages": "2181--2187", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Knowledge graph embedding on a lie group", "authors": [{"first": "T", "middle": [], "last": "Ebisu", "suffix": ""}, {"first": "R", "middle": [], "last": "Ichise", "suffix": ""}], "year": 2018, "venue": "AAAI, Toruse", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "Rotate: knowledge graph embedding by relational rotation in complex space", "authors": [{"first": "Z", "middle": [], "last": "Sun", "suffix": ""}, {"first": "Z", "middle": ["H"], "last": "Deng", "suffix": ""}, {"first": "J", "middle": ["Y"], "last": "Nie", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "A three-way model for collective learning on multi-relational data", "authors": [{"first": "M", "middle": [], "last": "Nickel", "suffix": ""}, {"first": "V", "middle": [], "last": "Tresp", "suffix": ""}, {"first": "H", "middle": ["P"], "last": "Kriegel", "suffix": ""}], "year": 2011, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Embedding entities and relations for learning and inference in knowledge bases", "authors": [{"first": "B", "middle": [], "last": "Yang", "suffix": ""}, {"first": "W", "middle": [], "last": "Yih", "suffix": ""}, {"first": "X", "middle": [], "last": "He", "suffix": ""}, {"first": "J", "middle": [], "last": "Gao", "suffix": ""}, {"first": "L", "middle": [], "last": "Deng", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Complex embeddings for simple link prediction", "authors": [{"first": "T", "middle": [], "last": "Trouillon", "suffix": ""}, {"first": "J", "middle": [], "last": "Welbl", "suffix": ""}, {"first": "S", "middle": [], "last": "Riedel", "suffix": ""}, {"first": "E", "middle": [], "last": "Gaussier", "suffix": ""}, {"first": "G", "middle": [], "last": "Bouchard", "suffix": ""}], "year": 2016, "venue": "ICML", "volume": "", "issn": "", "pages": "2071--2080", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "Simple embedding for link prediction in knowledge graphs", "authors": [{"first": "S", "middle": ["M"], "last": "Kazemi", "suffix": ""}, {"first": "D", "middle": [], "last": "Poole", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Tensor factorization for knowledge graph completion", "authors": [{"first": "I", "middle": [], "last": "Bala\u017eevi\u0107", "suffix": ""}, {"first": "C", "middle": [], "last": "Allen", "suffix": ""}, {"first": "T", "middle": [], "last": "Hospedales", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "Convolutional 2D knowledge graph embeddings", "authors": [{"first": "T", "middle": [], "last": "Dettmers", "suffix": ""}, {"first": "P", "middle": [], "last": "Minervini", "suffix": ""}, {"first": "P", "middle": [], "last": "Stenetorp", "suffix": ""}, {"first": "S", "middle": [], "last": "Riedel", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Modeling relational data with graph convolutional networks", "authors": [{"first": "M", "middle": [], "last": "Schlichtkrull", "suffix": ""}, {"first": "T", "middle": ["N"], "last": "Bloem", "suffix": ""}, {"first": "P", "middle": [], "last": "Kipf Nd", "suffix": ""}, {"first": "", "middle": [], "last": "Van Den", "suffix": ""}, {"first": "R", "middle": [], "last": "Berg", "suffix": ""}, {"first": "I", "middle": [], "last": "Titov", "suffix": ""}, {"first": "M", "middle": [], "last": "Welling", "suffix": ""}], "year": 2018, "venue": "European Semantic Web Conference", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Reasonet: learning to stop reading in machine comprehension", "authors": [{"first": "Y", "middle": [], "last": "Shen", "suffix": ""}, {"first": "P", "middle": ["S"], "last": "Huang", "suffix": ""}, {"first": "J", "middle": [], "last": "Gao", "suffix": ""}], "year": 2017, "venue": "ACM SIGKDD", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Gated-attention readers for text comprehension", "authors": [{"first": "B", "middle": [], "last": "Dhingra", "suffix": ""}, {"first": "H", "middle": [], "last": "Liu", "suffix": ""}, {"first": "Z", "middle": [], "last": "Yang", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Knowledge graph embedding via dynamic mapping matrix", "authors": [{"first": "G", "middle": [], "last": "Ji", "suffix": ""}, {"first": "S", "middle": [], "last": "He", "suffix": ""}, {"first": "L", "middle": [], "last": "Xu", "suffix": ""}, {"first": "K", "middle": [], "last": "Liu", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Canonicaltensor decomposition for knowledge base completion", "authors": [{"first": "T", "middle": [], "last": "Lacroix", "suffix": ""}, {"first": "N", "middle": [], "last": "Usunier", "suffix": ""}, {"first": "G", "middle": [], "last": "Obozinski", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Translating embeddings for knowledge graph completion with relation attention mechanism", "authors": [{"first": "W", "middle": [], "last": "Qian", "suffix": ""}, {"first": "C", "middle": [], "last": "Fu", "suffix": ""}, {"first": "Y", "middle": [], "last": "Zhu", "suffix": ""}, {"first": "D", "middle": [], "last": "Cai", "suffix": ""}, {"first": "X", "middle": [], "last": "He", "suffix": ""}], "year": 2018, "venue": "European Semantic Web Conference", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "Long short-term memory", "authors": [{"first": "S", "middle": [], "last": "Hochreiter", "suffix": ""}, {"first": "J", "middle": [], "last": "Schmidhuber", "suffix": ""}], "year": 1997, "venue": "Neural Comput", "volume": "9", "issn": "", "pages": "1735--1780", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation", "authors": [{"first": "K", "middle": [], "last": "Cho", "suffix": ""}], "year": 2014, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "Rethinking the inception architecture for computer vision", "authors": [{"first": "C", "middle": [], "last": "Szegedy", "suffix": ""}, {"first": "V", "middle": [], "last": "Vanhoucke", "suffix": ""}, {"first": "S", "middle": [], "last": "Ioffe", "suffix": ""}, {"first": "I", "middle": [], "last": "Shlens", "suffix": ""}, {"first": "Z", "middle": [], "last": "Wojna", "suffix": ""}], "year": 2016, "venue": "Proceedings of IEEE CVPR", "volume": "", "issn": "", "pages": "2818--2826", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "Observed versus latent features for knowledge base and text inference", "authors": [{"first": "K", "middle": [], "last": "Toutanova", "suffix": ""}, {"first": "D", "middle": [], "last": "Chen", "suffix": ""}], "year": 2015, "venue": "Proceedings of the 3rd Workshop on Continuous Vector Space Models and their Compositionality", "volume": "", "issn": "", "pages": "57--66", "other_ids": {}}, "BIBREF25": {"ref_id": "b25", "title": "Statistical predicate invention", "authors": [{"first": "S", "middle": [], "last": "Kok", "suffix": ""}, {"first": "P", "middle": [], "last": "Domingos", "suffix": ""}], "year": 2007, "venue": "ICML", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF26": {"ref_id": "b26", "title": "End-to-end differentiable proving", "authors": [{"first": "T", "middle": [], "last": "Rocktaschel", "suffix": ""}, {"first": "S", "middle": [], "last": "Riedel", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF27": {"ref_id": "b27", "title": "Differentiable learning of logical rules for knowledge base reasoning", "authors": [{"first": "F", "middle": [], "last": "Yang", "suffix": ""}, {"first": "Z", "middle": [], "last": "Yang", "suffix": ""}, {"first": "W", "middle": [], "last": "Cohen", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF28": {"ref_id": "b28", "title": "Go for a walk and arrive at the answer: reasoning over paths in knowledge bases using reinforcement learning", "authors": [{"first": "R", "middle": [], "last": "Das", "suffix": ""}], "year": 2018, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Example of link prediction in knowledge graph. An entity has much latent information entailed in its embedding, but with a given relation, only part of them are helpful for predicting.", "latex": null, "type": "figure"}, "FIGREF1": {"text": "Fig. 2. The schematic diagram of our model with length of step 3. es and er represent embedding of subject entity and relation respectively. e i r means the query relation are fed into the i-th step to refine information.\u1ebds is the final output information, then matrix multiplication is operated between\u1ebds and embedding matrix of entities E. At last, logistic sigmoid function is applied to restrict the final score between 0 and 1.", "latex": null, "type": "figure"}, "FIGREF2": {"text": "The differences between traditional RNN-like model and our model. In RNNlike model (left), h0 is initialized randomly, x represents a sequence. In our model(right), h0 comes from subject entity and x is transformed from relation x0.", "latex": null, "type": "figure"}, "FIGREF3": {"text": "0.547 0.806 0.894 0.357 0.545", "latex": null, "type": "figure"}, "FIGREF4": {"text": "0.993 0.973 0.914 0.865 0.988 0.941 0.785", "latex": null, "type": "figure"}, "TABREF0": {"text": "Statistics of datasets. WN18RR[4,14] is a subset of WN18 which removes inverse relations. Inverse relation pairs are relations such as (hyponym, hypernym). Inverse relations may cause severe test leakage: a lot of test triples can be obtained from train data simply by inverting them. That means a simple rule-based model can easilyfigure out the right o given a (s, r), only if it has seen (o, r , s) in the train data and it knows r is the reverse of r.\u2022 FB15k[4] is extracted from Freebase describing mostly relations about movies, actors, awards, sports and so on. \u2022 FB15k-237[24] is a subset of FB15k which removes inverse relations and the triples involved in train, valid and test data. \u2022 UMLS[25] comes from biomedicine. Entities in UMLS (Unified Medical", "latex": null, "type": "table"}, "TABREF1": {"text": "Link prediction results on WN18, WN18RR, FB15k and FB15k-237. \u2020 denotes the results are taken from[14]; -denotes the results are not provided; The results of RotatE[8] are reported without self-adversial negative sampling, this sampling trick is irrelevant with the model itself; Other results are all taken from the original paper. Best results are in bold. The second best are underlined.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Model </td><td>WN18 </td><td>WN18RR </td><td>FB15k </td><td>FB15k-237\n</td></tr><tr><td>MRR </td><td>Hit@10 </td><td>MRR </td><td>Hit@10 </td><td>MRR </td><td>Hit@10 </td><td>MRR </td><td>Hit@10\n</td></tr><tr><td>TransE (2013) </td><td>- </td><td>0.892 </td><td>- </td><td>- </td><td>- </td><td>0.471 </td><td>- </td><td>-\n</td></tr><tr><td>DistMult\u2020 (2015) </td><td>0.822 </td><td>0.936 </td><td>0.430 </td><td>0.490 </td><td>0.654 </td><td>0.824 </td><td>0.241 </td><td>0.419\n</td></tr><tr><td>ComplEx\u2020 (2016) </td><td>0.941 </td><td>0.947 </td><td>0.440 </td><td>0.510 </td><td>0.692 </td><td>0.840 </td><td>0.247 </td><td>0.428\n</td></tr><tr><td>R-GCN (2017) </td><td>0.814 </td><td>0.964 </td><td>- </td><td>- </td><td>0.696 </td><td>0.842 </td><td>0.248 </td><td>0.417\n</td></tr><tr><td>TransAt (2018) </td><td>- </td><td>0.951 </td><td>- </td><td>- </td><td>- </td><td>0.782 </td><td>- </td><td>-\n</td></tr><tr><td>MINERVA (2018) </td><td>- </td><td>- </td><td>0.448 </td><td>0.513 </td><td>- </td><td>- </td><td>0.293 </td><td>0.456\n</td></tr><tr><td>ConvE (2018) </td><td>0.943 </td><td>0.956 </td><td>0.430 </td><td>0.520 </td><td>0.657 </td><td>0.831 </td><td>0.325 </td><td>0.501\n</td></tr><tr><td>TorusE (2018) </td><td>0.947 </td><td>0.954 </td><td>- </td><td>- </td><td>0.733 </td><td>0.832 </td><td>- </td><td>-\n</td></tr><tr><td>RotatE (2019) </td><td>- </td><td>- </td><td>- </td><td>- </td><td>- </td><td>- </td><td>0.297 </td><td>0.480\n</td></tr><tr><td>SimplE (2018) </td><td>0.942 </td><td>0.947 </td><td>- </td><td>- </td><td>0.727 </td><td>0.838 </td><td>- </td><td>-\n</td></tr><tr><td>TuckER (2019) </td><td>0.953 </td><td>0.958 </td><td>0.470 </td><td>0.526 </td><td>0.795 </td><td>0.892 </td><td>0.358 </td><td>0.544\n</td></tr><tr><td>MSGE(Ours) </td><td>0.951 </td><td>0.961 </td><td>0.464 </td><td>0.547 </td><td>0.806 </td><td>0.894 </td><td>0.357 </td><td>0.545\n</td></tr></table></body></html>"}, "TABREF2": {"text": "Influence of number of iterations on FB15k-237.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Length </td><td>FB15k-237\n</td><td>\u00a0</td><td>\u00a0</td></tr><tr><td>MRR </td><td>Hit@10 </td><td>Hit@3 </td><td>Hit@1\n</td></tr><tr><td>1 </td><td>0.349 </td><td>0.536 </td><td>0.384 </td><td>0.255\n</td></tr><tr><td>3 </td><td>0.354 </td><td>0.539 </td><td>0.389 </td><td>0.261\n</td></tr><tr><td>5 </td><td>0.354 </td><td>0.541 </td><td>0.391 </td><td>0.261\n</td></tr><tr><td>8 </td><td>0.357 </td><td>0.544 </td><td>0.392 </td><td>0.264\n</td></tr><tr><td>10 </td><td>0.355 </td><td>0.540 </td><td>0.391 </td><td>0.263\n</td></tr></table></body></html>"}, "TABREF3": {"text": "Parameter counts comparison. Ablation study on claimed in the paper. All the results stand for the performance on valid dataset. For MSGE, we also report the result of one step for comparison. It is obvious that MSGE can converge rapidly compared to TuckER with nearly the same or better final performance. From the analysis of model architecture, TuckER needs an extra core tensor W to capture interactive information. While in MSGE, entities and relations are directly interacted with each other through a gate cell. On dataset WN18RR, we can find that the convergence process of TuckER is not as steady as MSGE, which demonstrates the efficiency of our model.", "latex": null, "type": "table"}, "TABREF4": {"text": "Table 1. Statistics of datasets.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Dataset </td><td>#Entity </td><td>#Rel </td><td>#Train </td><td>#Valid #</td><td>Test\n</td></tr><tr><td>WN18 </td><td>40943 </td><td>18 </td><td>141442 </td><td>5000 </td><td>5000\n</td></tr><tr><td>WN18RR </td><td>40943 </td><td>11 </td><td>86835 </td><td>3034 </td><td>3134\n</td></tr><tr><td>FB15k </td><td>14951 </td><td>1345 </td><td>483142 </td><td>50000 </td><td>59071\n</td></tr><tr><td>FB15k-237 </td><td>14541 </td><td>237 </td><td>212115 </td><td>17535 </td><td>20466\n</td></tr><tr><td>UMLS </td><td>135 </td><td>49 </td><td>5216 </td><td>652 </td><td>661\n</td></tr><tr><td>KINSHIP </td><td>104 </td><td>26 </td><td>8544 </td><td>1068 </td><td>1074\n</td></tr></table></body></html>"}, "TABREF5": {"text": "Table 3. Link prediction results on UMLS and Kinship.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Model </td><td>UMLS </td><td>\u00a0</td><td>\u00a0</td><td>Kinship\n</td><td>\u00a0</td><td>\u00a0</td></tr><tr><td>MRR </td><td>Hit@10 </td><td>Hit@3 </td><td>Hit@1 </td><td>MRR </td><td>Hit@10 </td><td>Hit@3 </td><td>Hit@1\n</td></tr><tr><td>ComplEx  (2016) </td><td>0.894 </td><td>0.995 </td><td>0.962 </td><td>0.824 </td><td>0.838 </td><td>0.980 </td><td>0.910 </td><td>0.754\n</td></tr><tr><td>ConvE  (2018) </td><td>0.933 </td><td>0.992 </td><td>0.964 </td><td>0.894 </td><td>0.797 </td><td>0.974 </td><td>0.886 </td><td>0.697\n</td></tr><tr><td>NTP (2017) </td><td>0.872 </td><td>0.970 </td><td>0.906 </td><td>0.817 </td><td>0.612 </td><td>0.777 </td><td>0.700 </td><td>0.500\n</td></tr><tr><td>NeuralLP (2017) </td><td>0.778 </td><td>0.962 </td><td>0.869 </td><td>0.643 </td><td>0.619 </td><td>0.912 </td><td>0.707 </td><td>0.475\n</td></tr><tr><td>MINERVA (2018) </td><td>0.825 </td><td>0.968 </td><td>0.900 </td><td>0.728 </td><td>0.720 </td><td>0.924 </td><td>0.812 </td><td>0.605\n</td></tr><tr><td>MSGE(Ours) </td><td>0.946 </td><td>0.993 </td><td>0.973 </td><td>0.914 </td><td>0.865 </td><td>0.988 </td><td>0.941 </td><td>0.785\n</td></tr></table></body></html>"}, "TABREF6": {"text": "Table 5. Parameter counts comparison.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Dataset </td><td>ConvE </td><td>TuckER </td><td>MSGE\n</td></tr><tr><td>WN18 </td><td>10.32M </td><td>9.39M </td><td>8.48M\n</td></tr><tr><td>WN18RR </td><td>10.31M </td><td>9.39M </td><td>8.84M\n</td></tr><tr><td>FB15k </td><td>6.16M </td><td>11.53M </td><td>3.81M\n</td></tr><tr><td>FB15k-237 </td><td>5.19M </td><td>11.00M </td><td>3.57M\n</td></tr></table></body></html>"}, "TABREF7": {"text": "Table 6. Ablation study on FB15k-237.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Model </td><td>FB15k-237\n</td><td>\u00a0</td><td>\u00a0</td></tr><tr><td>MRR </td><td>Hit@10 </td><td>Hit@3 </td><td>Hit@1\n</td></tr><tr><td>MSGE </td><td>0.357 </td><td>0.544 </td><td>0.392 </td><td>0.264\n</td></tr><tr><td>No gate </td><td>0.301 </td><td>0.459 </td><td>0.327 </td><td>0.222\n</td></tr><tr><td>Concat </td><td>0.349 </td><td>0.534 </td><td>0.384 </td><td>0.256\n</td></tr><tr><td>Replicate </td><td>0.351 </td><td>0.537 </td><td>0.388 </td><td>0.257\n</td></tr></table></body></html>"}}, "back_matter": []}