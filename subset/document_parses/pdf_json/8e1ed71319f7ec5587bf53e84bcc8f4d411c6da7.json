{"paper_id": "8e1ed71319f7ec5587bf53e84bcc8f4d411c6da7", "metadata": {"title": "A Hybrid Recommendation for Music Based on Reinforcement Learning", "authors": [{"first": "Yu", "middle": [], "last": "Wang", "suffix": "", "affiliation": {"laboratory": "", "institution": "Peking University", "location": {"settlement": "Beijing", "country": "China"}}, "email": "wangyu18@pku.edu.cn"}]}, "abstract": [{"text": "The key to personalized recommendation system is the prediction of users' preferences. However, almost all existing music recommendation approaches only learn listeners' preferences based on their historical records or explicit feedback, without considering the simulation of interaction process which can capture the minor changes of listeners' preferences sensitively. In this paper, we propose a personalized hybrid recommendation algorithm for music based on reinforcement learning (PHRR) to recommend song sequences that match listeners' preferences better. We firstly use weighted matrix factorization (WMF) and convolutional neural network (CNN) to learn and extract the song feature vectors. In order to capture the changes of listeners' preferences sensitively, we innovatively enhance simulating interaction process of listeners and update the model continuously based on their preferences both for songs and song transitions. The extensive experiments on real-world datasets validate the effectiveness of the proposed PHRR on song sequence recommendation compared with the state-of-the-art recommendation approaches.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Recommendation systems have become indispensable for our daily life to help users navigate through the abundant data in the Internet. As the rapid expansion of the scale of music database, traditional music recommendation technology is difficult to help listeners to choose songs from such huge digital music resources. How to manage and recommend music effectively in the massive music library has become the main task of music recommendation system [1] .", "cite_spans": [{"start": 451, "end": 454, "text": "[1]", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "Introduction"}, {"text": "The mainstream recommendation algorithms can be classified as content-based [2, 3] , collaborative filtering [5, 25] , knowledge-based [6] and hybrid ones [7] . The collaborative filtering methods recommend items to users by exploiting the taste of other similar users. However, the cold-start and data sparse problem is very common in collaborative filtering. In knowledge-based approaches, users directly express their requirements and the recommendation system tries to retrieve items that are analogous to the users' specified requirements. The content-based recommendation approaches are to find items similar to the ones that the users once liked, and the content information or expert label of items is also needed, but it does not require a large number of user-item rating records [4] . In order to improve performance, above methods can be combined into a hybrid recommendation system. The hybrid approach we use is feature augmentation, which takes the feature output from one method as input to another.", "cite_spans": [{"start": 76, "end": 79, "text": "[2,", "ref_id": "BIBREF1"}, {"start": 80, "end": 82, "text": "3]", "ref_id": "BIBREF2"}, {"start": 109, "end": 112, "text": "[5,", "ref_id": "BIBREF4"}, {"start": 113, "end": 116, "text": "25]", "ref_id": "BIBREF24"}, {"start": 135, "end": 138, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 155, "end": 158, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 790, "end": 793, "text": "[4]", "ref_id": "BIBREF3"}], "ref_spans": [], "section": "Introduction"}, {"text": "Nowadays, reinforcement learning [8] becomes one of the most important research hotspots. It mainly focuses on how to learn interactively, obtain feedback information in the action-evaluation environment, and then improve the choices of actions to adapt to the environment. In this paper, we propose a personalized hybrid recommendation algorithm for music based on reinforcement learning (PHRR). Based on the idea of hybrid recommendation, we utilize WMF-CNN model which uses content and collaborative filtering to learn and predict music features, and simulate listeners' decision-making behaviors by model-based reinforcement learning process. What's more, we establish a novel personalized music recommendation model to recommend song sequences which match listeners' preferences better. Our contributions are as follows:", "cite_spans": [{"start": 33, "end": 36, "text": "[8]", "ref_id": "BIBREF7"}], "ref_spans": [], "section": "Introduction"}, {"text": "-Our proposed PHRR algorithm combines the method of extracting music features based on WMF-CNN process with reinforcement learning model to recommend personalized song sequences to listeners. -We make innovative improvements to the method of learning listeners' decisionmaking behaviors. And we promote the accuracy of model-learning by enhancing the simulation of interaction process in the reinforcement learning model. -We conduct experiments in the real-world datasets. The experimental results show that the proposed PHRR algorithm has a better recommendation performance than other comparison algorithms in the experiments.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "The rest of this paper is organized as follows. Section 2 reviews the related work. Section 3 presents details about the proposed PHRR algorithm. Section 4 introduces experimental results and analyses. In Sect. 5, we conclude our work.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "The recommendation system for music service differs from that for other service (such as movies or e-books), because the implicit user preferences on music are more difficult to track than the explicit rating of items in other applications. Besides, users are more likely to listen a song several times. In recent years, music recommendations have been widely studied in both academia and industry. Since music contains an appreciable amount of textual and acoustic information, several recommendation algorithms model users' preferences based on extracted textual and acoustic features [24] .", "cite_spans": [{"start": 587, "end": 591, "text": "[24]", "ref_id": "BIBREF23"}], "ref_spans": [], "section": "Related Work"}, {"text": "What's more, the advanced recommendation approaches start to apply reinforcement learning [8] to the recommendation process, and consider the recommendation task as a decision problem to provide more accurate recommendations. Wang et al. [11] proposed a reinforcement learning framework based on Bayesian model to balance the exploration and exploitation of users' preferences for recommendation. To learn user preferences, it uses a Bayesian model that accounts for both audio content and the novelty of recommendations. Chen et al. [12] combined interest forgetting mechanism with Markov models because people's interest in earlier items will be lost from time to time. They believed that discrete random state was represented by random variables in Markov chain. Zhang et al. [15] took the social network and Markov chain into account, and proposed a PRCM recommendation algorithm based on collaborative filtering. Taking the influence of song transitions into account, Liebman et al. [13] added the listeners' preferences for the transitions between songs to the recommendation process and proposed a reinforcement learning model named DJ-MC. Hu et al. [14] integrated users' feedback into the recommendation model and proposed a Q-Learning based window list recommendation model called RLWRec based on greedy strategy, which traded off between the precision and recall of recommendation. It is a model-free reinforcement learning framework, and it has the data-inefficient problem without model. Different from the previous research, we focus more on simulating interaction process of listeners based on their implicit preferences for songs and song transitions. Our main aim is to capture the changes of listeners' preferences sensitively in the recommendation process and promote the recommendation quality of music.", "cite_spans": [{"start": 90, "end": 93, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 238, "end": 242, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 534, "end": 538, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 779, "end": 783, "text": "[15]", "ref_id": "BIBREF14"}, {"start": 988, "end": 992, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 1157, "end": 1161, "text": "[14]", "ref_id": "BIBREF13"}], "ref_spans": [], "section": "Related Work"}, {"text": "As the song transition dataset is not large enough to train a good model, we can do \"transfer learning\", i.e. the WMF-CNN process, from the larger Million Song Dataset [22] . To extract the music features, we use WMF [9, 17] to compute the feature vectors of some songs, which is an improved matrix factorization approach for implicit feedback datasets. The feature vectors calculated by WMF are used to train the CNN model [18] to learn the feature vectors of all other songs. Each song's feature vector only needs to be trained once, so it doesn't take a long time to train. Suppose that the play count for listener u listening to song i is r ui , for each listener-song pair, we define a preference variable p ui and a confidence variable c ui (\u03b1 and are hyper-parameters, and are set as 2.0 and 1e-6 respectively):", "cite_spans": [{"start": 168, "end": 172, "text": "[22]", "ref_id": "BIBREF21"}, {"start": 217, "end": 220, "text": "[9,", "ref_id": "BIBREF8"}, {"start": 221, "end": 224, "text": "17]", "ref_id": "BIBREF16"}, {"start": 424, "end": 428, "text": "[18]", "ref_id": "BIBREF17"}], "ref_spans": [], "section": "Music Feature Extraction"}, {"text": "The preference variable p ui indicates whether listener u has ever listened to song i or not. if it is 1, we assume that listener u may like song i. The confidence variable c ui measures the extent to which listener u likes song i. The song with a higher play count is more likely to be preferred. The objective function of WMF contains a confidence weighted mean squared error term and an L2-regularization term, given by Eq. 3.", "cite_spans": [], "ref_spans": [], "section": "Music Feature Extraction"}, {"text": "where \u03bb is the regularization parameter set as 1e-5, x u is the latent feature vector of listener u and y i is the latent feature vector of song i.", "cite_spans": [], "ref_spans": [], "section": "Music Feature Extraction"}, {"text": "In this paper, we use ResNet [26] as our CNN model, the input of the CNN model is mel-frequency cepstral coefficient spectrum (MFCC) [19] of songs, including 500 frames in the time dimension and 12 frequency-bins in the frequency dimension. The output vectors are the 20-dimensional predicted latent feature vector of songs. The objective function of CNN is to minimize the mean squared error (MSE) and weighted predict error (WPE), given by Eq. 4 (\u03b8 representing the model parameters).", "cite_spans": [{"start": 29, "end": 33, "text": "[26]", "ref_id": "BIBREF25"}, {"start": 133, "end": 137, "text": "[19]", "ref_id": "BIBREF18"}], "ref_spans": [], "section": "Music Feature Extraction"}, {"text": "where y i is the feature vector of song i calculated by WMF, and y i is the predicted vector of song i by the CNN model.", "cite_spans": [], "ref_spans": [], "section": "Music Feature Extraction"}, {"text": "We model the reinforcement learning based music recommendation problem as an improved Markov decision process (MDP) [10] , which is denoted as a five-tuple (S, A, P, R, T ). And the framework is shown in Fig. 1 . Given the song set M = {a 1 , a 2 , . . . , a n }, the length of song sequences to recommend is defined as k and the mathematical description of the MDP model for music recommendation is as follows. State set S. The state set denoted as S = {(a 1 , a 2 , . . . , a i )|1 \u2264 i \u2264 k} is the set of recommended song sequences including all intermediate states. A state s \u2208 S is a song sequence in the recommendation process.", "cite_spans": [{"start": 116, "end": 120, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [{"start": 204, "end": 210, "text": "Fig. 1", "ref_id": "FIGREF0"}], "section": "Problem Description"}, {"text": "Action set A. The action set A is the actions of listening to songs in M, denoted as A = {listening to song a i |a i \u2208 M}. An action a i \u2208 A means listening to song a i .", "cite_spans": [], "ref_spans": [], "section": "Problem Description"}, {"text": "State transition probability function P. We use abbreviated symbols P s, a, s = 1 to indicate that when we take action a in state s, the probability of transition to s is 1, and 0 otherwise, i.e. P ((a 1 , a 2 , . . . , a i ), a, (a 1 , a 2 , . . . , a i , a) ", "cite_spans": [], "ref_spans": [{"start": 198, "end": 259, "text": "((a 1 , a 2 , . . . , a i ), a, (a 1 , a 2 , . . . , a i , a)", "ref_id": "FIGREF0"}], "section": "Problem Description"}, {"text": "Reward function R. The reward function R(s, a) obtains the reward value when listener takes action a in state s, and each listener has a unique reward function. One of our key problems is how to calculate the reward function of new listeners effectively.", "cite_spans": [], "ref_spans": [], "section": "Problem Description"}, {"text": "Final state T. The final state denoted as T = {(a 1 , a 2 , . . . , a k )} is the final recommended song sequence of length k.", "cite_spans": [], "ref_spans": [], "section": "Problem Description"}, {"text": "Solving the MDP problem means to find a strategy \u03c0 : S \u2192 A, so that we can get an action \u03c0 (s) for a given state s. With the optimal strategy \u03c0 * , the highest expected total reward can be generated. However, the listener's reward function is unknown, so the basic challenge of song sequence recommendation is how to model R effectively.", "cite_spans": [], "ref_spans": [], "section": "Problem Description"}, {"text": "Towards our recommendation problem, the probability function P is already known, so the only unknown element is the reward function R. Most literatures about music recommendation only consider the listeners' preferences for songs, without considering their preferences for song transitions. The reward function R should consider the listeners' preferences both for songs and song transitions, as shown in Eq. 5.", "cite_spans": [], "ref_spans": [], "section": "Listener Reward Function Model"}, {"text": "where R s : A \u2192 R is the listener's preference reward for song a, and R t : S \u00d7 A \u2192 R is the listener's preference reward for the song transition from song sequence s to song a. ", "cite_spans": [], "ref_spans": [], "section": "Listener Reward Function Model"}, {"text": "Listener Reward for Song Transitions. When the listener listens to song a j after song a i , we note the reward function as r t a i , a j . The song transition reward R t : S \u00d7 A \u2192 R is based on a certain song sequence s and the next-song a to listen, as shown below.", "cite_spans": [], "ref_spans": [], "section": "Listener Reward Function Model"}, {"text": "In Eq. 7, the probability of the i-th song having influence on transition reward is 1/i. And its influence is attenuated over time, so the i-th song's influence is reduced to 1/i times the original. As a result, the coefficient 1/i 2 is the product of these two 1/i [13] .", "cite_spans": [{"start": 266, "end": 270, "text": "[13]", "ref_id": "BIBREF12"}], "ref_spans": [], "section": "Listener Reward Function Model"}, {"text": "The calculation equation of r t a i , a j is similar to R s (a), as shown in Eq. 8. We use the sparse coding of song transition feature vector to generate the binarized feature vector \u03b8 t a i , a j . Each descriptor can be represented as m 2 -bit binarized feature factors. Similar to \u03a6 s (u), listener u has a 20 m 2 -dimensional preference vector \u03a6 t (u) for the 20 m 2 -dimensional binarized feature vector \u03b8 t a i , a j .", "cite_spans": [], "ref_spans": [], "section": "Listener Reward Function Model"}, {"text": "Listener Preference for Songs. We keep the listener's historical song sequence whose length is longer than k s . In order to make \u03a6 s (u) tend to be uniform, we initialize each factor of the vector \u03a6 s (u) to 1/(k s + bins), where bins indicates the discretization granularity of song feature and the value is same as m above. For each song a i in the listener's historical song sequence, \u03a6 s (u) adds 1/(k s + bins) * \u03b8 s (a i ) iteratively so the feature of song a i can be learned. After \u03a6 s (u) is calculated, we normalize \u03a6 s (u) so that the weights of m-bit factors corresponding to each descriptor sum to 1 respectively.", "cite_spans": [], "ref_spans": [], "section": "Listener Reward Function Model"}, {"text": "Similar to the process of \u03a6 s (u), the length of song transition sequence is k s \u2212 1 noted as k t . In order to make \u03a6 t (u) tend to be uniform, we also initialize each factor of the vector \u03a6 t (u) to 1/(k t + bint), and the value of bint is bins * bins. Obviously, the song transition pattern of historical song sequence is the best transition pattern that listener prefers. For each transition from a i to a j in historical song sequence,\u03a6 t (u) adds 1/(k t + bint) * \u03b8 t a i , a j iteratively. After \u03a6 t (u) is calculated, we normalize \u03a6 t (u) in the same way as \u03a6 s (u).", "cite_spans": [], "ref_spans": [], "section": "Listener Preference for Song Transitions."}, {"text": "In order to reduce the time and space complexity of processing, we utilize the hierarchical searching heuristic method [20] to recommend next-song. And search is only performed from the search space where R s is relatively high (line 1). Besides, we take the horizon problem similar to the Go algorithm into account, which chooses the first step of the path with highest total reward as the next step (lines 9-14).", "cite_spans": [{"start": 119, "end": 123, "text": "[20]", "ref_id": "BIBREF19"}], "ref_spans": [], "section": "Next-Song Recommendation Model"}, {"text": "Since the song space is too large, it is not feasible to select songs from the complete song dataset M. To alleviate this problem, we cluster songs by song type to reduce the complexity of searching (line 6). Clustering by song type is achieved by applying \u03b4-medoids algorithm [21] , which is a method for representative selection.", "cite_spans": [{"start": 277, "end": 281, "text": "[21]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "Next-Song Recommendation Model"}, {"text": "To recommend song sequence, we define r ad j as log(r i /r ), which determines the direction and size of update (lines 2-5). If r ad j is a positive value, it means that the listener likes the recommended song and the update direction is positive, and vice versa. And the relative contributions of the song reward R s and the song transition reward r t to their total reward are calculated as w s and w t respectively, as shown in Eq. 9 and Eq. 10.", "cite_spans": [], "ref_spans": [], "section": "Song Sequence Recommendation and Update Model"}, {"text": "Besides, the preference vector \u03a6 s and \u03a6 t are updated based on r ad j , w s and w t , and need to be normalized. This update process considers the changes of listener's interest over time and balances the degree of trusting history with new rewards (line 6-7).", "cite_spans": [], "ref_spans": [], "section": "Song Sequence Recommendation and Update Model"}, {"text": "Million Song Dataset. Million Song Dataset (MSD) [22] is a dataset of audio feature for 1 million songs, providing powerful support for the CNN model to learn and extract music features. The dataset is available at http://labrosa.ee.columbia.edu/millionsong/.", "cite_spans": [{"start": 49, "end": 53, "text": "[22]", "ref_id": "BIBREF21"}], "ref_spans": [], "section": "Datasets"}, {"text": "Taste Profile Subset Dataset. Taste Profile Subset Dataset [22] as shown in Table 1 is in the form of listener-song-play count triple, providing a sufficient amount of dataset for WMF. The dataset is available at https://labrosa.ee.columbia.edu/millionsong/.", "cite_spans": [{"start": 59, "end": 63, "text": "[22]", "ref_id": "BIBREF21"}], "ref_spans": [{"start": 76, "end": 83, "text": "Table 1", "ref_id": "TABREF1"}], "section": "Datasets"}, {"text": "Historical Song Playlist Dataset. The dataset is collected from the music website Yes.com [23] , which is available at http://lme.joachims.org/. As shown in Table 2 , it contains 51,260 historical song sequences. ", "cite_spans": [{"start": 90, "end": 94, "text": "[23]", "ref_id": "BIBREF22"}], "ref_spans": [{"start": 157, "end": 164, "text": "Table 2", "ref_id": null}], "section": "Datasets"}, {"text": "Comparison Algorithms. We compare PHRR with baselines as below. For historical song playlist dataset, we use 90% of the dataset for training and the rest 10% for testing.", "cite_spans": [], "ref_spans": [], "section": "Comparison Algorithms and Evaluation Methods"}, {"text": "DJ-MC [13] : DJ-MC algorithm is a reinforcement learning model added the listeners' preferences for the transitions between songs to the recommendation process.", "cite_spans": [{"start": 6, "end": 10, "text": "[13]", "ref_id": "BIBREF12"}], "ref_spans": [], "section": "PHRR-S: PHRR-S algorithm is just the PHRR recommendation algorithm without taking song transitions into account."}, {"text": "PRCM [15] : PRCM algorithm is a collaborative filtering recommendation algorithm taking the social network and Markov chain into account.", "cite_spans": [{"start": 5, "end": 9, "text": "[15]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "PHRR-S: PHRR-S algorithm is just the PHRR recommendation algorithm without taking song transitions into account."}, {"text": "PopRec [16] : PopRec algorithm recommends the most popular songs. RandRec: RandRec algorithm recommends songs randomly.", "cite_spans": [{"start": 7, "end": 11, "text": "[16]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "PHRR-S: PHRR-S algorithm is just the PHRR recommendation algorithm without taking song transitions into account."}, {"text": "Evaluation Methods. Our evaluation metrics include hit ratio of the recommended next-songs and F1-score of the recommended song sequences.", "cite_spans": [], "ref_spans": [], "section": "PHRR-S: PHRR-S algorithm is just the PHRR recommendation algorithm without taking song transitions into account."}, {"text": "Hit Ratio (HR). We calculate hit ratio of the recommended next-songs for evaluation. In the historical song sequence dataset, the first n songs of each song sequence are used to recommend the n+1th songs. We compare the recommended n+1th song with the true n+1th song in the actual song sequence. If it is same, it is hit, otherwise it's not hit.", "cite_spans": [], "ref_spans": [], "section": "PHRR-S: PHRR-S algorithm is just the PHRR recommendation algorithm without taking song transitions into account."}, {"text": "F1-Score (F1). The second evaluation indicator we use is F1-score. F1-score combines precision and recall of recommendation, and the Score calculated by Eq. 13 -Eq. 15 is used to evaluate the effect of song sequence recommendation.", "cite_spans": [], "ref_spans": [], "section": "PHRR-S: PHRR-S algorithm is just the PHRR recommendation algorithm without taking song transitions into account."}, {"text": "where S p represents the recommended song sequences, S t represents the song sequences presented in the historical song sequence dataset and a indicates a song.", "cite_spans": [], "ref_spans": [], "section": "PHRR-S: PHRR-S algorithm is just the PHRR recommendation algorithm without taking song transitions into account."}, {"text": "The proposed PHRR algorithm is a recommendation algorithm to recommend song sequences. In this comparison experiment, the recommendation effects are measured by calculating the hit ratio of the recommended next-songs.", "cite_spans": [], "ref_spans": [], "section": "Experimental Results on Hit Ratio"}, {"text": "Performance Comparison on Hit Ratio. HR@k is the hit rate of the most probable k songs of the recommended next-songs. The results of hit ratio of above recommendation algorithms are shown in Table 3 , and the best results are boldfaced. Effect of Horizon Length on Hit Ratio. We consider the horizon problem similar to the Go algorithm when recommending next-song, that is, we choose the first song of the song sequence with highest total reward as the next-song (Algorithm 1). The experimental results of effect of horizon length on hit ratio are shown in Fig. 2(c) .", "cite_spans": [], "ref_spans": [{"start": 191, "end": 198, "text": "Table 3", "ref_id": "TABREF2"}, {"start": 557, "end": 566, "text": "Fig. 2(c)", "ref_id": "FIGREF1"}], "section": "Experimental Results on Hit Ratio"}, {"text": "Experimental Results and Analyses. The result of Fig. 2(a) shows that hit ratio of PHRR is 7% higher than PRCM, 10% higher than DJ-MC, 11% higher than PHRR-S, 20% higher than PopRec, and the hit ratio of RandRec is as low as 1%. The results of Fig. 2(b) indicates that when the training sequence length n is 15, the hit ratio is higher than when n is 10 or 5. The longer the training sequence length is, the higher the hit ratio of the recommended next-songs is, and the recommendation result will be more accurate. Figure 2(c) shows that, as the horizon length increasing, the hit ratio of the recommended next-songs also tends to be higher.", "cite_spans": [], "ref_spans": [{"start": 49, "end": 58, "text": "Fig. 2(a)", "ref_id": "FIGREF1"}, {"start": 244, "end": 253, "text": "Fig. 2(b)", "ref_id": "FIGREF1"}, {"start": 516, "end": 527, "text": "Figure 2(c)", "ref_id": "FIGREF1"}], "section": "Experimental Results on Hit Ratio"}, {"text": "In this section, we use F1-score as an evaluation indicator to measure the effect of above algorithms on song sequence recommendation.", "cite_spans": [], "ref_spans": [], "section": "Experimental Results on F1-Score"}, {"text": "Performance Comparison on F1-Score. The results of F1-score of above recommendation algorithms are shown in Table 4 . F1@k represents the F1-score of the recommended song sequence whose length is k, and the best results are boldfaced. Effect of Training Length of Song Sequence on F1-Score. Compared with other reinforcement learning based algorithms, the proposed PHRR promotes the precision by enhancing the simulation of interaction process. The experimental results of the effect of song sequence training length on F1-score are shown in Fig. 3(b) .", "cite_spans": [], "ref_spans": [{"start": 108, "end": 115, "text": "Table 4", "ref_id": "TABREF3"}, {"start": 542, "end": 551, "text": "Fig. 3(b)", "ref_id": "FIGREF2"}], "section": "Experimental Results on F1-Score"}, {"text": "Effect of Horizon Length on F1-Score. In the next-song recommendation stage (Algorithm 1), we only recommend the first song of the song sequence with highest total reward, instead of recommending this entire song sequence. Because as noise accumulating during the self-updating process, the variation of the model would be larger. The experimental results of the effect of horizon on F1-score are shown in Fig. 3(c) .", "cite_spans": [], "ref_spans": [{"start": 406, "end": 415, "text": "Fig. 3(c)", "ref_id": "FIGREF2"}], "section": "Experimental Results on F1-Score"}, {"text": "Experimental Results and Analyses. As shown in Fig. 3(a) , F1-score of PHRR is 4% higher than DJ-MC, 6% higher than PHRR-S, 11% higher than PRCM and 20% higher than PopRec on average. PHRR enhances simulating listener's interaction in the reinforcement learning process, while other algorithms don't consider it. Figure 3 (b) presents that, when the song sequence training length n is 15, F1-score is higher than when n is 10 or 5. The longer training length can bring more chances to enhance the simulation of interaction. Figure 3 (c) indicates that as the horizon length increasing, F1-score shows a slight higher. The horizon length shouldn't be too long, because too long horizon length is not significantly useful for improving the effect but increases the complexity.", "cite_spans": [], "ref_spans": [{"start": 47, "end": 56, "text": "Fig. 3(a)", "ref_id": "FIGREF2"}, {"start": 313, "end": 321, "text": "Figure 3", "ref_id": "FIGREF2"}, {"start": 524, "end": 532, "text": "Figure 3", "ref_id": "FIGREF2"}], "section": "Experimental Results on F1-Score"}, {"text": "In this paper, we propose a hybrid recommendation algorithm for music based on reinforcement learning (PHRR) to recommend higher quality song sequences. WMF and CNN are trained to learn song feature vectors from the songs' audio signals. Besides, we present a model-based reinforcement learning framework to simulate the decisionmaking behavior of listeners, and model the reinforcement learning problem as a Markov decision process based on listeners' preferences both for songs and song transitions. To capture the minor changes of listeners' preferences sensitively, we innovatively enhance the simulation of interaction process to update the model more data-efficiently. Experiments conducted on real-world datasets demonstrate that PHRR has a better effect of music recommendation than other comparison algorithms.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}, {"text": "In the future, we will incorporate more human behavioral characteristics into the model. We also want to analyze the role of these characteristics for recommendation.", "cite_spans": [], "ref_spans": [], "section": "Conclusion"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "The dark side of information: overload, anxiety and other paradoxes and pathologies", "authors": [{"first": "D", "middle": [], "last": "Bawden", "suffix": ""}, {"first": "L", "middle": [], "last": "Robinson", "suffix": ""}], "year": 2008, "venue": "J. Inf. Sci", "volume": "35", "issn": "2", "pages": "180--191", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Content-based recommendation systems", "authors": [{"first": "M", "middle": ["J"], "last": "Pazzani", "suffix": ""}, {"first": "D", "middle": [], "last": "Billsus", "suffix": ""}], "year": 2007, "venue": "The Adaptive Web", "volume": "4321", "issn": "", "pages": "325--341", "other_ids": {"DOI": ["10.1007/978-3-540-72079-9_10"]}}, "BIBREF2": {"ref_id": "b2", "title": "Deep content-based music recommendation", "authors": [{"first": "V", "middle": ["D O"], "last": "Aaron", "suffix": ""}, {"first": "S", "middle": [], "last": "Dieleman", "suffix": ""}, {"first": "B", "middle": [], "last": "Schrauwen", "suffix": ""}], "year": 2013, "venue": "NIPS", "volume": "26", "issn": "", "pages": "2643--2651", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "Machine learning in textual content-based recommendation systems: a systematic review", "authors": [{"first": "L", "middle": ["F"], "last": "Brunialti", "suffix": ""}, {"first": "S", "middle": ["M"], "last": "Peres", "suffix": ""}, {"first": "V", "middle": [], "last": "Freire", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "A collaborative filtering method for personalized preference-based service recommendation", "authors": [{"first": "K", "middle": ["K"], "last": "Fletcher", "suffix": ""}, {"first": "X", "middle": ["F"], "last": "Liu", "suffix": ""}], "year": 2015, "venue": "ICWS", "volume": "", "issn": "", "pages": "400--407", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Towards scalable and accurate item-oriented recommendations", "authors": [{"first": "N", "middle": [], "last": "Koenigstein", "suffix": ""}, {"first": "Y", "middle": [], "last": "Koren", "suffix": ""}], "year": 2013, "venue": "RecSys", "volume": "", "issn": "", "pages": "419--422", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Recommending web services via combining collaborative filtering with content-based features", "authors": [{"first": "L", "middle": [], "last": "Yao", "suffix": ""}, {"first": "Q", "middle": ["Z"], "last": "Sheng", "suffix": ""}, {"first": "A", "middle": [], "last": "Segev", "suffix": ""}], "year": 2013, "venue": "ICWS", "volume": "", "issn": "", "pages": "42--49", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "An introduction to deep reinforcement learning", "authors": [{"first": "V", "middle": [], "last": "Francois-Lavet", "suffix": ""}, {"first": "P", "middle": [], "last": "Henderson", "suffix": ""}, {"first": "R", "middle": [], "last": "Islam", "suffix": ""}], "year": 2018, "venue": "Found. Trends Mach. Learn", "volume": "11", "issn": "3-4", "pages": "219--354", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "FEXIPRO: fast and exact inner product retrieval in recommender systems", "authors": [{"first": "H", "middle": [], "last": "Li", "suffix": ""}, {"first": "T", "middle": ["N"], "last": "Chan", "suffix": ""}, {"first": "M", "middle": ["L"], "last": "Yiu", "suffix": ""}], "year": 2017, "venue": "SIGMOD", "volume": "", "issn": "", "pages": "835--850", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Markov Decision Processes: Discrete Stochastic Dynamic Programming", "authors": [{"first": "M", "middle": ["L"], "last": "Puterman", "suffix": ""}], "year": 2014, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Exploration in interactive personalized music recommendation: a reinforcement learning approach", "authors": [{"first": "X", "middle": [], "last": "Wang", "suffix": ""}, {"first": "Y", "middle": [], "last": "Wang", "suffix": ""}, {"first": "D", "middle": [], "last": "Hsu", "suffix": ""}], "year": 2013, "venue": "TOMM", "volume": "", "issn": "", "pages": "1--22", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "A personalized interest-forgetting markov model for recommendations", "authors": [{"first": "J", "middle": [], "last": "Chen", "suffix": ""}, {"first": "C", "middle": [], "last": "Wang", "suffix": ""}, {"first": "J", "middle": [], "last": "Wang", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "16--22", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "DJ-MC: A reinforcement-learning agent for music playlist recommendation", "authors": [{"first": "E", "middle": [], "last": "Liebman", "suffix": ""}, {"first": "M", "middle": [], "last": "Saartsechansky", "suffix": ""}, {"first": "P", "middle": [], "last": "Stone", "suffix": ""}], "year": 2015, "venue": "", "volume": "", "issn": "", "pages": "591--599", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Playlist recommendation based on reinforcement learning", "authors": [{"first": "B", "middle": [], "last": "Hu", "suffix": ""}, {"first": "C", "middle": [], "last": "Shi", "suffix": ""}, {"first": "J", "middle": [], "last": "Liu", "suffix": ""}], "year": 2017, "venue": "ICIS", "volume": "", "issn": "", "pages": "172--182", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "A personalized next-song recommendation system using community detection and markov model", "authors": [{"first": "K", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "Z", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "K", "middle": [], "last": "Bian", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "118--123", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Optimal greedy diversity for recommendation", "authors": [{"first": "A", "middle": [], "last": "Ashkan", "suffix": ""}, {"first": "B", "middle": [], "last": "Kveton", "suffix": ""}, {"first": "S", "middle": [], "last": "Berkovsky", "suffix": ""}], "year": 2015, "venue": "IJCAI", "volume": "", "issn": "", "pages": "1742--1748", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Collaborative filtering for implicit feedback datasets", "authors": [{"first": "Y", "middle": [], "last": "Hu", "suffix": ""}, {"first": "Y", "middle": [], "last": "Koren", "suffix": ""}, {"first": "C", "middle": [], "last": "Volinsky", "suffix": ""}], "year": 2008, "venue": "ICDM", "volume": "", "issn": "", "pages": "263--272", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Convolutional Neural Network. In: MATLAB Deep Learning", "authors": [{"first": "P", "middle": [], "last": "Kim", "suffix": ""}], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "121--147", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Mel-frequency cepstral coefficient analysis in speech recognition", "authors": [{"first": "C", "middle": ["K"], "last": "On", "suffix": ""}, {"first": "P", "middle": ["M"], "last": "Pandiyan", "suffix": ""}, {"first": "S", "middle": [], "last": "Yaacob", "suffix": ""}], "year": 2006, "venue": "Computing & Informatics", "volume": "", "issn": "", "pages": "2--6", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "A learning agent for heat-pump thermostat control", "authors": [{"first": "D", "middle": [], "last": "Urieli", "suffix": ""}, {"first": "P", "middle": [], "last": "Stone", "suffix": ""}], "year": 2013, "venue": "", "volume": "", "issn": "", "pages": "1093--1100", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Representative selection in nonmetric datasets", "authors": [{"first": "E", "middle": [], "last": "Liebman", "suffix": ""}, {"first": "B", "middle": [], "last": "Chor", "suffix": ""}, {"first": "P", "middle": [], "last": "Stone", "suffix": ""}], "year": 2015, "venue": "Appl. Artif. Intell", "volume": "29", "issn": "8", "pages": "807--838", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "The million song dataset challenge", "authors": [{"first": "T", "middle": [], "last": "Bertin-Mahieux", "suffix": ""}, {"first": "D", "middle": ["P W"], "last": "Ellis", "suffix": ""}, {"first": "B", "middle": [], "last": "Whitman", "suffix": ""}], "year": 2011, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Multi-space probabilistic sequence modeling", "authors": [{"first": "S", "middle": [], "last": "Chen", "suffix": ""}, {"first": "J", "middle": [], "last": "Xu", "suffix": ""}, {"first": "T", "middle": [], "last": "Joachims", "suffix": ""}], "year": 2013, "venue": "", "volume": "", "issn": "", "pages": "865--873", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "Deep learning based recommender system: a survey and new perspectives", "authors": [{"first": "S", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "L", "middle": [], "last": "Yao", "suffix": ""}, {"first": "A", "middle": [], "last": "Sun", "suffix": ""}], "year": 2019, "venue": "ACM Comput. Surv", "volume": "52", "issn": "1", "pages": "1--38", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "Collaborative denoising auto-encoders for top-n recommender systems", "authors": [{"first": "Y", "middle": [], "last": "Wu", "suffix": ""}, {"first": "C", "middle": [], "last": "Dubois", "suffix": ""}, {"first": "A", "middle": ["X"], "last": "Zheng", "suffix": ""}, {"first": "M", "middle": [], "last": "Ester", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "153--162", "other_ids": {}}, "BIBREF25": {"ref_id": "b25", "title": "Deep residual learning for image recognition", "authors": [{"first": "K", "middle": [], "last": "He", "suffix": ""}, {"first": "X", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "S", "middle": [], "last": "Ren", "suffix": ""}], "year": 2016, "venue": "CVPR", "volume": "", "issn": "", "pages": "770--778", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Reinforcement learning framework for music recommendation.", "latex": null, "type": "figure"}, "FIGREF1": {"text": "of Training Length of Song Sequence on Hit Ratio. Reinforcement learning process is based on the feedback of interactive information and simulates the decision behavior of listeners. The longer the length of training song sequence is, the more simulated interactions are in reinforcement learning process. The experimental results of the effect of training length on hit ratio are shown in Fig. 2(b). Experimental results on hit ratio. (a) Comparison experimental results on hit ratio. (b) Effect of training length of song sequence on hit ratio. (c) Effect of horizon length on hit ratio.", "latex": null, "type": "figure"}, "FIGREF2": {"text": "Experimental results on F1-score. (a) Comparison experimental results on F1-score. (b) Effect of training length of song sequence on F1-score. (c) Effect of horizon length on F1-score.", "latex": null, "type": "figure"}, "TABREF1": {"text": "A dataset of listener-song-playcount", "latex": null, "type": "table", "html": "<html><body><table><tr><td>#Listeners </td><td>#Songs </td><td>#Triplets\n</td></tr><tr><td>1000000 </td><td>380000 </td><td>48712660\n</td></tr></table></body></html>"}, "TABREF2": {"text": "Performance comparison on hit ratio", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Algorithm </td><td>HR@10 </td><td>HR@20 </td><td>HR@30 </td><td>HR@40 </td><td>HR@50\n</td></tr><tr><td>PHRR </td><td>0.1787 </td><td>0.2394 </td><td>0.2896 </td><td>0.3302 </td><td>0.3520\n</td></tr><tr><td>PRCM </td><td>0.1255 </td><td>0.1892 </td><td>0.2356 </td><td>0.2681 </td><td>0.2897\n</td></tr><tr><td>DJ-MC </td><td>0.1232 </td><td>0.1685 </td><td>0.2110 </td><td>0.2341 </td><td>0.2462\n</td></tr><tr><td>PHRR-S </td><td>0.1016 </td><td>0.1534 </td><td>0.1965 </td><td>0.2278 </td><td>0.2619\n</td></tr><tr><td>PopRec </td><td>0.0651 </td><td>0.0773 </td><td>0.0916 </td><td>0.1174 </td><td>0.1289\n</td></tr><tr><td>RandRec </td><td>0.0060 </td><td>0.0083 </td><td>0.0101 </td><td>0.0142 </td><td>0.0186\n</td></tr></table></body></html>"}, "TABREF3": {"text": "Performance comparison on F1-score Algorithm F1@3 F1@5 F1@10 F1@15 F1@20", "latex": null, "type": "table"}, "TABREF4": {"text": "Table 2. Listeners' historical song playlist dataset", "latex": null, "type": "table", "html": "<html><body><table><tr><td>#Playlists </td><td>#Songs </td><td>#Song Transitions\n</td></tr><tr><td>51260 </td><td>85262 </td><td>2840554\n</td></tr></table></body></html>"}, "TABREF5": {"text": "Table 4. Performance comparison on F1-score", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Algorithm </td><td>F1@3 </td><td>F1@5 </td><td>F1@10 </td><td>F1@15 </td><td>F1@20\n</td></tr><tr><td>PHRR </td><td>0.2113 </td><td>0.2472 </td><td>0.2986 </td><td>0.3432 </td><td>0.3657\n</td></tr><tr><td>DJ-MC </td><td>0.1738 </td><td>0.1974 </td><td>0.2610 </td><td>0.3052 </td><td>0.3374\n</td></tr><tr><td>PHRR-S </td><td>0.1640 </td><td>0.1935 </td><td>0.2421 </td><td>0.2787 </td><td>0.3068\n</td></tr><tr><td>PRCM </td><td>0.1365 </td><td>0.1542 </td><td>0.2098 </td><td>0.2411 </td><td>0.2576\n</td></tr><tr><td>PopRec </td><td>0.0354 </td><td>0.0461 </td><td>0.0697 </td><td>0.1016 </td><td>0.1262\n</td></tr><tr><td>RandRec </td><td>0.0042 </td><td>0.0083 </td><td>0.0186 </td><td>0.0269 </td><td>0.0325\n</td></tr></table></body></html>"}}, "back_matter": [{"text": "We would like to thank Kan Zhang and Qilong Zhao for valuable discussions. ", "cite_spans": [], "ref_spans": [], "section": "Acknowledgments."}]}