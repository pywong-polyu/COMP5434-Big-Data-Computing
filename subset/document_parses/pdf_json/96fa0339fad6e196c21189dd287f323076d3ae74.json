{
    "paper_id": "96fa0339fad6e196c21189dd287f323076d3ae74",
    "metadata": {
        "title": "Scaling and Placing Distributed Services on Vehicle Clusters in Urban Environments",
        "authors": [
            {
                "first": "Kanika",
                "middle": [],
                "last": "Sharma",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Bernard",
                "middle": [],
                "last": "Butler",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Brendan",
                "middle": [],
                "last": "Jennings",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Many vehicles spend a significant amount of time in urban traffic congestion. Due to the evolution of autonomous cars, driver assistance systems, and in-vehicle entertainment, many vehicles have plentiful computational and communication capacity. How can we deploy data collection and processing tasks on these (slowly) moving vehicles to productively use any spare resources? To answer this question, we study the efficient placement of distributed services on a moving vehicle cluster. We present a macroscopic flow model for an intersection in Dublin, Ireland, using real vehicle density data. We show that such aggregate flows are highly predictable (even though the paths of individual vehicles are not known in advance), making it viable to deploy services harnessing vehicles' sensing capabilities. Our main contribution is a detailed mathematical specification for a task-based, distributed service placement model that scales according to the resource requirements and is robust to the changes caused by the mobility of the cluster. We formulate this as a constrained optimization problem, with the objective of minimizing overall processing and communication costs. Our results show that jointly scaling tasks and finding a mobility-aware, optimal placement results in reduced processing and communication costs compared to an autonomous vehicular edge computing-based na\u00efve solution.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Vehicles will be one of the most important agents in the emerging Internet of Things (IoT) ecosystem, owing to their embedded sensors and built-in cameras, which can be used to capture contextual data for object detection and surveillance [1] . Since each vehicle generates an average of 30 Tb of data per day, it is infeasible to send all the generated data to the Cloud using the controlled and limited cellular bandwidth [2] . The increasing number of Smart vehicles and overall vehicular traffic has inspired the concept of Vehicular Fog Computing (VFC) [3] , [4] , where vehicles are utilised as Fog nodes and play the role of service providers. This new data generation and communication paradigms is motivated by Fog Computing [1] and Mobile Edge computing based models [5] , [6] which provide ubiquitous connectivity and location-aware network responses at the edge of the network, complemented with cloud computing in the network core.",
            "cite_spans": [
                {
                    "start": 239,
                    "end": 242,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 424,
                    "end": 427,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 558,
                    "end": 561,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 564,
                    "end": 567,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 734,
                    "end": 737,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 777,
                    "end": 780,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 783,
                    "end": 786,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "Closely-spaced, moving vehicles, could be used to, for example, monitor the compliance of both vehicles and pedestrians to lock-down restrictions introduced in response to the COVID-19 pandemic, by capturing data from essential service vehicles. The video data can also be collected for estimating usage patterns of highways for urban planning, reducing the need for installing more roadside infrastructure. Slowly moving vehicles can also be used to collect 3D roadmap data, to increase the perception range of intelligent vehicles, reducing the need for sending high definition data to the Cloud [7] , [8] . All these use cases require rich computation and communication resources so that this data can be used for insights and decision-making.",
            "cite_spans": [
                {
                    "start": 598,
                    "end": 601,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 604,
                    "end": 607,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "In this paper, we propose that vehicles lease their otherwise unused processing, communication, and storage resources to collaboratively host data analytics services that can pre-process and filter the data they collect. Thus, a dense group (or cluster) of moving vehicles can cooperatively execute distributed services that comprise: (i) delay-sensitive tasks that have a short sense-actuate cycle and require real-time decision making, and/or (ii) data collection and analytics tasks that are location-and context-specific.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "Vehicles are distinguished through their mobility (in particular, vehicles join and leave a cluster in a stochastic manner), so the resource allocation task becomes timedependent. Mobility affects both network connectivity and computation capacity, and hence the Quality-of-Service (QoS). Our work aims to utilize the aggregate mobility behavior of vehicles to select reliable vehicle nodes, i.e., those that have a higher probability of staying with a given cluster of vehicles, in order to avoid service failure and reduce the need for service reconfiguration. As depicted in Fig. 1 , one vehicle, or Roadside Unit (RSU), acts as a managing entity to collect and update both the resource and mobility states of the cluster and enable flexible service scaling.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 578,
                    "end": 584,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "INTRODUCTION"
        },
        {
            "text": "We take the specific case of using in-built cameras in cars that are willing to lease their resources, to provide streaming data on request. This data is processed by streaming it to linear chains of tasks, where each task has different processing functionality. One linear chain of tasks form a service that satisfies a service request. We employ a componentoriented distributed service model, where each task can be realised via a collection of multiple task instances (TIs); in this manner each task can be scaled out according to the arXiv:2110.09471v1 [cs.NI] 11 Oct 2021 demand and the available infrastructure resources. For example, using multiple camera instances increases the spatiotemporal coverage of the data collection, thereby increasing the scope for more accurate and efficient data analysis, especially in applications like building 3D road maps for self-driving cars. Moreover, having replicas of computing tasks enables the utilization of distributed resources and reduces the impact of nodes leaving the vehicle cluster. Node and link failure in this service model requires only the replication of a problematic TI onto a more suitable vehicle so the service chain still works, instead of re-configuring the entire service. As the tasks are data-dependent, even if the cluster is computationally rich, it needs to be split into smaller TIs if the link capacity between host nodes is not enough. The task placement also needs to avoid placing TIs on those resource-rich nodes that have a high probability of leaving the cluster. Thus, service deployments can be adapted at run-time according to both the known resource availability and the predicted mobility state of the cluster. This paper builds upon our previous work [9] , where we introduced the problem of the placement of distributed data collection services on a moving vehicle cluster. We modeled the service placement problem as an optimization problem subject to constraints related to node resource capacity, link capacity, distributed application deployment (full deployment, anti-collocation and adjacency constraints) and vehicle mobility. In this paper the following novel contributions are made:",
            "cite_spans": [
                {
                    "start": 565,
                    "end": 567,
                    "text": "11",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 1743,
                    "end": 1746,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "\u2022 we introduce a macroscopic flow model for vehicle mobility using real vehicle density data from traffic data collected in Dublin, Ireland. We highlight the predictability in vehicle traffic for different time intervals, using Multivariate Linear Regression with an accuracy of 93 to 99%. \u2022 we formulate the service placement problem mathematically in two parts: 1) a flexible and distributed service model with data-dependent tasks instead of static service templates; and 2) a mobility-aware infrastructure model; \u2022 to validate our approach, we simultaneously place two services with diverse resource requirements (either computation or communication intensive). We also impose multi-tenancy constraints to reuse the same nodes and/or TIs for different applications; \u2022 we optimize the service scaling and placement problem by first scaling the linear chain at run-time and then finding a placement plan that optimizes resource usage over a multi-hop cluster, repeating as necessary. \u2022 we compare our approach to the na\u00efve solution, presented in [10] . We also validate the applications on a Fog Computing simulator. The paper is organized as follows: \u00a72 describes related research in the field of service placement and task offloading schemes in vehicular networks. In \u00a73, we describe the motivation behind using vehicles as infrastructure, estimate vehicular cluster capacity, and validate vehicle traffic predictability with Multivariate Linear Regression. In \u00a74, we define the system model and the network topology and in \u00a75, we define the constraints and the mathematical formulation of the placement problem. In \u00a76, we introduce application types and run an experiment for an application scenario on a Fog simulator. We then discuss solving the optimization problem, simulation setup and our results. Finally, in \u00a77 we conclude the work and give an outline of our future work.",
            "cite_spans": [
                {
                    "start": 1048,
                    "end": 1052,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "Gerla et al. [11] was the first to introduce the term Vehicular Cloud Computing (VCC) as a distributed computing platform, wherein vehicles form a micro cloud in an ad hoc manner. They identified many important applications for VCC, including urban sensing by uploading videos of congestion and pavement conditions that other vehicles could access. Hou et al. [4] were the first to introduce the concept of Vehicular Fog Computing (VFC) as an architecture that can be used to enable multiple end-user or edge devices to collaborate to carry computation and communication tasks. They considered both slow-moving and parked vehicles and analyzed the quantitative capacity of such a Vehicular Fog. Ma et al. [12] introduced a Platoon-assisted Vehicular Edge Computing system based on the stability of the platoon in vehicular networks. They were the first to introduce a Reinforcement Learning (RL)-based optimization scheme to obtain optimal price strategy of task flows. Lee et al. [3] also modified an RL-based algorithm to make efficient resource allocation decisions leveraging vehicles' movement and parking status to minimise service latency.",
            "cite_spans": [
                {
                    "start": 13,
                    "end": 17,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 360,
                    "end": 363,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 705,
                    "end": 709,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 981,
                    "end": 984,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "RELATED WORK"
        },
        {
            "text": "Zhao et al. [13] jointly optimize the computation offloading decision and computation resource allocation in vehicular networks. They designed a collaborative optimization scheme where offloading decisions are made through a game-theoretic approach and resource allocation is achieved using the Lagrange multiplier method. The feasibility of using vehicles as Fog nodes for video crowd-sourcing and real-time analytics has been studied by Zhu et al. [14] . They evaluated the availability of client nodes that generate data in proportion to the vehicle Fog nodes that process the data, using processing capacity on on-board units. However, they focus solely on the data transmission problem in the model. Xiao et al. [15] also evaluated the achievable performance of a vehicular cloud and analyze the total computation capacity for the same. They also model vehicle mobility patterns using parameters like staying time and the incoming and outgoing flow rate of vehicles. This capacity analysis is a crucial requirement for enabling a vehicular computing model but they do not focus on the service model and applications to be deployed. In Kong et al. [16] , the traditional mobility models for vehicles are replaced by methods based on social patterns, community interest group check-ins on social media data etc.",
            "cite_spans": [
                {
                    "start": 12,
                    "end": 16,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 450,
                    "end": 454,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 717,
                    "end": 721,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 1152,
                    "end": 1156,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "RELATED WORK"
        },
        {
            "text": "The mobility of vehicle nodes makes the task allocation problem more challenging in Vehicular Fog Computing. Zhu et al. [17] introduced an event-driven dynamic task allocation framework designed to reduce average service latency and overall quality loss. Both multi-source data acquisition and distributed computing in Fog-computingbased intelligent vehicular network are studied by Zhang et al. [18] . They introduce a hierarchical, QoS-aware resource management architecture, but consider the Fog servers as static. Vehicular micro cloud has been studied as virtual edge servers for efficient connection between cars and backend infrastructure in Hagenauer et al. [19] . They use mapbased clustering at intersections, as intersections have line of sight in multiple directions which result in better connectivity between the Cluster Heads (CHs) and other cluster members. Even though they primarily focus on cluster creation and cluster head selection, they evaluate a data collection application, with varying data aggregation rates at the CH. Goudarzi et al. [20] introduced an application placement technique for concurrent IoT applications in Edge and Fog computing environments. They propose a a batch application placement technique based on the Memetic Algorithm to efficiently place tasks of different workflows on appropriate IoT devices, fog servers, or cloud servers.",
            "cite_spans": [
                {
                    "start": 120,
                    "end": 124,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 396,
                    "end": 400,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 666,
                    "end": 670,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 1063,
                    "end": 1067,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "RELATED WORK"
        },
        {
            "text": "Fog computing based information-centric approaches have been studied by Wu et al. [21] , where Fog nodes act as network monitor for cognitive caching and computational resource configurations. These techniques are crucial for future internet applications like automated driving enabled vehicles. Wu et al. [10] study the dynamic management and configuration of heterogeneous consensus for differentiated and dynamic IoT services in a blockchain. The paper also ",
            "cite_spans": [
                {
                    "start": 82,
                    "end": 86,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 306,
                    "end": 310,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "RELATED WORK"
        },
        {
            "text": "Our work is motivated by the increasing number of Smart and continuously connected cars, and the unresolved issue of vehicle congestion-especially in urban areas. Before introducing our service scaling and placement scheme we first provide justification that placing services on a vehicle cluster in order to provide time and/or location sensitive sensing functionality is a viable proposition. There are two important aspects: 1) whether traffic flows in an urban setting are likely to be predictable over the course of a day, and 2) whether a slow moving cluster will accommodate sufficient communications capacity between vehicles to facilitate service operation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "MOTIVATION"
        },
        {
            "text": "We find that vehicular flow in urban traffic zones is predictable throughout the day. We also show that the vehicular density pattern at an intersection follows a similar pattern of peak and off-peak flow through different weeks. We use macroscopic vehicle density data to create a generalised flow model for an intersection. This helps in classifying traffic flow into six different driving profiles. The vehicle clusters can then be initiated at the predicted peak traffic times, on any of the traffic flows with an assured density flow.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Predictability of vehicle flows"
        },
        {
            "text": "We first focus on a road network near Dublin Airport, using the vehicle flow data captured by the Transport Infrastructure Ireland Traffic Data website 1 . A vehicular flow is defined as the number of detected vehicles passing a point in a period of time. The idea is to use the stochastic traffic flows at an intersection to predict the trajectory of a vehicle cluster. As depicted in (Fig. 2) , we consider northbound flow from A to B and A to C, southbound flow from C' to A' and C' to B, eastbound traffic from B' to C and B' to A. We then employ a linear regression model to predict the traffic flow from one segment to the other, for all the six flows at the intersection. To understand the predictability of the traffic flows, we use the vehicle flow data, collected in the interval of 5, 10 and 15 minutes (based on the estimated travel time between any of the six points at peak and offpeak traffic time of the day) for a period of 24 hours. This data is used to model a generalized traffic flow model for an intersection. We predict the vehicle density at point B taking into consideration the vehicle density at point A, using a linear regression model. We plot the actual and predicted incoming vehicle density at point B, for an interval of 5 minutes (Fig. 3a ) and 10 minutes (Fig. 3b) . The accuracy score of the prediction was 0.915 for a period of 5 minutes and 0.945 for 10 minutes respectively. This way, vehicles can be clustered in six different driving profiles for service execution, corresponding to the above-mentioned six flows. Table 1 depicts the r-value, p-value and the standard error for all the six flows. We then use the vehicle flow data for the last 7 consecutive Mondays to predict a single flow, from A to B, using Multivariate Linear regression for data collected at an interval of 5 ( The same days in the week were studied to have similar patterns of mobility, within a range of a month to two, hence data for 7 consecutive Mondays was used. The predicted and actual vehicle flow at point B is depicted in Fig. 3c , 3d and 3e. The R 2 accuracy score of the prediction was 0.93750, 0.9476 and 0.99216 for 5, 10 and 15 minutes respectively. We also considered the vehicle flow data during the period of COVID-19 lock-down, from 1st to 8th April 2020, to analyze the pattern of flow during the Coronavirus restrictions in Ireland. The restrictions resulted in much less traffic density at the intersection. Fig. 3f and Fig. 3g depict predicted vehicle flow using Multivariate Linear Regression, considering seven consecutive days during the lock-down, with an accuracy score of 0.97987 and 0.98746. We also plot the overall vehicular flow data for four consecutive Mondays, recorded in an interval of 10 minutes (Fig. 3h ) and 30 minutes (Fig. 3i) . The figures depict the consistent and predictable vehicle density data for both northbound and southbound traffic for all four weeks.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 386,
                    "end": 394,
                    "text": "(Fig. 2)",
                    "ref_id": null
                },
                {
                    "start": 1264,
                    "end": 1272,
                    "text": "(Fig. 3a",
                    "ref_id": null
                },
                {
                    "start": 1290,
                    "end": 1299,
                    "text": "(Fig. 3b)",
                    "ref_id": null
                },
                {
                    "start": 1555,
                    "end": 1562,
                    "text": "Table 1",
                    "ref_id": "TABREF1"
                },
                {
                    "start": 2046,
                    "end": 2053,
                    "text": "Fig. 3c",
                    "ref_id": null
                },
                {
                    "start": 2444,
                    "end": 2451,
                    "text": "Fig. 3f",
                    "ref_id": null
                },
                {
                    "start": 2456,
                    "end": 2463,
                    "text": "Fig. 3g",
                    "ref_id": null
                },
                {
                    "start": 2749,
                    "end": 2757,
                    "text": "(Fig. 3h",
                    "ref_id": null
                },
                {
                    "start": 2775,
                    "end": 2784,
                    "text": "(Fig. 3i)",
                    "ref_id": null
                }
            ],
            "section": "Predictability of vehicle flows"
        },
        {
            "text": "Beyond the predictability of vehicle mobility patterns, it is crucial to consider the density of vehicles, or how close or spread apart are vehicles at a given time, for the purpose of service placement. We take another real-world dataset to analyze the density and the traffic conditions for a freeway. Calculating density requires the number of vehicles in a given lane or calculated over a mile, averaged over a period 2 that provides access to real-time and historical performance data for the California freeway network. This dataset and platform is a rich resource for many traffic parameters like occupancy, speed, vehicle miles travelled (VMT), etc. at many different granularities of time and space (over a detector/lane/route). Vehicle-to-vehicle (V2V) communication is crucial for our distributed service placement and successful service completion. Reliability of V2V communication amongst vehicles in a cluster depends largely on traffic conditions. Conditions are indicated by vehicle density, which varies if vehicles are in a state of free flow, have delays, operating at full capacity, or are in breakdown condition. Caltrans PeMS provides a parameter called the Level of Service (LOS), which uses vehicle density to analyze the quality of service or the condition of the traffic along a freeway. The freeway LOS is a way to classify the traffic condition into a grading system ranging from A to F. The LOS is also measured from the volume-to-capacity (v/c) ratio, but PeMS estimates the LOS using density only. The relationship between LOS and density is defined in the Highway Capacity Manual (HCM2010) and is summarized in Table 2 .",
            "cite_spans": [
                {
                    "start": 422,
                    "end": 423,
                    "text": "2",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [
                {
                    "start": 1643,
                    "end": 1650,
                    "text": "Table 2",
                    "ref_id": "TABREF3"
                }
            ],
            "section": "Density-based detection of slow moving traffic"
        },
        {
            "text": "In Fig.4 for the first week in August 2019. As can be noted, there is a significant percentage of vehicles in LOS E which depicts unstable flow due to near full density of traffic, and LOS F which depicts flow breakdown conditions. The percentage of vehicles in LOS E and F constantly increases from 10 am to 5 pm. Almost 20% of vehicles are in LOS F at 5 pm, which represents breakdown or traffic jam conditions. The percentage of vehicles increases significantly in LOS A and B at 8 pm, which depicts free flow and a stable flow of traffic. This analysis gives an estimate of available vehicle density at different times of the day. This reduces the uncertainty in resource availability. The data is a rich resource to detect busiest intersections and bottlenecks where services can be initiated on slow-moving or stopped vehicles.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 3,
                    "end": 8,
                    "text": "Fig.4",
                    "ref_id": null
                }
            ],
            "section": "Density-based detection of slow moving traffic"
        },
        {
            "text": "Due to the novelty of using moving vehicles as infrastructure, we estimate the communication capacity of a vehicular network. Estimating the capacity of a vehicular network is a challenging problem to solve as it depends on several factors including the average number of simultaneous transmissions, link capacities, the density of vehicles, mobility in the network, the distance between vehicles, and the transmission range of the vehicles. Our previous analysis shows that the problem of less vehicular density causing a delay in communication is not prevalent in urban centers, and even freeway traffic flow in some cases. We also demonstrated that most traffic flow prediction can be done effectively. The estimation of the capacity of the vehicular network has been done in great detail via customized theoretical studies [22] - [24] . We calculate the effective capacity of the vehicular network obtained using a cooperative scheme from Chen et al. [24] . Theoretical Capacity: We consider the closed-form expression of effective available capacity specified by Chen et al. [24] , which uses a cooperative scheme to derive the communication capacity for a vehicular network. The cooperative strategy uses both V2V and Vehicle-to-Infrastructure (V2I) communication to increase the capacity of vehicular networks. They built an analytical framework to model the data dissemination process and derive a closed form expression of the achievable capacity, given as:",
            "cite_spans": [
                {
                    "start": 827,
                    "end": 831,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 834,
                    "end": 838,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 955,
                    "end": 959,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 1080,
                    "end": 1084,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Aggregate Communications Capacity Estimation"
        },
        {
            "text": ". In this expression L is the length of the highway segment, d is the distance between RSUs, W I and W V are the data rate for V2I and V2V communication respectively, \u03c1 is the density of vehicles per meter, p is the proportion of vehicles with download requests in the range [0,1], r I is the range of infrastructure points and r o is the radio range of vehicles. R C is the sensing range for the medium access control protocol. We calculate the available capacity for this case, taking the value for L as 100 km, d as 5, 10 or 15 km, W I as 20 Mb/s, W V as 2 MB/s, \u03c1 as 0.03, 0.04, or 0.05. We take the radio ranges as typical values for Dedicated Short-Range Communication (DSRC) such that r I is 400 m and r o is 200 m. The value of R C is taken as 300-400 m. For these values, the effective available capacity lies in the range of 5-20 Mb/s with different proportions of vehicles participating in the scheme. The density of vehicles, the use of cooperation schemes and the number of participating vehicles have a direct impact on this effective available capacity.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Aggregate Communications Capacity Estimation"
        },
        {
            "text": "The potential computation capacity of a vehicle cluster is dependent on how dense the cluster is, in terms of the number of vehicles that are optimal for placement of a particular service request. The computation capacity is also based on how slow the vehicle cluster is, which can be predicted by the occupancy of a road segment, calculated as how much time vehicles take to pass over a detector. This time can also be derived as the sojourn time of vehicles with the RSU. According to the study conducted by Xiao et al. [25] , predicted computation capacity is higher than 650 Gflops with a probability of 60% when the range of vehicle clusters is set to be 5m, and throughout the day the computation capacity is above this value. When the range is 10m, the predicted capacity is 1800 Gflops. With the increasing number of smart vehicles, the number of sensors, video cameras, and computation capacity should increase significantly in the next decade. This means that the infrastructure will exist to collect data, process it on the resource pool of a vehicular cluster and send it to the cloud for further processing. However, this infrastructure cannot be exploited unless services can be placed on it in such a way that the overall service objectives are met.",
            "cite_spans": [
                {
                    "start": 522,
                    "end": 526,
                    "text": "[25]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "Aggregate Communications Capacity Estimation"
        },
        {
            "text": "The potential computation capacity of a vehicle cluster is dependent on how dense the cluster is, in terms of the number of vehicles that are optimal for placement of a particular service request. The computation capacity is also based on how slow the vehicle cluster is, which can be predicted by the occupancy of a road segment, calculated as how much time vehicles take to pass over a detector. This time can also be derived as the sojourn time of vehicles with the RSU. According to the study conducted by Xiao et al. [25] , predicted computation capacity is higher than 650 Gflops with a probability of 60% when the range of vehicle clusters is set to be 5m, and throughout the day the computation capacity is above this value. When the range is 10m, the predicted capacity is 1800 Gflops. With the increasing number of smart vehicles, the number of sensors, video cameras, and computation capacity should increase significantly in the next decade; one estimate is for 150 million connected cars by the end of 2020 [1] . This means that the infrastructure will exist to collect data, process it on the resource pool of a vehicular cluster and send it to the cloud for further processing. However, this infrastructure cannot be exploited unless services can be placed on it in such a way that the overall service objectives are met.",
            "cite_spans": [
                {
                    "start": 522,
                    "end": 526,
                    "text": "[25]",
                    "ref_id": "BIBREF24"
                },
                {
                    "start": 1020,
                    "end": 1023,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Predicting aggregate computation capacity in a vehicular network"
        },
        {
            "text": "The utilization of the predictable vehicle trajectory and available processing capacity requires knowledge of both the microscopic behavior of individual vehicles as well as the overall macroscopic traffic flow dynamics.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Microscopic and Macroscopic traffic trajectory data"
        },
        {
            "text": "The microscopic trajectory of individual vehicles cannot be used because of privacy concerns over the use by third parties of user trajectory data. Therefore, to reduce privacy concerns, microscopic data can be considered at and between specific intersections, so there is no need to know the trajectory for the entire journey of a vehicle. This method can be predicted as the joint probability of vehicles starting at a road segment, say RS j , and ending at the road segment say RS k , expressed as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Microscopic and Macroscopic traffic trajectory data"
        },
        {
            "text": "The macroscopic traffic data includes flow level variables like traffic flow rate, traffic density, and average velocity of the traffic stream. This data is easier to collect, using the vehicle counter and cameras commonly installed in cities for traffic management purposes. Macroscopic models also include deriving the relationship between traffic speed, flow rate, and density to estimate slow-moving vehicle traffic to initiate vehicle clusters. Most traffic estimation studies utilize both microscopic and macroscopic data to estimate vehicle trajectories. We have calibrated the microscopic carfollowing model, using the macroscopic vehicle flow data from the Dublin intersection based on the flow model in \u00a73.1. For simulations, we extract the Dublin intersection road network using Open Street Map (OSM) and calibrate the simulation using the real-world Dublin traffic dataset. We generate the calibrated traffic in the Simulation for Urban Mobility (SUMO) simulator.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Microscopic and Macroscopic traffic trajectory data"
        },
        {
            "text": "The problem of deploying edge servers and utilizing the traffic density in urban centers can be resolved by introducing a Vehicular Fog marketplace, where vehicles can temporarily lease some of their video capturing, sensing, computing, and networking capabilities. This marketplace would include consumers in the form of service providers looking for reliable vehicular resources to capture and process information. The computational resources they seek can be used for applications that go beyond the motivating use case (for this paper) of crowdsourcing. Such additional use cases include intensive machine learning applications that can be implemented in a distributed manner. The producers in the form of participating vehicles offer to host applications that pay a fair price while leasing the least amount of resources. The service provider aims to process most of the This IoV marketplace has been explored in the context of implementing complex, distributed machine learning models [26] . The approach has been compared to job completion time with third party cloud providers. A similar marketplace needs to be studied for a moving cluster, in terms of monetary cost and task satisfaction.",
            "cite_spans": [
                {
                    "start": 991,
                    "end": 995,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [],
            "section": "Vehicular Fog Marketplace"
        },
        {
            "text": "In this section we first describe the terminology of the system model; then we present the the network topology and the distributed service model.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "SYSTEM MODEL"
        },
        {
            "text": "\u2022 Vehicle Clusters: We consider vehicle clusters as micro cloud-like entities [27] , whose members (vehicles) provide resources used to execute tasks that form a distributed service. \u2022 Control Node (CN): The CN is a vehicle in the cluster that acts as a gateway between the cluster and Roadside Units (RSUs); is elected based on its connectivity to the RSU and other cluster nodes (this election process is outside the scope of this paper). It collects status information about the cluster, including available resources at nodes, link capacities and it also receives service placement requests from the RSU/client. \u2022 Roadside Units (RSUs): The vehicle nodes in a cluster are supported by resource-rich base stations (RSUs), which connect the cluster to the Internet. The management of services between the RSU, Control Node (CN), and the vehicle cluster is depicted in Fig. 5 . The RSU knows the system state of the cluster, which is communicated to it by the CN. Fig. 6 : Service model depicting tasks and their interdependencies. The Type graph is scaled to the Instance Graph based on the resource state of the vehicle cluster.",
            "cite_spans": [
                {
                    "start": 78,
                    "end": 82,
                    "text": "[27]",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [
                {
                    "start": 870,
                    "end": 876,
                    "text": "Fig. 5",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 965,
                    "end": 971,
                    "text": "Fig. 6",
                    "ref_id": null
                }
            ],
            "section": "Terminology"
        },
        {
            "text": "\u2022 Task: Tasks are data collection or processing functions that can be scaled out as multiple task instances (TIs) to realise a distributed service. For example, a distributed service to realise pedestrian counting may in its specification request as many vehicle cameras as possible monitoring a given stretch of road. The TIs are the smallest unit that a task can be split into and that can be mapped to a vehicle node \u2022 Service: We consider distributed services with unidirectional, acyclic control, and data-flows. These services are specified as hierarchies of different task types, each with different functionality. Each task is typically deployed as several TIs, which can be dynamically and flexibly scaled (in terms of size per TI (up) and number of TIs per task (out)) according to resource availability and stability of the vehicle cluster at a given instant. We assume a linear chain of data-dependent tasks represented as a Type graph, in Fig. 6 . This Type graph is sent as an input to the service placement function. Based on the Type Graph, an Instance graph is created, where each task of Type p (represented as s p in Fig. 6 ) can have multiple TIs of Type p and count j (represented as s pj ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 952,
                    "end": 958,
                    "text": "Fig. 6",
                    "ref_id": null
                },
                {
                    "start": 1136,
                    "end": 1142,
                    "text": "Fig. 6",
                    "ref_id": null
                }
            ],
            "section": "Terminology"
        },
        {
            "text": "Other works that leverage parked vehicles (PVs) also deploy similar service models, where a task with a large workload is split into several sub-tasks and assigned to multiple PVs for cooperative execution [28] . \u2022 Service Placement: The process of placing the scaled Instance graph (in Fig. 6 ) on a vehicle cluster, is called the service placement problem.",
            "cite_spans": [
                {
                    "start": 206,
                    "end": 210,
                    "text": "[28]",
                    "ref_id": "BIBREF27"
                }
            ],
            "ref_spans": [
                {
                    "start": 287,
                    "end": 293,
                    "text": "Fig. 6",
                    "ref_id": null
                }
            ],
            "section": "Terminology"
        },
        {
            "text": "Our approach is to first find an optimal Instance graph, considering both service and infrastructure constraints, as this decision cannot be taken independently of the infrastructure state. This is optimized based on minimizing the total number of hops in the path between each Type 1 TI and the CN. This step reduces the bandwidth usage and selects a dense service spread, which also reduces delay in service execution. We then map the optimized Instance graph onto the physical vehicle nodes. We jointly consider both TI mapping as well as the route/flow mapping [29] , between the placed TIs. We also take into account the predictable mobility pattern of these vehicles.",
            "cite_spans": [
                {
                    "start": 565,
                    "end": 569,
                    "text": "[29]",
                    "ref_id": "BIBREF28"
                }
            ],
            "ref_spans": [],
            "section": "Terminology"
        },
        {
            "text": "We assume that I nodes participate in the formation of the vehicle cluster. We represent the cluster as a directed, connected graph, G = (V, E). The node i \u2208 V represents the vehicle nodes, each with K resource types, where k \u2208 {1...K} and i \u2208 {1...I} denote resource type k on node i. The processing capacity of each vehicle node i in respect of resource type k is represented as C k (i). The directed edge, (i 1 , i 2 ) \u2208 E, of the graph represents the link between any two vehicle nodes i 1 and i 2 . The link capacity limit is depicted as {B(i 1 , i 2 )} Kb/s between any two nodes i 1 and i 2 . If there is no direct connectivity, due to excessive range, line of sight difficulties and/or incompatible protocols then",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Network Topology"
        },
        {
            "text": "The mobility in the network is represented by the cluster cohesion probability (CCP) of each vehicle node (P (t1,t2) (i 1 )), which represents the probability of a vehicle to be in a certain segment of the road, in a particular period of time [t 1 , t 2 ]. We also consider the joint probability (P (t1,t2) (i 1 , i 2 )) of two nodes i 1 and i 2 to stay together on a given road segment over the time interval [t 1 , t 2 ], due to the inherent data dependency between two interacting task nodes, as specified in the service model. This makes it important to consider the combined probability of two nodes with data-dependent TIs to stay together until the completion of both TI tasks. We assume that this information regarding the mobility pattern, in terms of CCP of the nodes, is available at each road intersection.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Network Topology"
        },
        {
            "text": "The service model is composed of tasks, denoted as s p , each with different functionality, to be deployed on different nodes of the cluster. The functions include video streaming, data compression/processing as well as application control, for the flexible management of infrastructure links and nodes. Each task can have any number of TIs, represented as s pj , to be mapped in an optimal configuration onto vehicle nodes. The number of TIs for a task s p is represented as N sp . Each TI s pj requires a minimum demanded amount of D pjk units of each resource of type k. Furthermore, the flow demand between task s p1 and task s p2 is provided as F (s p1 , s p2 ). Note that such flows might be point-to-point (between adjacent nodes) or might need to be routed via other nodes according to flow tables maintained by the CN. Both the per resource type k demand for TI s pj , labeled by {D pj,k }, and the inter-task demand {F (s p1 , s p2 ), s p1 = s p2 } need to be specified as input to the model.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Service Model: Task and Task Instances"
        },
        {
            "text": "Each TI can support a maximum flow rate, which is derived from the processing requirement of the incoming flow, given as C (F (s p1j , s p2j ) ), i.e., the processing requirement for flow from TI s p1j to s p2j . We check that the target TI has enough processing capacity to process an incoming flow and also ensure that this leaving flow, after being streamed or processed at an TI, is directed to a single corresponding TI. Recall that each processing TI can have multiple incoming flows. We follow this rule to promote the collocation of processing nodes, whenever vehicle nodes have available resource capacity. This promotes a balanced service placement rather than over-provisioning the available infrastructure.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 123,
                    "end": 142,
                    "text": "(F (s p1j , s p2j )",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Service Model: Task and Task Instances"
        },
        {
            "text": "We aim to minimize the cost of service execution, by favoring nodes with a higher probability of staying with the vehicle cluster and promoting a \"narrower\" service placement (just enough nodes for reliability in the presence of node mobility) to reduce resource bandwidth usage. The model can be used to optimize other resources like the increasing number of accepted requests on vehicle clusters, the number of nodes used or other performance metrics like latency or service bandwidth demand, based on the requirements of the application.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Service Model: Task and Task Instances"
        },
        {
            "text": "The placement problem first scales the service type graph to an instance graph and then maps the service onto the vehicle cluster.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "CONSTRAINTS AND PROBLEM FORMULATION"
        },
        {
            "text": "Each resource type of a vehicle node is denoted as k, where k = 1 is CPU capacity, k = 2 is Memory capacity and k = 3 is sensing resource capacity. The minimum resource requirement (of type k) to host TI s pj on node i is given as D pj,k . This constraint 3 checks if the TI is mapped to node i which is denoted by the binary mapping variable M (p, j, i). The resource required by the placed TI must not exceed the availability of resource type k on the selected node. Since we are interested in using only spare resources for placing services on vehicular clusters, a minimum set of system resources must also be reserved for the operations required for the vehicles. Thus, the net available capacity for hosting collaborative services at every node i is represented as C k (i), which is the capacity of the node for such additional services. The resource constraint is formally presented as: . ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Node Resource Constraints"
        },
        {
            "text": "where the decision variable M (p, j, i) \u2208 {0, 1} is set to 1 to indicate that TI s pj is placed on node i or 0 otherwise. The use of this indicator variable ensures that TI s pj requires resources from node i, if and only if it is placed on that node.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Node Resource Constraints"
        },
        {
            "text": "The bandwidth requirement between two task s p1 and s p2 , where the latter requires data from the former, is represented by F (s p1 , s p2 ) Kb/s. We consider only onedirectional traffic, from task s p1 to s p2 . However, the model can easily be extended to consider duplex communication needs by adding extra constraints of the form 4. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Bandwidth Constraint"
        },
        {
            "text": "where i 1 = i 2 and B(i 1 , i 2 ) = 0. Constraint 4 ensures that, for each node pair labeled by i 1 and i 2 , the total bandwidth requirement, for all TI pairs s p1j and s p2j placed on nodes i 1 and i 2 respectively, is F (s p1 , s p2 ), which does not exceed the bandwidth limit B(i 1 , i 2 ) between the two nodes.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Bandwidth Constraint"
        },
        {
            "text": "In our model, two tasks that are mapped to two different vehicle nodes i 1 and i 2 , where i 1 = i 2 might not be linked directly to each other, but are connected over multiple hops. In the following bandwidth constraint, we consider the resource capacity of each link over the full path between tasks s p1 and s p2 . We consider another binary valued mapping variable m(p 1 , p 2 , j, i) which takes the value 1 for each node i that is mapped to forward the flow between TIs of type s p1j and s p2j and is part of the path between the two data dependent TIs. Thus, nodes can act as both processing nodes or forwarding nodes. The constraint 5 ensures that the bandwidth used for forwarding the flow between any connected pair of forwarding nodes should be less than the available bandwidth capacity between those two nodes. This constraint is formally presented as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Bandwidth Constraint"
        },
        {
            "text": "where i 1 and i 2 belong to I (p1j)(p2j) , which is the set of all nodes on the path between TIs s p1j and s p2j .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Bandwidth Constraint"
        },
        {
            "text": "We now formulate the constraints for placing distributed TIs and the corresponding service data flow between these TIs. We ensure that the data flow is processed before reaching the CN and the order of TIs is maintained according to the service chain or service description.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Service Model Constraints"
        },
        {
            "text": "As we propose a distributed service model, it is crucial to ensure that the TIs have enough processing capacity for the incoming flow. The constraint 6 ensures that the flow rate entering a TI should not exceed the processing capacity of that TI. The processing capacity of TI s p2j is represented as C(F (s p1j , s p2j )), which is the function of incoming flow from s p1j to s p2j . This constraint is given as: \u2200i1 \u2208 {1, . . . , I}; i2 \u2208 {1, . . . , I}; i1 = i2 \u2200p 1 ,j 1 ;p 2 ,j 2 ;p 1 =p 2 m(p1, p2, j1, i1)C(F (sp 1 j , sp 2 j )) \u2264 C(sp 2 j )",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Flow Rate Constraint"
        },
        {
            "text": "where C(s p2j ) represents the processing capacity of TI s p2j . This TI is placed on the node that receives the incoming flow to be processed, from TI s p1j . Here F (s p1j , s p2,j ) represents the flow that has been processed at TI s p1j or is forwarded from s p1j specifically for processing (not forwarding).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Flow Rate Constraint"
        },
        {
            "text": "Constraint 7 ensures that the incoming to outgoing flow rate ratio, at a node, is governed by the data processing factor of the TI. \u03b1 pj represents the data reduction/processing factor for a task with Type p resource. The constraint is presented as: ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Flow Conservation Constraint"
        },
        {
            "text": "where 0 \u2264 \u03b1 pj1 \u2264 1 and F (s p1j , s p2j ) represents the incoming flow to be processed at TI s p2j . F (s p1j , s p2j )",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Flow Conservation Constraint"
        },
        {
            "text": "represents the outgoing flow, that has been processed at the TI s p2j . This constraint ensures that all the necessary pre-processing is performed on the flow, at each TI before the flow reaches the CN. Since nodes in our model can be forwarding nodes, or processing nodes , or have both a processing and forwarding role, the data processing factor can lie in the range from [0,1].",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Flow Conservation Constraint"
        },
        {
            "text": "Constraint 8 ensure that the flow traverses the task instance graph in the order specified by the service model, we require that once the flow is processed at one node, it is directed to the \"next\" node with at least one \"subsequent\" TI (according to the Type Graph), i.e.,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Task Order Constraints"
        },
        {
            "text": "where the decision variable M (p, j, i 1 ) represents the TI mapped to node i 1 , F (s p1j , s p2j ) is the flow processed at the node i 1 . The right hand side of the equation employs mapping instance M (p + 1, j, i 2 ) to show that a subsequent TI of type s (p+1)j is mapped on the node i 2 , which has enough resource capacity.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Task Order Constraints"
        },
        {
            "text": "As forwarding nodes are introduced in constraint 4 to facilitate these multi-hop flows, it is crucial to preserve the order of tasks at the service level. To ensure that the flow is directed towards a subsequent TI, in case there is no direct path between two placed TIs, we also ensure that the forwarding node is on the path joining nodes (i 1 , i 2 ) with TIs s pj and s (p+1)j mapped on them. This is represented as constraint 9: \u2200i1 \u2208 {1, . . . , I}; i2 \u2208 {1, . . . , I }; i1 = i2 \u2200p,j;p+1,j 2 ;p =p+1 m(p, p + 1, j, i1)F (sp 1 j , sp 2 j ) \u2265 m(p, p + 1, j, i2) (9) where m(p, p + 1, j, i 1 ) and m(p, p + 1, j, i 2 ) are mapping variables with 0 or 1 value. Here m(p, p + 1, j, i 1 ) represents node i 1 as a forwarding node for processed data flow F (s p1j , s p2j ), between TIs s pj and s (p+1)j , and m(p, p + 1, j, i 2 ) represents the next forwarding node for the same flow.",
            "cite_spans": [
                {
                    "start": 567,
                    "end": 570,
                    "text": "(9)",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Task Order Constraints"
        },
        {
            "text": "In order to use the mobility of slow moving vehicles in our favor, it is crucial to incorporate mobility awareness in the infrastructure model. There are many ways to predict the mobility patterns of a group of vehicles. Here we consider all nodes that have a higher probability to chose a similar road segment (S i ), based on their historical mobility patterns, to be candidates for the cluster. We assume that each RSU maintains a table of known vehicle nodes, with their probability of taking a particular road segment (say S 1 ) at the next intersection. Vehicles that do not have entry in the table, but are willing to offer their resources, can be added to the table. However, they would be assigned the average road exit probabilities of known vehicles, with a low confidence score. As the history of a given vehicle builds up We have calibrated the microscopic car-following model, using the macroscopic vehicle flow data from the Dublin intersection based on the flow model in \u00a73.1. For simulations, we extract the Dublin intersection road network, as depicted in Fig. 7 , using Open Street Map (OSM) and calibrate the simulation using the real-world Dublin traffic dataset. We generate the calibrated traffic in the Simulation for Urban Mobility (SUMO) simulator. The transition matrix stores the mobility behavior of every candidate vehicle, for a particular time period. This table can be updated over time to increase the accuracy of mobility awareness. Each RSU thus has many tables stored for different time stamps during the day. We model the mobility of vehicles as a Markov Model, where each road segment is a state. As mentioned in [30] , the vehicle node that moves from one road segment to the other represents a transition in the Markov process. But instead of considering the detailed trajectory of a single vehicle, the matrix stores all possible probabilities for a vehicle to stay at the segment or take another road segment with a certain probability. Thus, every intersection in the service zone maintains the probability of a vehicle that follows Markov memory-less property, wherein the node transitions from state i to i+1 and is independent of state i-1. Based on the mobility patterns, different vehicle clusters can be formed for the service execution. In this paper, we only consider the nodes with a high probability of going from road segment A to C (in Fig. 2) , as continuing to belong to the cluster. Therefore, the cluser cohesion probability (CCP) of a given vehicle node is the probability of that node going straight ahead at the next intersection.",
            "cite_spans": [
                {
                    "start": 1652,
                    "end": 1656,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [
                {
                    "start": 1074,
                    "end": 1080,
                    "text": "Fig. 7",
                    "ref_id": "FIGREF9"
                },
                {
                    "start": 2392,
                    "end": 2399,
                    "text": "Fig. 2)",
                    "ref_id": null
                }
            ],
            "section": "Cluster cohesion probability"
        },
        {
            "text": "To incorporate the mobility of hosting nodes, we scale the resource capacity of each node in the vehicle cluster with a weighting factor, i.e., the probability of a node to stay with the cluster for the duration of service execution, i.e., from time t 1 to t 2 , which is given as P (t1,t2) (i). This is because a node with enough resource capacity might not have a high probability of staying with the vehicle cluster, so this needs to be considered when placing TIs on that node. Placing TIs on such nodes can waste computation and bandwidth resources if the node leaves the cluster prematurely, and can also cause the service to fail. Thus, we scale the vehicle node capacity with its CCP, such that the higher the CCP (probability of staying with the cluster), the lower the costs of TI execution on that node. The Node Cost is given as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Service Placement Cost"
        },
        {
            "text": "where M (p, j, i) is the mapping function of TI s pj to node i, with node resource capacity of C k (i). To add the costs, we consider the ratio of required node capacity (D pj,k ) with the available node capacity (C i (k)).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Service Placement Cost"
        },
        {
            "text": "Similarly we scale the link capacity of any two nodes with data-dependent TIs, with the joint probability of the two nodes to stay together for the duration of service execution (t 1 to t 2 ), given as P (t1,t2) (i 1 , i 2 ). The total link cost for service execution is given as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Service Placement Cost"
        },
        {
            "text": "where m(p, p + 1, j 1 , i 1 ).m(p, p + 1, j 2 , i 2 ) \u2208 {0, 1} is an indicator that two nodes that form part of the path joining two TIs of task s p1j and s (p+1)j type. Similarly M (p 1 , j, i 1 ).M (p 2 , j, i 2 ) indicates that two nodes, one hosting TI s p1j at node i 1 and the other TI s p2j at node i 2 , have a direct link between them. For adding up the link cost and the operating cost on each node, we use the ratio of required bandwidth resource (F (s p1j , s p2j )) with the available bandwidth (B(i 1 , i 2 )) at each link that forms part of the service placement.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Service Placement Cost"
        },
        {
            "text": "The problem is formulated as a bi-objective optimization. We hierarchically solve the optimization with the first objective as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Objective Function"
        },
        {
            "text": "When placing tasks on nodes, it is more efficient to ensure that the placement plan takes account of both task dependencies and of inter-node network distances. For example, if s p2 depends on s p1 , it is advisable to ensure that each is placed either on the same node or on nodes that are one hop away from each other. However, this requirement could make it difficult to find a feasible placement. Hence, we seek to ensure that the network distance between any two selected nodes with data dependency is minimized for efficient service placement. The hop count between two placed TIs is minimized when: where H(i 1 , i 2 ) is the hop count between two nodes i 1 and i 2 for the flow F (s p1j , s p2j ) between tasks s p1 and s p2 . In the model, mapping variable m(p 1 , p 2 , j, i) applies to a forwarding node i along the path between TIs j of type p 1 and p 2 , in cases where there is no direct link between the nodes hosting these TIs.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Adjacency TI placement"
        },
        {
            "text": "We then solve the model for the next objective function, which minimizes the Total Cost spent on service execution:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Total Cost of Service Placement"
        },
        {
            "text": "where \u03bb i are non-negative and sum to 1. When evaluating our model, we set \u03bb 1 = \u03bb 2 = 0.5, i.e., we give equal weight to node and link cost for simplicity. To come to this decision, we carry out a sensitivity analysis and generate random values for \u03bb 1 (\u03bb 2 = 1 -\u03bb 1 ), and plot total cost for the same resource-poor and resource-rich clusters. In the event of low node capacity or low link capacity, the optimization takes care of the number of TIs deployed, with the objective of minimizing total cost. Thus, as depicted in Fig. 8 , we get total cost values in a similar range for almost every weight. We chose both \u03bb 1 and \u03bb 2 = 0.5, as it gives lower cost in both cases and other values do not significantly affect cost. Also, in hierarchical optimization, the first objective function effectively gets a higher priority than the next. We give an explanation of this choice in Section 6.2. Thus, minimizing the hop counts is the first priority of the optimization and then equal priorities are given to both node and link cost.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 527,
                    "end": 533,
                    "text": "Fig. 8",
                    "ref_id": "FIGREF11"
                }
            ],
            "section": "Total Cost of Service Placement"
        },
        {
            "text": "The placement of a linear application graph on tree graph, for data center topology has been widely studied in the literature. In [10] , they aim to minimize the maximum weighted cost on each physical node and link, ensuring that no single element gets overloaded and becomes a point of failure. They prove that the placement of a tree application graph onto a tree physical graph for the objective function, with or without pre-specified junction node placement, is NP-hard. We first scale a linear Type graph to a tree graph (Instance Graph) and then map it to a general directed graph (vehicle cluster). The mobile-edge computing application placement problem does not consider the changes in resource state due to the movement of infrastructure. Thus, the initial placement of service chains on a vehicle cluster can be considered similar to the application mapping problem. The application or workload placement problem is a hard problem to solve, especially while considering the joint node and link mapping. We extended this problem from a traditional NFV service chaining problem, which has fixed source and destination nodes, with a fixed length of the service chain. In our case, due to the lack of knowledge of individual vehicle's mobility dynamics, and the need for a robust placement, we scale the linear chain to multiple data collection (Type 1) TIs. In our model, if the data collection TI is unable to find a processing placement instance on the vehicle cluster, it forwards the data to the RSU. Thus, the model includes both horizontal and vertical scaling of the service. We also place more than one application on the vehicle cluster to promote multi-tenancy, which improves resource efficiency but also makes it harder to find a solution.",
            "cite_spans": [
                {
                    "start": 130,
                    "end": 134,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "Problem Complexity"
        },
        {
            "text": "We highlight two different application types that are suitable for the model described in this paper. The type-based service for distributed video analytics is given as an input to the service placement problem. The service is described as a linear chain, with one task of Type 1 type, that is mapped to a vehicle with a dash camera or smart camera installed on it and the user is willing to lease their vehicle resources in exchange for some incentive. This data is streamed to a nearby vehicle that hosts a task of Type 2, followed by another vehicle hosting a task of Type 3. Such tasks execute lightweight video pre-processing like data compression or sub-sampling that reduces the size of the video data, based on the application requirement. Some examples include:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Application Types"
        },
        {
            "text": "\u2022 Modality based pre-processing [31] : multimedia data may have more than one modality, e.g., video data with image and speech. This requires data separation. \u2022 Data cleaning: only frames that have the required data can be separated from other redundant frames, especially in the case of more than one source of video data. This is relevant for a Fog computing scenario, where the computation and storage capacity is limited. \u2022 Data Reliability: Other application like detecting video from unreliable data sources which are not subscribed to the service can also be detected and filtered at this stage.",
            "cite_spans": [
                {
                    "start": 32,
                    "end": 36,
                    "text": "[31]",
                    "ref_id": "BIBREF30"
                }
            ],
            "ref_spans": [],
            "section": "Application Types"
        },
        {
            "text": "Once the processing is complete at the cluster, this data is then sent to the CN which forwards the data to the Fig. 9 : Pedestrian Detection service concepts edge/cloud for further high computational processing, like vision-based processing for video crowd-sourcing applications and traffic density estimation using convolutional neural networks, etc. We specify two different applications, with different resource requirements, that we place together on the vehicle cluster:",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 112,
                    "end": 118,
                    "text": "Fig. 9",
                    "ref_id": null
                }
            ],
            "section": "Application Types"
        },
        {
            "text": "6.1.1 Application I: High-processing video streaming applications",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Application Types"
        },
        {
            "text": "The first application is a pedestrian detection application that can be used to study the popularity of a coffee shop or a gas station, based on the number of pedestrians detected in the stream of video data. This data is collected by vehicles standing at a traffic light or an intersection, close to the coffee shop, say. This data has local relevance/scope and hence, most of this data should be processed locally, based on the available resources on the vehicle cluster. Such applications can be considered compute-intensive and require higher processing capacity and so large amounts of unnecessary data should not be uploaded to the cloud before processing. For this application, 1 to 6 camera or Type 1 TIs are used in the Evaluation section (6.2), because more camera instances increase the richness of context data. The Type 2 TIs aggregate and process this video stream from different Type 1 TIs as depicted in the Concept Diagram of the application in Fig. 9 . This TI can aggregate the data from different sources based on content or location similarity. The functionality of Type 3 and Type 4 TIs is applicationspecific. In the compute-intensive application, lightweight video processing is performed on the video stream to transform it into other forms, e.g., capturing specific frames with license plates, or highlighting pedestrians or other objects of interest in each scene. We assume that the data is reduced to 40-50% of its size, by Type 2 instances and to 20% of its original size after processing by Type 3 TIs. This preprocessed data is then sent to the CN, which forwards it to the RSU.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 962,
                    "end": 968,
                    "text": "Fig. 9",
                    "ref_id": null
                }
            ],
            "section": "Application Types"
        },
        {
            "text": "To validate the service model, we implement this applications on an existing simulator called Yet Another Fog Simulator (YAFS) [32] . It is a python-based discrete-event simulator that supports resource allocation and network design in Cloud, Fog or Edge Computing systems. We chose the simulator because it supports mobility of entities, which can act as both sources of data, called workloads or processing nodes. The simulator also provides a Distributed Data Flow based application model that allows task replicas and dynamic placement of tasks. The applications are represented as directed acyclic graphs (DAGs), where nodes represent service modules and links represent data dependency between modules. The simulator also incorporates strategies for dynamic service selection, placement and routing. Fig. 10 , we consider the average node utilization in the placement of service described as Application I. As suggested by the authors in [32] , we calculate the node utilization as the sum of the service times at each node divided by the total simulation time. We compare the average node utilization between:",
            "cite_spans": [
                {
                    "start": 127,
                    "end": 131,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 944,
                    "end": 948,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                }
            ],
            "ref_spans": [
                {
                    "start": 806,
                    "end": 813,
                    "text": "Fig. 10",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Application Types"
        },
        {
            "text": "\u2022 Cloud placement: all task placed in Cloud \u2022 Edge/RSU placement: all tasks placed on edge/RSU \u2022 Mobile node/vehicle placement (unreplicated tasks):",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Application Types"
        },
        {
            "text": "all tasks placed on mobile nodes/vehicles (without replicated TIs) \u2022 Mobile node/vehicle placement (replicated tasks) (our approach): all tasks placed as multiple TIs on mobile nodes/vehicle In Fig. 10 , for variable workloads that are generated using custom temporal distributions, we compare placement for three and six video collection TIs of Type 1. For three Type 1 TIs, only mobile node placement with unreplicated tasks result in better node utilization, compared to our approach. For six Type 1 TIs, our approach of replicating processing TIs of Type 2 and Type 3 on different mobile nodes, results in lesser average node utilization compared to all the other approaches. This validates that our service model of replicating tasks is efficient from node utilization point-of-view, as compared to other placement approaches.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 194,
                    "end": 201,
                    "text": "Fig. 10",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Application Types"
        },
        {
            "text": "Application II uses vehicles as moving sensors for video collection. Applications of this category includes measuring the traffic density at an intersection in real-time, or surveying road conditions for road traffic mapping. Generally, the focus is on passive video collection; most processing does not happen in the cluster. Such applications perform minor pre-processing tasks on data in the vehicle cluster. Such pre-processing includes data sampling, segmentation or encoding and is carried out on Type 2 and Type 3 instances. Thus, the data is reduced to 80% of its original size before being sent to the cloud for executing compute-intensive tasks, possibly applying complex machine learning to the data.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Application II: Low-processing video streaming application"
        },
        {
            "text": "We solve the constrained optimization problem using the Gurobi solver, which is a powerful mathematical sover, on an Intel i7-6500U dual-core processor running at 2.50 GHz. The solver uses a Linear Programming (LP) based branch and bound algorithm to solve the Mixed Integer Programming (MIP) problem.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Evaluation"
        },
        {
            "text": "We place Applications I and II together on a vehicle cluster with 10 nodes, since more nodes in a cluster increases the time and space complexity of the problem. The cluster is a directed, connected graph, where each node has either video capturing or data processing functionality. We consider two types of resource states of the cluster, based on the mix of vehicles with one of three resource profiles: 1) Large node type: 5 CPUs, 500Mb disk, 6MB/s bandwidth; 2) Medium node type: 3 CPUs, 250Mb disk, 4MB/s bandwidth; and 3) Small node type: 2 CPUs, 100Mb disk, 2MB/s bandwidth. A resource-rich cluster has 50% large, 25% medium and 25% small resource vehicle nodes. A resource-poor cluster has 25% large, 50% medium and 25% small vehicle nodes. We consider a service chain with 2 processing instances, which makes the chain length = 3, including Type 1 instances and the CN. We ran the optimization for the longer chain length, which takes a much longer time to find a solution, specially for a higher number of video generating instances, with higher data rate. The worst case scenario was for a service chain of length 6 with 5 Type 1 instances, which took more than 5 hours to find a solution.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Evaluation"
        },
        {
            "text": "The 'type graph' is scaled as an 'instance graph', with data dependency and resource requirements. We use a service chain description similar to [33] , without making it bidirectional. We impose multi-tenancy in the model, as it is beneficial to share TIs between applications, especially when more than one task replica is placed on the vehicle cluster.",
            "cite_spans": [
                {
                    "start": 145,
                    "end": 149,
                    "text": "[33]",
                    "ref_id": "BIBREF32"
                }
            ],
            "ref_spans": [],
            "section": "Evaluation"
        },
        {
            "text": "For this paper, we consider that all nodes stop at an intersection and the RSU first selects a CN, which is one hop away from the RSU and is well connected to more than 70-80% of the nodes in the cluster. This CN needs to have ample communication and computation resources to manage the resource and cluster state. We also assume that the mobility behavior, in terms of the CCP is based on the mobility pattern of each vehicle, collected over its previous trips in this area. We derive the CCP by running the calibrated SUMO simulator, using the real vehicle density data from Dublin traffic, as explained in \u00a75.3. We have broadly classified cluster states as stable and unstable. The stable clusters are formed when many vehicles follow a single trajectory, along with the CN. We consider two cluster states: stable with a CCP in the range [0.4,0.8] and unstable with a probability distribution between [0.2,0.6].",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Evaluation"
        },
        {
            "text": "We consider three use cases for solving the optimization. For Case A, we take a resource-constrained cluster with low data rates of streaming video, and compare the node processing cost for stable and unstable cluster probabilities. We vary the number of Type 1 instances from 2 to 6, to study the effect of the amount of data on service placement and resource usage. When we use lower video data rates, we see that the stable cluster uses less resources than the unstable cluster. For Case B, resource-rich case (Fig. 11b) with lower data rates, the node cost is significantly less, compared to Case A (Fig. 11a) , as it is easier to place more than one TI on nodes having more processing resources, for both stable and unstable cluster, resulting in better resource utilization. But in this case, the stable cluster still used less resource than the unstable cluster. The solution time is also significantly less for a resource-rich cluster: to find the optimal placement for Case B takes an average of 86s, versus a resourceconstrained cluster (Case A: 300.7s). We also observed that weighting both objectives (adjacency TI placement and total cost of service placement) equally solves the problem faster than hierarchical solving, but the resulting placement uses more network resources.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 513,
                    "end": 523,
                    "text": "(Fig. 11b)",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 603,
                    "end": 613,
                    "text": "(Fig. 11a)",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Evaluation"
        },
        {
            "text": "For link cost, the resource-constrained cluster (Case A) has significantly higher resource usage (Fig. 11d) . The nearby nodes might not have enough processing capacity, so dependent TIs need to be placed on farther nodes, leading to more link utilization. The link capacity is also less in the resource-constrained cluster which adds to the cost. The Link Cost in the resource-rich cluster (Case B) (Fig. 11e) is significantly less and, in both cases, stable clusters outperform unstable clusters. The variability in link cost is more in this case, as the amount of video data processing in both applications is significantly different. Application I reduces the data to approx. 20% whereas Application II reduces the data to 80%. Hence, the link cost varies based on the number of Type 1 TIs in each application. But as we double the data rate of the video data in a resource-rich cluster (Case C), the unstable cluster utilizes much more computation resource (Fig. 11c) . The difference between stable and unstable cluster node cost increases significantly as the Type 1 instances increase from 1 to 6. The unstable cluster uses slightly more resources, compared to the stable cluster in the low data rate case (Case B: Fig. 11b ). For the link cost in this case (Fig. 11f) , for fewer Type 1 TIs, stable and unstable cluster incur almost the same cost. The variability increases as the number of video instances increases.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 97,
                    "end": 107,
                    "text": "(Fig. 11d)",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 400,
                    "end": 410,
                    "text": "(Fig. 11e)",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 962,
                    "end": 972,
                    "text": "(Fig. 11c)",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 1223,
                    "end": 1231,
                    "text": "Fig. 11b",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 1266,
                    "end": 1276,
                    "text": "(Fig. 11f)",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Evaluation"
        },
        {
            "text": "We compare the optimal solution of our model to a naive solution introduced in [34] . The Autonomous Vehicular Edge Computing + Naive solution selects combinations of nodes with the intention of minimising latency, i.e., they have the lowest processing time and transmission time. As we focus on data collection services, we do not focus on the time needed to send results to the requesting node (typically the CN). As described in [17] , they preferentially select nodes with the highest available link and node capacities. As seen in Fig. 12 , the node cost for the naive approach increases significantly as the number of Type 1 instances increases. We get a similar result for link cost in Fig. 13 where the cost doubles for 5 and 6 Type 1 TIs, in comparison to the optimal solution. The naive approach results in less latency compared to the optimal approach, but does not take account of node mobility, so is more likely to fail. By contrast, our objective reduces the cost of service execution and selects more reliable nodes that reduce the need for service reconfiguration. Of course, delay is a crucial parameter for safety-related services like lane changing, accident prevention and autonomous driving. However, delay can also be reduced by adding more resources and using them judiciously: by shortening service chains and placing many processing TIs of the same type in parallel.",
            "cite_spans": [
                {
                    "start": 79,
                    "end": 83,
                    "text": "[34]",
                    "ref_id": "BIBREF33"
                },
                {
                    "start": 432,
                    "end": 436,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [
                {
                    "start": 536,
                    "end": 543,
                    "text": "Fig. 12",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 693,
                    "end": 700,
                    "text": "Fig. 13",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Evaluation"
        },
        {
            "text": "We introduce a Penalty function to reflect the cost of nodes hosting TIs leaving the cluster. This penalty is related to both link and node cost. If a TI-hosting node leaves the cluster, the node cost incurred by it does not contribute to the service requirement. In case of service reconfiguration, the leaving node will have to send the service state back to the CN, which requires bandwidth usage. We penalize placements where TIs are placed on nodes with a probability lower than the threshold probability (0.6). There will be another added cost on re-configuring the failing service, but we do not consider service reconfiguration cost in our current model. The Penalty function for selecting two nodes with a joint probability (to stay with the cluster) less than the threshold probability is given as: P (\u03bb (i 1 ,i 2 ) ) = \u03bb(P (t 1 ,t 2 ) (i1, i2) \u2212 P T hreshold ) (14) where \u03bb can take values like 5,10,..,100, based on how strongly we want to penalize task placement on nodes with lower CCP. As shown in Fig. 14a , for a resource constrained cluster (Case A), the penalty cost added to the objective function for an unstable cluster is higher than the penalty for a stable cluster. For the resource-rich cluster (Case B), the model places very few TIs on nodes with low CCP, and hence the additional penalty cost is zero, in almost all the resource-rich test cases, for both stable and unstable clusters. This suggests that the model considers mobility in an intuitive way. We also plot the best and worst case hop count (Fig. 14b) , for the same resource-constrained cluster (Case A), when the total hop count is first minimized for service selection. It is observed that the hops increase significantly as the number of Type 1 instances increase.",
            "cite_spans": [
                {
                    "start": 872,
                    "end": 876,
                    "text": "(14)",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [
                {
                    "start": 1013,
                    "end": 1021,
                    "text": "Fig. 14a",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 1530,
                    "end": 1540,
                    "text": "(Fig. 14b)",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Penalty Function"
        },
        {
            "text": "We emulate the scenario of a vehicle cluster with 10 nodes for Application II. We simulate two video streaming nodes that send 4 minutes long video in different resolutions (240p and 480p) and at different data rates. We use a SUMO-Mininet-WiFi [35] set-up, where the RSU receives a service monitoring request at the same Dublin intersection and forwards the request to the CN. We use the SUMO simulator to generate urban mobility at a busy intersection. Mininet-WiFi maps the cars to an emulated, software-defined network with virtualized WiFi station and access points. The video stream is forwarded to a participating node that aggregates the data before sending it to a CN that forwards it to the RSU. We monitor the bandwidth usage for the two collected streams and compare it to the bandwidth efficiency of the processed stream received at the RSU. As depicted in Fig. 15 , we get significantly better bandwidth efficiency at the RSU because of the data aggregation in the model.",
            "cite_spans": [
                {
                    "start": 245,
                    "end": 249,
                    "text": "[35]",
                    "ref_id": "BIBREF34"
                }
            ],
            "ref_spans": [
                {
                    "start": 870,
                    "end": 877,
                    "text": "Fig. 15",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Mininet-WiFi Simulation"
        },
        {
            "text": "This paper focuses on the concept of scaling and placement of distributed services on vehicle clusters, harnessing the knowledge of mobility patterns. The novelty of the work is in considering urban road traffic as a potential site for deploying services. The services can be scaled dynamically, based on the resource and mobility state of the multihop cluster. We introduce a flow model for the traffic, study predictability in vehicular flow, and estimate communication capacity using real vehicular traffic data. We introduce a detailed mathematical model for the mobilityaware scaling of distributed services based on resource-rich and resource-poor as well as stable and unstable cluster states. We solve the constrained bi-objective optimization problem, introduce data collection and data pre-processing applications, and validate our model for different resource As part of the future work, a decentralized, mobilityaware task offloading algorithm will be introduced that solves the optimization problem in real-time. To make the service model more practical, we will introduce a distributed service reconfiguration scheme to send collected data or service state back to the vehicle cluster. We aim to use hyper-parameter optimization techniques to decide the number of TIs to be deployed in real-time, for satisfying the service placement requirements. We will focus on the replacement of concurrent, data-dependent tasks as part of the failure recovery scheme.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "CONCLUSION AND FUTURE WORK"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Vehicular fog computing: Enabling real-time traffic management for smart cities",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Ning",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Wireless Communications",
            "volume": "26",
            "issn": "1",
            "pages": "87--93",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Vehicular fog computing: Architecture, use case, and security and forensic challenges",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Lu",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "R"
                    ],
                    "last": "Choo",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Communications Magazine",
            "volume": "55",
            "issn": "11",
            "pages": "105--111",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Resource allocation for vehicular fog computing using reinforcement learning combined with heuristic information",
            "authors": [
                {
                    "first": "S.-S",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Internet of Things Journal",
            "volume": "7",
            "issn": "10",
            "pages": "10--450",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Vehicular fog computing: A viewpoint of vehicles as the infrastructures",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Hou",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "IEEE Transactions on Vehicular Technology",
            "volume": "65",
            "issn": "6",
            "pages": "3860--3873",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Edgecare: Leveraging edge computing for collaborative data management in mobile healthcare systems",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Yu",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Shu",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Access",
            "volume": "7",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Mobile edge computing-enabled internet of vehicles: Toward energy-efficient scheduling",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Ning",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "J P C"
                    ],
                    "last": "Rodrigues",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Guo",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Network",
            "volume": "",
            "issn": "",
            "pages": "1--8",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Efficient 3d road map data exchange for intelligent vehicles in vehicular fog networks",
            "authors": [
                {
                    "first": "I",
                    "middle": [
                        "W"
                    ],
                    "last": "Ho",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "C"
                    ],
                    "last": "Chau",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [
                        "R"
                    ],
                    "last": "Magsino",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Jia",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Transactions on Vehicular Technology",
            "volume": "69",
            "issn": "3",
            "pages": "3151--3165",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "A new vehicular fog computing architecture for cooperative sensing of autonomous driving",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Du",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Leng",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Mao",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Access",
            "volume": "8",
            "issn": "",
            "pages": "10--997",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Optimizing the placement of data collection services on vehicle clusters",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Sharma",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Butler",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Jennings",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Kennedy",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Loomba",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "2018 IEEE 29th Annual International Symposium on Personal, Indoor and Mobile Radio Communications (PIMRC)",
            "volume": "",
            "issn": "",
            "pages": "1800--1806",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Online placement of multicomponent applications in edge computing environments",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Zafer",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "K"
                    ],
                    "last": "Leung",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Access",
            "volume": "5",
            "issn": "",
            "pages": "2514--2533",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Vehicular cloud computing",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Gerla",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "2012 The 11th Annual Mediterranean Ad Hoc Networking Workshop (Med-Hoc-Net)",
            "volume": "",
            "issn": "",
            "pages": "152--155",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Reinforcement learning based task offloading and take-back in vehicle platoon networks",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Ma",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Gong",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "2019 IEEE International Conference on Communications Workshops (ICC Workshops)",
            "volume": "",
            "issn": "",
            "pages": "1--6",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Computation offloading and resource allocation for cloud assisted mobile edge computing in vehicular networks",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Gong",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Transactions on Vehicular Technology",
            "volume": "68",
            "issn": "8",
            "pages": "7944--7956",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Vehicular fog computing for video crowdsourcing: Applications, feasibility, and challenges",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Zhu",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Pastor",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Xiao",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Ylajaaski",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "IEEE Communications Magazine",
            "volume": "56",
            "issn": "10",
            "pages": "58--63",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Jamcloud: Turning traffic jams into computation opportunities -whose time has come",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Xiao",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Hou",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Hui",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Access",
            "volume": "",
            "issn": "",
            "pages": "1--1",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Mobility dataset generation for vehicular social networks based on floating car data",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Kong",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Xia",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Ning",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Rahim",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Cai",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Gao",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Ma",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "IEEE Transactions on Vehicular Technology",
            "volume": "67",
            "issn": "5",
            "pages": "3874--3886",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Folo: Latency and quality optimized task allocation in vehicular fog computing",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Zhu",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Internet of Things Journal",
            "volume": "",
            "issn": "",
            "pages": "1--1",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Cooperative fog computing for dealing with big data in the internet of vehicles: Architecture and hierarchical resource management",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Chao",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Communications Magazine",
            "volume": "55",
            "issn": "12",
            "pages": "60--67",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Vehicular micro clouds as virtual edge servers for efficient data collection",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Hagenauer",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Proceedings of the 2Nd ACM International Workshop on Smart, Autonomous, and Connected Vehicular Systems and Services, ser. CarSys '17",
            "volume": "",
            "issn": "",
            "pages": "31--35",
            "other_ids": {
                "DOI": [
                    "http:/doi.acm.org/10.1145/3131944.3133937"
                ]
            }
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "An application placement technique for concurrent iot applications in edge and fog computing environments",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Goudarzi",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "S"
                    ],
                    "last": "Palaniswami",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Buyya",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Transactions on Mobile Computing",
            "volume": "",
            "issn": "",
            "pages": "1--1",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Fogcomputing-enabled cognitive network function virtualization for an information-centric future internet",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Dong",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Ota",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Communications Magazine",
            "volume": "57",
            "issn": "7",
            "pages": "48--54",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Mobility increases the capacity of ad-hoc wireless networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Grossglauser",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Tse",
                    "suffix": ""
                }
            ],
            "year": 2001,
            "venue": "Proceedings IEEE INFOCOM 2001. Conference on Computer Communications. Twentieth Annual Joint Conference of the IEEE Computer and Communications Society (Cat. No.01CH37213)",
            "volume": "3",
            "issn": "",
            "pages": "1360--1369",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Towards a simple relationship to estimate the capacity of static and mobile wireless networks",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Mao",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Lin",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Ge",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "IEEE Transactions on Wireless Communications",
            "volume": "12",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Capacity of cooperative vehicular networks with infrastructure support: Multiuser case",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Mao",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Liang",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "IEEE Transactions on Vehicular Technology",
            "volume": "67",
            "issn": "2",
            "pages": "1546--1560",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Quantitative analysis for capabilities of vehicular fog computing",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Xiao",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Hou",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Information Sciences",
            "volume": "501",
            "issn": "",
            "pages": "742--760",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Deepmarket: An edge computing marketplace with distributed tensorflow execution capability",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Yerabolu",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Gomena",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Patel",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Bhise",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Aryafar",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE INFOCOM 2019 -IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)",
            "volume": "",
            "issn": "",
            "pages": "32--37",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "How to keep a vehicular micro cloud intact",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Higuchi",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Dressler",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Altintas",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "2018 IEEE 87th Vehicular Technology Conference (VTC Spring)",
            "volume": "",
            "issn": "",
            "pages": "1--5",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Optimal task assignment with delay constraint for parked vehicle assisted edge computing: A stackelberg game approach",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Yu",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Communications Letters",
            "volume": "",
            "issn": "",
            "pages": "1--1",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Joint optimization of service function placement and flow distribution for service function chaining",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Jang",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Suh",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Pack",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "D\u00e1n",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Journal on Selected Areas in Communications",
            "volume": "35",
            "issn": "11",
            "pages": "2532--2541",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Social clustering of vehicles based on semi-markov processes",
            "authors": [
                {
                    "first": "L",
                    "middle": [
                        "A"
                    ],
                    "last": "Maglaras",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Katsaros",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "IEEE Transactions on Vehicular Technology",
            "volume": "65",
            "issn": "1",
            "pages": "318--332",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "Deployment of iov for smart cities: Applications, architecture, and challenges",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Ang",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "P"
                    ],
                    "last": "Seng",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "K"
                    ],
                    "last": "Ijemaru",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "M"
                    ],
                    "last": "Zungeru",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Access",
            "volume": "7",
            "issn": "",
            "pages": "6473--6492",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Yafs: A simulator for iot scenarios in fog computing",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Lera",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Guerrero",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Juiz",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Access",
            "volume": "7",
            "issn": "",
            "pages": "91--745",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "Scaling and placing bidirectional services with stateful virtual and physical network functions",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Dr\u00e4xler",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Schneider",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Karl",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "2018 4th IEEE Conference on Network Softwarization and Workshops (NetSoft)",
            "volume": "",
            "issn": "",
            "pages": "123--131",
            "other_ids": {}
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "Ave: Autonomous vehicular edge computing framework with aco-based scheduling",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Feng",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Ji",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Transactions on Vehicular Technology",
            "volume": "66",
            "issn": "12",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "From theory to experimental evaluation: Resource management in software-defined vehicular networks",
            "authors": [
                {
                    "first": "R. Dos Reis",
                    "middle": [],
                    "last": "Fontes",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Campolo",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "Esteve"
                    ],
                    "last": "Rothenberg",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Molinaro",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Access",
            "volume": "5",
            "issn": "",
            "pages": "3069--3076",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF1": {
            "text": "Vehicle Clusters form, but membership changes over time. Clusters accept service placement requests from RSUs and perform scaling and placement of the accepted service.Fig (a)and (b) depict the state of the cluster over time t 1 and t 2 . The mobility of the vehicles requires cluster re-initiation.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Fig. 3c), 10 (Fig. 3d) and 15 (Fig. 3e)minutes.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Traffic Prediction using real vehicle density data; these data depict the consistent and predictable vehicle densities at the intersection for all of the four weeks analyzed. of time. Density can also be calculated using occupancy of vehicles which is calculated as the percentage of time in The level of service (LOS) parameter for the I5-N freeway to understand the traffic conditions at different times of the day. The y axis shows the percentage of vehicles in each grade of LOS. LOS A depicts virtually free flow to LOS F which represents breakdown condition",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "System Model depicting the management between the RSU, CN and the vehicle cluster information on the vehicle cluster and collect as much data as possible, subject to the limitations of the infrastructure made available, collectively, by the vehicles in the cluster.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "\u2200i \u2208 {1, . . . , I}, k \u2208 {1, . . . , K}, \u2200p,j M (p, j, i).D pj,k \u2264 C k (i)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "{1, . . . , I}; i 2 \u2208 {1, . . . , I};i 1 = i 2 \u2200p 1 ,j 1 ;p 2 ,j 2 ;p 1 =p 2 M (p 1 , j 1 , i 1 )F (sp 1 , sp 2 )M (p 2 , j 2 , i 2 ) \u2264 B(i 1 , i 2 )",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "\u2200i1 \u2208 {1, . . . , I}; i2 \u2208 {1, . . . , I}; i1 = i2 \u2200p 1 ,j 1 ;p 2 ,j 2 ;p 1 =p 2 F (sp 1 j , sp 2 j )\u03b1p 2 j \u2264 F (sp 1 j , sp 2 j )",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "The SUMO simulation for the intersection in Dublin, Ireland with time, its road exit probabilities are updated and their confidence score increases.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "t2) (car1) . . . . . . . . .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF11": {
            "text": "\u2200i 1 \u2208 {1, . . . , I (p 1 j)(p 2 j) }; i 2 \u2208 {1, . . . , I (p 1 j)(p 2 j) };i 1 = i 2 H(i 1 , i 2 ) = \u2200p 1 ,p 2 m(p 1 , p 2 , j, i), min H(i 1 , i 2 )), Sensitivity analysis for resource-rich and resource poor cluster: we generate random values for \u03bb 1 (on x-axis of the graph), and plot the total cost for the corresponding resource-poor and resource-rich clusters. In the event of low node capacity or low link capacity, the optimization takes care of the number of instances deployed, with the objective of minimizing total cost. Thus, as depicted in this figure, we get total cost values in a similar range for almost every weight. We chose both \u03bb 1 and \u03bb 2 = 0.5, as it gives lower cost in both cases and other values do not significantly affect cost.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF13": {
            "text": "Case A:Node cost for resourceconstrained cluster and low data rate Case B:Node cost for resource-rich cluster and low data rate Case A:Link cost for resourceconstrained cluster and low data rate Case B:Link cost for resource-rich cluster and low data rate Case C:Link cost for resource-rich cluster and high data rate",
            "latex": null,
            "type": "figure"
        },
        "FIGREF14": {
            "text": "Node and Link Cost for Case A,B & C",
            "latex": null,
            "type": "figure"
        },
        "FIGREF15": {
            "text": "Comparison of link cost in optimal v/s naive scheme for Case A:resource constrained cluster and low data rate Penalty and Hop Count in resource-constrained cluster",
            "latex": null,
            "type": "figure"
        },
        "FIGREF16": {
            "text": "Bandwidth Efficiency at Type 1 TIs and RSU and mobility states. Our approach outperforms the naive solution introduced in [34] significantly.",
            "latex": null,
            "type": "figure"
        },
        "TABREF1": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF3": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "the percentage of vehicles in each LOS profile is plotted for different times of the day for the I5-N freeway 2. http://pems.dot.ca.gov/, available: 22/10/20.",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "Aggregate capacity estimation for the I5-N freeway for Lane 1 based on the vehicular flow",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}