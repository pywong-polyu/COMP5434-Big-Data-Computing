{
    "paper_id": "40b531f4c337421fe71c854848072da54dc97d42",
    "metadata": {
        "title": "FastIntegration: a fast and high-capacity version of Seurat Integration for large-scale integration of single-cell data",
        "authors": [
            {
                "first": "Mengwei",
                "middle": [],
                "last": "Li",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "8A Biomedical Grove Immunos",
                    "location": {
                        "postCode": "#03-06, 138648",
                        "settlement": "Singapore"
                    }
                },
                "email": ""
            },
            {
                "first": "Xiaomeng",
                "middle": [],
                "last": "Zhang",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "8A Biomedical Grove Immunos",
                    "location": {
                        "postCode": "#03-06, 138648",
                        "settlement": "Singapore"
                    }
                },
                "email": ""
            },
            {
                "first": "Siong",
                "middle": [],
                "last": "Kok",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "8A Biomedical Grove Immunos",
                    "location": {
                        "postCode": "#03-06, 138648",
                        "settlement": "Singapore"
                    }
                },
                "email": ""
            },
            {
                "first": "Jinmiao",
                "middle": [],
                "last": "Ang",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "8A Biomedical Grove Immunos",
                    "location": {
                        "postCode": "#03-06, 138648",
                        "settlement": "Singapore"
                    }
                },
                "email": ""
            },
            {
                "first": "",
                "middle": [],
                "last": "Chen",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "8A Biomedical Grove Immunos",
                    "location": {
                        "postCode": "#03-06, 138648",
                        "settlement": "Singapore"
                    }
                },
                "email": ""
            },
            {
                "first": "Jinmiao",
                "middle": [],
                "last": "Chen",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "8A Biomedical Grove Immunos",
                    "location": {
                        "postCode": "#03-06, 138648",
                        "settlement": "Singapore"
                    }
                },
                "email": "chen_jinmiao@immunol.a-star.edu.sg"
            }
        ]
    },
    "abstract": [
        {
            "text": "Atlas-scale integration of hundreds or even thousands of samples has become crucial for creating comprehensive cell maps. Here, we present FastIntegration which can integrate more than 4 million cells within 2 days. It outputs batch corrected values for all genes that we can use for downstream analyses. For the first time, we demonstrated that using batch corrected values can improve the performance of downstream analyses. In particular we demonstrated more accurately identified differentially expressed genes for cell types that are not shared between batches. cell type 1 in 1-25 samples and cell type 2 in 26-50 samples and the second batch was identified between cell type 1 in 26-50 samples and cell type 2 in 1-25 samples. The \"FindMarkers\" function in the Seurat package was used for DEG identification and only DEGs with an adjusted q value less than 0.05 were retained for further analyses. The F-score (measuring accuracy) is defined as (TP + TN)/(TP + TN + FP + FN) which was used in our previous benchmarking paper 10 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "SCENIC was used to infer the single-cell regulatory network and predicted TF activity. The AUC scores produced by SCENIC were used to do cell clustering.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Declarations",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Not applicable.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Moreover, we also showed that FastIntegration outperforms existing methods for both homogeneous and heterogeneous data integration.",
            "cite_spans": [],
            "ref_spans": [],
            "section": ""
        },
        {
            "text": "Single-cell omics technologies are progressing at a rapid pace, with the throughput still growing from new techniques being developed 1,2 . Using these tools, researchers are generating ever larger datasets and uncovering new cell subpopulations in both healthy and diseased tissues. By integrating data across studies, the power and resolution of single cell studies are greatly increased to enable new discoveries 3, 4 . Integration of publicly available data into atlases is particularly needed to construct consensus reference maps, together with batch corrected gene expression values that can be used for various downstream analyses. However, existing batch integration methods suffer from different drawbacks, namely being unable to scale up to large numbers (hundreds or even thousands) of samples and millions of cells, or unable to produce batch corrected values [5] [6] [7] [8] [9] .",
            "cite_spans": [
                {
                    "start": 416,
                    "end": 418,
                    "text": "3,",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 419,
                    "end": 420,
                    "text": "4",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 873,
                    "end": 876,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 877,
                    "end": 880,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 881,
                    "end": 884,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 885,
                    "end": 888,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 889,
                    "end": 892,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Background"
        },
        {
            "text": "In our published benchmarking study 10 , we found Harmony, LIGER, and Seurat v3 to be the top performing methods for batch integration, while Luecken et al. found scANVI, Scanorama, scVI and scGen 11 to be superior for atlas-level data integration. Except for Seurat and Scanorama, the remaining methods do not return batch corrected values. Furthermore, scGen and scANVI require cell type information to guide the integration, which is often not available. Though Seurat Integration returns batch corrected values, it cannot handle large-scale data integration with about 100K cells being the upper limit. Moreover, Seurat by default integrates 2000 highly variable genes (HVGs) and returns only their corrected values. If all available genes are used, it encounters performance issues when integrating more than 30 samples. Meanwhile, it remains hotly debated whether batch corrected values or uncorrected values should be used for postintegration downstream analyses such as identification of differentially expressed genes (DEGs), inference of regulon activities, and cell-cell interactions. Here, we present FastIntegration that performs efficient integration of hundreds and even thousands of samples, and outputs batchcorrected values for all genes. Furthermore, we demonstrated that the batch-corrected values improve performance in downstream analyses including DEG identification and transcription factor activity quantification.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Background"
        },
        {
            "text": "We created FastIntegration by improving the original Seurat batch integration functions in several aspects ( Figure 1A , details given in Methods). Most importantly, FastIntegration performs principal component analysis (PCA) only once and employs the resulting latent space during the iterative batch correction. By avoiding PCA re-computation at each iteration, the gene expression correction step can be parallelized and sped up. We added outlier detection and remove them at each round of integration to prevent overcorrection. We also optimized the use of variables to reduce memory usage and parallelized various functions to improve overall runtime performance.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 109,
                    "end": 118,
                    "text": "Figure 1A",
                    "ref_id": null
                }
            ],
            "section": "FastIntegration significantly improves time efficiency and memory usage over Seurat V4 and enables large-scale data integration"
        },
        {
            "text": "As we intend FastIntegration to be a fast and high-capacity version of Seurat integration, we first assessed the results produced by these two methods for consistency with the same input dataset of 20 blood samples. Both methods obtained high Adjusted Rand Index (ARI) scores based on the ground-truth cell type labels and were highly consistent between them with clusters showing high mutual ARI scores ( Figure S1 ). In this dataset, neutrophils only appear in two batches, posing a challenge to batch integration methods to maintain them separate from other similar myeloid cells. Seurat mixed the neutrophils with monocytes while FastIntegration was able to retain them as a distinct cluster, which can be attributed to our overcorrection prevention steps ( Figure S1A -B). Next, we compared their memory and time usage for integrating 10 to 200 samples ( Figure   1B ). When integrating the same number of samples, FastIntegration required less memory and time than Seurat. Moreover, Seurat was unable to integrate more than 30 samples, showing a \"Cholmod error\" caused by a failure to create a large sparse matrix. In contrast, FastIntegration was able to integrate 200 samples within 40 minutes.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 406,
                    "end": 415,
                    "text": "Figure S1",
                    "ref_id": null
                },
                {
                    "start": 762,
                    "end": 772,
                    "text": "Figure S1A",
                    "ref_id": null
                },
                {
                    "start": 860,
                    "end": 871,
                    "text": "Figure   1B",
                    "ref_id": null
                }
            ],
            "section": "FastIntegration significantly improves time efficiency and memory usage over Seurat V4 and enables large-scale data integration"
        },
        {
            "text": "To further demonstrate the large-scale integration capabilities of FastIntegration, we integrated 4.2 million cells from 877 blood samples collected from COVID-19 patients and healthy donors.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "FastIntegration significantly improves time efficiency and memory usage over Seurat V4 and enables large-scale data integration"
        },
        {
            "text": "The integration took less than two days with 150 threads and 2 TB peak memory usage. After integration, inter-study variations were removed ( Figure 1C ) while the major cell types were well separated, confirmed by their marker gene expressions ( Figure S2 ). Strikingly, when we extracted the plasma cells and re-clustered them, we could clearly distinguish IgG, IgM, and IgA expressing plasma cells ( Figure 1D ), which demonstrated that the integrated data retains the subtle differences between cells. We have also applied FastIntegration on the DISCO database (https://www.immunesinglecell.org/) 12 to create integrated atlases for different tissues, diseases, and cell types.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 142,
                    "end": 151,
                    "text": "Figure 1C",
                    "ref_id": null
                },
                {
                    "start": 247,
                    "end": 256,
                    "text": "Figure S2",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 403,
                    "end": 412,
                    "text": "Figure 1D",
                    "ref_id": null
                }
            ],
            "section": "FastIntegration significantly improves time efficiency and memory usage over Seurat V4 and enables large-scale data integration"
        },
        {
            "text": "Current benchmarking studies 10, 11 have focused on the performance of integrating homogeneous datasets derived from the same tissue type. With the exponential growth of single-cell data, integration of heterogeneous datasets across different tissue types is becoming increasingly common. For example, several studies have integrated blood with lung tissue samples from COVID-19 patients to study the systematic immune responses at different sites 13, 14 . Here, we evaluated the performance of FastIntegration and four other state-of-the-art methods, namely Harmony 6 , BBKNN 7 , scVI 8 , and Scanorama 9 in integrating large numbers of homogeneous and heterogeneous datasets. The homogeneous datasets comprised 50 blood samples, and the heterogeneous datasets contained 50 blood and 10 lung samples. Sample Local Inverse Simpson's Index (sLISI) and inverse cell type LISI (1/cLISI) scores were used to assess batch mixing and cell type separation respectively, with a higher value denoting better performance. As BBKNN outputs only a graph, we could not calculate its LISI scores. Adjusted rand index (ARI), a global evaluation metric, was used to assess the concordance between clustering and manual cell type annotation.",
            "cite_spans": [
                {
                    "start": 29,
                    "end": 32,
                    "text": "10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 33,
                    "end": 35,
                    "text": "11",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 448,
                    "end": 451,
                    "text": "13,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 452,
                    "end": 454,
                    "text": "14",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "FastIntegration performs well on both homogeneous and heterogeneous data integration"
        },
        {
            "text": "For both homogeneous and heterogeneous data integration, FastIntegration and BBKNN produced the highest ARI scores ( Figure 2A ). However, BBKNN returns a distance-based neighbor list only, which prevents some downstream analyses. In terms of sLISI scores, Harmony was the top method with FastIntegration ranked second for both homogenous and heterogeneous integration ( Figure 2B , Figure S3 ). In terms of cLISI, FastIntegration was the best method for both homogenous and heterogeneous integration ( Figure 2B , Figure S3 ). Among the evaluated methods, FastIntegration struck the best balance between cell type separation (cLISI) and batch mixing (sLISI) ( Figure 2B ). In the homogeneous dataset, only 2 of 50 samples contained neutrophils, and only scVI, Scanorama, and FastIntegration were able to maintain the neutrophils as a separate cluster ( Figure S4 ). This means that they are less likely to overcorrect and can better maintain separation of batch-specific cell types as compared to Harmony and BBKNN. For the heterogeneous dataset, only FastIntegration was able to integrate the immune cells from both blood and lung samples ( Figure S5 ). Collectively, FastIntegration showed superior and stable performance for both homogeneous and heterogeneous data integration.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 117,
                    "end": 126,
                    "text": "Figure 2A",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 371,
                    "end": 380,
                    "text": "Figure 2B",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 383,
                    "end": 392,
                    "text": "Figure S3",
                    "ref_id": null
                },
                {
                    "start": 503,
                    "end": 512,
                    "text": "Figure 2B",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 515,
                    "end": 524,
                    "text": "Figure S3",
                    "ref_id": null
                },
                {
                    "start": 661,
                    "end": 670,
                    "text": "Figure 2B",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 854,
                    "end": 863,
                    "text": "Figure S4",
                    "ref_id": null
                },
                {
                    "start": 1143,
                    "end": 1152,
                    "text": "Figure S5",
                    "ref_id": null
                }
            ],
            "section": "FastIntegration performs well on both homogeneous and heterogeneous data integration"
        },
        {
            "text": "The batch correction functions of FastIntegration and Seurat aim to align shared cell types across batches, removing batch effects present in the gene expression values in this process. The resulting batch-corrected values are potentially usable for various downstream analyses but there has been no study that systematically assessed the performance of batch corrected values in downstream analyses. Moreover, Seurat integration by default uses the top 2000 highly variable genes and returns the corrected values only for these genes. If all available genes are used, it encounters performance issues when integrating more than 30,000 cells. As a result, using \"FindConservedMarkers\" on the uncorrected values is recommended for post-integration Differential Gene Expression (DGE) analysis (https://github.com/satijalab/seurat/issues/1717).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Batch corrected gene expression values generated by FastIntegration can be used for downstream analyses"
        },
        {
            "text": "However, FindConservedMarkers cannot identify DEGs of clusters that only exist in a subset of batches. Given that FastIntegration can integrate thousands of batches and output batch corrected expression values for all genes, we evaluated the differences between using batchcorrected and raw values in DEG identification and quantification of transcription factor (TF) activity.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Batch corrected gene expression values generated by FastIntegration can be used for downstream analyses"
        },
        {
            "text": "The homogenous dataset of 50 blood samples was used to assess the DEG identification. For each cell type pair, we identified their DEGs twice using different sample subsets. The first batch of DEGs was identified between cell type 1 in samples 1 to 25, and cell type 2 in samples 26 to 50, and the second batch was identified between cell type 1 in samples 26 to 50, and cell type 2 in samples 1 to 25 ( Figure 2C ). This mimics the situation where some cell types only exist in a subset of samples. We found that the percentage of overlapping DEGs identified using corrected value is much larger (58% vs 41%) than those identified using the uncorrected values, implying that the DEGs identified using corrected values is more stable across batches ( Figure 2D ). Moreover, we found that 1.3% of the DEGs identified using the uncorrected values showed opposite fold changes in the two comparisons, which we attribute to batch effects. Only 0.02% of the DEGs identified using the corrected values show such opposite fold changes. Interestingly, when examining the performance of DEG identification in each cell type pair, we found that the performance of using batch-corrected values is much better for similar cell types such as switched B and non-switched B cells ( Figure 2E ). This ability to identify subtle cell differences is especially attractive for big data integration. To check the reliability of the DEGs, we also computed the To test the impact of batch effects on TF activity prediction, we applied SCENIC(ref) to the raw and batch-corrected data to predict the TF activities of individual cells. In the TF activity generated UMAP for uncorrected values, the batch effects are clearly present among the same cell types across different batches ( Figure 2G ). For the FastIntegration's corrected values, most of the batch effects was eliminated with the same cell types across different batches clustering together.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 404,
                    "end": 413,
                    "text": "Figure 2C",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 751,
                    "end": 760,
                    "text": "Figure 2D",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1267,
                    "end": 1276,
                    "text": "Figure 2E",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1760,
                    "end": 1769,
                    "text": "Figure 2G",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Batch corrected gene expression values generated by FastIntegration can be used for downstream analyses"
        },
        {
            "text": "In this study, we introduced FastIntegration for integrating large single-cell RNA-seq datasets and outputting batch corrected gene expression values. We demonstrated its capacity for large scale batch integration with 4 million cells in 48 hours runtime through good multicore scaling. With large datasets, it achieves good performance for both homogeneous and heterogeneous data integration when compared with other methods. The batch corrected values produced by FastIntegration can be used for downstream analyses including DEG analysis and regulatory network inference. With the continued growth in single-cell RNA-seq data, FastIntegration will be a valuable tool for large scale data integration tasks.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion"
        },
        {
            "text": "Seurat (v3 and v4) integrates data in three steps (anchor identification, sample tree construction, and stepwise batch effect correction). We optimized the pipeline and code of each step to speed them up and reduce memory usage. Although Seurat provide a parallelized version of \"FindIntegrationAnchors\" using the \"future\" framework for the anchor identification step, it is memory intensive as it initially loads the data of all batches into memory and R's garbage collection for parallelization is very slow. To solve this problem, we first stored each sample in a separate file and load it when required. For FastIntegration, we used the \"pbmcapply\" package for parallelization. It is comparatively lighter and more user-friendly than \"future\" framework.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization of Seurat framework for big data integration"
        },
        {
            "text": "Seurat constructs the sample tree using an iterative function which has an n 2 x (time to filter anchor table) time complexity where n is the number of samples/batches. The time complexity for filtering the anchor table is also O(n 2 ). Therefore, the time complexity for this step is about O(n 4 ). To speed up it, FastIntegration converts the anchor table into a \"data.table\" object which has a key and index for each data row. The time complexity for filtering the \"data.table\" object is therefore O(log n). To calculate the similarities between samples, FastIntgeration uses the \"group_by\" functions which have a O(n) time complexity. Thus, the resulting time complexity of our sample tree construction in FastIntegration is O(nlog(n)).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization of Seurat framework for big data integration"
        },
        {
            "text": "At the integration stage, Seurat integrates input samples according to the sample tree and needs n-1 iterations (where n is the number of samples). At each iteration, PCA is performed on the query data to find the k nearest neighbours (KNN) of each query cell in the PCA space. These operations become the processing bottleneck for big data integration. While the motivation for doing PCA in each round of integration is to get the precise KNN graph, we reasoned that the nearest neighbours are most likely to fall within the same unintegrated dataset as the query cell. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization of Seurat framework for big data integration"
        },
        {
            "text": "We compared the memory usage and CPU runtime of FastIntegration with Seurat. For a fair comparison, we also enabled parallelization in Seurat using 150 threads. We then tested their performance on 10 to 200 real samples. To obtain the runtime, we used the command \"time -v\" to evaluate. To obtain the total memory usage by all threads, we used an in-house script to get the maximum memory usage of each job. We first cleared all jobs in the server and then recorded the used memory at every second during the run and determined the peak memory usage after the job finished. All jobs were run on a Linux server with 2x AMD\u00ae EPYC 7552 CPUs at 2.20GHz, 2 TB of DDR4 memory, and an 8T SSD disk.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assessment of memory usage and runtime"
        },
        {
            "text": "We compared FastIntegration with four state-of-the-art methods, BBKNN, Harmony, Scanorama, and scVI. We used two different datasets that represent two common scenarios. The first dataset We also used the Adjusted Rand Index (ARI) to evaluate the global integration performance. We annotated each sample manually and calculate the ARI between cell clusters and cell type annotation. To avoid the influence of clustering resolution, we tested a range of resolutions (0.1 to 1) and use the maximum ARI achieved. The first 50 PCs were used as input to BBKNN and Harmony, and 3000 features selected by FindIntegrationFeatures were used as input to FastIntegration, Scanorama, and scVI. The number of epochs was set to 100 for scVI. All other parameters were set as defaults.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Benchmark of data integration"
        },
        {
            "text": "The dataset of 50 blood samples was used to test the performance of DEGs identification and regulatory network inference. We first removed cell types with fewer than 50 cells or greater than 30% in only one sample. After that, 253 cell type pairs were retained for DEGs identification. For each cell type pair, we identified the DEGs twice. The first batch of DEGs was identified between ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Differential gene expression analysis and single-cell regulatory network inference"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Highly Parallel Genome-wide Expression Profiling of Individual Cells Using Nanoliter Droplets",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "Z"
                    ],
                    "last": "Macosko",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Cell",
            "volume": "161",
            "issn": "",
            "pages": "1202--1214",
            "other_ids": {
                "DOI": [
                    "10.1016/j.cell.2015.05.002"
                ]
            }
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Massively parallel digital transcriptional profiling of single cells",
            "authors": [
                {
                    "first": "G",
                    "middle": [
                        "X"
                    ],
                    "last": "Zheng",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Nat Commun",
            "volume": "8",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1038/ncomms14049"
                ]
            }
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Cross-tissue single-cell landscape of human monocytes and macrophages in health and disease",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Mulder",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "Immunity",
            "volume": "54",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/j.immuni.2021.07.007"
                ]
            }
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Pan-cancer single-cell landscape of tumor-infiltrating T cells",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Zheng",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Science",
            "volume": "374",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1126/science.abe6474"
                ]
            }
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Comprehensive Integration of Single-Cell Data",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Stuart",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Cell",
            "volume": "177",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/j.cell.2019.05.031"
                ]
            }
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Fast, sensitive and accurate integration of single-cell data with Harmony",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Korsunsky",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Nat Methods",
            "volume": "16",
            "issn": "",
            "pages": "1289--1296",
            "other_ids": {
                "DOI": [
                    "10.1038/s41592-019-0619-0"
                ]
            }
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "BBKNN: fast batch alignment of single cell transcriptomes",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Polanski",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Bioinformatics",
            "volume": "36",
            "issn": "",
            "pages": "964--965",
            "other_ids": {
                "DOI": [
                    "10.1093/bioinformatics/btz625"
                ]
            }
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Deep generative modeling for single-cell transcriptomics",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Lopez",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Regier",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "B"
                    ],
                    "last": "Cole",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "I"
                    ],
                    "last": "Jordan",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Yosef",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Nat Methods",
            "volume": "15",
            "issn": "",
            "pages": "1053--1058",
            "other_ids": {
                "DOI": [
                    "10.1038/s41592-018-0229-2"
                ]
            }
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Hie",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Bryson",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Berger",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Nat Biotechnol",
            "volume": "37",
            "issn": "",
            "pages": "685--691",
            "other_ids": {
                "DOI": [
                    "10.1038/s41587-019-0113-3"
                ]
            }
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "A benchmark of batch-effect correction methods for single-cell RNA sequencing data",
            "authors": [
                {
                    "first": "H",
                    "middle": [
                        "T N"
                    ],
                    "last": "Tran",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Genome Biol",
            "volume": "21",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/s13059-019-1850-9"
                ]
            }
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Benchmarking atlas-level data integration in single-cell genomics",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "D"
                    ],
                    "last": "Luecken",
                    "suffix": ""
                }
            ],
            "year": 2022,
            "venue": "Nat Methods",
            "volume": "19",
            "issn": "",
            "pages": "41--50",
            "other_ids": {
                "DOI": [
                    "10.1038/s41592-021-01336-8"
                ]
            }
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "DISCO: a database of Deeply Integrated human Single-Cell Omics data",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                }
            ],
            "year": 2022,
            "venue": "Nucleic Acids Res",
            "volume": "50",
            "issn": "",
            "pages": "596--602",
            "other_ids": {
                "DOI": [
                    "10.1093/nar/gkab1020"
                ]
            }
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "COVID-19 immune features revealed by a large-scale single-cell transcriptome atlas",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Ren",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Cell",
            "volume": "184",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/j.cell.2021.01.053"
                ]
            }
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Single cell profiling of COVID-19 patients: an international data resource from multiple tissues. medRxiv",
            "authors": [
                {
                    "first": "C",
                    "middle": [
                        "Z I S"
                    ],
                    "last": "Consortia",
                    "suffix": ""
                },
                {
                    "first": "-C",
                    "middle": [
                        "C -"
                    ],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1101/2020.11.20.20227355"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "scMerge leverages factor analysis, stable expression, and pseudoreplication to merge multiple single-cell RNA-seq datasets",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Lin",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proc Natl Acad Sci U S A",
            "volume": "116",
            "issn": "",
            "pages": "9775--9784",
            "other_ids": {
                "DOI": [
                    "10.1073/pnas.1820006116"
                ]
            }
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Figure Legends Figure 1: Comparison between FastIntegration and Seurat. A) The framework of FastIntegration. B) Computational efficiency benchmarks of Seurat and FastIntegration. C) UMAP of COVID-19 atlas, encompassing 4.2 million cells from 877 blood samples. D) UMAP and feature plots of data integrated plasma cells",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "DEGs between all pairs of cell types using the batch-corrected and raw values of all 50 samples, and compared them with the DEGs computed within individual samples. Assuming that the true DEGs can also be found in most individual samples, we counted the frequency of conserved DEGs being found in the DEGs identified within individual samples. A higher frequency denotes higher reliability for the detected DEGs. We found the DEGs identified with batch-corrected values to be more conserved in each single sample than DEGs identified with raw values (Figure 2F).Using batch corrected values for DEG identification is highly controversial with the choice of uncorrected values being commonly stated as the preferred approach. In this study, wedemonstrated how batch effects can negatively affect the use of uncorrected values for DEG identification with cell types not found in all batches. By using batch corrected values, we reduced the number of DEGs with incorrectly identified fold change directions and increased the overall accuracy. For cell types found in all batches, the choice of uncorrected versus corrected values should not matter, as the presence of the cells across all batches should cancel out the batch effects. Another commonly encountered scenario in DEG identification is that of technical batch effects confounding with biological or patient effects. While the former is nuisance and should be removed, the latter can be of significance to the study at hand. The disentanglement of both effects remains an unsolved challenge when all batches do not have the same sample to serve as a reference to guide the data integration. As such, uncorrected values remain the only choice for investigating biological effects present between samples.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Thus, FastIntgeration only runs PCA once on all unintegrated datasets and identifies the nearest anchors in this PCA space, which is used for the subsequent integration. This allows the calculation of integrated expression values for different genes to be parallelized, accelerating integration. Another problem in Seurat's integration scheme is the risk of over-or mis-correcting gene expression values. To alleviate this problem, in each round of integration, the corrected gene expression value will be set to 0 if it is less than the minimal value of uncorrected value, or set to the maximal value of uncorrected value if it is greater than the maximal value of uncorrected value. Furthermore, Seurat computed a fixed number of k neighbors for each cell to construct the weight matrix of anchor while FastIntegration fits a Gaussian distribution to the distances of k neighbors and removes neighbors with a Z score great than 3. With these modifications, FastIntgeration can remove outlier gene expression values and keep the sparsity of data, avoiding problem of long vector being unsupported in large sparse matrices.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "is a homogeneous dataset which contains 235,886 cells from 50 blood samples, and the second is a heterogeneous dataset which contains 235,886 cells from 50 blood samples and 32,582 cells from 10 lung samples. We used two evaluation metrics to compare the local and global performance of each method. The local level metric used was the Local inverse Simpson's index (LISI) by Korsunsky et al (https://github.com/immunogenomics/LISI). We calculated the cell type LISI (cLISI) and batch LISI (bLISI) scores of the integration results from each method and use the F1 score 15 of cLISI and bLISI as a combined assessment of cell type purity and batch mixing.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Qualitative evaluation of FastIntegration and batch-corrected gene expression value. A) ARI and B) LISI of different data integration methods for integrating the homogeneous (left) and heterogeneous (right) dataset. C) The strategy for DEGs identification. D) Conservation of DEGs identified when using raw and corrected values. E) The differences in F-scores between raw and corrected values for each cell type. F) The frequency of each DEG found in individual samples (conservative score). G) UMAPs generated by TF activities computed from the raw (left)",
            "latex": null,
            "type": "figure"
        }
    },
    "back_matter": []
}