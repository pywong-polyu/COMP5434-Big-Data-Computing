{"paper_id": "c8766b1252eb9e485e5840c79accdd492d3fc6a9", "metadata": {"title": "Tree Based Advanced Relative Expression Analysis", "authors": [{"first": "Marcin", "middle": [], "last": "Czajkowski", "suffix": "", "affiliation": {"laboratory": "", "institution": "Bialystok University of Technology", "location": {"addrLine": "Wiejska 45a", "postCode": "15-351", "settlement": "Bialystok", "country": "Poland"}}, "email": "m.czajkowski@pb.edu.pl"}, {"first": "Krzysztof", "middle": [], "last": "Jurczuk", "suffix": "", "affiliation": {"laboratory": "", "institution": "Bialystok University of Technology", "location": {"addrLine": "Wiejska 45a", "postCode": "15-351", "settlement": "Bialystok", "country": "Poland"}}, "email": "k.jurczuk@pb.edu.pl"}, {"first": "Marek", "middle": [], "last": "Kretowski", "suffix": "", "affiliation": {"laboratory": "", "institution": "Bialystok University of Technology", "location": {"addrLine": "Wiejska 45a", "postCode": "15-351", "settlement": "Bialystok", "country": "Poland"}}, "email": "m.kretowski@pb.edu.pl"}]}, "abstract": [{"text": "This paper presents a new concept for biomarker discovery and gene expression data classification that rises from the Relative Expression Analysis (RXA). The basic idea of RXA is to focus on simple ordering relationships between the expression of small sets of genes rather than their raw values. We propose a paradigm shift as we extend RXA concept to tree-based Advanced Relative Expression Analysis (ARXA). The main contribution is a decision tree with splitting nodes that consider relative fraction comparisons between multiple gene pairs. In addition, to face the enormous computational complexity of RXA, the most time-consuming part which is scoring all possible gene pairs in each splitting node is parallelized using GPU. This way the algorithm allows searching for more tailored interactions between sub-groups of genes in a reasonable time. Experiments carried out on 8 cancer-related datasets show not only significant improvement in accuracy and speed of our approach in comparison to various RXA solutions but also new interesting patterns between subgroups of genes.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "High-throughput technologies are generating large volumes of omics data at an unprecedented rate [11] . Traditional machine learning algorithms have been quite successful in automatically identifying complex patterns. Unfortunately, the overwhelming majority of systems focus on complex decision rules that are obstacles to mature applications [2] . Currently developed classification methods to biological data are usually designed for other purposes, such as improving statistical learning or applications to vision and speech, with little emphasis on transparency. The complexity of the decision rules that emerge from standard machine learning impedes biological understanding.", "cite_spans": [{"start": 97, "end": 101, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 344, "end": 347, "text": "[2]", "ref_id": "BIBREF1"}], "ref_spans": [], "section": "Introduction"}, {"text": "Comprehensive analysis poses new computational challenges and specialized computational approaches are required to effectively and efficiently carry out the predictions using biomedical data. It can be observed that there is a strong need for such 'white box' models which may actually help in understanding and identifying relationships between specific features and improve biomarker discovery [22] . One of the solutions is Relative Expression Analysis (RXA) which is a powerful collection of easily interpretable computational methods for gene expression data classification. It focuses on finding interactions among a small collection of genes by studying relative ordering of their expressions rather than their raw values.", "cite_spans": [{"start": 396, "end": 400, "text": "[22]", "ref_id": "BIBREF21"}], "ref_spans": [], "section": "Introduction"}, {"text": "The most significant novelty in the proposed paper is the new, much more general concept of gene-gene interaction within RXA called Advanced Relative Expression Analysis (ARXA). By introducing relative fraction comparison between multiple gene pairs within a single individual we can detect not only the ordering shifts between the genes but also the percent changes in their relations. In addition, we have applied this strategy to the splitting nodes of the Decision Trees (DTs) in order to detect hierarchical relations as well. The traditional DTs have a long history in predictive modeling [17] but result in insufficient accuracy when applied to gene expression data. By combining and extending these two 'white box' algorithms we managed to significantly improve the classification accuracy on several publicly available gene expression datasets. Finally, to face up the enormous computational complexity which rises from an exhaustive analysis of all possible pairs of genes, we designed and implemented a graphic processing unit (GPU)-based parallelization.", "cite_spans": [{"start": 595, "end": 599, "text": "[17]", "ref_id": "BIBREF16"}], "ref_spans": [], "section": "Introduction"}, {"text": "The next section provides our motivations and a brief background on RXA, DTs and GPGPU parallelization. Section 3 describes in detail our concept of tree-based ARXA and its GPU-based implementation. In Sect. 4, experimental validation is performed and in the last section, the paper is concluded and possible future works are outlined.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "While great progress has been achieved in what entails biodata analysis, most of the research effort tends to focus almost exclusively on the prediction accuracy of core data mining tasks (e.g., classification and regression), and far less effort has gone into the crucial task of knowledge discovery itself. Specifically, the rules generated by nearly all standard, off-the-shelf techniques applied to genomics data [1] , such as neural networks, random forests, SVMs, and linear discriminant analysis usually involve nonlinear functions of hundreds or thousands of genes, many parameters, and are therefore too complex to characterize mechanistically. Currently, deep learning approaches have been getting attention [23] as they can better recognize complex features through representation learning with multiple layers, and can facilitate the integrative analysis by effectively addressing the challenges discussed above. However, we know very little about how such results are derived internally.", "cite_spans": [{"start": 417, "end": 420, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 718, "end": 722, "text": "[23]", "ref_id": "BIBREF22"}], "ref_spans": [], "section": "Background"}, {"text": "In contrast to data mining systems, statistical methods for analyzing highdimensional biomolecular data generated with high-throughput technologies permeate the literature in computational biology. Those analyses have uncovered a great deal of information about biological processes [1] , such as important mutations and lists of \"marker genes\" associated with common diseases and key interactions in transcriptional regulation. However, the analysis is often limited to a relatively small number of features thus a small set of informative variables needs to be identified out of a large number (or dimension) of candidates.", "cite_spans": [{"start": 283, "end": 286, "text": "[1]", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "Background"}, {"text": "The process of biomarker discovery and characterization provides opportunities for more sophisticated solutions that integrate statistical, data mining and expert knowledge-based approaches. One of the ideas for the gene expression data is the concept of Relative Expression Analysis which focuses on testing relative expression ordering among a small number of transcripts. In the pioneering research from 2004, a Top Scoring Pair (TSP) method is proposed [10] which is a straightforward prediction rule based on the RXA concept that utilizes building blocks of rank-altered gene pairs in case and control comparison. Such pairs of genes can be viewed as \"biological switches\" which can be directly related to regulatory \"motifs\" or other properties of transcriptional networks. The discriminating power of each pair of genes i, j was measured by the absolute difference between the probabilities P ij of the event that gene i is expressed more than gene j in the two classes.", "cite_spans": [{"start": 457, "end": 461, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Relative Expression Analysis"}, {"text": "Let x i and x j be the expression values of two different genes from available set of genes and there are only two classes: normal and disease. At first, algorithm calculates the probability of the relation x i < x j between those two genes in the objects from the same class: P ij (normal) = P rob(x i < x j |Y = normal) and P ij (disease) = P rob(x i < x j |Y = disease), where Y denotes the class of the objects. Next, the score for this pair of genes (x i , x j ) is calculated: \u0394 ij = |P ij (normal) \u2212 P ij (disease)|. This procedure is repeated for all distinct pairs of genes and the pair with the highest score becomes titled top scoring pair. In the case of a draw, a secondary ranking that bases on raw genes expression differences in each class is used [24] .", "cite_spans": [{"start": 764, "end": 768, "text": "[24]", "ref_id": "BIBREF23"}], "ref_spans": [], "section": "Relative Expression Analysis"}, {"text": "The k-TSP algorithm [24] is one of the first extensions of the TSP solution. It focuses on increasing the number of pairs in the prediction model and applies no more than k top scoring disjoint gene pairs with the highest score, where the parameter k is determined by the internal cross-validation. This method was later combined with a top-down induced decision tree in an algorithm called TSPDT [5] . In this hybrid solution, each non-terminal node of the tree divides instances according to a splitting rule that is based on TSP or k-TSP accuracy.", "cite_spans": [{"start": 20, "end": 24, "text": "[24]", "ref_id": "BIBREF23"}, {"start": 397, "end": 400, "text": "[5]", "ref_id": "BIBREF4"}], "ref_spans": [], "section": "Relative Expression Analysis"}, {"text": "Different approaches for the TSP extension focus on the relationships between more than two genes. Algorithms Top Scoring Triplet (TST) [19] and Top Scoring N (TSN) [21] analyze all possible ordering relationships between the genes, however, the general concept of TSP is retained. One of the first heuristic approaches that applied the RXA concept was the evolutionary algorithm called EvoTSP [6] where the authors proposed an evolutionary search for the TSP-like rules. This approach, later extended with additional features ranking in REHA [7] showed that evolutionary search is a good alternative to the traditional RXA algorithms. Finally, there are many variations of the TSP-family solutions that involve changes in ranking calculations, we can distinguish AUCTSP classifier that uses the ROC curve [15] or VH-k-TSP [12] that focuses on vertical and horizontal genes relations. What's more, the strength and simplicity of RXA has been recognized outside genomics data and is being successfully used in the proteomic and metabolomic analysis.", "cite_spans": [{"start": 136, "end": 140, "text": "[19]", "ref_id": "BIBREF18"}, {"start": 165, "end": 169, "text": "[21]", "ref_id": "BIBREF20"}, {"start": 394, "end": 397, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 543, "end": 546, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 806, "end": 810, "text": "[15]", "ref_id": "BIBREF14"}, {"start": 823, "end": 827, "text": "[12]", "ref_id": "BIBREF11"}], "ref_spans": [], "section": "Relative Expression Analysis"}, {"text": "The popularity of Decision trees (DTs) [17] can be explained by its ease of use, speed of classification and effectiveness. In addition, the hierarchical structure of the tree, where appropriate tests are applied successively from one node to the next, closely resembles the human way of making decisions. DT has a knowledge representation structure made up of nodes and branches, where: each internal node is associated with a test on one or more attributes; each branch represents the test result, and each leaf (terminal node) is designed by a class label. Induction of optimal DT is a known NP-complete problem [13] . As a consequence, practical DT learning algorithms must be heuristically enhanced.", "cite_spans": [{"start": 39, "end": 43, "text": "[17]", "ref_id": "BIBREF16"}, {"start": 615, "end": 619, "text": "[13]", "ref_id": "BIBREF12"}], "ref_spans": [], "section": "Decision Trees"}, {"text": "DT represents a white-box approach and has considerable potential for biodata research and scientific modeling of the underlying processes. Unfortunately, there are not so many new solutions in the literature that focus on the classification of genomic data with comprehensive DT models. Existing attempts showed that decision tree algorithms often induce classifiers with the inferior predictive performance [8] and one of the alternatives is combining DTs with evolutionary approaches [18] . However, nowadays, much more interest is given in trees as sub-learners of an ensemble learning approach, such as Random Forests. These solutions alleviate the problem of low accuracy by averaging or adaptive merging of multiple trees. However, when modeling is aimed at understanding basic processes, such methods are not so useful because they generate more complex and less understandable models.", "cite_spans": [{"start": 409, "end": 412, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 487, "end": 491, "text": "[18]", "ref_id": "BIBREF17"}], "ref_spans": [], "section": "Decision Trees"}, {"text": "Recent research on the parallelization of various evolutionary computation methods has seemed to focus on GPUs as the implementation platform. The popularity of GPUs results from their general availability, relatively low cost, and high computational power. Parallel evaluation of instances is considered much more scalable with respect to the size of the dataset than a population approach. It focuses on gradually distributing the entire dataset among the local memories of all processors.", "cite_spans": [], "ref_spans": [], "section": "GPGPU Parallelization"}, {"text": "In the literature, we can find a few systems where GPU-based parallelization of the induction of DTs was examined. One of the propositions was CUDT [20] that parallelized the top-down induction process. In each internal node, in order to find the best locally optimal splits, the attributes are processed in parallel. With this approach, the authors managed to reduce the induction time of a typical decision tree from 5 to 55 times when compared with the traditional CPU version. The GPGPU parallelization was also introduced to evolutionary induced DTs [14] . In the case of RXA there exists also research considering GPU parallelization. In [21] authors managed to speed up calculations of basic TSP and TST solutions by two orders of magnitude.", "cite_spans": [{"start": 148, "end": 152, "text": "[20]", "ref_id": "BIBREF19"}, {"start": 555, "end": 559, "text": "[14]", "ref_id": "BIBREF13"}, {"start": 644, "end": 648, "text": "[21]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "GPGPU Parallelization"}, {"text": "Most recently proposed data mining methods for genomic data generate complex rules that constrain the process of uncovering new biological understanding that, after all, is the ultimate goal of data-driven biology. However, it is not enough to simply produce good outcomes but to provide logical reasoning just as clinicians do for medical treatments. In addition, whereas the need for statistical methods in biomedicine continues to grow, the effects on the clinical practice of existing classifiers based on genomic data are widely acknowledged to remain limited. One of the barriers is the study-to-study diversity in reported prediction accuracies, problems with data integration and the unfavorable ratio of the sample size to the number of potential biomarkers. The main TSP advances for gene expression data analysis are:", "cite_spans": [], "ref_spans": [], "section": "Motivation and Contribution"}, {"text": "-the method is non-parametric since the method is constructed based on the relative ranking of gene pairs; -the method is based on one or a few gene pairs. The biological interpretation of the model and the translational application are more straightforward; -researchers have repeatedly found that the family of TSP algorithms provides good prediction performance in many transcriptomic data [1] .", "cite_spans": [{"start": 393, "end": 396, "text": "[1]", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "Motivation and Contribution"}, {"text": "The main drawback of TSP-family algorithms is that they are focused only on gene expression data and can only be used locally and on a small scale. There are two reasons why: (i) focusing on simple \"biological switches\" may not work where more advanced relations occur; (ii) exhaustive search performed by TSP-solutions has enormous computational complexity which strongly limits the number of features and inter-relations that can be analyzed [16] . In our previous research, we managed to partially address both issues separately by using decision trees with TSP splits [5] and/or evolutionary algorithms [6, 8] .", "cite_spans": [{"start": 444, "end": 448, "text": "[16]", "ref_id": "BIBREF15"}, {"start": 572, "end": 575, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 607, "end": 610, "text": "[6,", "ref_id": "BIBREF5"}, {"start": 611, "end": 613, "text": "8]", "ref_id": "BIBREF7"}], "ref_spans": [], "section": "Motivation and Contribution"}, {"text": "Nonetheless, the true core of the problem (i) still remains as deliberately replacing the raw data values with the ordering relationships between the features obviously causes loss of potentially important information. Let us hypothetically assume that for some tested sample two genes X1 and X2 can discriminate normal class from cancer one. Figure 1 shows three simple scenarios (a), (b), (c) together with the outcome of RXA. The example (a) shows the ultimate goal of RXA as it illustrates the perfect \"top scoring pair\". We can observe that the ordering relations between genes X1 and X2 is opposite in different classes among all the instances. Unfortunately, RXA outcome for scenario (a) and scenario (b) would be the same as in both cases \"biological switch\" occurs, at least in theory. However, when we look at the expression image and the chart axis we see, that in fact, X1 and X2 have low expression values in both classes. Such selected pair is not relevant despite the fact that it will be promoted by RXA. An even worse scenario is presented in example (c) of Fig. 1 where undoubtedly relevant pair is not considered by the RXA despite significant variations in the expression values of genes in normal and cancer classes. As the simple ordering relationship between X1 and X2 is not changed between both classes, currently available RXA-family algorithms will never mark these genes as \"top scoring pair\". It might choose them with together other genes, by making multiple top pairs, but besides potential interpretability problems, lower accuracy issues may also arise. The issue (i) is also aggravated by the second (ii) problem which is computational complexity equals O(T * k * M * N Z ), where T is the size of DT, k is the number of top-scoring groups, M is the number of instances, N is the number of analyzed genes and Z is the size of a group of genes which ordering relationships are searched. Sequential calculation of all possible gene pairs or gene groups strongly limits the number of genes and inter-relations that can be analyzed in a reasonable time and at the same time limits the number of features having similar expression values and being opposite to each other in different classes.", "cite_spans": [], "ref_spans": [{"start": 343, "end": 351, "text": "Figure 1", "ref_id": "FIGREF0"}, {"start": 1075, "end": 1081, "text": "Fig. 1", "ref_id": "FIGREF0"}], "section": "Motivation and Contribution"}, {"text": "In this paper we propose the comparison of percentage changes of gene expressions in pairs among different classes. Within our approach the algorithm can easily ignore not relevant pairs (scenario (b)), select relevant ones (scenario (a) and (c)) and work even with smaller number of features. It should be noted that our new weight approach is even more computationally demanding than a typical RXA which will be shown in the following section. That is why we designed the GPU parallelization as an alternative to the above-mentioned evolutionary approaches to enable much faster RXA calculations.", "cite_spans": [], "ref_spans": [], "section": "Motivation and Contribution"}, {"text": "The overall structure of the proposed solution is based on a typical top-down induced [17] binary classification tree. The greedy search starts with the root node, where the locally optimal split (test) applies the new rank concept (denoted as ARXA). Then the training instances are redirected to the newly created nodes and this process is repeated for each node until the stop condition is met. Currently, we do not apply any form of post-pruning due to the small sample sizes, however, it should be considered in the future to improve the generalizing power of the predictive model.", "cite_spans": [{"start": 86, "end": 90, "text": "[17]", "ref_id": "BIBREF16"}], "ref_spans": [], "section": "Tree Based Advanced Relative Expression Analysis"}, {"text": "The general flowchart of our GPU-accelerated ARXA is illustrated in Fig. 2 . Each internal node contains information about a relation of pairs of genes that is later used to constitute the split. The basic idea to analyze relations within a single instance alike in RXA solutions, however, there are fundamental differences in scoring the collections of genes. It can be seen that the DT induction is run in a sequential manner on a CPU, and the most time-consuming operation which is scoring all potential splits is performed in parallel on a GPU. This way, the parallelization does not affect the behavior of the original algorithm.", "cite_spans": [], "ref_spans": [{"start": 68, "end": 74, "text": "Fig. 2", "ref_id": "FIGREF1"}], "section": "Tree Based Advanced Relative Expression Analysis"}, {"text": "Let us consider a gene expression microarray dataset consisting of N genes and M samples. Let the data be represented as an N \u00d7 M matrix in which an expression value of u-th gene from v-th sample is denoted as x uv . Each row represents observation of a particular gene X u over M training samples, and each column Y v represents a sample v described by the N genes. Let's for the simplicity of presentation assume that there are only two classes: C 1 and C 2 , and instances with indexes from 1 to M 1 (M 1 < M) belong to the first class (C 1 ) and instances from range (M 1 + 1, M to the second class (C 2 ).", "cite_spans": [], "ref_spans": [], "section": "Tree Based Advanced Relative Expression Analysis"}, {"text": "At first, the ARXA method focuses on gene pair matching (i, j) (i, j \u2208 {1, . . . , N}, i = j) for which there is the highest averaged over instances probability p of an event xim xjm < xin xjn (m \u2208 C 1 and n \u2208 C 2 ). For each pair of genes (i, j) the probability p ij is calculated:", "cite_spans": [], "ref_spans": [], "section": "Tree Based Advanced Relative Expression Analysis"}, {"text": "where |C 1 | denotes the number of instances from class C 1 and I( xim xjm < xin xjn ) is the indicator function defined as:", "cite_spans": [], "ref_spans": [], "section": "Tree Based Advanced Relative Expression Analysis"}, {"text": "This computationally expensive calculations performed in each splitting node with complexity equals O(N 2 * M 2 ) are handled by the GPU. Next, the top ranked pair from each thread is considered in building the splitting node. The threshold are calculated on the CPU and a single test that constitute splitting node has a form e.g. xi xj < 5. It denotes that the instances can be divided into two sub-groups (branches or even classes) by simply checking if expression value of gene x j is greater than 20% of gene x i . Alike in k-TSP [24] we define maximum number of pairs that can constitute a node (the upper bound denoted as k can be set up before the classification) but instead of minimizing the prediction error we apply the gain ratio criterion. The number of pairs that creates the node may vary due to the internal cross-validation which throws away tests that do not contribute just as it is in k-TSP. The splitting criterion is guided by a majority voting mechanism in which all pair components of the split have the same weight. In the case of a draw, the vote of the primary pair is decisive.", "cite_spans": [{"start": 535, "end": 539, "text": "[24]", "ref_id": "BIBREF23"}], "ref_spans": [], "section": "Tree Based Advanced Relative Expression Analysis"}, {"text": "We propose two-level scoring due to the performance reasons as the major part of the scoring procedure is performed on the GPU and next the top gathered results are processed by the CPU (see Fig. 2 ). The RXA methods like TSP and TST exhibit characteristics that make them ideal for a GPU implementation as there is no data dependence between individual scores. As it is illustrated in Fig. 2 , the dataset is first copied from the CPU main memory to the GPU device memory so each thread block can access it. It is performed only once before starting the tree induction as later only the indexes of the instances that remain in a calculated node are sent. In each node, possible relations X i /X j need to be processed and scored. Each thread on the device is assigned an equal amount of relations (called offset) to compute (see Fig. 2 ). This way each thread 'knows' which relations of genes it should analyze and where it should store the result.", "cite_spans": [], "ref_spans": [{"start": 191, "end": 197, "text": "Fig. 2", "ref_id": "FIGREF1"}, {"start": 386, "end": 392, "text": "Fig. 2", "ref_id": "FIGREF1"}, {"start": 830, "end": 836, "text": "Fig. 2", "ref_id": "FIGREF1"}], "section": "ARXA Scoring on GPU"}, {"text": "In addition, number of instances for which the score is calculated varies in each tree node -from the full set of samples in a root to a few instances in the lower parts of the tree. Each thread loops over the instances that reach the node and calculates the scores to the assigned relations. After all thread blocks have finished, the results are copied from the GPU device memory back to the CPU main memory where the top split is established.", "cite_spans": [], "ref_spans": [], "section": "ARXA Scoring on GPU"}, {"text": "After letting GPU know which instances residue in a current node and what offset is assigned to each thread, the CPU calculates the gain ratio for the node. It is essential to check if potential splits returned from the GPU improves overall gain ratio as otherwise the leaf will be created. ARXA scoring on the CPU starts with sorting the results returned from threads according to their score (calculated on the GPU). Next, the results are filtered, alike in k-TSP solution, to leave only the k (default value: k = 9) top-ranked disjoint gene pairs. It should be noted that the GPU returns only the information about the relations and scores which is not enough to constitute a split.", "cite_spans": [], "ref_spans": [], "section": "ARXA Scoring on CPU"}, {"text": "Therefore, in the next step a set of tests is determined for further evaluation. Each test is constituted from a single top pair and has a form: xi xj < h i/j , where h i/j is the selected threshold. The search for the threshold only considers the relevant thresholds, called the candidate thresholds, which split instances from different classes as it is illustrated in Fig. 3 . This way the algorithm does not consider e.g. h 1,i/j , h 4,i/j and h M \u22121,i/j as those thresholds are useless for creating new tests because they split two training instances from the same class. The gain ratio criterion is used to determine the best possible threshold h i/j , and the midpoint of the interval is applied as the value of this threshold. As an alternative to midpoint, we also performed experiments with smoothed threshold is e.g. an integer value (see enclosed results in Table 3 ). Finally, the choice of the number of gene pairs (parameter k) that constitute splitting node is determined by internal cross-validation.", "cite_spans": [], "ref_spans": [{"start": 371, "end": 377, "text": "Fig. 3", "ref_id": "FIGREF2"}, {"start": 870, "end": 877, "text": "Table 3", "ref_id": "TABREF1"}], "section": "ARXA Scoring on CPU"}, {"text": "In this section, we present a detailed experimental analysis to evaluate the relative performance of the proposed weight and hierarchical approach in RXA. Using several cancer-related gene expression datasets we have checked ARXA prediction power and confronted its results with popular RXA extensions.", "cite_spans": [], "ref_spans": [], "section": "Experimental Validation"}, {"text": "To make a proper comparison with the RXA algorithms, we use the same 8 cancer-related benchmark datasets (see Table 1 ) that are tested with the EvoTSP solution [6] . Datasets are deposited in NCBI's Gene Expression Omnibus and summarized in Table 1 . A typical 10-fold cross-validation is applied and depending on the system, different tools are used: -evaluation of TSP, TST, and k-TSP was performed with the AUERA software [9] , which is an open-source system for identification of relative expression molecular signatures; -EvoTSP results were taken from the publication [6] ; -original TSPDT and ARXA implementations are used.", "cite_spans": [{"start": 161, "end": 164, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 426, "end": 429, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 575, "end": 578, "text": "[6]", "ref_id": "BIBREF5"}], "ref_spans": [{"start": 110, "end": 117, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 242, "end": 249, "text": "Table 1", "ref_id": "TABREF0"}], "section": "Algorithms and Datasets"}, {"text": "Due to the performance reasons concerning other approaches, the Relief-F feature selection was applied and the number of selected genes was arbitrarily limited to the top 1000. In the experiments, we provide results for the proposed ARXA solution as well as its simplified variants which uses e.g. integer percentage split values.", "cite_spans": [], "ref_spans": [], "section": "Algorithms and Datasets"}, {"text": "Experiments were performed on a workstation equipped with Intel Core i5-8400 CPU, 32 GB RAM and NVIDIA GeForce GTX 1080 GPU card (8 GB memory, 2 560 CUDA cores). The sequential algorithm was implemented in C++ and the GPU-based parallelization part was implemented in CUDA-C (compiled by nvcc CUDA 10; single-precision arithmetic was applied). Table 2 summarizes classification performance for the proposed solution and its competitors. The model size of TSP and TST is not shown as it is fixed and [9] showed that the differences in accuracy are significant. We have also performed an additional comparison between the datasets with the corrected paired t-test [24] with the significance level equals 0.05 and 9 degrees of freedom (n-1 degrees of freedom where n = 10 folds). It showed that ARXA significantly outperforms all algorithms on more than half datasets. However, it should be noticed that improving classification accuracy was not our primary goal. We wanted to make a model in which gene pairs somehow interact with each other more deeply and also to promote finding sub-interactions between co-expressed genes and pairs. Such improvement in terms of classification accuracy was a surprise even for us, however, this may indicate the importance of the founded patterns.", "cite_spans": [{"start": 499, "end": 502, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 662, "end": 666, "text": "[24]", "ref_id": "BIBREF23"}], "ref_spans": [{"start": 344, "end": 351, "text": "Table 2", "ref_id": null}], "section": "Algorithms and Datasets"}, {"text": "As we mentioned in Sect. 3.2, the fraction value which denotes the relation between two features can be rounded to improve model comprehensibility. Table 3 shows the ARXA average accuracy results from the performed experiments with different roundup of the threshold value. Therefore, in the first row we can see original ARXA version, in second row all the thresholds values in the tests that constituted splits we rounded to 0.5 and in last row the thresholds were rounded to the integer values. From the table we can observe, that, on average, as the thresholds are less precise, the number of tests in internal nodes decreases while the size of the tree increases. This outcome was consistent to all tested datasets.", "cite_spans": [], "ref_spans": [{"start": 148, "end": 155, "text": "Table 3", "ref_id": "TABREF1"}], "section": "ARXA Comprehensibility and GPGPU Acceleration"}, {"text": "In Figs. 4 and 5 we show an example decision trees induced by ARXA with and without threshold roundup. In both cases the prediction accuracy is similar but the structure and relations slightly differs. Although, there are a few similarities especially in the top nodes where e.g. two out of three relations in the root node from the DT illustrated in Fig. 5 is the same as in Fig. 4 . There are also single genes that appear in both trees but constitute different pairs. Based on the description of the dataset (GSE6613 series) from GenBank NCBI [3] we performed a brief examination of one of the ARXA output prediction models (see Figs. 4 and 5). To check if founded genes or gene pair have some biological meaning we have decoded gene names from GSE6613 with GPL96 platform provided by NCBI. We found out that most of the founded genes are related with Parkinson's disease, for example #211249 (gene symbol: GPR68) is the top significantly deregulated gene identified through integrated analysis in Parkinson's disease [25] and gene LSM7 (#204559 s) is reported as significant in meta-analysis of genome-wide association studies of Parkinson's disease risk [4] . This is only an example of a fraction of knowledge discovered by ARXA but even the presented model is at some point supported by biological evidence in the literature.", "cite_spans": [{"start": 546, "end": 549, "text": "[3]", "ref_id": null}, {"start": 1021, "end": 1025, "text": "[25]", "ref_id": "BIBREF24"}, {"start": 1159, "end": 1162, "text": "[4]", "ref_id": "BIBREF3"}], "ref_spans": [{"start": 351, "end": 357, "text": "Fig. 5", "ref_id": "FIGREF4"}, {"start": 376, "end": 382, "text": "Fig. 4", "ref_id": "FIGREF3"}], "section": "ARXA Comprehensibility and GPGPU Acceleration"}, {"text": "Even with applied feature selection step (to make other algorithms work in a reasonable time), the number of possible relations for which the GPU needs to calculate is very high. For example, for N = 1000 genes and M = 100 instances the number of scores to calculate is over 10 9 in a root node (sub-nodes have fewer instances). However, if we would take the full dataset, this number drastically increases to 10 13 . With the GPGPU acceleration the score ranking, on average through all datasets, was reduced from 20 s to 0.15 of a second which is over two magnitude faster for a single run. The time included also the data transfer to and from the GPU. When, the whole data was used, the GPU took up to several minutes where a single sequential run of a single dataset took over a day. Through all the runs number of blocks equals to 1024 and threads equals to 128. In the profiling we noticed that processing too many possible relations by each thread (high load) slows down the parallelization. By decreasing the offset value we managed to improve load balancing and thus the overall ARXA speedup.", "cite_spans": [], "ref_spans": [], "section": "ARXA Comprehensibility and GPGPU Acceleration"}, {"text": "In this paper, we introduce a hybrid approach to analyze gene expression data which combines the problem-specific methodology with the popular white-box classifier. The Advanced Relative Expression Analysis (ARXA) fundamentally changes the RXA solution in the context of relations and pairs ranking. Our implementation considers involving GPGPU accelerated decision trees in order to open ARXA on finding interesting hierarchical patterns in subgroups of genes in a reasonable time. In addition, experiments show that knowledge discovered by ARXA is accurate, comprehensive and at some point supported by biological evidence in the literature.", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}, {"text": "We see many promising directions for future research. In particular, we are currently working with biologists and bioinformaticians to better understand the gene relations generated by ARXA. Next, there is still a lot of ways to improve the GPU parallelization of RXCT, e.g. load-balancing of tasks based on the number of instances in each node, simultaneous analysis of two branches, better GPU hierarchical memory exploitation.", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}, {"text": "It should be noted that most of RXA solutions are not fully detached decision model from the raw values of the dataset. Such an approach may reduce robustness to methodological and technical factors, study-specific biases as well as limits the potential of exploring merged data from different omics, platforms, and experiments. Most of TSP-family solutions use e.g. raw values in their secondary rankings, others mean or variance of a given gene in the data. ARXA does not consider analyzing raw values, therefore in the nearest future we want to validate our approach on multi-omics data.", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Rank discriminants for predicting phenotypes from RNA expression", "authors": [{"first": "B", "middle": [], "last": "Afsari", "suffix": ""}, {"first": "U", "middle": ["M"], "last": "Braga-Neto", "suffix": ""}, {"first": "D", "middle": [], "last": "Geman", "suffix": ""}], "year": 2014, "venue": "Ann. Appl. Stat", "volume": "8", "issn": "3", "pages": "1469--1491", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Hard data analytics problems make for better data analysis algorithms: bioinformatics as an example", "authors": [{"first": "J", "middle": [], "last": "Bacardit", "suffix": ""}], "year": 2014, "venue": "Big Data", "volume": "2", "issn": "3", "pages": "164--176", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "A meta-analysis of genome-wide association studies identifies 17 new Parkinson's disease risk loci", "authors": [{"first": "D", "middle": [], "last": "Chang", "suffix": ""}, {"first": "M", "middle": ["A"], "last": "Nalls", "suffix": ""}], "year": 2017, "venue": "Nat Genet", "volume": "49", "issn": "10", "pages": "1511--1516", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Top scoring pair decision tree for gene expression data analysis", "authors": [{"first": "M", "middle": [], "last": "Czajkowski", "suffix": ""}, {"first": "M", "middle": [], "last": "Kretowski", "suffix": ""}], "year": 2011, "venue": "Adv. Exp. Med. Biol", "volume": "696", "issn": "", "pages": "27--35", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Evolutionary approach for relative gene expression algorithms", "authors": [{"first": "M", "middle": [], "last": "Czajkowski", "suffix": ""}, {"first": "M", "middle": [], "last": "Kretowski", "suffix": ""}], "year": 2014, "venue": "Sci. World J", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Relative evolutionary hierarchical analysis for gene expression data classification", "authors": [{"first": "M", "middle": [], "last": "Czajkowski", "suffix": ""}, {"first": "M", "middle": [], "last": "Kretowski", "suffix": ""}], "year": 2019, "venue": "GECCO 2019", "volume": "", "issn": "", "pages": "1156--1164", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Decision tree underfitting in mining of gene expression data. An evolutionary multi-test tree approach", "authors": [{"first": "M", "middle": [], "last": "Czajkowski", "suffix": ""}, {"first": "M", "middle": [], "last": "Kretowski", "suffix": ""}], "year": 2019, "venue": "Expert Syst. Appl", "volume": "137", "issn": "", "pages": "392--404", "other_ids": {}}, "BIBREF8": {"ref_id": "b8", "title": "AUREA: an open-source software system for accurate and userfriendly identification of relative expression molecular signatures", "authors": [{"first": "J", "middle": ["C"], "last": "Earls", "suffix": ""}], "year": 2013, "venue": "BMC Bioinform", "volume": "14", "issn": "", "pages": "", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Classifying gene expression profiles from pairwise mRNA comparisons", "authors": [{"first": "D", "middle": [], "last": "Geman", "suffix": ""}], "year": 2004, "venue": "Stat. Appl. Genet. Mol. Biol", "volume": "3", "issn": "19", "pages": "", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "More is better: recent progress in multiomics data integration methods", "authors": [{"first": "S", "middle": [], "last": "Huang", "suffix": ""}, {"first": "K", "middle": [], "last": "Chaudhary", "suffix": ""}, {"first": "L", "middle": ["X"], "last": "Garmire", "suffix": ""}], "year": 2017, "venue": "Front. Genet", "volume": "8", "issn": "84", "pages": "", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Analyzing omics data by pair-wise feature evaluation with horizontal and vertical comparisons", "authors": [{"first": "X", "middle": [], "last": "Huang", "suffix": ""}], "year": 2018, "venue": "J. Pharm. Biomed. Anal", "volume": "157", "issn": "", "pages": "20--26", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "Constructing optimal binary decision trees is NP complete", "authors": [{"first": "L", "middle": [], "last": "Hyafil", "suffix": ""}, {"first": "R", "middle": ["L"], "last": "Rivest", "suffix": ""}], "year": 1976, "venue": "Inf. Process. Lett", "volume": "5", "issn": "1", "pages": "15--17", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Evolutionary induction of a decision tree for large scale data. A GPU-based approach", "authors": [{"first": "K", "middle": [], "last": "Jurczuk", "suffix": ""}, {"first": "M", "middle": [], "last": "Czajkowski", "suffix": ""}, {"first": "M", "middle": [], "last": "Kretowski", "suffix": ""}], "year": 2017, "venue": "Soft Comput", "volume": "21", "issn": "", "pages": "7363--7379", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "AUCTSP: an improved biomarker gene pair class predictor", "authors": [{"first": "D", "middle": [], "last": "Kagaris", "suffix": ""}, {"first": "A", "middle": [], "last": "Khamesipour", "suffix": ""}], "year": 2018, "venue": "BMC Bioinform", "volume": "19", "issn": "244", "pages": "", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "MetaKTSP: a meta-analytic top scoring pair method for robust cross-study validation of omics prediction analysis", "authors": [{"first": "S", "middle": [], "last": "Kim", "suffix": ""}, {"first": "C", "middle": ["W"], "last": "Lin", "suffix": ""}, {"first": "G", "middle": ["C"], "last": "Tseng", "suffix": ""}], "year": 2016, "venue": "Bioinformatics", "volume": "32", "issn": "13", "pages": "1966--1973", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Decision trees: a recent overview", "authors": [{"first": "S", "middle": ["B"], "last": "Kotsiantis", "suffix": ""}], "year": 2013, "venue": "Artif. Intell. Rev", "volume": "39", "issn": "4", "pages": "261--283", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Evolutionary Decision Trees in Large-scale Data Mining", "authors": [{"first": "M", "middle": [], "last": "Kretowski", "suffix": ""}], "year": 2019, "venue": "Studies in Big Data", "volume": "59", "issn": "", "pages": "", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "The ordering of expression among a few genes can provide simple cancer biomarkers and signal BRCA1 mutations", "authors": [{"first": "X", "middle": [], "last": "Lin", "suffix": ""}], "year": 2009, "venue": "BMC Bioinform", "volume": "10", "issn": "256", "pages": "", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "CUDT: a CUDA based decision tree algorithm", "authors": [{"first": "W", "middle": ["T"], "last": "Lo", "suffix": ""}], "year": 2014, "venue": "Sci. World J", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "The top-scoring 'N' algorithm: a generalized relative expression classification method from small numbers of biomolecules", "authors": [{"first": "A", "middle": ["T"], "last": "Magis", "suffix": ""}, {"first": "N", "middle": ["D"], "last": "Price", "suffix": ""}], "year": 2012, "venue": "BMC Bioinform", "volume": "13", "issn": "1", "pages": "", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "Challenges in biomarker discovery: combining expert insights with statistical analysis of complex omics data", "authors": [{"first": "J", "middle": ["E"], "last": "Mcdermott", "suffix": ""}], "year": 2013, "venue": "Expert Opin. Med. Diagn", "volume": "7", "issn": "1", "pages": "37--51", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Deep learning in bioinformatics", "authors": [{"first": "S", "middle": [], "last": "Min", "suffix": ""}, {"first": "B", "middle": [], "last": "Lee", "suffix": ""}, {"first": "S", "middle": [], "last": "Yoon", "suffix": ""}], "year": 2017, "venue": "Brief. Bioinform", "volume": "18", "issn": "5", "pages": "851--869", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "Simple decision rules for classifying human cancers from gene expression profiles", "authors": [{"first": "A", "middle": ["C"], "last": "Tan", "suffix": ""}, {"first": "D", "middle": ["Q"], "last": "Naiman", "suffix": ""}], "year": 2005, "venue": "Bioinformatics", "volume": "21", "issn": "", "pages": "3896--3904", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "Identification of key genes and pathways in Parkinson's disease through integrated analysis", "authors": [{"first": "J", "middle": [], "last": "Wang", "suffix": ""}, {"first": "Y", "middle": [], "last": "Liu", "suffix": ""}, {"first": "T", "middle": [], "last": "Chen", "suffix": ""}], "year": 2017, "venue": "Mol. Med. Rep", "volume": "16", "issn": "4", "pages": "3769--3776", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Comparison of possible relations between two genes X1 and X2 in normal and cancer samples together with RXA outcome", "latex": null, "type": "figure"}, "FIGREF1": {"text": "General flowchart of a GPU-accelerated ARXA", "latex": null, "type": "figure"}, "FIGREF2": {"text": "Candidate thresholds for gene pair xi/xj", "latex": null, "type": "figure"}, "FIGREF3": {"text": "An example decision tree induced by ARXA with detailed thresholds for GSE6613 Parkinson's disease.", "latex": null, "type": "figure"}, "FIGREF4": {"text": "An example decision tree induced by ARXA with rounded to 0.5 thresholds for GSE6613 Parkinson's disease.", "latex": null, "type": "figure"}, "TABREF0": {"text": "Details of gene expression datasets: abbreviation with name, number of genes and number of instances.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Datasets </td><td>Genes </td><td>Instances </td><td>Datasets </td><td>Genes </td><td>Instances\n</td></tr><tr><td>(a) GDS2771 </td><td>22215 </td><td>192 </td><td>(e) GSE10072 </td><td>22284 </td><td>107\n</td></tr><tr><td>(b) GSE17920 </td><td>54676 </td><td>130 </td><td>(f) GSE19804 </td><td>54613 </td><td>120\n</td></tr><tr><td>(c) GSE25837 </td><td>18631 </td><td>93 </td><td>(g) GSE27272 </td><td>24526 </td><td>183\n</td></tr><tr><td>(d) GSE3365 </td><td>22284 </td><td>127 </td><td>(h) GSE6613 </td><td>22284 </td><td>105\n</td></tr></table></body></html>"}, "TABREF1": {"text": "Comparison of ARXA variants results with different model comprehensibility settings. Averaged value through all datasets are shown.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Algorithm </td><td>Accuracy </td><td>Node size </td><td>Tree size\n</td></tr><tr><td>ARXAno round </td><td>81.2 </td><td>5.6 </td><td>2.1\n</td></tr><tr><td>ARXAround 0.5 </td><td>80.7 </td><td>4.9 </td><td>3.1\n</td></tr><tr><td>ARXAround 1.0 </td><td>79.6 </td><td>4.6 </td><td>3.4\n</td></tr></table></body></html>"}, "TABREF2": {"text": "Table 2. Comparison of RXCT with top-scoring algorithms, including accuracy and the size of the classifier's model. The best accuracy for each dataset is bolded.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Dataset TSP </td><td>TST </td><td>k-TSP </td><td>EvoTSP </td><td>TSPDT </td><td>\u00a0</td><td>ARXA\n</td><td>\u00a0</td></tr><tr><td>Acc. </td><td>Acc. </td><td>Acc. </td><td>Size </td><td>Acc. </td><td>Size </td><td>Acc. </td><td>Node size </td><td>Acc. </td><td>Node size </td><td>Tree size\n</td></tr><tr><td>(a) 57.2 </td><td>61.9 </td><td>62.9 </td><td>10 </td><td>65.6 </td><td>4.0 </td><td>60.1 </td><td>15.4 </td><td>70.9 </td><td>5.7 </td><td>3.6\n</td></tr><tr><td>(b) 88.7 </td><td>89.4 </td><td>90.1 </td><td>6 </td><td>96.5 </td><td>2.1 </td><td>98.2 </td><td>1.0 </td><td>92.5 </td><td>1.0 </td><td>1.0\n</td></tr><tr><td>(c) 64.9 </td><td>63.7 </td><td>67.2 </td><td>10 </td><td>78.1 </td><td>2.8 </td><td>72.3 </td><td>5.8 </td><td>84.7 </td><td>7.6 </td><td>1.4\n</td></tr><tr><td>(d) 93.5 </td><td>92.8 </td><td>94.1 </td><td>10 </td><td>96.2 </td><td>2.1 </td><td>88.3 </td><td>2.0 </td><td>95.0 </td><td>3.0 </td><td>1.0\n</td></tr><tr><td>(e) 56.0 </td><td>60.5 </td><td>58.4 </td><td>14 </td><td>66.9 </td><td>3.1 </td><td>68.1 </td><td>4.7 </td><td>68.3 </td><td>6.7 </td><td>3.4\n</td></tr><tr><td>(f) 47.3 </td><td>50.1 </td><td>56.2 </td><td>18 </td><td>66.2 </td><td>2.7 </td><td>67.2 </td><td>10.9 </td><td>78.5 </td><td>8.1 </td><td>2.2\n</td></tr><tr><td>(g) 81.9 </td><td>84.2 </td><td>87.2 </td><td>14 </td><td>86.1 </td><td>4.1 </td><td>88.6 </td><td>3.3 </td><td>94.4 </td><td>6.7 </td><td>1.0\n</td></tr><tr><td>(h) 49.5 </td><td>51.7 </td><td>55.8 </td><td>10 </td><td>53.6 </td><td>6.1 </td><td>59.6 </td><td>7.0 </td><td>65.6 </td><td>5.9 </td><td>2.4\n</td></tr><tr><td>Average 67.4 </td><td>69.3 </td><td>71.5 </td><td>11.5 </td><td>76.2 </td><td>2.7 </td><td>75.3 </td><td>6.2 </td><td>81.2 </td><td>5.6 </td><td>2.1\n</td></tr></table></body></html>"}}, "back_matter": [{"text": "Acknowledgments. This project was funded by the Polish National Science Center and allocated on the basis of decision 2019/33/B/ST6/02386 (first author). The second and third author were supported by the grant WZ/WI-IIT/3/2020 from BUT founded by Polish Ministry of Science and Higher Education.", "cite_spans": [], "ref_spans": [], "section": "acknowledgement"}]}