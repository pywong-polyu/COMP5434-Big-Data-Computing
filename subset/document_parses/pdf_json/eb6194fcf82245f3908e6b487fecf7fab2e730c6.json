{"paper_id": "eb6194fcf82245f3908e6b487fecf7fab2e730c6", "metadata": {"title": "Influence of Random Walk Parametrization on Graph Embeddings", "authors": [{"first": "Fabian", "middle": [], "last": "Schliski", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Passau", "location": {"postCode": "94032", "settlement": "Passau", "country": "Germany"}}, "email": "schliski@fim.uni-passau.de"}, {"first": "J\u00f6rg", "middle": [], "last": "Schl\u00f6tterer", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Passau", "location": {"postCode": "94032", "settlement": "Passau", "country": "Germany"}}, "email": "joerg.schloetterer@uni-passau.de"}, {"first": "Michael", "middle": [], "last": "Granitzer", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Passau", "location": {"postCode": "94032", "settlement": "Passau", "country": "Germany"}}, "email": "michael.granitzer@uni-passau.de"}]}, "abstract": [{"text": "Network or graph embedding has gained increasing attention in the research community during the last years. In particular, many methods to create graph embeddings using random walk based approaches have been developed. node2vec [10] introduced means to control the random walk behavior, guiding the walks. We aim to reproduce parts of their work and introduce two additional modifications (jump probabilities and attention to hubs), in order to investigate how guiding and modifying the walks influences the learned embeddings. The reproduction includes the case study illustrating homophily and structural equivalence subject to the chosen strategy and a node classification task. We were not able to illustrate structural equivalence and further results show that modifications of the walks only slightly improve node classification, if at all.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Network analysis involves methods to predict over nodes and edges, such as node classification [5] , link prediction [12] , clustering [8] , and visualization [13] .", "cite_spans": [{"start": 95, "end": 98, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 117, "end": 121, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 135, "end": 138, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 159, "end": 163, "text": "[13]", "ref_id": "BIBREF12"}], "ref_spans": [], "section": "Introduction"}, {"text": "Node classification aims at predicting the labels of unlabeled nodes based on a set of different labeled nodes and the network topology. An example is to predict the interests of a user in a social network based on other users with overlapping characteristics. Link prediction is used to predict missing or future links between nodes in the network. In a social network, it can be used to recommend new friends based on the current ones. Clustering attempts to identify similarities between nodes in the network and groups them into same-labeled clusters. This can be used to detect communities with similar interests in a social network. Visualization helps to gain quick insights about the structure of the network.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "Graph embeddings are feature vector representations of the nodes and edges of a network and are used as input to the methods above. node2vec [10] uses a random-walk based approach to create those embeddings and introduces two additional parameters to guide the random walk, aiming at preserving both community structure and structural roles. Community structure in a graph is based on proximity, i.e., nodes that are close together belong to a community. Structural roles can be nodes that act as bridges between sub-networks, or hubs, which are the main exchange point between many nodes. The two parameters guiding the random walk in node2vec [10] are: -Return parameter p, controlling the likeliness of immediately revisiting a node. -In-out parameter q, controlling how far outward the random walk should progress from the starting node.", "cite_spans": [{"start": 141, "end": 145, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 645, "end": 649, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Introduction"}, {"text": "These parameters allow to resemble depth-first (DFS) or breadth-first (BFS) search-like bevahiour in the most extreme setting, as well as a smooth interpolation between DFS and BFS. Grover and Leskovec suggest \"that BFS and DFS strategies represent extreme ends on the spectrum of embedding nodes based on the principles of homophily (i.e., network communities) and structural equivalence (i.e., structural roles of nodes)\" [10] . In a case study, they demonstrate that subject to the parameter settings, the resulting embeddings can capture homophily or structural equivalence. In this paper 1 , we -try to reproduce the case study illustrating homophily and structural equivalence. -try to reproduce node2vec's node classification result.", "cite_spans": [{"start": 424, "end": 428, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Introduction"}, {"text": "-introduce two additional modifications to the random walk strategy and evaluate and compare them on the node classification task. The additional strategies comprise hub attention and jump probalities, where the latter can be seen as noise.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "Algorithms to create graph embeddings can be divided into three categories: Factorization based, deep learning based, and random walk based [9] . Factorization based algorithms represent the graph as a matrix and apply methods such as eigenvalue decomposition or gradient descent to obtain node embeddings [9] . Examples are LLE [19] , Laplacian Eigenmaps [4] , GraRep [6] , and HOPE [16] .", "cite_spans": [{"start": 140, "end": 143, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 306, "end": 309, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 329, "end": 333, "text": "[19]", "ref_id": "BIBREF18"}, {"start": 356, "end": 359, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 369, "end": 372, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 384, "end": 388, "text": "[16]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "Related Work"}, {"text": "The deep learning based methods try to improve the performance of the factorization algorithms by computing non-linear functions on the graph. Examples are SDNE [20] (auto-encoder to reduce dimensionality), DNGR [7] (deep neural networks), and GCN [11] (graph convolutional networks).", "cite_spans": [{"start": 161, "end": 165, "text": "[20]", "ref_id": "BIBREF19"}, {"start": 212, "end": 215, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 248, "end": 252, "text": "[11]", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Related Work"}, {"text": "Random walk based approaches create embeddings by processing sets of random walks through the graph. First in this line was DeepWalk [18] , which samples purely random walks. These walks are then treated as sentence equivalents (where every node in the sequence corresponds to a word) and fed to a skip-gram model, a model variant of the word embeddings introduced by Mikolov et al. [14] , which became famous under the term word2vec. node2vec [10] follows this approach, but provides means to control the random walk behavior.", "cite_spans": [{"start": 133, "end": 137, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 383, "end": 387, "text": "[14]", "ref_id": "BIBREF13"}, {"start": 444, "end": 448, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Related Work"}, {"text": "For further methods and additional details of the methods mentioned above consult a survey by Goyal and Ferrara [9] .", "cite_spans": [{"start": 112, "end": 115, "text": "[9]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Related Work"}, {"text": "In the next sections, we will introduce modifications to the random walk strategy, similar to the one implemented by node2vec [10] . The modifications can take place in two sections of the random walk algorithm: During sampling, we can modify the transition probabilities between nodes to draw attention to specific ones, while during walking, we can directly influence how the random walk traverses.", "cite_spans": [{"start": 126, "end": 130, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Additional Random Walk Modifications"}, {"text": "We introduce the parameter j to modify the random walk during walking. It controls the probability of jumping to a random node in the graph at any given time. Intuitively, j ranges from 0 to 1, where with 0 no jumps to a random node occur, and with 1 every walking step is a random jump. The latter allows to create a truly random \"walk\" through the graph, without drawing any attention to the structure of the graph and edges with their respective weights. We are sampling truncated random walks, i.e., we start walks with a fixed length from every node in the graph. Therefore, the jump probability can be seen as noise in the truncated walks, opposed to jump probability in a single (huge) walk (as used by PageRank [17] for example).", "cite_spans": [{"start": 719, "end": 723, "text": "[17]", "ref_id": "BIBREF16"}], "ref_spans": [], "section": "Jump Probability"}, {"text": "Hubs are nodes in a graph with a degree that greatly exceeds the average [2] . The threshold \u03b5 is the sum of the mean node degree and the standard deviation of all degrees:", "cite_spans": [{"start": 73, "end": 76, "text": "[2]", "ref_id": "BIBREF1"}], "ref_spans": [], "section": "Hub Attention"}, {"text": "Based on that, we define the subset of hubs H of the nodes N as every node with a higher degree than \u03b5:", "cite_spans": [], "ref_spans": [], "section": "Hub Attention"}, {"text": "We are now modifying the random walk during sampling. Similar to node2vec [10] , we change the unnormalized transition probability \u03c0 vx of a node v to its neighbors x on edges (v, x) to \u03c0 vx = \u03b1 h (x) * w vx , where w vx is the weight of the edge, and", "cite_spans": [{"start": 74, "end": 78, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Hub Attention"}, {"text": "The parameter h introduced here controls the random walk tendency towards and away from hubs. If this parameter is set to a high value (>1), the probability of directly revisiting hubs is reduced, and the less frequented nodes are explored.", "cite_spans": [], "ref_spans": [], "section": "Hub Attention"}, {"text": "On the other hand, if h is small (<1), it increases the likelihood of traversing to hubs, so the walk is more focused on the areas around hubs in the graph.", "cite_spans": [], "ref_spans": [], "section": "Hub Attention"}, {"text": "We begin this section by introducing the datasets and parameters used in our experiments, followed by the different evaluation tasks performed. Les Mis\u00e9rables [1] is a network which contains the characters and their coappearances in the novel \"Les Mis\u00e9rables\" by Victor Hugo. Every node represents a character, and an edge between two characters indicates that they appeared in the same book chapter. The graph consists of 77 nodes, connected via 254 edges. BlogCatalog [21] is a social network where every node is a blogger, and an edge between two of them represents friendship. The graph consists of 10,312 nodes, connected via 333,983 edges and assigned to one or more of 39 classes (multi-label). The classes are the topics the blogger is interested in.", "cite_spans": [{"start": 159, "end": 162, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 470, "end": 474, "text": "[21]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "Evaluation"}, {"text": "We define a set of parameters for all learning algorithms to create a basis for a fair comparison. These are the embedding dimension d, the walk length l, the number of walks n and the skip-gram model [15] window size w. Furthermore the algorithm-specific parameters p, q (node2vec [10] ), h (Hub Attention, c.f. Sect. 3.2) and j (Jump Probability, c.f. Sect. 3.1).", "cite_spans": [{"start": 201, "end": 205, "text": "[15]", "ref_id": "BIBREF14"}, {"start": 282, "end": 286, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Evaluation"}, {"text": "To create the visualizations, we first learn the embeddings of the Les Mis\u00e9rables dataset using the respective random-walk algorithm. We then cluster these embeddings using k-means and assign the nodes of the graph colors based on their cluster. These embeddings are then visualized as a graph with Gephi [3] . For the common parameters, we used the values reported by Grover and Leskovec: embedding dimension d = 16, walk length l = 80, number of walks n = 10 and context window size w = 10.", "cite_spans": [{"start": 305, "end": 308, "text": "[3]", "ref_id": "BIBREF2"}], "ref_spans": [], "section": "Reproduction of Les Mis\u00e9rables Case Study"}, {"text": "The upper graph in the original paper [10, figure 3 ] reflects community structure and the values p = 1 and q = 0.5 are reported for walk parametrization. Our result in Fig. 1a also represents the community structure of the network, comparable to that in the original paper.", "cite_spans": [], "ref_spans": [{"start": 43, "end": 51, "text": "figure 3", "ref_id": null}, {"start": 169, "end": 176, "text": "Fig. 1a", "ref_id": "FIGREF0"}], "section": "Reproduction of Les Mis\u00e9rables Case Study"}, {"text": "For the lower graph in the original paper [10, figure 3 ], which as per description resembles structural equivalence, p = 1 and q = 2 are specified. Even with grid-search over these and further parameters (l, n and w), no result close to the original could be produced. The graph never represented structural equivalence, but community structure as well (with 3 instead of 6 clusters), as shown in Fig. 1b. (a) p = 1, q = 0.5, 6 clusters (b) p = 1, q = 2, 3 clusters ", "cite_spans": [], "ref_spans": [{"start": 47, "end": 55, "text": "figure 3", "ref_id": null}, {"start": 398, "end": 406, "text": "Fig. 1b.", "ref_id": "FIGREF0"}], "section": "Reproduction of Les Mis\u00e9rables Case Study"}, {"text": "We are running a multi-label node classification task on the BlogCatalog dataset. Same as in the original paper [10] , we use a one-vs-rest logistic regression classifier with L2 regularization. The dataset is split into training and test data, with a training fraction of 50%, and the scores are averaged over 10 random splits. Again, we use the common parameters as reported by Grover and Leskovec [10] : embedding dimension d = 128, walk length l = 80, number of walks n = 10 and window size w = 10. All results of the following sections are reported in Table 1 .", "cite_spans": [{"start": 112, "end": 116, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 400, "end": 404, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [{"start": 557, "end": 564, "text": "Table 1", "ref_id": "TABREF0"}], "section": "Node Classification"}, {"text": "The underlined values are the best per walk strategy, and the bold one is the best value overall.", "cite_spans": [], "ref_spans": [], "section": "Node Classification"}, {"text": "We used the values p = q = 0.25 as reported by node2vec [10] and also included results with parameters p = q = 1, eliminating the influence of the parameters on the random walk, resembling a \"pure\" random walk like DeepWalk [18] . We were not able to reproduce the results within a single iteration of the skip-gram model, but used five iterations instead. We suspect the difference to be due to an unrecognized change of the default hyper-parameters in gensim 2 , the word2vec implementation used by node2vec. Our reproduced score is close to the reported one and even slightly better, which can be explained by the random factor of the experiment. From this, we can conclude that our values are consistent with those in the original paper. Furthermore, node2vec [10] performed better than non-parameterized random walks like DeepWalk, at least on this dataset and parameter settings.", "cite_spans": [{"start": 56, "end": 60, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 224, "end": 228, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 764, "end": 768, "text": "[10]", "ref_id": "BIBREF9"}], "ref_spans": [], "section": "Reproduction of Results."}, {"text": "Jump Probability. We set j to each of {1, 0.25, 0.1}. Expectably, the higher the jump probability is, the consistently worse the results get. However, at j = 0.1, i.e. 10% noise, the performance is close to DeepWalk. This indicates, that a small amount of noise in the walks does not drastically harm the performance of the resulting embeddings on the node classification task.", "cite_spans": [], "ref_spans": [], "section": "Reproduction of Results."}, {"text": "We set h to each of {0.5, 0.75, 4, 8, 10}. As shown in Table 1 , a value of h = 4 allows us to achieve the best value across the different strategies. When focussing on hubs (h = 0.5, h = 0.75), performance even drops below the score of a jump probability of 25% (j = 0.25), i.e. jumping to a random node in every 4th step on average. Conversely, we gain performance if we put more attention to otherwise less-frequently visited nodes (i.e. if we increase h), at least up to a certain point where the results stabilize.", "cite_spans": [], "ref_spans": [{"start": 55, "end": 62, "text": "Table 1", "ref_id": "TABREF0"}], "section": "Hub Attention."}, {"text": "We attribute our inability to reproduce the case study in terms of structural equivalence to the skip-gram model. Its objective is to predict neighboring nodes and hence, nodes with similar neighbors are represented closeby in embedding space. Another factor is the context window size of the skip-gram model: No matter how far out a walk traverses, only nodes within this window will be considered as context. This also means, that the walks which start at a particular node are not that relevant to this particular node, but its embedding is determined by all the walks traversing through this node. With optimal parameter settings and taking the standard deviation into account, the performance difference between the walk strategies on the node classification task is negligible. In addition, Perozzi et al. report a macro-F1 score of 27.3 for DeepWalk [18] , doing shorter, but more walks. They report performance to increase constantly with the number of walks until it finally stabilizes. We conclude, that adapting the walk strategy can improve the embedding performance, if the number of sampled walks is insufficient. However, instead of tuning hyper-parameters of particular walk strategies, we can also increase the number of sampled walks per node instead. The nature of the skip-gram model and our inability to reproduce the structural equivalence case study point to the embeddings always representing homophily.", "cite_spans": [{"start": 857, "end": 861, "text": "[18]", "ref_id": "BIBREF17"}], "ref_spans": [], "section": "Discussion and Conclusion"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Les mis\u00e9rables network dataset -KONECT", "authors": [], "year": 2017, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Network Science", "authors": [{"first": "A", "middle": ["L"], "last": "Barab\u00e1si", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "Gephi: an open source software for exploring and manipulating networks", "authors": [{"first": "M", "middle": [], "last": "Bastian", "suffix": ""}, {"first": "S", "middle": [], "last": "Heymann", "suffix": ""}, {"first": "M", "middle": [], "last": "Jacomy", "suffix": ""}], "year": 2009, "venue": "Third International AAAI Conference on Weblogs and Social Media", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "Laplacian eigenmaps and spectral techniques for embedding and clustering", "authors": [{"first": "M", "middle": [], "last": "Belkin", "suffix": ""}, {"first": "P", "middle": [], "last": "Niyogi", "suffix": ""}], "year": 2002, "venue": "Advances in Neural Information Processing Systems", "volume": "", "issn": "", "pages": "585--591", "other_ids": {}}, "BIBREF4": {"ref_id": "b4", "title": "Node classification in social networks", "authors": [{"first": "S", "middle": [], "last": "Bhagat", "suffix": ""}, {"first": "G", "middle": [], "last": "Cormode", "suffix": ""}, {"first": "S", "middle": [], "last": "Muthukrishnan", "suffix": ""}], "year": 2011, "venue": "Soc. Netw. Data Anal", "volume": "", "issn": "", "pages": "115--148", "other_ids": {"DOI": ["10.1007/978-1-4419-8462-3_5"]}}, "BIBREF5": {"ref_id": "b5", "title": "Grarep: learning graph representations with global structural information", "authors": [{"first": "S", "middle": [], "last": "Cao", "suffix": ""}, {"first": "W", "middle": [], "last": "Lu", "suffix": ""}, {"first": "Q", "middle": [], "last": "Xu", "suffix": ""}], "year": 2015, "venue": "Proceedings of the 24th ACM International on Conference on Information and Knowledge Management", "volume": "", "issn": "", "pages": "891--900", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Deep neural networks for learning graph representations", "authors": [{"first": "S", "middle": [], "last": "Cao", "suffix": ""}, {"first": "W", "middle": [], "last": "Lu", "suffix": ""}, {"first": "Q", "middle": [], "last": "Xu", "suffix": ""}], "year": 2016, "venue": "Thirtieth AAAI Conference on Artificial Intelligence", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "A min-max cut algorithm for graph partitioning and data clustering", "authors": [{"first": "C", "middle": ["H Q"], "last": "Ding", "suffix": ""}, {"first": "X", "middle": [], "last": "He", "suffix": ""}, {"first": "H", "middle": [], "last": "Zha", "suffix": ""}, {"first": "M", "middle": [], "last": "Gu", "suffix": ""}, {"first": "H", "middle": ["D"], "last": "Simon", "suffix": ""}], "year": 2001, "venue": "Proceedings 2001 IEEE International Conference on Data Mining", "volume": "", "issn": "", "pages": "107--114", "other_ids": {"DOI": ["10.1109/ICDM.2001.989507"]}}, "BIBREF8": {"ref_id": "b8", "title": "Graph embedding techniques, applications, and performance: a survey. Knowl.-Based Syst", "authors": [{"first": "P", "middle": [], "last": "Goyal", "suffix": ""}, {"first": "E", "middle": [], "last": "Ferrara", "suffix": ""}], "year": 2018, "venue": "", "volume": "151", "issn": "", "pages": "78--94", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "node2vec: scalable feature learning for networks", "authors": [{"first": "A", "middle": [], "last": "Grover", "suffix": ""}, {"first": "J", "middle": [], "last": "Leskovec", "suffix": ""}], "year": 2016, "venue": "Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Semi-supervised classification with graph convolutional networks", "authors": [{"first": "T", "middle": ["N"], "last": "Kipf", "suffix": ""}, {"first": "M", "middle": [], "last": "Welling", "suffix": ""}], "year": 2016, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"arXiv": ["arXiv:1609.02907"]}}, "BIBREF11": {"ref_id": "b11", "title": "The link-prediction problem for social networks", "authors": [{"first": "D", "middle": [], "last": "Liben-Nowell", "suffix": ""}, {"first": "J", "middle": [], "last": "Kleinberg", "suffix": ""}], "year": 2007, "venue": "J. Am. Soc. Inf. Sci. Technol", "volume": "58", "issn": "7", "pages": "1019--1031", "other_ids": {"DOI": ["10.1002/asi.20591"]}}, "BIBREF12": {"ref_id": "b12", "title": "Visualizing data using t-SNE", "authors": [{"first": "L", "middle": ["V D"], "last": "Maaten", "suffix": ""}, {"first": "G", "middle": [], "last": "Hinton", "suffix": ""}], "year": 2008, "venue": "Mach. Learn. Res", "volume": "9", "issn": "", "pages": "2579--2605", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Distributed representations of words and phrases and their compositionality", "authors": [{"first": "T", "middle": [], "last": "Mikolov", "suffix": ""}, {"first": "I", "middle": [], "last": "Sutskever", "suffix": ""}, {"first": "K", "middle": [], "last": "Chen", "suffix": ""}, {"first": "G", "middle": [], "last": "Corrado", "suffix": ""}, {"first": "J", "middle": [], "last": "Dean", "suffix": ""}], "year": 2013, "venue": "Proceedings of the 26th International Conference on Neural Information Processing Systems, NIPS 2013", "volume": "", "issn": "", "pages": "3111--3119", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "Distributed representations of words and phrases and their compositionality", "authors": [{"first": "T", "middle": [], "last": "Mikolov", "suffix": ""}, {"first": "I", "middle": [], "last": "Sutskever", "suffix": ""}, {"first": "K", "middle": [], "last": "Chen", "suffix": ""}, {"first": "G", "middle": ["S"], "last": "Corrado", "suffix": ""}, {"first": "J", "middle": [], "last": "Dean", "suffix": ""}], "year": 2013, "venue": "Advances in Neural Information Processing Systems", "volume": "", "issn": "", "pages": "3111--3119", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Asymmetric transitivity preserving graph embedding", "authors": [{"first": "M", "middle": [], "last": "Ou", "suffix": ""}, {"first": "P", "middle": [], "last": "Cui", "suffix": ""}, {"first": "J", "middle": [], "last": "Pei", "suffix": ""}, {"first": "Z", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "W", "middle": [], "last": "Zhu", "suffix": ""}], "year": 2016, "venue": "Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining", "volume": "", "issn": "", "pages": "1105--1114", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "The pagerank citation ranking: bringing order to the web", "authors": [{"first": "L", "middle": [], "last": "Page", "suffix": ""}, {"first": "S", "middle": [], "last": "Brin", "suffix": ""}, {"first": "R", "middle": [], "last": "Motwani", "suffix": ""}, {"first": "T", "middle": [], "last": "Winograd", "suffix": ""}], "year": 1999, "venue": "Technical report Stanford InfoLab", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Deepwalk: online learning of social representations", "authors": [{"first": "B", "middle": [], "last": "Perozzi", "suffix": ""}, {"first": "R", "middle": [], "last": "Al-Rfou", "suffix": ""}, {"first": "S", "middle": [], "last": "Skiena", "suffix": ""}], "year": 2014, "venue": "Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining", "volume": "", "issn": "", "pages": "701--710", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Nonlinear dimensionality reduction by locally linear embedding", "authors": [{"first": "S", "middle": ["T"], "last": "Roweis", "suffix": ""}, {"first": "L", "middle": ["K"], "last": "Saul", "suffix": ""}], "year": 2000, "venue": "Science", "volume": "290", "issn": "5500", "pages": "2323--2326", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Structural deep network embedding", "authors": [{"first": "D", "middle": [], "last": "Wang", "suffix": ""}, {"first": "P", "middle": [], "last": "Cui", "suffix": ""}, {"first": "W", "middle": [], "last": "Zhu", "suffix": ""}], "year": 2016, "venue": "Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining", "volume": "", "issn": "", "pages": "1225--1234", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "Social computing data repository at ASU", "authors": [{"first": "R", "middle": [], "last": "Zafarani", "suffix": ""}, {"first": "H", "middle": [], "last": "Liu", "suffix": ""}], "year": 2009, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Les Mis\u00e9rables network with nodes colored corresponding to their cluster in embeddings created by different walk strategies. (Color figure online)", "latex": null, "type": "figure"}, "TABREF0": {"text": "", "latex": null, "type": "table"}, "TABREF1": {"text": "Table 1. Macro f1 scores and standard deviation ( \u00b1 ) of the node classification task on the BlogCatalog dataset using different parameters for each algorithm.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Learner </td><td>Parameters </td><td>Score\n</td></tr><tr><td>node2vec </td><td>p = 0.25, q = 0.25 p = 1, q = 1 </td><td>26.72 \u00b1 0.72 25.85 \u00b1 0.59\n</td></tr><tr><td>Jump probability </td><td>j = 1 </td><td>03.64 \u00b1 0.14\n</td></tr><tr><td>j = 0.25 </td><td>25.27 \u00b1 0.68\n</td></tr><tr><td>\u00a0</td><td>j = 0.1 </td><td>25.76 \u00b1 0.55\n</td></tr><tr><td>Hub attention </td><td>h = 0.5 </td><td>23.37 \u00b1 0.59\n</td></tr><tr><td>h = 0.75 </td><td>25.21 \u00b1 0.64\n</td></tr><tr><td>\u00a0</td><td>h = 4 </td><td>27.44\u00b1 0.64\n</td></tr><tr><td>\u00a0</td><td>h = 8 </td><td>27.17 \u00b1 0.52\n</td></tr><tr><td>\u00a0</td><td>h = 10 </td><td>27.39 \u00b1 0.55\n</td></tr></table></body></html>"}}, "back_matter": [{"text": "Acknowledgments. The presented work was developed within the East-Bavarian Centre of Internet Competence, Big and Open Data Analytics for Small and Mediumsized Enterprises (BODA), funded by the Bavarian Ministry of Economic Affairs and Media, Energy and Technology.", "cite_spans": [], "ref_spans": [], "section": "acknowledgement"}]}