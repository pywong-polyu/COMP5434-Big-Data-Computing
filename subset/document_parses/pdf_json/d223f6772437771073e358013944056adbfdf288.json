{"paper_id": "d223f6772437771073e358013944056adbfdf288", "metadata": {"title": "A GNSS-Based Crowd-Sensing Strategy for Specific Geographical Areas", "authors": [{"first": "Chuan-Bi", "middle": [], "last": "Lin", "suffix": "", "affiliation": {"laboratory": "", "institution": "ChaoYang University of Technology", "location": {"postCode": "413310", "settlement": "Taichung", "country": "Taiwan"}}, "email": "cblin@cyut.edu.tw"}, {"first": "Ruo-Wei", "middle": [], "last": "Hung", "suffix": "", "affiliation": {"laboratory": "", "institution": "Chaoyang University of Technology", "location": {"postCode": "413310", "settlement": "Taichung", "country": "Taiwan"}}, "email": "rwhung@cyut.edu.tw"}, {"first": "Chi-Yueh", "middle": [], "last": "Hsu", "suffix": "", "affiliation": {"laboratory": "", "institution": "Chaoyang University of Technology", "location": {"postCode": "413310", "settlement": "Taichung", "country": "Taiwan"}}, "email": "cyhsu@cyut.edu.tw"}, {"first": "Jong-Shin", "middle": [], "last": "Chen", "suffix": "", "affiliation": {"laboratory": "", "institution": "ChaoYang University of Technology", "location": {"postCode": "413310", "settlement": "Taichung", "country": "Taiwan"}}, "email": "jschen26@cyut.edu.tw"}]}, "abstract": [{"text": "Infectious diseases, such as COVID-19, SARS, MERS, etc., have seriously endangered human safety, economy, and education. During the spread of epidemics, restricting the range of activities of personnel is one of the options for the prevention and treatment of infectious diseases. A global navigation satellite system (GNSS), it can provide accurate coordinates of latitude and longitude to targets with GNSS receivers. However, it is not common to use GNSS coordinates to represent positions in social life. For epidemic management, it is important to know the locations (and addresses) of targets, especially in social life. When there are many targets, it is not easy to efficiently map these coordinates to locations. Therefore, we propose a GNSS-based crowd-sensing strategy for specific geographical areas that can be used to calculate how many targets are in specific geographical areas or whether a target is in a specific area. This strategy is based on the coordinates of latitude and longitude provided by GNSS to find the locations of these coordinates. As simulated data, the data records containing latitude and longitude in a well-known social networking service platform are used. The strategy is also available for mining hot spots or hot areas.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "A satellite navigation system with global coverage is called a global navigation satellite system (GNSS). It allows small electronic receivers to find its position in longitude and latitude coordinates. Current international GNSS standards for International Civil Aviation address only two core constellations: the U.S. Global Positioning System (GPS) and the Global Navigation Satellite System (GLONASS) [1, 2] . These systems allow small electronic receivers to determine their location with the values of longitude and latitude to high precision using time signals transmitted along a line of sight by radio from satellites. Moreover, GPS receivers released in 2018 that use the L5 band [3] can have much higher accuracy. Many studies, that have used different techniques to improve observation precisions of GNSS positioning [4] [5] [6] , can support this study. In this study, the corresponding locations of the latitude and longitude coordinates provided by a GNSS are evaluated. We also assume there is a large number of targets. Each target has a GNSS receiver that can acquire its current latitude and longitude coordinates and delivers its coordinates to a server. The coordinates of targets can be acquired by a computer manner. Our proposition is to assume that, when spaces of specific areas are 1.", "cite_spans": [{"start": 405, "end": 408, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 409, "end": 411, "text": "2]", "ref_id": "BIBREF1"}, {"start": 690, "end": 693, "text": "[3]", "ref_id": "BIBREF2"}, {"start": 829, "end": 832, "text": "[4]", "ref_id": null}, {"start": 833, "end": 836, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 837, "end": 840, "text": "[6]", "ref_id": "BIBREF5"}], "ref_spans": [], "section": "Introduction"}, {"text": "For real-time coordinates of targets, this strategy can be used to determine the number of targets in the specified area in time and can also be used to determine whether the target is in the specified area.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "For historical coordinates of targets, this strategy can be used to determine areas in which the targets can easily gather or which locations are the hot spots.", "cite_spans": [], "ref_spans": [], "section": "2."}, {"text": "The rest of the paper is organized as follows. In Section 2, the research related to our study is introduced. In Section 3, the system architecture and the problems are described, in which the proposition is formalized. In Section 4, the crowd-sensing strategy is proposed. In Section 5, a demonstration is given by taking the area of Taiwan Island as the experimental area and the Facebook check-in places as the targets and examples. In Section 6, a discussion about the performance is described. Finally, a conclusion is given in Section 7.", "cite_spans": [], "ref_spans": [], "section": "2."}, {"text": "Accurate latitude and longitude positioning supports our research to evaluate the corresponding social locations. In [4] [5] [6] , there are different techniques to improve observation precisions of GNSS positioning. In [10] , the authors focused on the integrated methodology of GNSS and device-to-device measurements. The simulation and experimental results demonstrated that the integrated methodology outperforms the nonintegrated one. In [11] , a two-step approach is studied, namely, computing first the Fisher Information Matrix (FIM) for the channel parameters, and then transforming it into the FIM of the position, rotation, and clock-bias. The analysis demonstrated the advantages of the hybrid positioning in terms of (1) localization accuracy, (2) coverage, (3) precise rotation estimation, and (4) clock-error estimation. In [12] , this study presented a wideband/multiband quad-antenna system for 4G/5G/GPS metal-frame mobile phones. The merit of the proposed antenna system is that a quad-antenna system is achieved under the condition of a metal frame and, without using any decoupling structure, the desired bands for 4G/5G/GPS are covered.", "cite_spans": [{"start": 117, "end": 120, "text": "[4]", "ref_id": null}, {"start": 121, "end": 124, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 125, "end": 128, "text": "[6]", "ref_id": "BIBREF5"}, {"start": 220, "end": 224, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 443, "end": 447, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 839, "end": 843, "text": "[12]", "ref_id": "BIBREF11"}], "ref_spans": [], "section": "Related Work"}, {"text": "The Internet environment has generated a large number of geographical points, such as Facebook check-in places [13] [14] [15] , Google Maps places, Foursquare check-in places, etc. These places in Social Networking Services (SNS) are special kinds of geographical points. However, each SNS point contains not only a geographical coordinate and some contents to introduce this point. Accordingly, there are many studies focused on these points with their contents. In [16] , the paper aimed to assess the role that interactive technology can play in enhancing urban governance to meet social needs. In [17] , a real-time Google Maps-based arterial traffic information system for urban streets is presented. In [18] , the authors proposed the reuse of up-to-date and low-cost place data from social media applications for land use mapping purposes by Foursquare place data. In [19] , the study aimed to explore Foursquare mobility networks and investigate the phenomena of clustering venues across the cities. In [20] , the study aimed to inform on how scientific researchers could utilize data generated in location-based social networks to attain a deeper understanding of human mobility. In [21] , the authors proposed to find the geographical points related to a special folk belief. In [22] , the author utilized the Markov Chain model with their proposed activity detection method to predict the activity category of the user's next check-in location. In [23] , an urban tourism check algorithm is proposed. It can find those who are tourists and find out where the people come from and the route of their visit. In [24] , the structure analysis of place networks is explored, in which vertices of geographic places, while the links between places are formed, are based on the user's check-in history. In [25] , a new feature fusion-based prediction approach is proposed, based on carefully designed feature extraction methods. If these points can be mapped to social locations, not only coordinates, these applications could have further enhancements. To acquire the social locations of geographical points is also a promising topic, such as in epidemic management. In computational geometry, this is the point-in-polygon (PIP) problem [26] [27] [28] [29] [30] . These studies provide methods to evaluate that a point is inside an area or is not-inside an area without error. In [29] , a computer-friendly method was proposed for the PIP problem.", "cite_spans": [{"start": 111, "end": 115, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 116, "end": 120, "text": "[14]", "ref_id": "BIBREF13"}, {"start": 121, "end": 125, "text": "[15]", "ref_id": "BIBREF14"}, {"start": 467, "end": 471, "text": "[16]", "ref_id": "BIBREF15"}, {"start": 601, "end": 605, "text": "[17]", "ref_id": "BIBREF16"}, {"start": 709, "end": 713, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 875, "end": 879, "text": "[19]", "ref_id": "BIBREF18"}, {"start": 1011, "end": 1015, "text": "[20]", "ref_id": "BIBREF19"}, {"start": 1192, "end": 1196, "text": "[21]", "ref_id": "BIBREF20"}, {"start": 1289, "end": 1293, "text": "[22]", "ref_id": "BIBREF21"}, {"start": 1459, "end": 1463, "text": "[23]", "ref_id": "BIBREF22"}, {"start": 1620, "end": 1624, "text": "[24]", "ref_id": "BIBREF23"}, {"start": 1809, "end": 1813, "text": "[25]", "ref_id": "BIBREF24"}, {"start": 2241, "end": 2245, "text": "[26]", "ref_id": "BIBREF25"}, {"start": 2246, "end": 2250, "text": "[27]", "ref_id": "BIBREF26"}, {"start": 2251, "end": 2255, "text": "[28]", "ref_id": "BIBREF27"}, {"start": 2256, "end": 2260, "text": "[29]", "ref_id": "BIBREF28"}, {"start": 2261, "end": 2265, "text": "[30]", "ref_id": "BIBREF30"}, {"start": 2384, "end": 2388, "text": "[29]", "ref_id": "BIBREF28"}], "ref_spans": [], "section": "Related Work"}, {"text": "In [30] , the authors developed a PIP algorithm that can evaluate that a point is inside or is not-inside an area. Based on this PIP algorithm, the method to find all points within a specific geographical area was developed. It first plans a range that can cover the entire specific area. Then, it finds all the points in the planned range. For each point, the PIP algorithm is used to calculate whether this point is in the specified area. Because the PIP method is verified, this method can be applied to evaluate all the points in the specified area without error. However, this method is inefficient when the area is large with a large number of points. The planned range is often much larger than the specific area. This method selects a large number of points that are not in this specific area and confirms their locations by PIP. If the planned range can be smaller, the points that need to be confirmed by PIP will be reduced a lot. In addition, if certain points are known in the area or known outside the area, there is no need to confirm through PIP. In this way, the performance will be improved a lot.", "cite_spans": [{"start": 3, "end": 7, "text": "[30]", "ref_id": "BIBREF30"}], "ref_spans": [], "section": "Related Work"}, {"text": "The architecture of the system assumes that the target has a GNSS receiver. It can convert the received signal into coordinate data and send it to storage, such as databases, according to the transmission mechanism of the wired or wireless network. The target will be represented by a geographic point, referring to a point that has its latitude and longitude coordinate. In geometry, a point with coordinate is termed as a geographical point. Moreover, a geographical area (a specific area) is a polygon. A polygon is composed of edges with geographical points. These edges enclose a measurable interior [21] . Moreover, for a geographical point p, x(p) and y(p) are used to represent the coordinate of p. For a geographical area A with n points, a 0 , a 1 , . . . , and a n are used to represent these n points, where a 0 = a n .", "cite_spans": [{"start": 605, "end": 609, "text": "[21]", "ref_id": "BIBREF20"}], "ref_spans": [], "section": "System Architecture and Problem Description"}, {"text": "The architecture of this system can be simplified into a geographic area A and a set P of geographical points. Because the area of area A is large and the size of set P is also very large, it is impossible in the Sensors 2020, 20, 4171 4 of 17 field of computers to load all the points of P into the variables in the programming language and then calculate whether each point is in the range of A. It must be planned to only take points in part of the area in A at a time and these points are affordable by computers. The type of this area is chosen as a circle. There are two reasons. The first reason is that some well-known platforms (servers), such as Facebook, also provide geographical points in a circle manner. The other reason is to follow the access method of storages. The storage in general is a database system. To retrieve some records from the storage, it must be obtained through the access mechanism of the database system, such as structured query language (SQL). The circle-area manner can be mapped to the corresponding SQL commands. However, the configuration of the circle manner is not easy to fully cover a geographical area. Here the cellular architecture using a regular hexagonal configuration, instead of the circular configuration, can be applied. The cell architecture is shown in Figure 1 , in which Figure 1a provides the layout of a cell and Figure 1b provides the relative positions of cell c and its six neighbors. If the radius of the circle is r, then the length of the regular hexagonal side is r. For convenience, a cell is used to represent a regular hexagon. There are six cells around a cell, termed as the neighbors of this cell. For a cell c, cells c N0 , c N1 , . . . , and c N5 are used to represent the six neighbors of cell c. The relative positions of cell c and its six neighbors can be expressed by an oblique coordinate architecture with 60 degrees (i.e., the angle between the x-axis and the y-axis is 60 degrees). Moreover, for cell c with radius r, Table 1 provides the coordinates of each vertex. Table 2 provides the coordinates of each neighbor.", "cite_spans": [], "ref_spans": [{"start": 1311, "end": 1319, "text": "Figure 1", "ref_id": "FIGREF0"}, {"start": 1331, "end": 1340, "text": "Figure 1a", "ref_id": "FIGREF0"}, {"start": 1375, "end": 1384, "text": "Figure 1b", "ref_id": "FIGREF0"}, {"start": 2004, "end": 2011, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 2053, "end": 2060, "text": "Table 2", "ref_id": null}], "section": "System Architecture and Problem Description"}, {"text": "Sensors 2020, 20, x FOR PEER REVIEW 4 of 16 planned to only take points in part of the area in A at a time and these points are affordable by computers. The type of this area is chosen as a circle. There are two reasons. The first reason is that some well-known platforms (servers), such as Facebook, also provide geographical points in a circle manner. The other reason is to follow the access method of storages. The storage in general is a database system. To retrieve some records from the storage, it must be obtained through the access mechanism of the database system, such as structured query language (SQL). The circle-area manner can be mapped to the corresponding SQL commands. However, the configuration of the circle manner is not easy to fully cover a geographical area. Here the cellular architecture using a regular hexagonal configuration, instead of the circular configuration, can be applied. The cell architecture is shown in Figure 1 , in which Figure 1a provides the layout of a cell and Figure 1b provides the relative positions of cell c and its six neighbors. If the radius of the circle is r, then the length of the regular hexagonal side is r. For convenience, a cell is used to represent a regular hexagon. There are six cells around a cell, termed as the neighbors of this cell. For a cell c, cells cN0, cN1, \u2026, and cN5 are used to represent the six neighbors of cell c. The relative positions of cell c and its six neighbors can be expressed by an oblique coordinate architecture with 60 degrees (i.e., the angle between the x-axis and the y-axis is 60 degrees). Moreover, for cell c with radius r, Table 1 provides the coordinates of each vertex. Table 2 provides the coordinates of each neighbor. ", "cite_spans": [], "ref_spans": [{"start": 946, "end": 954, "text": "Figure 1", "ref_id": "FIGREF0"}, {"start": 966, "end": 975, "text": "Figure 1a", "ref_id": "FIGREF0"}, {"start": 1010, "end": 1019, "text": "Figure 1b", "ref_id": "FIGREF0"}, {"start": 1629, "end": 1636, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 1678, "end": 1685, "text": "Table 2", "ref_id": null}], "section": "System Architecture and Problem Description"}, {"text": "Moreover, if expressed by the geographic coordinate system (i.e., use latitude and longitude values to describe a coordinate with cell c), the offset coordinates of the six neighbors are shown in Table 2 . Notably, the distance r is transformed by the Cartesian coordinate. Every point that is expressed in ellipsoidal coordinates can be expressed as rectilinear x y z (Cartesian) coordinates. Cartesian coordinates simplify many mathematical calculations. The Cartesian systems of different data are not equivalent. The distance between the points of longitude 121 and latitude 21 to the point of longitude 122 and latitude 21 is about 103 km. The distance between the points of longitude Table 1 . The vertices of cell c. For a cell c with radius r, the coordinates of each vertex are as follows.", "cite_spans": [], "ref_spans": [{"start": 196, "end": 203, "text": "Table 2", "ref_id": null}, {"start": 690, "end": 697, "text": "Table 1", "ref_id": "TABREF0"}], "section": "Vertex Coordinate"}, {"text": "Coordinate Table 2 . The neighbors of cell c. For a cell c with radius r, the coordinates of each neighbor are as follows.", "cite_spans": [], "ref_spans": [{"start": 11, "end": 18, "text": "Table 2", "ref_id": null}], "section": "Vertex"}, {"text": "Moreover, if expressed by the geographic coordinate system (i.e., use latitude and longitude values to describe a coordinate with cell c), the offset coordinates of the six neighbors are shown in Table 2 . Notably, the distance r is transformed by the Cartesian coordinate. Every point that is expressed in ellipsoidal coordinates can be expressed as rectilinear x y z (Cartesian) coordinates. Cartesian coordinates simplify many mathematical calculations. The Cartesian systems of different data are not equivalent. The distance between the points of longitude 121 and latitude 21 to the point of longitude 122 and latitude 21 is about 103 km. The distance between the points of longitude 122 and latitude 21 to the point of longitude 122 and latitude 22 is about 111 km. If it is configured with a radius of 1 km, r can be set to about 0.009 (=1/111) near this area.", "cite_spans": [], "ref_spans": [{"start": 196, "end": 203, "text": "Table 2", "ref_id": null}], "section": "Neighbor Coordinate"}, {"text": "A cell c is a regular hexagon area, defined as (c, r), where (x(c), y(c)) is the geographical coordinate, and r is the length of the regular hexagonal side. Moreover, V(c) = {c V0 , c V1 , c V2 , c V3 , c V4 , c V5 } is defined as the set of six vertices and NB(c) = {c N0 , c N1 , c N2 , c N3 , c N4 , c N5 } is defined as the set of six neighboring cells. Table 1 provides the coordinates of each vertex in V(c) and Table 2 provides the coordinates of each neighbor in NB(c).", "cite_spans": [], "ref_spans": [{"start": 358, "end": 365, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 418, "end": 425, "text": "Table 2", "ref_id": null}], "section": "Neighbor Coordinate"}, {"text": "Hereafter, the word \"geographical point\" is simply termed as a \"point\" and the word \"geographical area\" is simply termed as an \"area\". Evaluating whether a point is inside or is not-inside is the PIP problem. It can count the intersections of the polygon with the ray of this point. A ray of a point is starting from this point to any fixed direction. That the number of intersections between the polygon and the ray is odd indicates this point is inside this polygon. Otherwise, it indicates this point is not-inside this polygon. This method can evaluate the locations of points with respect to an area without error. To implement this method, it must first be able to determine whether two lines are intersected. In [29] , a computer-friendly method was proposed to do it. Suppose there are two lines. (1), can be evaluated. If the value of \u03c1 equal 0, these two lines are parallel. Next, \u03ba 1 and \u03ba 2 , as, respectively, shown in (2) and (3), can be evaluated. If the value of \u03ba 1 is between 0 and 1, the intersection is between o 1 and o 2 . If the value of \u03ba 2 is between 0 and 1, the intersection is between o 3 and o 4 . In other words, if edge (o 1 , o 2 ) and edge (o 3 , o 4 ) are intersected, the value of \u03ba 1 is between 0 and 1 and the value of \u03ba 2 is also between 0 and 1.", "cite_spans": [{"start": 719, "end": 723, "text": "[29]", "ref_id": "BIBREF28"}], "ref_spans": [], "section": "Neighbor Coordinate"}, {"text": "The overlap of an area A with a cell c, where the space of A is far greater than the space of c, is also considered. There are two overlapping cases between A and c. The first case is the space of A is overlapped with the space of c. Non-first relationship is the second relationship. The first case can be evaluated when all six points are inside A and there are no intersection points among the edges of c and the edges of A.", "cite_spans": [], "ref_spans": [], "section": "Neighbor Coordinate"}, {"text": "As shown in Figure 2 , an area is composed of a convex polygon with six points, a 0 , a 1 , . . . , and a 5 . The rays of p 1 , p 2 , and p 3 within this area, respectively, have 2, 1, and 0 intersection(s). Since the ray of a point has odd intersections within the area, it means that the point is inside the area; otherwise, the point is not-inside the area. Then, both point p 1 and point p 3 are not-inside the area and point p 2 is inside the area. Continually, there are three cells, c 1 , c 2 , and c 3 . Since all vertices of c 1 are in this area, two vertices of c 2 are in this area, and no vertices of c 3 are in this area, both c 1 and c 2 overlap with this area and c 3 does not overlap with this area. ", "cite_spans": [], "ref_spans": [{"start": 12, "end": 20, "text": "Figure 2", "ref_id": "FIGREF3"}], "section": "Neighbor Coordinate"}, {"text": "Given an area A = {a0, a1, \u2026, an} and a large number of points P, where P are stored in a database and can be accessed by using SQL commands, this strategy includes two step cell allocation and point acquisition. It can achieve the evaluation all of points in P inside area A by applying the two steps.", "cite_spans": [], "ref_spans": [], "section": "Crowd-Sensing Strategy"}, {"text": "The first step applies algorithms EEI, PIA, and CAO to achieve cell allocation. Algorithm 1 provides algorithm EEI. It is an Edge-Edge Intersection algorithm, where inputs are two edges (o1, o2) and (o3, o4) and the output is a value of 0 or 1. If edge (o1, o2) and edge (o3, o4) are intersected, it results by returning 1. Otherwise, it results by returning 0. In this algorithm, it first calculates the value of \u03c1 according to (1) . If the value of \u03c1 is 0, the two edges are parallel. If the value of \u03c1 is not 0, it calculates the values of \u03ba1 and \u03ba2. If both \u03ba2 and \u03ba1 are between 0 and 1, it indicates that the two edges have an intersection.", "cite_spans": [{"start": 429, "end": 432, "text": "(1)", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "Cell Allocation"}, {"text": "if (\u03ba1 \u2265 0 and \u03ba1 \u2264 1) and (\u03ba2 \u2265 0 and \u03ba2 \u2264 1) then return 1; 9.", "cite_spans": [], "ref_spans": [], "section": "Cell Allocation"}, {"text": "else return 0; 10. } 11. } Algorithm 2 provides the Point Inside Area (PIA) algorithm, whose inputs are a point p and an area A and its output is a value of 0 or 1. If point p is inside area A, it results by returning value 1. Otherwise, it results by returning value 0. In this algorithm, variables o1 and o2 are used to represent an edge of area A and variables o3 and o4 are used to represent the incremental extension from p toward the x-axis until it is greater than the coordinate values of x(o1) and x(o1), as in line 6 (i.e., x(o4) is set as (max(x(o1), x(o2)) + 1). Variable count is used to record the number of intersections between the extension line of p and the edge of A. If the number of intersections is odd, it means that p is inside A, otherwise p is not-inside A. ", "cite_spans": [], "ref_spans": [], "section": "Cell Allocation"}, {"text": "Given an area A = {a 0 , a 1 , . . . , a n } and a large number of points P, where P are stored in a database and can be accessed by using SQL commands, this strategy includes two step cell allocation and point acquisition. It can achieve the evaluation all of points in P inside area A by applying the two steps.", "cite_spans": [], "ref_spans": [], "section": "Crowd-Sensing Strategy"}, {"text": "The first step applies algorithms EEI, PIA, and CAO to achieve cell allocation. (1) . If the value of \u03c1 is 0, the two edges are parallel. If the value of \u03c1 is not 0, it calculates the values of \u03ba 1 and \u03ba 2 . If both \u03ba 2 and \u03ba 1 are between 0 and 1, it indicates that the two edges have an intersection.", "cite_spans": [{"start": 80, "end": 83, "text": "(1)", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "Cell Allocation"}, {"text": "if (\u03ba 1 \u2265 0 and \u03ba 1 \u2264 1) and (\u03ba 2 \u2265 0 and \u03ba 2 \u2264 1) then return 1; 9.", "cite_spans": [], "ref_spans": [], "section": "Cell Allocation"}, {"text": "else return 0; 10. the x-axis until it is greater than the coordinate values of x(o 1 ) and x(o 1 ), as in line 6 (i.e., x(o 4 ) is set as (max(x(o 1 ), x(o 2 )) + 1). Variable count is used to record the number of intersections between the extension line of p and the edge of A. If the number of intersections is odd, it means that p is inside A, otherwise p is not-inside A.", "cite_spans": [], "ref_spans": [], "section": "Cell Allocation"}, {"text": "if (count % 2 == 1) then return 1; 10. else return 0; 11. } Algorithm 3 provides the Cell-Area Overlap (CAO) algorithm, whose inputs are a point p and an area A and its output is a value of 0 or 1. In this algorithm, each vertex of the cell is taken out independently, and is then calculated for whether it is inside A. The variable count is used to record how many vertices of cell c are inside A. If any of the six vertices of cell c are inside A, c and A are overlapping. Otherwise, c and A are non-overlapping. Algorithm 4 provides the Cell Allocation (CA) algorithm, whose inputs are an area A and a cell c s . The allocation starts with cell c s , called the seed cell, and then expands to its neighboring cells NB (c s ). Then, the neighbors of c s continue to extend the allocation of cells. The allocation is done until area A is completely covered by cells. In this algorithm, variable C records the allocated cells and variable P records the reference cells. In each iteration (in lines 5 to 14), each cell c p will be selected in sequence from P. Then, the neighbors of the c p are calculated using NB(c p ) (in line 7). For each cell, c NB of NB(c p ), if cell c NB is overlapped with A and c NB is not included in C, c NB will be added into C (i.e., C: = C\u222a{c NB }). Additionally, c NB is added to N (i.e., C: = \u222a{c NB }). At end of the iteration, the value of N is assigned to p to start a new iteration. Therefore, this algorithm is stopped when P is empty (in line 3) and then it returns the allocated cells C. Figure 3 , the irregular area is composed of 2055 points, and the numbers on cells index the order of cell allocation. In this example, ci is used to represent the cell, numbered as i. Initially, cell c0 is allocated. In the first iteration, the six neighbors c1, c2, \u2026, and c6 are included in C. Herein, C contains seven cells, c0, c1, c2, \u2026, and c6, and P contains six cells, c1, c2, \u2026, and c6. In the second iteration, cells c1, c2, \u2026, and c6 will be the reference cells. For instance, the neighbors of c1 contains cells c7, c8, c2, c0, c6, and c9. However, c2, c0, and c6 are already included in C. Only c7, c8, c9 are included in C. Continually, in the third iteration, cells c19 to c32 are included to C and in fourth iteration, cells c33 to c37 are included in C. In the fifth iteration, cells c33 to c37 are the reference cells P. Since all of the non-overlapped neighbors of c33, c34, \u2026, or c37 are included in C, no cell are included in C and P is empty (in line 3). Finally, the allocation is finished by returning the allocation C. Figure 3 . Example of Cell Allocation to an area. The allocation is started from c0. In each iteration, some cells will be allocated. After five iterations, the allocation is finished.", "cite_spans": [], "ref_spans": [{"start": 1528, "end": 1536, "text": "Figure 3", "ref_id": null}, {"start": 2572, "end": 2580, "text": "Figure 3", "ref_id": null}], "section": "Cell Allocation"}, {"text": "Points in the local database can be obtained with the similar SQL command in (4), where 'P' is the table that stores all of geographic points, 'x' and 'y' are the fields for storing latitude and longitude values, and r is the radius of the circular area. In addition, the SQRT (v) function is used to calculate the square root of the value v, and the POWER (v, n) function is used to calculate the nth power of the value v.", "cite_spans": [], "ref_spans": [], "section": "Point Acquisition"}, {"text": "Algorithm 5 provides the Cell Inside Area (CIA) algorithm, whose inputs are a cell c and an return C; 18. } As shown in Figure 3 , the irregular area is composed of 2055 points, and the numbers on cells index the order of cell allocation. In this example, ci is used to represent the cell, numbered as i. Initially, cell c0 is allocated. In the first iteration, the six neighbors c1, c2, \u2026, and c6 are included in C. Herein, C contains seven cells, c0, c1, c2, \u2026, and c6, and P contains six cells, c1, c2, \u2026, and c6. In the second iteration, cells c1, c2, \u2026, and c6 will be the reference cells. For instance, the neighbors of c1 contains cells c7, c8, c2, c0, c6, and c9. However, c2, c0, and c6 are already included in C. Only c7, c8, c9 are included in C. Continually, in the third iteration, cells c19 to c32 are included to C and in fourth iteration, cells c33 to c37 are included in C. In the fifth iteration, cells c33 to c37 are the reference cells P. Since all of the non-overlapped neighbors of c33, c34, \u2026, or c37 are included in C, no cell are included in C and P is empty (in line 3). Finally, the allocation is finished by returning the allocation C. Figure 3 . Example of Cell Allocation to an area. The allocation is started from c0. In each iteration, some cells will be allocated. After five iterations, the allocation is finished.", "cite_spans": [], "ref_spans": [{"start": 120, "end": 128, "text": "Figure 3", "ref_id": null}, {"start": 1164, "end": 1172, "text": "Figure 3", "ref_id": null}], "section": "Point Acquisition"}, {"text": "Points in the local database can be obtained with the similar SQL command in (4), where 'P' is the table that stores all of geographic points, 'x' and 'y' are the fields for storing latitude and longitude values, and r is the radius of the circular area. In addition, the SQRT (v) function is used to calculate the square root of the value v, and the POWER (v, n) function is used to calculate the nth power of the value v.", "cite_spans": [], "ref_spans": [], "section": "Point Acquisition"}, {"text": "SELECT * FROM `P` WHERE SQRT(POWER(`x` \u2212 x(c),2) + POWER(`y` \u2212 y(c), 2)) \u2264 r (4) Figure 3 . Example of Cell Allocation to an area. The allocation is started from c 0 . In each iteration, some cells will be allocated. After five iterations, the allocation is finished.", "cite_spans": [], "ref_spans": [{"start": 81, "end": 89, "text": "Figure 3", "ref_id": null}], "section": "Point Acquisition"}, {"text": "Points in the local database can be obtained with the similar SQL command in (4), where 'P' is the table that stores all of geographic points, 'x' and 'y' are the fields for storing latitude and longitude values, and r is the radius of the circular area. In addition, the SQRT (v) function is used to calculate Sensors 2020, 20, 4171 9 of 17 the square root of the value v, and the POWER (v, n) function is used to calculate the nth power of the value v.", "cite_spans": [], "ref_spans": [], "section": "Point Acquisition"}, {"text": "Algorithm 5 provides the Cell Inside Area (CIA) algorithm, whose inputs are a cell c and an area A and its output is a value of 1 or 0 that, respectively, indicates c inside A or c not-inside A. In this algorithm, each edge of c and each edge of A will be calculated to the number of intersections. If the number of intersections is 0, c is inside A, otherwise c is not inside A.", "cite_spans": [], "ref_spans": [], "section": "SELECT * FROM 'P' WHERE SQRT(POWER('x' \u2212 x(c),2) + POWER('y' \u2212 y(c), 2)) \u2264 r (4)"}, {"text": "In summary of the above algorithm, the Crowd-Sensing (CS) algorithm is purposed. Algorithm 6 provides the CS algorithm. It is a Crowd-Sensing algorithm, where the input includes a seed of cell c s , an area A, and all of points P and its output is a set P A of all points inside A. In this algorithm, it first calculates the cell allocation C by applying CA (c s , A), where C is the set of cells that can fully cover the space of area A. Then, for each cell c in C, it first extracts the geographic points Pc included in cell c from the database. There are two cases to deal with Pc. The first case based on cell c is inside area A, and Pc is directly included in P A . The other case is based on cell c not-inside A. In this case, every point p in Pc will be evaluated with area A. If point p is inside area A, then p is included to P A . For example, in Figure 3 , because cells c 0 , c 1, . . . , c 6 , c 8, c 9, . . . , c 12 are inside this area, the points in this range are included in P A . Other cells are not-inside this area, so the points in this range must be evaluated. In particular, our strategy only needs to evaluate the points in the outermost cells. In fact, the range of points to evaluate is very small. In general, if an area is allocated thousands of cells, only hundreds of cells are evaluated. for each p\u2208 P C do 11. { 12.", "cite_spans": [], "ref_spans": [{"start": 857, "end": 865, "text": "Figure 3", "ref_id": null}], "section": "SELECT * FROM 'P' WHERE SQRT(POWER('x' \u2212 x(c),2) + POWER('y' \u2212 y(c), 2)) \u2264 r (4)"}, {"text": "If (PIA(p, A) == 1) then P A : = \u222a{p}; 13. } 14.", "cite_spans": [], "ref_spans": [], "section": "SELECT * FROM 'P' WHERE SQRT(POWER('x' \u2212 x(c),2) + POWER('y' \u2212 y(c), 2)) \u2264 r (4)"}, {"text": "} 15. } 16.", "cite_spans": [], "ref_spans": [], "section": "SELECT * FROM 'P' WHERE SQRT(POWER('x' \u2212 x(c),2) + POWER('y' \u2212 y(c), 2)) \u2264 r (4)"}, {"text": "return P A ; 17. }", "cite_spans": [], "ref_spans": [], "section": "SELECT * FROM 'P' WHERE SQRT(POWER('x' \u2212 x(c),2) + POWER('y' \u2212 y(c), 2)) \u2264 r (4)"}, {"text": "The geographical area of experiment is mainly Taiwan Island that is located between 120 degrees to 122 degrees east longitude and 22 degrees to 25 degrees north latitude. It has an area of 35,808 square kilometers with 23.7 million inhabitants. The points are based on the check-in places of Facebook. The points were acquired from Facebook platform in January 2017, for a total of 1,112,188. We used these points as targets and try to find the targets in specific areas. This area currently contains 6 special municipalities, 10 counties and 3 provincial cities. We demonstrate the results according to the 19 subareas. Figure 4 provides the distribution of 19 subareas, the special municipalities are numbered as 1-6, counties are numbered as 7-16, and provincial cities are numbered as [17] [18] [19] . Each subarea is composed of hundreds to thousands of vertices. For instance, subarea 1 is composed of 2055 vertices. For each subarea, the proposed strategy was applied to evaluate the number of points inside it.", "cite_spans": [{"start": 789, "end": 793, "text": "[17]", "ref_id": "BIBREF16"}, {"start": 794, "end": 798, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 799, "end": 803, "text": "[19]", "ref_id": "BIBREF18"}], "ref_spans": [{"start": 621, "end": 629, "text": "Figure 4", "ref_id": "FIGREF12"}], "section": "Demonstration"}, {"text": "In Section 5.1, we first display the points in each area. In addition, the population density and the space density with points were also considered to find hot areas. In Section 5.2, we then display the points in each spot. The numbers of points in spots are also used to find hot spots. In addition, the distribution of spots are used to display the crowd distribution. In Section 5.3, we present the contributions of this study. In Section 5.3, we discuss the differences between this study and the previous study. subarea 1 is composed of 2055 vertices. For each subarea, the proposed strategy was applied to evaluate the number of points inside it.", "cite_spans": [], "ref_spans": [], "section": "Demonstration"}, {"text": "In Section 5.1, we first display the points in each area. In addition, the population density and the space density with points were also considered to find hot areas. In Section 5.2, we then display the points in each spot. The numbers of points in spots are also used to find hot spots. In addition, the distribution of spots are used to display the crowd distribution. In Section 5.3, we present the contributions of this study. In Section 5.3, we discuss the differences between this study and the previous study. ", "cite_spans": [], "ref_spans": [], "section": "Demonstration"}, {"text": "In Figure 4a , the value in parentheses is the number of points of the subarea. For example, there are 156,928 points in the area numbered as 4. Moreover, there are a total of 887,950 points in these 19 areas, of which subareas 4, 6, 2, 1, 5, and 3 are the hot areas with the most points. Figure 4b provides the point ratio of each subarea to 16 subareas. There are 616,324 (69.41%) points in these six hot areas. Especially, all of the six hot areas are special municipalities. These results show that, through the coordinates, we can accurately calculate the targets in a specific administrative area, rather than only the information of the latitude and longitude coordinates. Then, the population and the space of hot area are taken into consideration. Table 3 provides the population, space, points of each hot area, population density, and space density. For example, in subarea 1, the number of the population is 2,687,629, the space is 271.8 square kilometers, and the number of points is 89,209. Therefore, its population density is 3.32% (i.e., the value of 89,209/2,687,629 \u00d7 100%) and its space density is 328.21 (i.e., the value of 89,209/271.8). Among these six hot areas, subarea 1 especially has a much higher space density than the other five hot areas. For a specific area with positioned targets, the population and the space can be taken into consideration. It can get the proportion of the targets to the number of the population and the spatial proportion of the target object. This result can be used to determine whether the ", "cite_spans": [], "ref_spans": [{"start": 3, "end": 12, "text": "Figure 4a", "ref_id": "FIGREF12"}, {"start": 289, "end": 298, "text": "Figure 4b", "ref_id": "FIGREF12"}, {"start": 757, "end": 764, "text": "Table 3", "ref_id": "TABREF3"}], "section": "Points in Areas"}, {"text": "In Figure 4a , the value in parentheses is the number of points of the subarea. For example, there are 156,928 points in the area numbered as 4. Moreover, there are a total of 887,950 points in these 19 areas, of which subareas 4, 6, 2, 1, 5, and 3 are the hot areas with the most points. Figure 4b provides the point ratio of each subarea to 16 subareas. There are 616,324 (69.41%) points in these six hot areas. Especially, all of the six hot areas are special municipalities. These results show that, through the coordinates, we can accurately calculate the targets in a specific administrative area, rather than only the information of the latitude and longitude coordinates. Then, the population and the space of hot area are taken into consideration. Table 3 provides the population, space, points of each hot area, population density, and space density. For example, in subarea 1, the number of the population is 2,687,629, the space is 271.8 square kilometers, and the number of points is 89,209. Therefore, its population density is 3.32% (i.e., the value of 89,209/2,687,629 \u00d7 100%) and its space density is 328.21 (i.e., the value of 89,209/271.8). Among these six hot areas, subarea 1 especially has a much higher space density than the other five hot areas. For a specific area with positioned targets, the population and the space can be taken into consideration. It can get the proportion of the targets to the number of the population and the spatial proportion of the target object. This result can be used to determine whether the targets are too crowded in this area based on population or space. It can be used as a control for crowds, such as prohibiting more targets from entering this area or evacuating some targets from leaving this area. It can help to keep the number of targets in this area under control for social applications, such as traffic or epidemic control. Figure 5 provides the distribution of points for subarea 1 and its neighborhood. The range has 93,549 points, where there are 89,029 points inside subarea 1 and 4520 points not-inside subarea 1. Most of the points are gathered in subarea 1. Moreover, the points are concentrated between longitude 121.45 to 121.6 and latitude 24.95 to 25.01. However, there are almost no geographic points between latitude 25.1 and 25.22. Obviously, the distribution of points is very uneven. Then, we continue to calculate the locations of the hot spots to reveal the concentrations. ", "cite_spans": [], "ref_spans": [{"start": 3, "end": 12, "text": "Figure 4a", "ref_id": "FIGREF12"}, {"start": 289, "end": 298, "text": "Figure 4b", "ref_id": "FIGREF12"}, {"start": 757, "end": 764, "text": "Table 3", "ref_id": "TABREF3"}, {"start": 1895, "end": 1903, "text": "Figure 5", "ref_id": "FIGREF14"}], "section": "Points in Areas"}, {"text": "The area is divided into small areas, termed as spots, with a range of 0.01 degrees of latitude and longitude, and the area is slightly larger than 1 square kilometer. As shown in Table 4 , there are a total of 15,573 spots. There are 15,347 spots whose numbers of points are less 1000. However, there are 12 spots whose numbers of points are more than 4000. Table 5 provides the details of the 12 hot spots, including the locations, the coordinates, and the numbers of points. The 12 hot spots are in subarea 4, subarea 6, subarea 9, and subarea 19. Moreover, subarea 4 contains six hot spots, subarea 6 contains four hot spots, subarea 9 contains one hot spot, and subarea 19 contains one hot spot. Figure 6 shows the distribution of points in hot spot one. There are 6024 points in this range of about one square kilometer. It means when we are in this hot spot, we are easily exposed to these targets (points). The analysis of hot spots helps to understand whether the target is concentrated in a certain small range, and it is also easy to monitor these spots. ", "cite_spans": [], "ref_spans": [{"start": 180, "end": 187, "text": "Table 4", "ref_id": "TABREF5"}, {"start": 359, "end": 366, "text": "Table 5", "ref_id": "TABREF6"}, {"start": 701, "end": 709, "text": "Figure 6", "ref_id": "FIGREF16"}], "section": "Points in Spots"}, {"text": "The area is divided into small areas, termed as spots, with a range of 0.01 degrees of latitude and longitude, and the area is slightly larger than 1 square kilometer. As shown in Table 4 , there are a total of 15,573 spots. There are 15,347 spots whose numbers of points are less 1000. However, there are 12 spots whose numbers of points are more than 4000. Table 5 provides the details of the 12 hot spots, including the locations, the coordinates, and the numbers of points. The 12 hot spots are in subarea 4, subarea 6, subarea 9, and subarea 19. Moreover, subarea 4 contains six hot spots, subarea 6 contains four hot spots, subarea 9 contains one hot spot, and subarea 19 contains one hot spot. Figure 6 shows the distribution of points in hot spot one. There are 6024 points in this range of about one square kilometer. It means when we are in this hot spot, we are easily exposed to these targets (points). The analysis of hot spots helps to understand whether the target is concentrated in a certain small range, and it is also easy to monitor these spots. The first 10,000 spots, according to the number of geographic points, are taken into consideration. Then, these spots are classified into 10 groups, where each group is represented using brown color. The darker color represents more geographic points in this spot. The layout of the 10,000 spots is shown in Figure 7a . Comparing the relative positions of the 19 subareas in Figure  4a , it shows that hot spots are almost concentrated in the range of subarea 1 to subarea 6. These six areas are six municipalities in which the population densities are more than other administrative areas. Figure 7b shows the distribution of Highway in this area. The distribution of spots is consistent with the distribution of highway. The geographic points of this experiment are the check-in places of Facebook in Taiwan Island. These places are the historical records of Facebook users who have been to these places for a long time. Because Facebook users are very numerous in this experimental area, these points represent almost every point covered by social activities in the area. Therefore, areas with convenient transportation and high urbanization will have more geographic points. We indicated the spot, according to the number of geographic points, as a spot height map. This map, as shown in Figure 7a , coincides with the highway distribution and The first 10,000 spots, according to the number of geographic points, are taken into consideration. Then, these spots are classified into 10 groups, where each group is represented using brown color. The darker color represents more geographic points in this spot. The layout of the 10,000 spots is shown in Figure 7a . Comparing the relative positions of the 19 subareas in Figure 4a , it shows that hot spots are almost concentrated in the range of subarea 1 to subarea 6. These six areas are six municipalities in which the population densities are more than other administrative areas. Figure 7b shows the distribution of Highway in this area. The distribution of spots is consistent with the distribution of highway. The geographic points of this experiment are the check-in places of Facebook in Taiwan Island. These places are the historical records of Facebook users who have been to these places for a long time. Because Facebook users are very numerous in this experimental area, these points represent almost every point covered by social activities in the area. Therefore, areas with convenient transportation and high urbanization will have more geographic points. We indicated the spot, according to the number of geographic points, as a spot height map. This map, as shown in Figure 7a , coincides with the highway distribution and administrative area distribution of this area. These facts reveal that our research is a crowd-sensing strategy.", "cite_spans": [], "ref_spans": [{"start": 180, "end": 187, "text": "Table 4", "ref_id": "TABREF5"}, {"start": 359, "end": 366, "text": "Table 5", "ref_id": "TABREF6"}, {"start": 701, "end": 709, "text": "Figure 6", "ref_id": "FIGREF16"}, {"start": 1374, "end": 1383, "text": "Figure 7a", "ref_id": "FIGREF18"}, {"start": 1441, "end": 1451, "text": "Figure  4a", "ref_id": "FIGREF12"}, {"start": 1657, "end": 1666, "text": "Figure 7b", "ref_id": "FIGREF18"}, {"start": 2358, "end": 2367, "text": "Figure 7a", "ref_id": "FIGREF18"}, {"start": 2722, "end": 2731, "text": "Figure 7a", "ref_id": "FIGREF18"}, {"start": 2789, "end": 2798, "text": "Figure 4a", "ref_id": "FIGREF12"}, {"start": 3004, "end": 3013, "text": "Figure 7b", "ref_id": "FIGREF18"}, {"start": 3705, "end": 3714, "text": "Figure 7a", "ref_id": "FIGREF18"}], "section": "Points in Spots"}, {"text": "Sensors 2020, 20, x FOR PEER REVIEW 13 of 16 administrative area distribution of this area. These facts reveal that our research is a crowd-sensing strategy.", "cite_spans": [], "ref_spans": [], "section": "Points in Spots"}, {"text": "(a) (b) ", "cite_spans": [], "ref_spans": [], "section": "Points in Spots"}, {"text": "In [29] , an error-free method is presented that can calculate whether a point is inside a polygon. For this, we planned the PIA algorithm, which can also evaluate whether a point is within an area or not without error. Therefore, the efficiency of this type of method is determined by how many points are needed to apply the PIA algorithm and not the accuracy. We take an example, shown in Figure 5 , to illustrate the difference between our strategy and [30] . In [30] , it first plans a rectangle range that can cover this area. The range is marked as a dashed line. It then finds all points in this range. In our experimental environment, there are 95,349 points. So, the number of executing PIA algorithms is 95,349. In our strategy, we planned a set of cells that could cover this area. The range of the cells is similar to the example shown in Figure 3 that is slightly larger than this area. In fact, we planned with a cell of about 1 square kilometer. This area is about 271.8 square kilometers, as shown in Subarea 1 of Table 3 . In this example, the number of cells is about 350 and the number of points within these cells is about 90,000. These cells are classified into inside cells and not-inside cells through the CIA algorithm. Most points are inside cells. The points are surely also in this area without confirming locations by performing PIA. Only a few points located in the outermost cells (not-inside cells) need to confirm their locations. In the examples of Section 5.1 and Section 5.2, the points that need to execute PIA rarely exceeds 10%.", "cite_spans": [{"start": 3, "end": 7, "text": "[29]", "ref_id": "BIBREF28"}, {"start": 456, "end": 460, "text": "[30]", "ref_id": "BIBREF30"}, {"start": 466, "end": 470, "text": "[30]", "ref_id": "BIBREF30"}], "ref_spans": [{"start": 391, "end": 399, "text": "Figure 5", "ref_id": "FIGREF14"}, {"start": 851, "end": 859, "text": "Figure 3", "ref_id": null}, {"start": 1030, "end": 1037, "text": "Table 3", "ref_id": "TABREF3"}], "section": "Summary"}, {"text": "The previous study [30] is very time-consuming to find out the points in large-scale areas, especially when the number of candidate points is very large. The main contribution of our study is that the points that PIA needs to confirm are reduced to very few. Therefore, our strategy has the ability to efficiently handle large-scale areas, such as countries and cities. In the computer field, when the amount of data is large, it is not feasible to process all the data at once. It is necessary to transfer to the batch manner. The design of cells is adaptive to this. It is also convenient to be implemented for epidemic prevention management.", "cite_spans": [{"start": 19, "end": 23, "text": "[30]", "ref_id": "BIBREF30"}], "ref_spans": [], "section": "Summary"}, {"text": "Let A be a specific area and P be the set of points. Our proposed strategy provided a solution to acquire all points in P inside A. The PIA algorithm can be used to evaluate whether point p is inside or not-inside area A. The time complexity is O(nA), where nA is the number of vertices (or edges) of area A. The reason is that it needs to count the number of intersections among the ray of p and the nA edges. The simple method to acquire all of points inside area A is to evaluate each point of P by PIP. The candidate points, which are points needing the evaluation of PIA, are all of the nP points. ", "cite_spans": [], "ref_spans": [], "section": "Discussion"}, {"text": "In [29] , an error-free method is presented that can calculate whether a point is inside a polygon. For this, we planned the PIA algorithm, which can also evaluate whether a point is within an area or not without error. Therefore, the efficiency of this type of method is determined by how many points are needed to apply the PIA algorithm and not the accuracy. We take an example, shown in Figure 5 , to illustrate the difference between our strategy and [30] . In [30] , it first plans a rectangle range that can cover this area. The range is marked as a dashed line. It then finds all points in this range. In our experimental environment, there are 95,349 points. So, the number of executing PIA algorithms is 95,349. In our strategy, we planned a set of cells that could cover this area. The range of the cells is similar to the example shown in Figure 3 that is slightly larger than this area. In fact, we planned with a cell of about 1 square kilometer. This area is about 271.8 square kilometers, as shown in Subarea 1 of Table 3 . In this example, the number of cells is about 350 and the number of points within these cells is about 90,000. These cells are classified into inside cells and not-inside cells through the CIA algorithm. Most points are inside cells. The points are surely also in this area without confirming locations by performing PIA. Only a few points located in the outermost cells (not-inside cells) need to confirm their locations. In the examples of Sections 5.1 and 5.2, the points that need to execute PIA rarely exceeds 10%.", "cite_spans": [{"start": 3, "end": 7, "text": "[29]", "ref_id": "BIBREF28"}, {"start": 456, "end": 460, "text": "[30]", "ref_id": "BIBREF30"}, {"start": 466, "end": 470, "text": "[30]", "ref_id": "BIBREF30"}], "ref_spans": [{"start": 391, "end": 399, "text": "Figure 5", "ref_id": "FIGREF14"}, {"start": 851, "end": 859, "text": "Figure 3", "ref_id": null}, {"start": 1030, "end": 1037, "text": "Table 3", "ref_id": "TABREF3"}], "section": "Summary"}, {"text": "The previous study [30] is very time-consuming to find out the points in large-scale areas, especially when the number of candidate points is very large. The main contribution of our study is that the points that PIA needs to confirm are reduced to very few. Therefore, our strategy has the ability to efficiently handle large-scale areas, such as countries and cities. In the computer field, when the amount of data is large, it is not feasible to process all the data at once. It is necessary to transfer to the batch manner. The design of cells is adaptive to this. It is also convenient to be implemented for epidemic prevention management.", "cite_spans": [{"start": 19, "end": 23, "text": "[30]", "ref_id": "BIBREF30"}], "ref_spans": [], "section": "Summary"}, {"text": "Let A be a specific area and P be the set of points. Our proposed strategy provided a solution to acquire all points in P inside A. The PIA algorithm can be used to evaluate whether point p is inside or not-inside area A. The time complexity is O(n A ), where n A is the number of vertices (or edges) of area A. The reason is that it needs to count the number of intersections among the ray of p and the n A edges. The simple method to acquire all of points inside area A is to evaluate each point of P by PIP. The candidate points, which are points needing the evaluation of PIA, are all of the n P points. The time complexity is O(n A \u00d7 n P ), where n P is the number of points in set P. When n P is a very large number, it is greatly time-consuming to acquire these points. In [30] , an enhanced strategy was proposed. It first evaluates the boundary (i.e., a space of rectangle). This rectangle is fully covered by the space of area A. The points within the rectangle are evaluated. In our strategy, we allocate a set of cells to fully cover area A. The total space of these cells is slightly larger than the space of area A. Then, the cells are divided into inside cells and not-inside cells. Only points within not-inside cells must be evaluated. The not-inside cells are the cells that have intersections with area A. In fact, only points near the edges of area A are evaluated. The number of candidate points is reduced to a very small number. Therefore, our strategy is efficient to acquire the targets in an area.", "cite_spans": [{"start": 780, "end": 784, "text": "[30]", "ref_id": "BIBREF30"}], "ref_spans": [], "section": "Discussion"}, {"text": "In this study, Taiwan Island and the administrative areas are used as geographic areas, and check-in places on Facebook are used as geographic points to verify the proposed strategy. These are the actual data. Due to the fact that the spot height map, respectively, matches the distribution of administrative areas and matches the distribution of highways, it verifies the practicability of our strategy. This strategy mainly provides two techniques. The first technique is used to calculate whether the geographic points are in a specific area. The second technique is used to calculate the number of points in a specific area. In our demonstration, we first, respectively, analyzed the numbers of points of the 16 administrative areas. Then the populations of the administrative areas and the spaces of the administrative areas were included in the discussion. This provided these results: the number of geographic points per unit area and the ratio of geographic points to the population. This is the category of hot areas.", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}, {"text": "Because the numbers of geographic points in geographic areas are not enough to represent the distribution of geographic points, we planned a space of about 1 square kilometer as a unit, termed as a spot, and calculated the number of geographic points in each spot. This is a hotspot category. Of course, the size of a spot depends on the actual situation. Based on the above discussion, our strategy is a GNSS-based crowd-sensing strategy for specific areas. This research is very useful in many fields. We used non-real-time and real-time GNSS coordinates for the applications. Non-real-time coordinates (i.e., historical records), can be used to know where hot areas hot spots can develop. It can be deployed in advance for this area to avoid or mitigate future events. For real-time coordinates, it can be used to know where it is becoming a hot area or where it is becoming a hot spot. It can be deployed ahead of schedule to avoid or mitigate ongoing events. The acquisition of coordinates may have privacy constraints. To acquire current location information with user consent may be available. Observing privacy constraints to do more epidemic prevention management is the goal of our future work. ", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "International Civil Aviation Organization Annex 10 to the Convention of International Civil Aviation; International Civil Aviation Organization: Montreal, QC, Canada", "authors": [], "year": 2007, "venue": "", "volume": "I", "issn": "", "pages": "", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Evolution of the Global Navigation Satellite System (GNSS)", "authors": [{"first": "C", "middle": ["J"], "last": "Hegarty", "suffix": ""}, {"first": "E", "middle": [], "last": "Chatre", "suffix": ""}], "year": 2008, "venue": "Proc. IEEE", "volume": "96", "issn": "", "pages": "1902--1917", "other_ids": {"DOI": ["10.1109/JPROC.2008.2006090"]}}, "BIBREF2": {"ref_id": "b2", "title": "Comparison of L1 and L5", "authors": [{"first": "J", "middle": [], "last": "Lecl\u00e8re", "suffix": ""}, {"first": "R", "middle": [], "last": "Landry", "suffix": ""}, {"first": "", "middle": [], "last": "Jr", "suffix": ""}, {"first": "C", "middle": [], "last": "Botteron", "suffix": ""}], "year": 2018, "venue": "Bands GNSS Signals Acquisition. Sensors", "volume": "18", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/s18092779"]}}, "BIBREF3": {"ref_id": "b3", "title": "Site-Specific Unmodeled Error Mitigation for GNSS Positioning in Urban Environments Using a Real-Time Adaptive Weighting Model", "authors": [{"first": "Z", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "B", "middle": [], "last": "Li", "suffix": ""}, {"first": "Y", "middle": [], "last": "Shen", "suffix": ""}, {"first": "Y", "middle": [], "last": "Gao", "suffix": ""}, {"first": "M", "middle": [], "last": "Wang", "suffix": ""}], "year": null, "venue": "Remote Sens", "volume": "10", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/rs10071157"]}}, "BIBREF4": {"ref_id": "b4", "title": "High-accuracy positioning in urban environments using single-frequency multi-GNSS RTK/MEMS-IMU integration", "authors": [{"first": "T", "middle": [], "last": "Li", "suffix": ""}, {"first": "H", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "Z", "middle": [], "last": "Gao", "suffix": ""}, {"first": "Q", "middle": [], "last": "Chen", "suffix": ""}, {"first": "X", "middle": [], "last": "Niu", "suffix": ""}], "year": 2018, "venue": "Remote Sens", "volume": "10", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/rs10020205"]}}, "BIBREF5": {"ref_id": "b5", "title": "A precise weighting approach with application to combined L1/B1 GPS/BeiDou positioning", "authors": [{"first": "C", "middle": [], "last": "Cai", "suffix": ""}, {"first": "L", "middle": [], "last": "Pan", "suffix": ""}, {"first": "Y", "middle": [], "last": "Gao", "suffix": ""}], "year": 2014, "venue": "J. Navig", "volume": "67", "issn": "", "pages": "911--925", "other_ids": {"DOI": ["10.1017/S0373463314000320"]}}, "BIBREF6": {"ref_id": "b6", "title": "The time scale of asymptomatic transmission affects estimates of epidemic potential in the COVID-19 outbreak", "authors": [{"first": "S", "middle": ["W"], "last": "Park", "suffix": ""}, {"first": "D", "middle": ["M"], "last": "Cornforth", "suffix": ""}, {"first": "J", "middle": [], "last": "Dushoff", "suffix": ""}, {"first": "J", "middle": ["S"], "last": "Weitz", "suffix": ""}], "year": 2020, "venue": "Epidemics", "volume": "31", "issn": "", "pages": "", "other_ids": {"DOI": ["10.1016/j.epidem.2020.100392"]}}, "BIBREF7": {"ref_id": "b7", "title": "Moving academic research forward during COVID-19", "authors": [{"first": "N", "middle": ["S"], "last": "Wigginton", "suffix": ""}, {"first": "R", "middle": ["M"], "last": "Cunningham", "suffix": ""}, {"first": "R", "middle": ["H"], "last": "Katz", "suffix": ""}, {"first": "M", "middle": ["E"], "last": "Lidstrom", "suffix": ""}, {"first": "K", "middle": ["A"], "last": "Moler", "suffix": ""}, {"first": "D", "middle": [], "last": "Wirtz", "suffix": ""}, {"first": "M", "middle": ["T"], "last": "Zuber", "suffix": ""}], "year": 2020, "venue": "Science", "volume": "368", "issn": "", "pages": "1190--1192", "other_ids": {"DOI": ["10.1126/science.abc5599"]}}, "BIBREF8": {"ref_id": "b8", "title": "Response to COVID-19 in Taiwan: Big Data Analytics, New Technology, and Proactive Testing", "authors": [{"first": "C", "middle": ["J"], "last": "Wang", "suffix": ""}, {"first": "C", "middle": ["Y"], "last": "Ng", "suffix": ""}, {"first": "R", "middle": ["H"], "last": "Brook", "suffix": ""}], "year": null, "venue": "", "volume": "2020", "issn": "", "pages": "1341--1342", "other_ids": {"DOI": ["10.1001/jama.2020.3151"]}}, "BIBREF9": {"ref_id": "b9", "title": "A GNSS/5G integrated positioning methodology in D2D communication networks", "authors": [{"first": "L", "middle": [], "last": "Yin", "suffix": ""}, {"first": "Q", "middle": [], "last": "Ni", "suffix": ""}, {"first": "Z", "middle": [], "last": "Deng", "suffix": ""}], "year": 2018, "venue": "IEEE J. Sel. Areas Commun", "volume": "36", "issn": "", "pages": "351--362", "other_ids": {"DOI": ["10.1109/JSAC.2018.2804223"]}}, "BIBREF10": {"ref_id": "b10", "title": "Performance Analysis of Hybrid 5G-GNSS Localization", "authors": [{"first": "G", "middle": [], "last": "Destino", "suffix": ""}, {"first": "J", "middle": [], "last": "Saloranta", "suffix": ""}, {"first": "G", "middle": [], "last": "Seco-Granados", "suffix": ""}, {"first": "H", "middle": [], "last": "Wymeersch", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 52nd Asilomar Conference on Signals, Systems, and Computers", "volume": "", "issn": "", "pages": "8--12", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "A Quad-Antenna System for 4G/5G/GPS Metal Frame Mobile Phones", "authors": [{"first": "D", "middle": [], "last": "Huang", "suffix": ""}, {"first": "Z", "middle": [], "last": "Du", "suffix": ""}, {"first": "Y", "middle": [], "last": "Wang", "suffix": ""}], "year": 2019, "venue": "IEEE Antennas Wirel. Propag. Lett", "volume": "18", "issn": "", "pages": "1586--1590", "other_ids": {"DOI": ["10.1109/LAWP.2019.2924322"]}}, "BIBREF12": {"ref_id": "b12", "title": "Development and Deployment at Facebook", "authors": [{"first": "D", "middle": ["G"], "last": "Feitelson", "suffix": ""}, {"first": "E", "middle": [], "last": "Frachtenberg", "suffix": ""}, {"first": "K", "middle": ["L"], "last": "Beck", "suffix": ""}], "year": 2013, "venue": "IEEE Internet Comput", "volume": "17", "issn": "", "pages": "8--17", "other_ids": {"DOI": ["10.1109/MIC.2013.25"]}}, "BIBREF13": {"ref_id": "b13", "title": "Applying location based services and social network services onto tour recording", "authors": [{"first": "H.-T", "middle": [], "last": "Lin", "suffix": ""}], "year": 2012, "venue": "Proceedings of the 2012 Ninth International Conference on Computer Science and Software Engineering (JCSSE)", "volume": "", "issn": "", "pages": "197--200", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "A data mining method for Facebook social network: Take \"New Row Mian (Beef Noodle)\" in Taiwan for example", "authors": [{"first": "J", "middle": ["S"], "last": "Chen", "suffix": ""}, {"first": "C", "middle": ["Y"], "last": "Hsu", "suffix": ""}, {"first": "C", "middle": ["Y"], "last": "Yang", "suffix": ""}, {"first": "C", "middle": ["C"], "last": "Wei", "suffix": ""}, {"first": "H", "middle": ["G"], "last": "Ciang", "suffix": ""}], "year": 2017, "venue": "Proceedings of the 2017 IEEE 8th International Conference on Awareness Science and Technology (iCAST)", "volume": "", "issn": "", "pages": "165--169", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Strengthening urban community governance through geographical information systems and participation: An evaluation of my Google Map and service coordination", "authors": [{"first": "H", "middle": ["K"], "last": "Liu", "suffix": ""}, {"first": "M", "middle": ["J"], "last": "Hung", "suffix": ""}, {"first": "L", "middle": ["H"], "last": "Tse", "suffix": ""}, {"first": "D", "middle": [], "last": "Saggau", "suffix": ""}], "year": 2020, "venue": "Aust. J. Soc. Issues", "volume": "55", "issn": "", "pages": "182--200", "other_ids": {"DOI": ["10.1002/ajs4.98"]}}, "BIBREF16": {"ref_id": "b16", "title": "A google-map-based arterial traffic information system", "authors": [{"first": "Y.-J", "middle": [], "last": "Wu", "suffix": ""}, {"first": "Y", "middle": [], "last": "Wang", "suffix": ""}, {"first": "D", "middle": [], "last": "Qian", "suffix": ""}], "year": 2007, "venue": "Proceedings of the 2007 IEEE Intelligent Transportation Systems Conference", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Using Foursquare place data for estimating building block use", "authors": [{"first": "S", "middle": [], "last": "Spyratos", "suffix": ""}, {"first": "D", "middle": [], "last": "Stathakis", "suffix": ""}, {"first": "M", "middle": [], "last": "Lutz", "suffix": ""}, {"first": "C", "middle": [], "last": "Tsinaraki", "suffix": ""}], "year": 2017, "venue": "Environ. Plan. B Urban Anal. City Sci", "volume": "44", "issn": "", "pages": "693--717", "other_ids": {"DOI": ["10.1177/0265813516637607"]}}, "BIBREF18": {"ref_id": "b18", "title": "Clustering Foursquare Mobility Networks to Explore Urban Spaces", "authors": [{"first": "O", "middle": [], "last": "Novovi\u0107", "suffix": ""}, {"first": "N", "middle": [], "last": "Gruji\u0107", "suffix": ""}, {"first": "S", "middle": [], "last": "Brdar", "suffix": ""}, {"first": "M", "middle": [], "last": "Govedarica", "suffix": ""}, {"first": "V", "middle": [], "last": "Crnojevi\u0107", "suffix": ""}], "year": 2020, "venue": "World Conference on Information Systems and Technologies", "volume": "", "issn": "", "pages": "544--553", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "An empirical study of geographic user activity patterns in foursquare", "authors": [{"first": "A", "middle": [], "last": "Noulas", "suffix": ""}, {"first": "S", "middle": [], "last": "Scellato", "suffix": ""}, {"first": "C", "middle": [], "last": "Mascolo", "suffix": ""}, {"first": "M", "middle": [], "last": "Pontil", "suffix": ""}], "year": 2011, "venue": "Proceedings of the Fifth International AAAI Conference on Weblogs and Social Media", "volume": "", "issn": "", "pages": "17--21", "other_ids": {}}, "BIBREF20": {"ref_id": "b20", "title": "A Specific Targeted-Place Mining Method for a Famous Social Network: Take Wang-Ye Worship in Taiwan for Example", "authors": [{"first": "Y", "middle": ["F"], "last": "Huang", "suffix": ""}, {"first": "J", "middle": ["S"], "last": "Chen", "suffix": ""}, {"first": "C", "middle": ["B"], "last": "Lin", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 15th International Symposium on Pervasive Systems, Algorithms and Networks (I-SPAN)", "volume": "", "issn": "", "pages": "263--266", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "Predicting human mobility using sina weibo check-in data", "authors": [{"first": "T", "middle": [], "last": "Xia", "suffix": ""}, {"first": "J", "middle": [], "last": "Shen", "suffix": ""}, {"first": "X", "middle": [], "last": "Yu", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 International Conference on Audio, Language and Image Processing (ICALIP)", "volume": "", "issn": "", "pages": "380--384", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Urban tourism research based on the social media check-in data", "authors": [{"first": "K", "middle": [], "last": "Yang", "suffix": ""}, {"first": "W", "middle": [], "last": "Wan", "suffix": ""}, {"first": "T", "middle": [], "last": "Xia", "suffix": ""}, {"first": "X", "middle": [], "last": "He", "suffix": ""}], "year": 2017, "venue": "Proceedings of the 4th International Conference on Smart and Sustainable City (ICSSC 2017)", "volume": "", "issn": "", "pages": "1--3", "other_ids": {}}, "BIBREF23": {"ref_id": "b23", "title": "Exploring structural analysis of place networks using check-in signals", "authors": [{"first": "X", "middle": [], "last": "Ding", "suffix": ""}, {"first": "J", "middle": [], "last": "Xu", "suffix": ""}, {"first": "G", "middle": [], "last": "Chen", "suffix": ""}], "year": 2013, "venue": "Proceedings of the 2013 IEEE Global Communications Conference (GLOBECOM)", "volume": "", "issn": "", "pages": "3194--3199", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "GALLOP: GlobAL feature fused LOcation Prediction for Different Check-in Scenarios", "authors": [{"first": "Y", "middle": [], "last": "Han", "suffix": ""}, {"first": "J", "middle": [], "last": "Yao", "suffix": ""}, {"first": "X", "middle": [], "last": "Lin", "suffix": ""}, {"first": "L", "middle": [], "last": "Wang", "suffix": ""}], "year": 2017, "venue": "IEEE Trans. Knowl. Data Eng", "volume": "29", "issn": "", "pages": "1874--1887", "other_ids": {"DOI": ["10.1109/TKDE.2017.2705083"]}}, "BIBREF25": {"ref_id": "b25", "title": "Point-in-polygon algorithm based on monolithic calculation for included angle of half plane continuous chains", "authors": [{"first": "J", "middle": [], "last": "Ding", "suffix": ""}, {"first": "K", "middle": [], "last": "Wu", "suffix": ""}, {"first": "H", "middle": [], "last": "Guan", "suffix": ""}, {"first": "D", "middle": [], "last": "Wang", "suffix": ""}, {"first": "T", "middle": [], "last": "Rui", "suffix": ""}], "year": 2010, "venue": "Proceedings of the 2010 18th International Conference on Geoinformatics", "volume": "", "issn": "", "pages": "1--4", "other_ids": {}}, "BIBREF26": {"ref_id": "b26", "title": "Point in Polygon Determination Algorithm for 2-D Vector Graphics Applications", "authors": [{"first": "D", "middle": [], "last": "Kularathne", "suffix": ""}, {"first": "L", "middle": [], "last": "Jayarathne", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 National Information Technology Conference (NITC)", "volume": "", "issn": "", "pages": "1--5", "other_ids": {}}, "BIBREF27": {"ref_id": "b27", "title": "A new approach (extra vertex) and generalization of Shoelace Algorithm usage in convex polygon (Point-in-Polygon)", "authors": [{"first": "R", "middle": [], "last": "Ochilbek", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 14th International Conference on Electronics Computer and Computation (ICECCO)", "volume": "", "issn": "", "pages": "206--212", "other_ids": {}}, "BIBREF28": {"ref_id": "b28", "title": "Faster line segment intersection", "authors": [{"first": "F", "middle": [], "last": "Antonio", "suffix": ""}], "year": null, "venue": "Graphics Gems III", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF30": {"ref_id": "b30", "title": "An efficient geographical place mining strategy for social networking services", "authors": [{"first": "S", "middle": ["C"], "last": "Chang", "suffix": ""}, {"first": "H", "middle": ["Y"], "last": "Huang", "suffix": ""}, {"first": "Y", "middle": ["F"], "last": "Huang", "suffix": ""}, {"first": "C", "middle": ["Y"], "last": "Yang", "suffix": ""}, {"first": "C", "middle": ["Y"], "last": "Hsu", "suffix": ""}, {"first": "J", "middle": ["S"], "last": "Chen", "suffix": ""}], "year": 2019, "venue": "Proceedings of the 2019 IEEE International Conference on Consumer Electronics-Taiwan (ICCE-TW)", "volume": "", "issn": "", "pages": "1--2", "other_ids": {}}, "BIBREF31": {"ref_id": "b31", "title": "This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license", "authors": [], "year": null, "venue": "\u00a9 2020 by the authors. Licensee MDPI", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "Cell architecture, a cell is a regular hexagon area. (a) For cell c with radius r, cV0, cV1, cV2, cV3, cV4, cV5 are its six vertices. Moreover, cV6 represents vertex cV0. (b) The neighbors of cell c represent as cN0, cN1, cN2, cN3, cN4, cN5. Moreover, cell cN6 represents cell cN0.", "latex": null, "type": "figure"}, "FIGREF1": {"text": "Cell architecture, a cell is a regular hexagon area. (a) For cell c with radius r, c V0 , c V1 , c V2 , c V3 , c V4 , c V5 are its six vertices. Moreover, c V6 represents vertex c V0 . (b) The neighbors of cell c represent as c N0 , c N1 , c N2 , c N3 , c N4 , c N5 . Moreover, cell c N6 represents cell c N0 .", "latex": null, "type": "figure"}, "FIGREF2": {"text": "The first line crosses over both point o 1 and point o 2 . The other line crosses over both point o 3 and point o 4 . First, \u03c1, as shown in", "latex": null, "type": "figure"}, "FIGREF3": {"text": "Example of an area, points, and cells. This area is a polygon composed by points a0, a1, \u2026, and a5. To this area, point p1 and point p3 are not-inside and point p2 is inside, both cells c1 and c2 are overlapped and c3 is not overlapped. Moreover, cell c1 is also termed as inside this area.", "latex": null, "type": "figure"}, "FIGREF4": {"text": "Example of an area, points, and cells. This area is a polygon composed by points a 0 , a 1 , . . . , and a 5 . To this area, point p 1 and point p 3 are not-inside and point p 2 is inside, both cells c 1 and c 2 are overlapped and c 3 is not overlapped. Moreover, cell c 1 is also termed as inside this area.", "latex": null, "type": "figure"}, "FIGREF5": {"text": "Algorithm 1 provides algorithm EEI. It is an Edge-Edge Intersection algorithm, where inputs are two edges (o 1 , o 2 ) and (o 3 , o 4 ) and the output is a value of 0 or 1. If edge (o 1 , o 2 ) and edge (o 3 , o 4 ) are intersected, it results by returning 1. Otherwise, it results by returning 0. In this algorithm, it first calculates the value of \u03c1 according to", "latex": null, "type": "figure"}, "FIGREF6": {"text": "provides the Point Inside Area (PIA) algorithm, whose inputs are a point p and an area A and its output is a value of 0 or 1. If point p is inside area A, it results by returning value 1. Otherwise, it results by returning value 0. In this algorithm, variables o 1 and o 2 are used to represent an edge of area A and variables o 3 and o 4 are used to represent the incremental extension from p toward", "latex": null, "type": "figure"}, "FIGREF8": {"text": "inFigure 3, the irregular area is composed of 2055 points, and the numbers on cells index the order of cell allocation. In this example, c i is used to represent the cell, numbered as i. Initially, cell c 0 is allocated. In the first iteration, the six neighbors c 1 , c 2 , . . . , and c 6 are included in C. Herein, C contains seven cells, c 0 , c 1 , c 2 , . . . , and c 6 , and P contains six cells, c 1 , c 2 , . . . , and c 6 . In the second iteration, cells c 1 , c 2 , . . . , and c 6 will be the reference cells. For instance, the neighbors of c 1 contains cells c 7 , c 8 , c 2 , c 0 , c 6 , and c 9 . However, c 2 , c 0 , and c 6 are already included in C. Only c 7 , c 8 , c 9 are included in C. Continually, in the third iteration, cells c 19 to c 32 are included to C and in fourth iteration, cells c 33 to c 37 are included in C. In the fifth iteration, cells c 33 to c 37 are the reference cells P. Since all of the non-overlapped neighbors of c 33 , c 34 , . . . , or c 37 are included in C, no cell are included in C and P is empty (in line 3). Finally, the allocation is finished by returning the allocation C.Sensors 2020, 20, CAO(A, cNB) == 1 && cNB \u2209 C", "latex": null, "type": "figure"}, "FIGREF10": {"text": "= c Vi , o 2 : = c Vi+1 , o 3 : = a j , o 4 : = a j+1 ; 8. if (EEI(o 1 , o 2 , o 3 , o 4 ) == 1 ) count: = count +1; : = (SELECT * FROM 'P' WHERE SQRT(POWER('x'-x(c),2) + POWER('y'-y(c), 2)) <= r) 7. if (CIA(c, A) == 1) P A : = P A \u222a", "latex": null, "type": "figure"}, "FIGREF12": {"text": "The experimental area with 887,950 points. This area currently contains 6 special municipalities, 10 counties and 3 provincial cities. These subareas are numbered as 1-19: (a) The number of points in each subarea. (b) The point ratio of each subarea to 16 subareas.", "latex": null, "type": "figure"}, "FIGREF13": {"text": "The experimental area with 887,950 points. This area currently contains 6 special municipalities, 10 counties and 3 provincial cities. These subareas are numbered as 1-19: (a) The number of points in each subarea. (b) The point ratio of each subarea to 16 subareas.", "latex": null, "type": "figure"}, "FIGREF14": {"text": "Point distribution of subarea 1 and its neighborhood. The range is longitude 121.45 to 121.67 and latitude 24.95 to 25.22. The number of points in this range is 93,549. Randomly, 1600 points inside subarea 1 and 1600 points not-inside subarea 1 are marked on this range.", "latex": null, "type": "figure"}, "FIGREF15": {"text": "Point distribution of subarea 1 and its neighborhood. The range is longitude 121.45 to 121.67 and latitude 24.95 to 25.22. The number of points in this range is 93,549. Randomly, 1600 points inside subarea 1 and 1600 points not-inside subarea 1 are marked on this range.", "latex": null, "type": "figure"}, "FIGREF16": {"text": "Distribution of points in hot spot one with 6024 points.", "latex": null, "type": "figure"}, "FIGREF17": {"text": "Distribution of points in hot spot one with 6024 points.", "latex": null, "type": "figure"}, "FIGREF18": {"text": "(a) Distribution of spots and (b) distribution of highways. The layout of (a), respectively, coincides with the layout of (b) and the layout ofFigure 4a.", "latex": null, "type": "figure"}, "FIGREF19": {"text": "(a) Distribution of spots and (b) distribution of highways. The layout of (a), respectively, coincides with the layout of (b) and the layout ofFigure 4a.", "latex": null, "type": "figure"}, "FIGREF20": {"text": "Contributions: Conceptualization, C.-B.L. and J.-S.C.; methodology, R.-W.H.; software, C.-Y.H.; validation, C.-B.L., R.-W.H., C.-Y.H., and J.-S.C.; formal analysis, R.-W.H.; investigation, C.-B.L. and J.-S.C.; writing, C.-B.L. and J.-S.C. All authors have read and agreed to the published version of the manuscript.", "latex": null, "type": "figure"}, "FIGREF21": {"text": "This research received no external funding.", "latex": null, "type": "figure"}, "TABREF0": {"text": "The vertices of cell c. For a cell c with radius r, the coordinates of each vertex are as follows.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Vertex </td><td>Coordinate\n</td></tr><tr><td>Vertex cV0 (=cV6) </td><td>Coordinate \u221a(x(c) + r, y(c))\n</td></tr><tr><td>cV0 (=cV6) cV1 </td><td>(x(c) + r, y(c)) 0+ .50.5\n3r)\u221a\n3(c) + 0.5r, y(c) + 0.5\n\u221a3\u221a\n3</td></tr><tr><td>cV2 cV1 </td><td>(x(c)( x+( c0) .\u2212 5r0, .y5(rc, )y (+c )r)\n(x0.5r) \u221a3r)\ny(c))\n\u221a\n</td></tr><tr><td>cV2 cV3 </td><td>(x(c) \u2212 0.5r, y(c)+ (x(c) \u2212 r, </td></tr><tr><td>cV3 cV4 </td><td>(cy(c)\u2212 y(c) </td></tr><tr><td>cV4 cV5 cV5 </td><td>\n(x) \u2212 r, ) (x(c) \u2212 0.5r, y(c) \u2212 0.5r) 3r)\n(x(c) 0.5r, \u2212 0.5\n\u221a\n3r)\n(x(c) + 0.5r, y(c) \u2212 0.5\u221a3r) (x(c) + 0.5r, y(c) \u2212 0.5\n</td></tr></table></body></html>"}, "TABREF1": {"text": "Algorithm 3 CAO (c, A)", "latex": null, "type": "table"}, "TABREF2": {"text": "Algorithm 4 CA (c s , A)", "latex": null, "type": "table"}, "TABREF3": {"text": "Population density and space density based on number of points.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Subarea </td><td>Population </td><td>Space (km2) </td><td>No. of Points\n</td><td>Population Density\n(#/Population \u00d7 100%)\n</td><td>Space Density\n(#/Space)\n</td></tr><tr><td>1 </td><td>2,687,629 </td><td>271.8 </td><td>89,209 </td><td>3.32 </td><td>328.22\n</td></tr><tr><td>2 </td><td>3,984,051 </td><td>2052.57 </td><td>90,587 </td><td>2.27 </td><td>44.13\n</td></tr><tr><td>3 </td><td>2,171,127 </td><td>1220.95 </td><td>63,216 </td><td>2.91 </td><td>51.78\n</td></tr><tr><td>4 </td><td>2,778,182 </td><td>2214.90 </td><td>156,928 </td><td>5.65 </td><td>70.85\n</td></tr><tr><td>5 </td><td>1,886,267 </td><td>2191.65 </td><td>70,118 </td><td>3.72 </td><td>31.99\n</td></tr><tr><td>6 </td><td>2,777,873 </td><td>2951.85 </td><td>146,266 </td><td>5.27 </td><td>49.55\n</td></tr></table></body></html>"}, "TABREF4": {"text": "Population density and space density based on number of points.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Subarea </td><td>Population </td><td>Space (km2) </td><td>No. of Points\n</td><td>Population Density\n(#/Population \u00d7 100%)\n</td><td>Space Density\n(#/Space)\n</td></tr><tr><td>1 </td><td>2,687,629 </td><td>271.8 </td><td>89,209 </td><td>3.32 </td><td>328.22\n</td></tr><tr><td>2 </td><td>3,984,051 </td><td>2052.57 </td><td>90,587 </td><td>2.27 </td><td>44.13\n</td></tr><tr><td>3 </td><td>2,171,127 </td><td>1220.95 </td><td>63,216 </td><td>2.91 </td><td>51.78\n</td></tr><tr><td>4 </td><td>2,778,182 </td><td>2214.90 </td><td>156,928 </td><td>5.65 </td><td>70.85\n</td></tr><tr><td>5 </td><td>1,886,267 </td><td>2191.65 </td><td>70,118 </td><td>3.72 </td><td>31.99\n</td></tr><tr><td>6 </td><td>2,777,873 </td><td>2951.85 </td><td>146,266 </td><td>5.27 </td><td>49.55\n</td></tr></table></body></html>"}, "TABREF5": {"text": "Spot statistics with points.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>No. of Points </td><td>Spots </td><td>Percentage\n</td></tr><tr><td>less than 1000 </td><td>15,347 </td><td>98.55\n</td></tr><tr><td>1000-2000 </td><td>152 </td><td>0.98\n</td></tr><tr><td>2000-3000 </td><td>49 </td><td>0.31\n</td></tr><tr><td>3000-4000 </td><td>13 </td><td>0.08\n</td></tr><tr><td>4000-5000 </td><td>4 </td><td>0.03\n</td></tr><tr><td>5000-6000 </td><td>7 </td><td>0.04\n</td></tr><tr><td>6000-7000 </td><td>1 </td><td>0.01\n</td></tr><tr><td>Total </td><td>15,573 </td><td>100\n</td></tr></table></body></html>"}, "TABREF6": {"text": "The first 12 hot spots.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Location subarea 6 Hot Spot subarea 6 </td><td>Location </td><td>Coordinate The first 12 hot spots.\n120.3, 22.67 Coordinate 120.3, 22.62 </td><td>No. of Points\n</td></tr><tr><td>1 ssubarea 4 </td><td>ubarea 6 </td><td>120.3, 22.67 120.64, 24.18 </td><td>6024\n</td></tr><tr><td>2 </td><td>subarea 6 6 </td><td>120.3, 22.62 120.3, 22.63 </td><td>5731\n</td></tr><tr><td>subarea 3 s</td><td>ubarea 4 </td><td>120.64, 24.18 </td><td>5527\n</td></tr><tr><td>subarea 4 4 s</td><td>ubarea 6 </td><td>120.66, 24.16 120.3, 22.63 </td><td>5506\n</td></tr><tr><td>subarea 4 5 s</td><td>ubarea 4 </td><td>120.68, 24.16 120.66, 24.16 </td><td>5428\n</td></tr><tr><td>6 ssubarea 4 </td><td>ubarea 4 </td><td>120.68, 24.16 120.68, 24.15 </td><td>5154\n</td></tr><tr><td>7 ssubarea 6 s</td><td>ubarea 4 </td><td>120.68, 24.15 120.3, 22.64 120.3, 22.64 </td><td>5152\n</td></tr><tr><td>8 </td><td>ubarea 6 4 </td><td>120.65, 24.1</td><td>5043\n</td></tr><tr><td>subarea 9 s</td><td>ubarea 4 </td><td>6 120.65, 24.16 </td><td>4855\n</td></tr><tr><td>subarea 19 10 su</td><td>barea 19 </td><td>120.44, 23.48 120.44, 23.48 </td><td>4544\n</td></tr><tr><td>subarea 4 11 s</td><td>ubarea 4 </td><td>120.68, 24.14 120.68, 24.14 </td><td>4424\n</td></tr><tr><td>12 ssubarea 9 </td><td>ubarea 9 </td><td>120.54, 24.08 120.54, 24.08 </td><td>4056\n</td></tr></table></body></html>"}, "TABREF7": {"text": "The first 12 hot spots.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Location subarea 6 Hot Spot subarea 6 </td><td>Location </td><td>Coordinate The first 12 hot spots.\n120.3, 22.67 Coordinate 120.3, 22.62 </td><td>No. of Points\n</td></tr><tr><td>1 ssubarea 4 </td><td>ubarea 6 </td><td>120.3, 22.67 120.64, 24.18 </td><td>6024\n</td></tr><tr><td>2 </td><td>subarea 6 6 </td><td>120.3, 22.62 120.3, 22.63 </td><td>5731\n</td></tr><tr><td>subarea 3 s</td><td>ubarea 4 </td><td>120.64, 24.18 </td><td>5527\n</td></tr><tr><td>subarea 4 4 s</td><td>ubarea 6 </td><td>120.66, 24.16 120.3, 22.63 </td><td>5506\n</td></tr><tr><td>subarea 4 5 s</td><td>ubarea 4 </td><td>120.68, 24.16 120.66, 24.16 </td><td>5428\n</td></tr><tr><td>6 ssubarea 4 </td><td>ubarea 4 </td><td>120.68, 24.16 120.68, 24.15 </td><td>5154\n</td></tr><tr><td>7 ssubarea 6 s</td><td>ubarea 4 </td><td>120.68, 24.15 120.3, 22.64 120.3, 22.64 </td><td>5152\n</td></tr><tr><td>8 </td><td>ubarea 6 4 </td><td>120.65, 24.1</td><td>5043\n</td></tr><tr><td>subarea 9 s</td><td>ubarea 4 </td><td>6 120.65, 24.16 </td><td>4855\n</td></tr><tr><td>subarea 19 10 su</td><td>barea 19 </td><td>120.44, 23.48 120.44, 23.48 </td><td>4544\n</td></tr><tr><td>subarea 4 11 s</td><td>ubarea 4 </td><td>120.68, 24.14 120.68, 24.14 </td><td>4424\n</td></tr><tr><td>12 ssubarea 9 </td><td>ubarea 9 </td><td>120.54, 24.08 120.54, 24.08 </td><td>4056\n</td></tr></table></body></html>"}, "TABREF8": {"text": "Table 2. The neighbors of cell c. For a cell c with radius r, the coordinates of each neighbor are as follows.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Neighbor </td><td>Coordinate\n</td></tr><tr><td>cN0 (=cN6) </td><td>(x(c) + 1.5r, y(c) + 0.5\n\u221a\n3r)\n</td></tr><tr><td>cN1 </td><td>(x(c), y(c) + r)\n\u221a\n</td></tr><tr><td>cN2 </td><td>3r)\n(x(c) \u2212 1.5r, y(c) \u2212\n\u221a\n</td></tr><tr><td>cN3 </td><td>3r)\n(x(c) \u2212 1.5r, y(c) \u2212\n\u221a\n</td></tr><tr><td>cN4 </td><td>3r)\n(x(c), y(c) + \u2212\n\u221a\n</td></tr><tr><td>cN5 </td><td>3r)\n(x(c) + 1.5r, y(c) \u2212 0.5\n</td></tr></table></body></html>"}}, "back_matter": [{"text": "The authors declare no conflict of interest.", "cite_spans": [], "ref_spans": [], "section": "Conflicts of Interest:"}]}