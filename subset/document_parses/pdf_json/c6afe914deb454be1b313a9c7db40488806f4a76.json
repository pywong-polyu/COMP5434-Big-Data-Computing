{
    "paper_id": "c6afe914deb454be1b313a9c7db40488806f4a76",
    "metadata": {
        "title": "Probabilistic Outlier Detection and Generation",
        "authors": [
            {
                "first": "Stefano",
                "middle": [
                    "Giovanni"
                ],
                "last": "Rizzo",
                "suffix": "",
                "affiliation": {},
                "email": "strizzo@hbku.edu.qa"
            },
            {
                "first": "Linsey",
                "middle": [],
                "last": "Pang",
                "suffix": "",
                "affiliation": {},
                "email": "linsey.pang@walmartlabs.com"
            },
            {
                "first": "Yixian",
                "middle": [],
                "last": "Chen",
                "suffix": "",
                "affiliation": {},
                "email": "yixian.chen@walmartlabs.com"
            },
            {
                "first": "Sanjay",
                "middle": [],
                "last": "Chawla",
                "suffix": "",
                "affiliation": {},
                "email": "schawla@hbku.edu.qa"
            }
        ]
    },
    "abstract": [
        {
            "text": "A new method for outlier detection and generation is introduced by lifting data into the space of probability distributions which are not analytically expressible, but from which samples can be drawn using a neural generator. Given a mixture of unknown latent inlier and outlier distributions, a Wasserstein double autoencoder is used to both detect and generate inliers and outliers. The proposed method, named WALDO (Wasserstein Autoencoder for Learning the Distribution of Outliers), is evaluated on classical data sets including MNIST, CIFAR10 and KDD99 for detection accuracy and robustness. We give an example of outlier detection on a real retail sales data set and an example of outlier generation for simulating intrusion attacks. However we foresee many application scenarios where WALDO can be used. To the best of our knowledge this is the first work that studies both outlier detection and generation together.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "A well known definition of outliers states, \"An outlier is an observation that deviates so much from other observations as to arouse suspicion that it was generated by a different mechanism [7] .\" Many methods in outlier detection have been inspired by focusing on the deviation aspect of above definition. * Qatar Computing Research Institute \u2020 Walmart Labs",
            "cite_spans": [
                {
                    "start": 190,
                    "end": 193,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "For example, distance-based techniques define outliers as those data points that are far away from their neighbors; density-based approaches search for outliers in regions of low relative density; the one-class svm method defines outliers as those points that lie outside the tighest hypersphere containing most of the points [5, 1] .",
            "cite_spans": [
                {
                    "start": 326,
                    "end": 329,
                    "text": "[5,",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 330,
                    "end": 332,
                    "text": "1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In this work we will focus both on the detection and generation mechanisms of outliers. In particular we will assume that data is generated from an unknown and unlabeled mixture of inlier and outlier distributions. We will have access to samples from only the unlabeled and the inlier distributions. Our primary objective will be to infer the outlier distribution without having recourse to outlier samples.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "To infer the outlier distribution we will take a probabilistic view of autoencoders which have been used before for outlier detection [25] . An autoencoder can be seen as a self-mapping from an input space to itself mediated through a bottleneck -a lower dimensional representation of the data being mapped. In classical autoencoders, outliers are defined as those data points which have high reconstruction errors. A probabilistic view is to perceive the self-mapping as one inducing a new probability distribution on the input space, i.e., an autoencoder maps the original data distribution into a new distribution constrained by the bottleneck.",
            "cite_spans": [
                {
                    "start": 134,
                    "end": 138,
                    "text": "[25]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "To compare probability distribution we use the Wasserstein distance as an alternate to the standard Kullback-Liebler (KL) divergence [21] . Autoencoders based on the Wasserstein distance (WAEs) have been recently proposed and shown to be accurate and efficient in generating complex distributions [20, 15] .",
            "cite_spans": [
                {
                    "start": 133,
                    "end": 137,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 297,
                    "end": 301,
                    "text": "[20,",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 302,
                    "end": 305,
                    "text": "15]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "To generate outlier distributions, we leverage a recent approach to use a double decoder architecture to distinguish between inliers and outliers [19] . An inlier and an outlier decoder (with a common encoder) compete with each other for data points based on reconstruction error and thus can be identified without setting a threshold parameter.",
            "cite_spans": [
                {
                    "start": 146,
                    "end": 150,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Our approach, WALDO , shown in Figure 1 (a), encapsulates the double decoder framework using the Wassertein distance, resulting in a generative detection model. For detection, the predicted class of a sample is given by the decoder with the least reconstruction error. For generation, a random sample in the latent space results in a generated inlier from the inlier decoder, and in a generated outlier in the outlier decoder. Figure 1(b) shows how an inlier image in input (inliers are faces without glasses) is left unperturbed by the inlier decoder but the outlier decoder adds glasses to the face. Similarly an outlier image (face with glasses) is not changed by the outlier decoder but the inlier decoder removes the glasses. Similar transformations can be obtained indirectly by GANs but in a more complicated manner, by first creating a mean deviation vector from the decoder and then feeding it back through the generator [16] .",
            "cite_spans": [
                {
                    "start": 930,
                    "end": 934,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [
                {
                    "start": 31,
                    "end": 39,
                    "text": "Figure 1",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 427,
                    "end": 438,
                    "text": "Figure 1(b)",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "The rest of the paper is structured as follows. In Section 2 we review related work with focus on deep learning models for outlier detection. We provide a short self-contained introduction to Wasserstein distance in Section 3 as that is a key building block of our approach.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In Section 4, the WALDO autoencoder architecture is introduced consisting of four distinct components, together with the algorithm to train the model. A short theoretical analysis of our approach is the focus of Section 5. The experimental set up and results is the subject of Section 6. We conclude with a short discussion and directions for future work in Section 7.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Outlier detection is an extensively studied topic with diverse applications [1, 5] . With the advent of deep learning, variational auto-encoders (VAEs), generative adversarial networks (GANs) and other methods have been proposed for outlier detection [4] . While there are many recent works on deep learning models for outlier detection ( [3] , [14] ), we will primarily survey the robust and generative ones in particular, as that is the focus of the paper. Robust Methods: A customization of autoencoders for outlier detection is to make them robust, i.e., the model is not disproportionately effected by the presence of outliers. This in turn makes it easier to detect outliers as they will tend to have a higher reconstruction error. For example, Zhou et. al. [25] propose an autoencoder which decomposes the input data X as sum of a low-dimensional manifold U plus a sparse component S. A robust version of VAEs was recently proposed by Akrami et. al. [2] by using \u03b2-divergence instead of KL divergence as a loss function.",
            "cite_spans": [
                {
                    "start": 76,
                    "end": 79,
                    "text": "[1,",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 80,
                    "end": 82,
                    "text": "5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 251,
                    "end": 254,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 339,
                    "end": 342,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 345,
                    "end": 349,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 764,
                    "end": 768,
                    "text": "[25]",
                    "ref_id": "BIBREF24"
                },
                {
                    "start": 957,
                    "end": 960,
                    "text": "[2]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "Generative Adversarial Networks (GANs) have been recently extended for anomaly detection [6] . Like variational autoencoders, GANs can map a random distribution (e.g., Gaussian) to an arbitrary data generating distribution P X , through the use of a discriminator. Thus if we have a sample of \"normal\" data points then, in principle, we can learn the normal data manifold. However, BiGANs also learn an encoder function E with the property that E = G \u22121 , where G is the generator. Now given a query point x, if the reconstruction error x \u2212 G(E(x)) is large then x is likely to be an outlier. In the experiment section, we will use one representative BiGAN as a baseline against which we will compare our proposed approach [24] .",
            "cite_spans": [
                {
                    "start": 89,
                    "end": 92,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 723,
                    "end": 727,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "Threshold-Free Models: After a model has been built, outliers can either be identified based on ranking or thresholding. For example, if reconstruction error (RE) is used as a measure of outlierness, then data points can be either ranked based on the RE score or a threshold \u03c4 can be used such that those points whose RE > \u03c4 , are labeled as outliers. Tian et. al. recently [19] , proposed an autoencoder (CoRA) which uses two decoders: one for inliers and the other for outliers. Data points whose RE error is lower for the inlier decoder compared to the outlier decoder, were labeled as inliers and vice-versa. The use of two decoders frees the system from setting a pre-defined threshold value to identify outliers. We will use the idea of two decoders, in conjunction with the Wasserstein distance, to design an inlier and an outlier generative model.",
            "cite_spans": [
                {
                    "start": 374,
                    "end": 378,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "Positive and Unlabeled (PU) learning has a similar set up, i.e., we are given samples from a positives and unlabeled classes along with the class prior ratio. The classical positive and negative loss function can be expressed as a linear combination of a modified loss over the inlier and unlabeled distributions [8, 11] . However, our model does not require the class prior ratio and furthermore our approach is generative and geared towards outlier detection and not classification.",
            "cite_spans": [
                {
                    "start": 313,
                    "end": 316,
                    "text": "[8,",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 317,
                    "end": 320,
                    "text": "11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "PU-Learning:"
        },
        {
            "text": "Wasserstein Distance is a measure of dissimilarity between two probability distributions just like the KL divergence. Intuitively, Wasserstein Distance measures the amount of work required to move and transform one pile of sand to another and that is why a special case of it is referred to as the Earth Movers distance [21, 13] .",
            "cite_spans": [
                {
                    "start": 320,
                    "end": 324,
                    "text": "[21,",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 325,
                    "end": 328,
                    "text": "13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Wasserstein Distance"
        },
        {
            "text": "While there are several equivalent ways to define Wasserstein Distance, we will use what is sometimes called as the probabilistic definition. The p-Wasserstein distance W p between a probability measure \u00b5 1 and \u00b5 2 on R d is defined as",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Wasserstein Distance"
        },
        {
            "text": "An autoencoder based on W p (WAE) was recently proposed [20] . Consider an autoencoder h :",
            "cite_spans": [
                {
                    "start": 56,
                    "end": 60,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Autoencoders (WAEs)"
        },
        {
            "text": "Let P X be the original distribution and h#P X be the output distribution induced by h. Then a WAE learns a function h which minimizes W p (P X , h#P X ). However, both the encoding (Q) and decoding function (G) can be viewed in a probabilistic fashion. Thus, if Q(Z|X) is the encoding distribution and P G is the decoding distribution on X, then the W p between h#P X and P X can be decoupled and expressed in terms of P X and P G .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Autoencoders (WAEs)"
        },
        {
            "text": "To find the P G which minimizes W p (P X , P G ), the constraint Q Z = P Z is relaxed and the following objective is proposed.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Autoencoders (WAEs)"
        },
        {
            "text": "D is a divergence and in the WAE-GAN version (which we will use), D Z (Q Z , P Z ) = D JS (Q Z , P Z ) is used and learned in an adversarial manner. D JS is the symmetric KL divergence.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Autoencoders (WAEs)"
        },
        {
            "text": "We now formally define the problem and propose the WALDO architecture as a solution.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Definition and WALDO"
        },
        {
            "text": "Given: P u X = (1 \u2212 \u03bd)P i X + \u03bdP o X be a mixture of an inlier and an outlier distribution on an input space X = R d for 0 < \u03bd < 1. No assumptions are made on the analytical form of the three distributions: P i X , P o X and P u X . Let X u and X p be samples from P u X and P i X .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Definition and WALDO"
        },
        {
            "text": "Objective: Learn generating distributions P i G and P o G on X which minimize W p (P i X , P i G ) and",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Definition and WALDO"
        },
        {
            "text": "Constraints: We do not have access to samples from P o X .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Problem Definition and WALDO"
        },
        {
            "text": "The architecture of WALDO is a generalization of the WAE [20] and CoRa [19] to simultaneously detect and generate inliers and outliers. WALDO consists of four components as shown in Figure 1 :",
            "cite_spans": [
                {
                    "start": 57,
                    "end": 61,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 71,
                    "end": 75,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [
                {
                    "start": 182,
                    "end": 190,
                    "text": "Figure 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "WALDO Architecture"
        },
        {
            "text": "1. An inlier decoder and generator denoted as G i \u03b8 which maps the latent space Z to the output space X. The inlier decoder will induce a distribution P i G . Once trained, G i \u03b8 can take an element generated from P Z and produce samples which will appear to be from P i X .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "WALDO Architecture"
        },
        {
            "text": "2. An outlier decoder and generator denoted as G o \u03c9 . Like the inlier decoder, the outlier decoder can be used to generate outlier samples which will appear to be from P o X .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "WALDO Architecture"
        },
        {
            "text": "3. A common encoder Q \u03c6 which maps the input space X into the latent space Z. In the original WAE paper, the constraint E X\u223cP X (Q|Z) = P Z is enforced using an adversarial discriminator loss. However in WALDO we have the option of either enforcing E X\u223cP i X (Q|Z) = P Z or E X\u223cP u X (Q|Z) = P Z . In our experiments we have consistently observed that the former gave better results than the latter. This is not unexpected as by only enforcing the constraints on the inliers there will be a smaller chance that the inliers and the outliers will be mapped to the same region of the latent space. 4 . A discriminator D \u03b3 ,trained in an adversarial manner like in traditional GANs. The role of D \u03b3 is to enforce the constraint Q Z = P Z . However, unlike traditional GANs, D \u03b3 operates in the lower-dimensional latent space Z. Recall in adversarial learning, the encoder Q is trying to \"fool\" the discriminator to treat its samples as those from the prior P Z .",
            "cite_spans": [
                {
                    "start": 595,
                    "end": 596,
                    "text": "4",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "WALDO Architecture"
        },
        {
            "text": "Input: positive data X p , unlabeled test data X u 1 Initialize the parameters of the encoder",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1: Wasserstein Autoencoder for Learning Distribution of Outliers (WALDO)"
        },
        {
            "text": "Sample batch of size n from X p positive and X u unlabeled data,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1: Wasserstein Autoencoder for Learning Distribution of Outliers (WALDO)"
        },
        {
            "text": "Update D \u03b3 by ascending:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1: Wasserstein Autoencoder for Learning Distribution of Outliers (WALDO)"
        },
        {
            "text": "Compute advantage of inlier decoder:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1: Wasserstein Autoencoder for Learning Distribution of Outliers (WALDO)"
        },
        {
            "text": "Update Q \u03c6 , G i \u03b8 and G o \u03c9 by descending:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Algorithm 1: Wasserstein Autoencoder for Learning Distribution of Outliers (WALDO)"
        },
        {
            "text": "WALDO is defined in Algorithm 1. First the discriminator is trained by ascending (line 7) to discriminate between samples from the prior P z and samples from the encoder Q \u03b8 . In practice only encoded inliers samples will be forced to match the prior distribution (positive-only D \u03b3 training). In the training of the autoencoder, only the decoder with lower reconstruction error will be selected in the loss for each data point (lines [9] [10] [11] [12] [13] [14] [15] [16] . Note that in the competition for a data point, the inlier decoder has seen more samples, thus it has a natural advantage over the outlier decoder in decoding both outliers and inliers. Conversely but less frequently, a random initialization may lead to an advantage of the outlier decoder, with a consequently spurious training during the initial epochs. To cope with both cases of imbalance we introduce an advantage term (line 8), that penalizes the reconstruction error of the decoder with the best reconstruction error.",
            "cite_spans": [
                {
                    "start": 435,
                    "end": 438,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 439,
                    "end": 443,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 444,
                    "end": 448,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 449,
                    "end": 453,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 454,
                    "end": 458,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 459,
                    "end": 463,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 464,
                    "end": 468,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 469,
                    "end": 473,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Algorithm"
        },
        {
            "text": "We analyze theoretical aspects of WALDO for the special case of p = 2. In particular, we show that under certain circumstances, W 2 (P u X , P o G ) upper bounds a positive weighted sum of W 2 (P o X , P o G ), W 2 (P i X , P i G ) and W 2 (Q Z , P Z ). Thus by minimizing an upper bound we can indirectly optimize the decoders. We use the following characterization of WAE [15] for decoders with the added assumption that they are Lipschitz with constant \u03b3.",
            "cite_spans": [
                {
                    "start": 374,
                    "end": 378,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Analysis of WALDO"
        },
        {
            "text": "Theorem 1. For a system with an inlier decoder P i G and an outlier decoder P o G and a shared deterministic encoder Q, the following holds:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Analysis of WALDO"
        },
        {
            "text": "Proof. See Supplementary Text.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Analysis of WALDO"
        },
        {
            "text": "The above theorem shows that by using the Wasserstein metric we can formally distribute the error between the unlabeled data distribution P u X and the outlier (inlier) generator P o G (P i G ) across the two two decoders. The coefficients \u03bd 2 also suggests that if \u03bd is very small then an algorithm which tries to minimize W 2 (P u X , P o G ) will effectively expend \"more effort\" in optimizing W 2 (P i X , P i G ) than W 2 (P o X , P o G ). The use of Advantage in the algorithm is way to compensate the natural weakness of optimizing the outlier decoder due to the small value of \u03bd even though the dependence is improved as the factor is \u03bd 2 will be higher than \u03bd < 1/2. Note that in practice the Lipschitz condition can be enforced using gradient clipping.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Implication of Theorem:"
        },
        {
            "text": "In this section we empirically evaluate the effectiveness of WALDO. We report on four sets of experi-ments.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experiments"
        },
        {
            "text": "1. We carry out an ablation study of WALDO by varying its internal components. Specifically, we evaluate the accuracy of WALDO when the discriminator is applied to only inlier data, i.e., data sampled from P i X . Similarly the impact of training WALDO with and without the use of advantage is tested.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experiments"
        },
        {
            "text": "2. We evaluate WALDO on its ability to generate outliers. We test whether P o G can be used to generate new network intrusion attacks using the KDD99 data set.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experiments"
        },
        {
            "text": "3. We present a real case study where WALDO is applied on real sales data to accurately discover extremely rare patterns with high recall.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experiments"
        },
        {
            "text": "4. Finally we compare WALDO with other state of the art and representative deep learning based methods for anomaly detection: DeepSVDD [18] , ALAD [23] , WAE [20] and CoRA [19] .",
            "cite_spans": [
                {
                    "start": 135,
                    "end": 139,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 147,
                    "end": 151,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 158,
                    "end": 162,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 172,
                    "end": 176,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Experiments"
        },
        {
            "text": "The comparison is carried out by varying contamination level of the training set and outlier ratios in test dataset.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experiments"
        },
        {
            "text": "We use four publicly available datasets for experiments:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Datasets"
        },
        {
            "text": "1. MNIST [10] : containing 60k training samples and 10k test samples from 10 digit classes. Each digit is a 28 \u00d7 28 grayscale image. We choose the digit 0 as the inlier class and the others as outliers.",
            "cite_spans": [
                {
                    "start": 9,
                    "end": 13,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "Datasets"
        },
        {
            "text": "2. Fashion MNIST [22] : consisting of 60k training samples and 10k test samples from 10 classes. Each sample is a 28 \u00d7 28 grayscale image in a clothes category. We use the class 0 as inliers (X i ), and the others as outliers.",
            "cite_spans": [
                {
                    "start": 17,
                    "end": 21,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [],
            "section": "Datasets"
        },
        {
            "text": "3. KDD99 [12] : a large-scale network traffic data with 121 features in each sample. We use 10% of the dataset to extract the inliers (X i ) and another 10% for the unlabeled data. This data set is also used to show the capability of WALDO to generate new meaningful attacks.",
            "cite_spans": [
                {
                    "start": 9,
                    "end": 13,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Datasets"
        },
        {
            "text": "4. CIFAR10 [9] : consisting of 60k 32 \u00d7 32 color images in 10 classes including 50k training and 10k test images.",
            "cite_spans": [
                {
                    "start": 11,
                    "end": 14,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Datasets"
        },
        {
            "text": "Impact of Positive-only D \u03b3 on WALDO . Training the discriminator D \u03b3 only on the positive data (labeled inliers) helps the model in separating the two distributions in the latent space, having effects both on the latent space and on the output space. In Figure 2a we aggregate the effects of positive training for D \u03b3 , showing the distance of the encoded samples from the mean of the distribution P Z . As expected, the outliers get mapped further from the mean of the prior distribution P Z , while the inliers are closer. Impact of Advantage on WALDO . Recall that in WALDO the two decoders, G i and G o compete with each other to get points assigned to them. However because of the availability of the X i set, G i has a natural advantage to have a low reconstruction error on data points in X u . To overcome the natural bias, we introduced the Advantage term (see Line 9 in Algorithm 1). In Figure 2b we show how using the advantage penalty substantially improves the results (higher F1 score), in particular when the outlier ratio becomes smaller. Moreover, we observed how employing the advantage penalty resulted in more reproducible results over different random seeds, as can be seen from the smaller variance in the accuracy.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 255,
                    "end": 264,
                    "text": "Figure 2a",
                    "ref_id": null
                },
                {
                    "start": 898,
                    "end": 907,
                    "text": "Figure 2b",
                    "ref_id": null
                }
            ],
            "section": "Ablation study."
        },
        {
            "text": "We give an example of how WALDO can be used to detect extremely rare patterns on a real data set acquired from a large retailer. We look at the weekly sales pattern of one product X over nearly four years, (from 2016/03/20 to 2019/12/29 in all 52 price-markets in the US, pre COVID-19), which is typically sold more on weekends than weekdays. Each data point is a vector of seven dimensions, and we took a small fraction of the data points and la-beled them as inliers if the volume of the product sold on either Saturday or Sunday was greater than any of the weekdays. There was a total of 10, 234 inliers and 62 outliers. Thus the percentage of outliers was 0.61%. WALDO was only given a small labeled sample of inliers (2, 047) and all the remaining set was unlabeled. Note we chose this pattern, which is \"easy to query\" as it makes it straightforward to characterize outliers. Recall WALDO does not see any labeled outliers. Here are the key observations:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Extreme Outlier Discovery: Real Case Study"
        },
        {
            "text": "1. All the outliers were assigned to the outlier decoder (high recall).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Extreme Outlier Discovery: Real Case Study"
        },
        {
            "text": "2. However, many inliers were also assigned to the outlier decoder just because of the extreme skewness of the data set (low precision).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Extreme Outlier Discovery: Real Case Study"
        },
        {
            "text": "3. If we ranked all the data points by reconstruction error of the inlier decoder we observed an average precision (AP) of close to 46% for the outliers. Thus even though outliers constitute an extremely small percentage of the data, we are able to locate them at the top of the list. This demonstrates that WALDO has the promise to detect rare patterns. KDD99 dataset. Our attacks are generated using the trained WALDO network architecture for the data set. Both positive and unlabeled were used in the training model. We used trained encoder on the inliers and outliers independently from KDD99 to generate the encoded data in which two distributions are formed. From the two distributions, we sampled two independent groups of Gaussian random variables X i \u223c N (P Zi , \u03c3 2 i ) , X o \u223c N (P Zo , \u03c3 2 o ) . Then we decoded the samples to reconstruct the data. Figure 4 shows the real and generated network traffic samples in a t-distributed stochastic neighbor embedding(TSNE) plot. In order to quantitatively assess the quality of the generated data, we used the Euclidean Distance to evaluate on 10 3 samples. It can be seen in the TSNE plot that the distribution of Generated attacks is tighter than the distribution of inliers, which means that Wasserstein distance W (P o X , P o G ) is larger than W (P i X , P i G ). One explanation to this interesting observation is that we do not direct optimize the distance between P o X and P o G . Thus WALDO can effectively create attacks and normal network traffic data which can be used to detect anomalies in any network examination system.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 861,
                    "end": 869,
                    "text": "Figure 4",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Extreme Outlier Discovery: Real Case Study"
        },
        {
            "text": "In this experiment, we measure the performance of WALDO during training by tracking the number of epochs needed to converge to a stable result on MNIST. In Figure 5 , the results of WALDO is compared to CoRa [19] , both in its original setting and improved with the proposed Advantange penalty, and the Wasserstein Autoencoder (WAE [20] , showing the average precision (AP) mean and standard deviation over eight runs on the unlabeled set. The results show that WALDO reaches higher precision faster, while convergence is obtained consistently with very small variance across different runs.",
            "cite_spans": [
                {
                    "start": 208,
                    "end": 212,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 332,
                    "end": 336,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [
                {
                    "start": 156,
                    "end": 164,
                    "text": "Figure 5",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "Convergence Efficiency"
        },
        {
            "text": "DeepSVDD [18] ALAD [24] WAE [20] CoRa [19] [20] and CoRa [19] .",
            "cite_spans": [
                {
                    "start": 9,
                    "end": 13,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 19,
                    "end": 23,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 28,
                    "end": 32,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 38,
                    "end": 42,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 43,
                    "end": 47,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 57,
                    "end": 61,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Convergence Efficiency"
        },
        {
            "text": "Furthermore, robustness to contamination of WALDO compared to other methods is investigated as shown in Table 2 . In most runs, WALDO almost consistently outperforms vis-a-vis other methods on AUC and AUPRC at higher contamination ratio in positive training set and higher ratio of outliers in the mixture. At lower contamination ratios, WALDO performs similarly with DeepSVDD on AUC and most of the times performs better than ALAD. This shows that WALDO is robust in detecting outliers in various contamination configurations, which makes it use more practical in application, settings as real data tends to be contaminated.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 104,
                    "end": 111,
                    "text": "Table 2",
                    "ref_id": null
                }
            ],
            "section": "Convergence Efficiency"
        },
        {
            "text": "We compare the detection accuracy of WALDO with other methods using AUC and AUPRC metrics. At the outset we caution that direct comparison between the methods is problematic because of the nature of the methods. For example, DeepSVDD [17] , ALAD [24] and even WAE [20] require a threshold for determining outliers while both CoRa [19] and WALDO do not. For example, there are two versions of DeepSVDD, the first called soft boundary Deep SVDD requires a hyperparameter that controls the trade-off on how many data points are allowed to fall outside the hypersphere boundary. The second version scores each point based on the distance from the center of the hypersphere induced -the further the distance the more likely it is an outlier and thus requires a threshold cutoff to label points as outliers. Also we have improved CoRa [19] with Advantage to make it more stable and we compare against this improved version.",
            "cite_spans": [
                {
                    "start": 234,
                    "end": 238,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 246,
                    "end": 250,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 264,
                    "end": 268,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 330,
                    "end": 334,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 829,
                    "end": 833,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "WALDO vs. other methods"
        },
        {
            "text": "The comparison between the methods is shown in Table 1 . The \u03bd column represents the percentage of outliers in the mixture. In thirteen out of the sixteen cases, WALDO does better on the AUPRC metric and in ten out of sixteen it does better on AUC. On MNIST, both WAE and CoRa have wide confidence intervals while those of WALDO are relatively tight. On Fashion MNIST at \u03bd = 0.1, DeepSVDD DeepSVDD [18] ALAD [24] WAE [20] CoRa [19] Table 2 : Robustness Evaluation and comparison with state of the art models, showing AUC and AUPRC. The Cont. column represents the percentage of outliers in the positive training data and \u03bd column represents the percentage of outliers in the mixture. In bold: best result for selected \u03bd, Cont. and collection.",
            "cite_spans": [
                {
                    "start": 398,
                    "end": 402,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 408,
                    "end": 412,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 417,
                    "end": 421,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 427,
                    "end": 431,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [
                {
                    "start": 47,
                    "end": 54,
                    "text": "Table 1",
                    "ref_id": "TABREF1"
                },
                {
                    "start": 432,
                    "end": 439,
                    "text": "Table 2",
                    "ref_id": null
                }
            ],
            "section": "WALDO vs. other methods"
        },
        {
            "text": "has a slightly higher AUPRC but WALDO has a tighter confidence interval. In summary we can conclude that WALDO is competitive outlier detection approach vis-a-vis representative deep learning methods. An observation worth highlighting is that AUPRC tends to be lower than AUC across the methods. This suggests that there is lot of room for improvement for outlier detection methods in general.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "WALDO vs. other methods"
        },
        {
            "text": "We propose WALDO, an extension of deep autoenconders to both detect and generate outliers. WALDO uses the Wasserstein metric distance (WD) to train an autoencoder which has an inlier and an outlier decoder but a common encoder. The WD is ideally suitable for outlier detection as it can gracefully handle distributions which may not have identical support. We give an example of detecting extremely rare patterns on a retailer data set. Besides being an accurate outlier detector, WALDO can be used to generate outliers. This may have potentially widespread application including rare event simulation and data augmentation. We give one example where outlier generation can be used to create network attacks using the benchmark KDD99 Cup data set. Applying WALDO to application areas like health, transportation and climate change, where outliers are ever present, may yield promising insights.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion and Conclusion"
        },
        {
            "text": "We analyze theoretical aspects of WALDO for the special case of p = 2. In particular, we show that under certain circumstances, W 2 (P u X , P o G ) upper bounds a positive weighted sum of W 2 (P o X , P o G ), W 2 (P i X , P i G ) and W 2 (Q Z , P Z ). Thus by minimizing an upper bound we can indirectly optimize the decoders. We use the following characterization of WAE [20] for decoders with the added assumption that they are Lipschitz with constant \u03b3. ",
            "cite_spans": [
                {
                    "start": 374,
                    "end": 378,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Analysis of WALDO"
        },
        {
            "text": "For WALDO , CoRa and WAE, we use autoencoders without any convolutional layers for KDD, and convolutional autoencoders for image datasets (Cifar-10, Fashion-MNIST, MNIST). A detailed table to show each layer for each datasets can be found in next page.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Neural Network architectures"
        },
        {
            "text": "Encoder Linear-1 ([-1, 120, 64) 7,808 LeakyReLU-2 (-1, 120, 64) 0 Linear-3 (-1, 120, 32 ) 2,080 ReLU-4 (-1, 120, 32 ) 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Non Linearity Output Shape Parameters"
        },
        {
            "text": "Linear-1 (-1, 120, 64) 2,112 LeakyReLU-2 (-1, 120, 64) 0 Linear-3 (-1, 120, 121) 7,865 Tanh-4 (-1, 120, 121) 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inlier Decoder"
        },
        {
            "text": "Outlier Decoder Linear-1 (-1, 120, 64) 2,112 LeakyReLU-2 (-1, 120, 64) 0 Linear-3 (-1, 120, 121) 7,865 Tanh-4 (-1, 120, 121) 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inlier Decoder"
        },
        {
            "text": "Discriminator Linear-1 (-1, 120, 32) 1,056 LeakyReLU-2 (-1, 120, 32) 0 Dropout-3 (-1, 120, 32) 0 Linear-4 (-1, 120, 1) 33 Sigmoid-5 (-1, 120, 1) 0 ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inlier Decoder"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Outlier Analysis",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Charu",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Aggarwal",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Deep learning for anomaly detection: A survey",
            "authors": [
                {
                    "first": "Raghavendra",
                    "middle": [],
                    "last": "Chalapathy",
                    "suffix": ""
                },
                {
                    "first": "Sanjay",
                    "middle": [],
                    "last": "Chawla",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1901.03407"
                ]
            }
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Robust, deep and inductive anomaly detection",
            "authors": [
                {
                    "first": "Raghavendra",
                    "middle": [],
                    "last": "Chalapathy",
                    "suffix": ""
                },
                {
                    "first": "Aditya",
                    "middle": [
                        "Krishna"
                    ],
                    "last": "Menon",
                    "suffix": ""
                },
                {
                    "first": "Sanjay",
                    "middle": [],
                    "last": "Chawla",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Joint European Conference on Machine Learning and Knowledge Discovery in Databases",
            "volume": "",
            "issn": "",
            "pages": "36--51",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Outlier detection: A survey",
            "authors": [
                {
                    "first": "Varun",
                    "middle": [],
                    "last": "Chandola",
                    "suffix": ""
                },
                {
                    "first": "Arindam",
                    "middle": [],
                    "last": "Banerjee",
                    "suffix": ""
                },
                {
                    "first": "Vipin",
                    "middle": [],
                    "last": "Kumar",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "A survey on gans for anomaly detection",
            "authors": [
                {
                    "first": "Federico",
                    "middle": [],
                    "last": "Di Mattia",
                    "suffix": ""
                },
                {
                    "first": "Paolo",
                    "middle": [],
                    "last": "Galeone",
                    "suffix": ""
                },
                {
                    "first": "Michele",
                    "middle": [
                        "De"
                    ],
                    "last": "Simoni",
                    "suffix": ""
                },
                {
                    "first": "Emanuele",
                    "middle": [],
                    "last": "Ghelfi",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1906.11632"
                ]
            }
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Robust statistics",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Peter",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Huber",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "",
            "volume": "523",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Positive-unlabeled learning with nonnegative risk estimator",
            "authors": [
                {
                    "first": "Ryuichi",
                    "middle": [],
                    "last": "Kiryo",
                    "suffix": ""
                },
                {
                    "first": "Gang",
                    "middle": [],
                    "last": "Niu",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Marthinus",
                    "suffix": ""
                },
                {
                    "first": "Masashi",
                    "middle": [],
                    "last": "Du Plessis",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Sugiyama",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Advances in neural information processing systems",
            "volume": "",
            "issn": "",
            "pages": "1675--1685",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Cifar-10 (canadian institute for advanced research)",
            "authors": [
                {
                    "first": "Alex",
                    "middle": [],
                    "last": "Krizhevsky",
                    "suffix": ""
                },
                {
                    "first": "Vinod",
                    "middle": [],
                    "last": "Nair",
                    "suffix": ""
                },
                {
                    "first": "Geoffrey",
                    "middle": [],
                    "last": "Hinton",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "The mnist database of handwritten digits",
            "authors": [
                {
                    "first": "Yann",
                    "middle": [],
                    "last": "Lecun",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Learning from positive and unlabeled examples with different data distributions",
            "authors": [
                {
                    "first": "Xiao-Li",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Bing",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "European conference on machine learning",
            "volume": "",
            "issn": "",
            "pages": "218--229",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Uci machine learning repository. irvine, ca: University of california, school of information and computer science",
            "authors": [
                {
                    "first": "Mosche",
                    "middle": [],
                    "last": "Lichman",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Statistical aspects of wasserstein distances",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Victor",
                    "suffix": ""
                },
                {
                    "first": "Yoav",
                    "middle": [],
                    "last": "Panaretos",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Zemel",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Annual Review of Statistics and Its Application",
            "volume": "6",
            "issn": "1",
            "pages": "405--431",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "and Anton van den Hengel. Deep anomaly detection with deviation networks",
            "authors": [
                {
                    "first": "Guansong",
                    "middle": [],
                    "last": "Pang",
                    "suffix": ""
                },
                {
                    "first": "Chunhua",
                    "middle": [],
                    "last": "Shen",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, KDD '19",
            "volume": "",
            "issn": "",
            "pages": "353--362",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Tim Genewein, and Frank Nielsen",
            "authors": [
                {
                    "first": "Giorgio",
                    "middle": [],
                    "last": "Patrini",
                    "suffix": ""
                },
                {
                    "first": "Rianne",
                    "middle": [],
                    "last": "Van Den",
                    "suffix": ""
                },
                {
                    "first": "Patrick",
                    "middle": [],
                    "last": "Berg",
                    "suffix": ""
                },
                {
                    "first": "Marcello",
                    "middle": [],
                    "last": "Forre",
                    "suffix": ""
                },
                {
                    "first": "Samarth",
                    "middle": [],
                    "last": "Carioni",
                    "suffix": ""
                },
                {
                    "first": "Max",
                    "middle": [],
                    "last": "Bhargav",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Welling",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1810.01118"
                ]
            }
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Unsupervised representation learning with deep convolutional generative adversarial networks",
            "authors": [
                {
                    "first": "Alec",
                    "middle": [],
                    "last": "Radford",
                    "suffix": ""
                },
                {
                    "first": "Luke",
                    "middle": [],
                    "last": "Metz",
                    "suffix": ""
                },
                {
                    "first": "Soumith",
                    "middle": [],
                    "last": "Chintala",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "4th International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Flow-based network traffic generation using generative adversarial networks",
            "authors": [
                {
                    "first": "Markus",
                    "middle": [],
                    "last": "Ring",
                    "suffix": ""
                },
                {
                    "first": "Daniel",
                    "middle": [],
                    "last": "Schl\u00f6r",
                    "suffix": ""
                },
                {
                    "first": "Dieter",
                    "middle": [],
                    "last": "Landes",
                    "suffix": ""
                },
                {
                    "first": "Andreas",
                    "middle": [],
                    "last": "Hotho",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1810.07795"
                ]
            }
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Deep one-class classification",
            "authors": [
                {
                    "first": "Lukas",
                    "middle": [],
                    "last": "Ruff",
                    "suffix": ""
                },
                {
                    "first": "Nico",
                    "middle": [],
                    "last": "G\u00f6rnitz",
                    "suffix": ""
                },
                {
                    "first": "Lucas",
                    "middle": [],
                    "last": "Deecke",
                    "suffix": ""
                },
                {
                    "first": "Ahmed",
                    "middle": [],
                    "last": "Shoaib",
                    "suffix": ""
                },
                {
                    "first": "Robert",
                    "middle": [],
                    "last": "Siddiqui",
                    "suffix": ""
                },
                {
                    "first": "Alexander",
                    "middle": [],
                    "last": "Vandermeulen",
                    "suffix": ""
                },
                {
                    "first": "Emmanuel",
                    "middle": [],
                    "last": "Binder",
                    "suffix": ""
                },
                {
                    "first": "Marius",
                    "middle": [],
                    "last": "M\u00fcller",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Kloft",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "International Conference on Machine Learning",
            "volume": "",
            "issn": "",
            "pages": "4390--4399",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Learning competitive and discriminative reconstructions for anomaly detection",
            "authors": [
                {
                    "first": "Kai",
                    "middle": [],
                    "last": "Tian",
                    "suffix": ""
                },
                {
                    "first": "Shuigeng",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "Jianping",
                    "middle": [],
                    "last": "Fan",
                    "suffix": ""
                },
                {
                    "first": "Jihong",
                    "middle": [],
                    "last": "Guan",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the AAAI Conference on Artificial Intelligence",
            "volume": "33",
            "issn": "",
            "pages": "5167--5174",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Wasserstein auto-encoders",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "I Tolstikhin",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Bousquet",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Gelly",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Sch\u00f6lkopf",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "International Conference on Learning Representations (ICLR 2018)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Topics in Optimal Transportation",
            "authors": [
                {
                    "first": "Cedric",
                    "middle": [],
                    "last": "Villani",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Fashionmnist: a novel image dataset for benchmarking machine learning algorithms",
            "authors": [
                {
                    "first": "Han",
                    "middle": [],
                    "last": "Xiao",
                    "suffix": ""
                },
                {
                    "first": "Kashif",
                    "middle": [],
                    "last": "Rasul",
                    "suffix": ""
                },
                {
                    "first": "Roland",
                    "middle": [],
                    "last": "Vollgraf",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Gaurav Manek, and Vijay Ramaseshan Chandrasekhar. Efficient gan-based anomaly detection",
            "authors": [
                {
                    "first": "Houssam",
                    "middle": [],
                    "last": "Zenati",
                    "suffix": ""
                },
                {
                    "first": "Chuan",
                    "middle": [],
                    "last": "Sheng Foo",
                    "suffix": ""
                },
                {
                    "first": "Bruno",
                    "middle": [],
                    "last": "Lecouat",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1802.06222"
                ]
            }
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Adversarially learned anomaly detection",
            "authors": [
                {
                    "first": "Houssam",
                    "middle": [],
                    "last": "Zenati",
                    "suffix": ""
                },
                {
                    "first": "Manon",
                    "middle": [],
                    "last": "Romain",
                    "suffix": ""
                },
                {
                    "first": "Chuan-Sheng",
                    "middle": [],
                    "last": "Foo",
                    "suffix": ""
                },
                {
                    "first": "Bruno",
                    "middle": [],
                    "last": "Lecouat",
                    "suffix": ""
                },
                {
                    "first": "Vijay",
                    "middle": [],
                    "last": "Chandrasekhar",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "2018 IEEE International Conference on Data Mining (ICDM)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Anomaly detection with robust deep autoencoders",
            "authors": [
                {
                    "first": "Chong",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Randy",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Paffenroth",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining",
            "volume": "",
            "issn": "",
            "pages": "665--674",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF1": {
            "text": "WALDO Architecture and Application. (a) The architecture consists of a decoder for inliers and outliers with a common encoder trained using the Wasserstein distance; (b) A dataset of images (CelebA) where faces without glasses are inliers and with glasses are outliers: (i) An inlier input consisting of face without glasses comes out as one with glasses from the outlier decoder of WALDO. (ii) Similarly a face with glasses (outlier) comes out without glasses from the inlier decoder.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Outlier detection of retail patterns. Outliers constitute a very small percentage of the data.6.4 Capability of generating new attacks on the KDD99 Data SetOne of the novelties of our work is to provide the capability of generating new outliers. For example we can generate realistic new attacks using the Impact of positive training on D \u03b3 and using the Advantage for Generators",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "KDD99 Outlier Generation",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Average Precision on testing set for WALDO, WAE",
            "latex": null,
            "type": "figure"
        },
        "TABREF1": {
            "text": "Evaluation and comparison with state of the art models, showing average values of multiple runs for AUC and AUPRC. In bold: best result for selected outlier ratio and collection.",
            "latex": null,
            "type": "table"
        },
        "TABREF3": {
            "text": "DeepSVDD https://github.com/lukasruff/Deep-SVDD-PyTorch PyTorch ALAD https://github.com/houssamzenati/Adversarially-Learned-Anomaly-Detection TensorFlow Wasserstein AE https://github.com/sedelmeyer/wasserstein-auto-encoder/blob/master/ Wasserstein-auto-encoder tutorial.ipynb PyTorch CoRA (+ advantage) https://github.com/kddblind/waldo PyTorch WALDO https://github.com/kddblind/waldo PyTorch",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "Source code repositories for each method evaluated in this work.",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "KDD Architecture",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}