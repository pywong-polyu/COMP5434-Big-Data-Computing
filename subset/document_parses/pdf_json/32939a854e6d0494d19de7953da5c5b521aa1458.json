{
    "paper_id": "32939a854e6d0494d19de7953da5c5b521aa1458",
    "metadata": {
        "title": "Employment Service System Based on Hybrid Recommendation Algorithm",
        "authors": [
            {
                "first": "Zhenqi",
                "middle": [],
                "last": "Dong",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "East China University of Science and Technology",
                    "location": {
                        "settlement": "Shanghai",
                        "country": "China"
                    }
                },
                "email": ""
            },
            {
                "first": "Chunxia",
                "middle": [],
                "last": "Leng",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "East China University of Science and Technology",
                    "location": {
                        "settlement": "Shanghai",
                        "country": "China"
                    }
                },
                "email": "cxleng@ecust.edu.cn"
            },
            {
                "first": "Hong",
                "middle": [],
                "last": "Zheng",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "East China University of Science and Technology",
                    "location": {
                        "settlement": "Shanghai",
                        "country": "China"
                    }
                },
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "The recommendation system can calculate the similarity between users and items in the system, which is based on different computational methods, analyzing of calculation results, and then calculates the items that may interest the users and recommend those items to users. Collaborative filtering algorithm is a popular algorithm in academia and industry, but it does have certain shortcomings such as cold start and sparse data. In this paper, a hybrid recommendation algorithm is proposed and applied to an employment service system by using job postings from websites obtained by web crawler as the dataset. The experimental result shows that the hybrid recommendation algorithm is able to the accuracy of employment information recommendation to some extent and meet the personalized needs of job-seeking users.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "In spring 2020, campus job fairs have been postponed due to the COVID-19 epidemic, making it imperative to promote college graduates' job search by enhancing online employment services.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Traditional employment websites provide a huge amount of job information to users for retrieving, but they are not able to provide differentiated services by differentiating the user groups. Therefore, they cannot help users to find suitable jobs more easily and thus cannot increase employment rates.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Anderson points out in The Long Tail Theory that \"we are about to leave retrieval and enter the age of recommendation\" [1] . The recommendation system is a new type of information filtering system. After analyzing a large number of historical user behavioral records, they can filter out useful information from a huge amount of information by building a specific user's interest model [4] , and then actively push the recommendation results to the personalized service system of each user. If we only use collaborative filtering or content-based algorithm in the system, we cannot combine comprehensive information, such as personal data and browsing history, which will lead to the consequence that the recommendation results will be too simple [13] , thus causing limit of the range of search results and reducing the chance of success. At the same time, employment websites may recommend the same job to many users, which will lead to the fact that there will be too many uses compete for the same job, thus reducing the number of recommendation times of other jobs and harming the company's interests.",
            "cite_spans": [
                {
                    "start": 119,
                    "end": 122,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 386,
                    "end": 389,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 747,
                    "end": 751,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Therefore, a hybrid recommendation algorithm is used to solve the \"cold start\" problem in the collaborative filtering algorithm. It effectively ensures the accuracy of the employment recommendation, which is of great value and significance for improving the level of satisfaction of both sides and the quality of employment.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "The architecture of the employment system based on the hybrid recommendation algorithm is shown in Fig. 1 and consists of 3 main layers.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 99,
                    "end": 105,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Architecture of the Employment Recommendation System"
        },
        {
            "text": "(1) Data layer: In the recommendation system, the personal information of job seekers, the results of web crawlers, and the data of user behavior are saved in the database and used for subsequent recommendation algorithms. (2) Recommendation Business Layer: A hybrid recommendation algorithm is used to recommend jobs to users in different scenes by using collaborative filtering recommendation algorithm and content-based recommendation algorithm. The recommendation service layer generates a list of recommended jobs through the recommendation algorithm, which will be transmitted to the user interface layer for display. (3) User Interface Layer: The user interface layer interacts with the user directly. The recommendation service will transmit the job list calculated by the ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Architecture of the Employment Recommendation System"
        },
        {
            "text": "The key to the research of the recommendation system lies in the recommendation algorithm. Currently, the most widely used recommendation algorithms are collaborative filtering recommendation algorithm and content-based recommendation algorithm. The recommendation algorithm based on collaborative filtering is a successful personalized recommendation technique. The algorithm extracts the user's previous behavioral records, then builds user similarity model [4] , and finally calculates the user's interest prediction for the unbrowsed jobs, thus achieving the purpose of recommendation. The content-based recommendation builds a job similarity model by calculating the similarity between different jobs [6] such as text similarities and recommends the job which has the highest similarity with the job user is browsing. In this paper, based on the above two algorithms, a switching hybrid algorithm [10] is used to improve the \"cold start\" problem, and the \"sparsity\" problem of user similarity matrix [7] in the collaborative filtering algorithm is solved by pre-screening users with interest in intersection. In addition, it solves the problem of limited recommendation results when just uses one algorithm.",
            "cite_spans": [
                {
                    "start": 460,
                    "end": 463,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 706,
                    "end": 709,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 902,
                    "end": 906,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 1005,
                    "end": 1008,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "Hybrid Recommendation Algorithm Model"
        },
        {
            "text": "The traditional collaborative filtering algorithm needs to calculate the similarity between any two users as the following expression [3] .",
            "cite_spans": [
                {
                    "start": 134,
                    "end": 137,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "Inadequacies of Traditional Collaborative Filtering Algorithm"
        },
        {
            "text": "where R i;j represents the similarity between user i and user j. However, in the real system, the similarity between a large number of users is 0. This means that the similarity matrix is a sparse matrix and a large number of values is 0. This situation will lead to the result that the computation cost is high, but most of the computed results are useless. Therefore, solving this problem can largely optimize the collaborative filtering recommendation algorithm.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inadequacies of Traditional Collaborative Filtering Algorithm"
        },
        {
            "text": "The algorithm filters out the set of users who intersect with the current user and construct the user similarity matrix between these users, thus avoiding the appearance of the sparse matrix.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Advanced Collaborative Filtering Algorithm"
        },
        {
            "text": "(1) Create table T with jobs as the key to record each job's set of users who rate it.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Advanced Collaborative Filtering Algorithm"
        },
        {
            "text": "(2) Create a user similarity matrix W to record the similarity between different users [11] and set the default value as 0. (3) Traverse through table T. For each post in table T, obtain the set of users who rate it. For every two of the different users j, k in the set, make the following updates in the user similarity matrix W:",
            "cite_spans": [
                {
                    "start": 87,
                    "end": 91,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [
                {
                    "start": 124,
                    "end": 212,
                    "text": "(3) Traverse through table T. For each post in table T, obtain the set of users who rate",
                    "ref_id": null
                }
            ],
            "section": "Procedure of Advanced Collaborative Filtering Algorithm"
        },
        {
            "text": "and apply a \"heat penalty\" through Eq. 2 to obtain the final user similarity matrix W. Figure 2 shows the procedures of constructing the user similarity matrix W. The lowercase letters a, b, c, d, and e denote jobs, and the uppercase letters A, B, C, and D denote users. The algorithm firstly builds up user rating relationship based on matrix W, then calculates the user similarity matrix.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 87,
                    "end": 95,
                    "text": "Figure 2",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Procedure of Advanced Collaborative Filtering Algorithm"
        },
        {
            "text": "While constructing the similarity matrix W, the algorithm uses the \"heat penalty\" formula of Eq. 2 to impose the \"heat penalty\" on the popular jobs, thus reducing the phenomenon of recommending a small number of popular jobs to a large number of users.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Advanced Collaborative Filtering Algorithm"
        },
        {
            "text": "(4) Calculate the current user's interest in unrated jobs via Eq. 3 with the following formula.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Advanced Collaborative Filtering Algorithm"
        },
        {
            "text": "where J u; i \u00f0 \u00de stands for user i's predicted interest of job u, P u; k \u00f0 \u00de represents the most top k similar users to the current user, T i \u00f0 \u00de represents the set of users who have a rating record of job i, w ut represents the similarity between user u and user t in user similarity matrix W, r ti represents the user t's rating of job i. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Advanced Collaborative Filtering Algorithm"
        },
        {
            "text": "The TF-IDF algorithm is a common algorithm for extracting keywords from the text. The core idea of the TF-IDF algorithm is: words that appear very rarely in other texts, but have a high frequency in the current text, can be regarded as keywords of the current text. The TF-IDF algorithm needs to calculate the TF (Term Frequency) and the IDF (Inverse Document Frequency) respectively [5] .",
            "cite_spans": [
                {
                    "start": 384,
                    "end": 387,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Content-Based Algorithm"
        },
        {
            "text": "The formula for calculating TF (term frequency) is as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Content-Based Algorithm"
        },
        {
            "text": "where count t \u00f0 \u00de represents the number of times that word t appears in the text, D i j j represents the total number of words in text D i .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Content-Based Algorithm"
        },
        {
            "text": "The formula for calculating IDF (inverse document frequency) is as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Content-Based Algorithm"
        },
        {
            "text": "where N represents the total number of text, I t; D i \u00f0 \u00de represents whether term t appears in text D i , it has a value in range {0, 1}, if the text contains the term, the value of it is 1, otherwise, the value is 0.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Content-Based Algorithm"
        },
        {
            "text": "The project uses the \"jieba.analyse.extract_tags\" method from the Python library \"jieba\", which is good for word division, to implement the TF-IDF algorithm to extract keywords from texts.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Content-Based Algorithm"
        },
        {
            "text": "The procedure of the algorithm is as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Content-Based Algorithm"
        },
        {
            "text": "(1) Retrieve the jobs which have the same \"keyword\" field as the current job in the database. (2) Calculate the similarity of the columns whose value is a number or specific string value, such as \"salary\", \"education\". (3) Preprocess the \"job_advantage\" field of the job, remove the HTML tags and extract 2 keywords from it. (4) Preprocess the \"job_detail\" field of the job, remove the HTML tags and keywords extracted from step (3), and the words that are not relevant to the job. Finally, extract 10 keywords from it. (5) Calculate the text-similarity of the \"job_advantage\" and \"job_detail\" field. (6) Multiply the similarity of all the fields by their weights to calculate the similarity between two jobs. (7) Sort and return the 3 top jobs with the highest similarity as the result.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Procedure of Content-Based Algorithm"
        },
        {
            "text": "Precision and recall are commonly used to evaluate recommendation systems [9] . Accuracy is the ratio of the number of correct job recommendations to the number of all recommendations. The recall is the ratio of the number of correctly recommended jobs to the number of all jobs. Besides, F [12] is also defined as the evaluation indicator of the recommendation system, and the formula for F is as follows.",
            "cite_spans": [
                {
                    "start": 74,
                    "end": 77,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 291,
                    "end": 295,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Evaluation Indicators of Recommendation System"
        },
        {
            "text": "The computation time of the recommendation algorithm is also an evaluation indicator of the recommendation system.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Evaluation Indicators of Recommendation System"
        },
        {
            "text": "Users' predicted ratings of jobs can be calculated by recommendation algorithm. Since there is no direct record of user ratings in the system, the real user ratings of jobs are calculated by assigning different weights to the user's browsing and favorite records [8] . Then calculate average MAE [2] as the final loss of recommendation algorithm. The formula for calculating the MAE for each user is as follows.",
            "cite_spans": [
                {
                    "start": 263,
                    "end": 266,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 296,
                    "end": 299,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Loss Calculation of Recommendation System"
        },
        {
            "text": "where N represents the number of recommended jobs for each user, P represents the recommended jobs list for the user, p u;v represents user u's real rating to job v, v u;v represents user u's predicted rating to job v.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Loss Calculation of Recommendation System"
        },
        {
            "text": "There are 503 user information records, 23508 browsing records, 3122 collecting records, and 101251 job detail information records in the system for testing. Using each recommendation algorithm to recommend 10 jobs for each user and calculate the value of F, calculation time, and loss.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Analysis of Experimental Results"
        },
        {
            "text": "As shown in Table 1 , the F-values are calculated for each of the three different recommendation algorithms, and the hybrid recommendation algorithm performs much better than the other two algorithms in terms of F-value. This result shows that the hybrid recommendation algorithm optimizes the recommendation effect well. In addition, the loss values of all three algorithms are controlled between 0 and 0.6, which shows that the recommendation algorithm has a low loss. Also, with the same test results as the F value, the hybrid recommendation algorithm has the best recommendation effect.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 12,
                    "end": 19,
                    "text": "Table 1",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Analysis of Experimental Results"
        },
        {
            "text": "The collaborative filtering recommendation algorithm is the one with the highest average error when calculating the results of MAE, which is because the collaborative filtering algorithm recommends calculating the similarity between users. The contentbased recommendation algorithm calculates the similarity between jobs, so the contentbased will recommend jobs that are similar to the jobs the user is browsing, thus having the lowest loss.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Analysis of Experimental Results"
        },
        {
            "text": "Besides, the result also shows the comparison of computation time between the optimized collaborative filtering algorithm and the traditional algorithm. The optimized algorithm computes more than one time faster than the traditional algorithm, indicating that the algorithm optimization has a better effect.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Analysis of Experimental Results"
        },
        {
            "text": "This paper introduces the use of hybrid recommendation algorithms and the advanced collaborative filtering recommendation algorithm. The use of a hybrid recommendation algorithm can improve the recommendation effect, and the optimization of the cofiltering algorithm solves the problem of the sparsity of the user similarity matrix. However, the dataset of this experiment is relatively small, so how to expand the dataset to make the test results more reliable, and how to use more complex recommendation algorithm to make the recommendation effect more accurate will be the focus of subsequent research.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "The long tail: why the future of business is selling less of more",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Anderson",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "J. Prod. Innov. Manag",
            "volume": "24",
            "issn": "3",
            "pages": "274--276",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Encyclopedia of Social Network Analysis and Mining",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Alhaj",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Rokne",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Amazon.com recommendations: item-to-item collaborative filtering",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Linden",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Smith",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "York",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "IEEE Internet Comput",
            "volume": "7",
            "issn": "1",
            "pages": "76--80",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Dynamic user profile-based job recommender system",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "Hong",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Zheng",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "International Conference on Computer Science and Education",
            "volume": "",
            "issn": "",
            "pages": "1499--1503",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Toward the next generation of recommender systems: a survey of the state-of-the-art and possible extensions",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Adomavicius",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Tuzhilin",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "IEEE Trans. Knowl. Data Eng",
            "volume": "17",
            "issn": "6",
            "pages": "734--749",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Fab: content-based, collaborative recommendation",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Balabanovic",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Shoham",
                    "suffix": ""
                }
            ],
            "year": 1997,
            "venue": "Commun. ACM",
            "volume": "40",
            "issn": "3",
            "pages": "66--72",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Understanding similarity metrics in neighbour-based recommender systems",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Bellogin",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "P"
                    ],
                    "last": "De Vries",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "International Conference on the Theory of Information Retrieval",
            "volume": "",
            "issn": "",
            "pages": "48--54",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Case-based user profiling for content personalisation",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Bradley",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Rafter",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Smyth",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "Adaptive Hypermedia and Adaptive Web Based Systems",
            "volume": "",
            "issn": "",
            "pages": "62--72",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Evaluating evaluation measure stability",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Buckley",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [
                        "M"
                    ],
                    "last": "Voorhees",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "International ACM SIGIR Conference on Research and Development in Information Retrieval",
            "volume": "51",
            "issn": "",
            "pages": "33--40",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Hybrid recommender systems: survey and experiments",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Burke",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "User Model. User-Adap. Inter",
            "volume": "12",
            "issn": "4",
            "pages": "331--370",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Item-based top-N recommendation algorithms",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Deshpande",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Karypis",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "ACM Trans. Inf. Syst",
            "volume": "22",
            "issn": "1",
            "pages": "143--177",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "The recommendation system based on two-sides selection between college graduates and employers",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "51--59",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Graduate employment recommendation system based on collaborative filtering",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "1--19",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "The architecture of the employment recommendation system Employment Service System Based on Hybrid Recommendation Algorithm recommendation algorithm to the user interface layer, and then this layer will query the detailed information of all the jobs in the list and recommend the information to the user for easy viewing.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Sort the results of the operation in step (4) and select the five jobs with the highest interest prediction value to recommend to the current user.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "The procedures of building up user similarity matrix",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "The test results of each algorithm",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "Acknowledgements. This work was supported by WJY2018002. (Online education & teaching research project of ECUST).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "acknowledgement"
        }
    ]
}