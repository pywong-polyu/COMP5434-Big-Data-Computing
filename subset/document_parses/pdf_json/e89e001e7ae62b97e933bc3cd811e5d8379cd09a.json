{
    "paper_id": "e89e001e7ae62b97e933bc3cd811e5d8379cd09a",
    "metadata": {
        "title": "PEPN-GRN: A Petri net-based approach for the inference of gene regulatory networks from noisy gene expression data",
        "authors": [
            {
                "first": "Deepika",
                "middle": [],
                "last": "Vatsa",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Indian Institute of Technology",
                    "location": {
                        "settlement": "Delhi, New Delhi",
                        "country": "India"
                    }
                },
                "email": ""
            },
            {
                "first": "Agarwal",
                "middle": [],
                "last": "Id",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Indian Institute of Technology",
                    "location": {
                        "settlement": "Delhi, New Delhi",
                        "country": "India"
                    }
                },
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "The inference of gene regulatory networks (GRNs) from expression data is a challenging problem in systems biology. The stochasticity or fluctuations in the biochemical processes that regulate the transcription process poses as one of the major challenges. In this paper, we propose a novel GRN inference approach, named the Probabilistic Extended Petri Net for Gene Regulatory Network (PEPN-GRN), for the inference of gene regulatory networks from noisy expression data. The proposed inference approach makes use of transition of discrete gene expression levels across adjacent time points as different evidence types that relate to the production or decay of genes. The paper examines three variants of the PEPN-GRN method, which mainly differ by the way the scores of network edges are computed using evidence types. The proposed method is evaluated on the benchmark DREAM4 in silico data sets and a real time series data set of E. coli from the DREAM5 challenge. The PEPN-GRN_v3 variant (the third variant of the PEPN-GRN approach) sought to learn the weights of evidence types in accordance with their contribution to the activation and inhibition gene regulation process. The learned weights help understand the time-shifted and inverted time-shifted relationship between regulator and target gene. Thus, PEPN-GRN_v3, along with the inference of network edges, also provides a functional understanding of the gene regulation process.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "There are different kinds of processes in the cell that work together to perform different activities. Depending upon the components and their interaction types, at large, we have three kinds of biochemical networks at the sub-cellular level: metabolic networks, signal transduction networks, and gene regulatory networks. A gene regulatory network (GRN) is a network of genegene interactions that govern their expression. Regulation of gene expression is important as it regulates the amount of protein production in the cell.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Inference of gene regulatory networks is considered as one of the key problems in Systems Biology [1, 2] . There has been an exponential growth of reverse engineering methods for network reconstruction over the last two decades [3] [4] [5] [6] [7] . Even though, since the last decade, high- throughput techniques like microarrays and RNA-seq made the availability of gene expression data possible, network inference is still considered a challenging problem given the factors like stochasticity, measurement noise, missing expression values, limited time points, etc. in the expression data [8] . Apart from these constraints, noise introduced due to high-throughput techniques like DNA microarrays where the data have a high noise-to-signal ratio also creates a hurdle in the network inference and is often overlooked while developing these reverse engineering methods [9] . Different approaches have been used recently for network inference from time series data such as ODE models [10] , Bayesian networks [11] , Gaussian graphical models [12] , neural networks [13] , and information theory methods [14] . Recent reviews of gene regulatory network inference methods and their limitations are given in [15, 16] . Huynh-Thu et al. [15] presented an introductory review of the field by first providing the background of core biological concepts involved, and then introducing different inference approaches in a categorized way. The paper also provides links to the publicly available software tools for network inference. Banf et al. [16] presented a review of GRN inference methods, their limitations, and their application on plant species A. Thaliana. The paper also focuses on different data types that can be used for GRN inference such as transcription factor binding site information, chromatin conformation mapping data, and the need to integrate different data sets to obtain more adequate results.",
            "cite_spans": [
                {
                    "start": 98,
                    "end": 101,
                    "text": "[1,",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 102,
                    "end": 104,
                    "text": "2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 228,
                    "end": 231,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 232,
                    "end": 235,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 236,
                    "end": 239,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 240,
                    "end": 243,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 244,
                    "end": 247,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 592,
                    "end": 595,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 871,
                    "end": 874,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 985,
                    "end": 989,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 1010,
                    "end": 1014,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 1043,
                    "end": 1047,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 1066,
                    "end": 1070,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 1104,
                    "end": 1108,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 1206,
                    "end": 1210,
                    "text": "[15,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 1211,
                    "end": 1214,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 1234,
                    "end": 1238,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 1537,
                    "end": 1541,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Expression data could be measured at steady-state or generated as a time series. Generally, in time series data generation, the steady-state of the network is perturbed, and the evolving expression values are recorded until the network reaches the steady-state again. Since time series data sets have evolving expression values of genes recorded at different time instants, they are considered to be more informative about the dynamics of the underlying network than steady-state data. Causal relationships among genes can be inferred from time series data only. It has been shown that the inference approach GENIE3 (which is based on steady-state data), performs poorly on time series data [17] . Thus, it suggests that the approach undertaken for the inference process should make use of the information of multiple time points to better capture the interactions between the genes.",
            "cite_spans": [
                {
                    "start": 691,
                    "end": 695,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In gene regulatory networks [18, 19] , genes interact with one another to perform specific cell functions. Gene-gene interactions are regulatory interactions between a regulator gene (also known as a transcription factor (TF)) and a target gene. A target gene is expressed depending on the activity of regulating genes. The interaction from the regulator gene to a target gene can either be activating or inhibiting. Activating regulation accelerates the production of the target gene (and the target gene is expressed) while in inhibiting regulation, it slows down the production of the target gene even less than it was produced (expressed) in the absence of this inhibiting regulating gene. Generally, there is some synthesis constant associated with the production of each target gene. Due to that, a gene can be expressed (though to a very low level) even in the absence of any regulator gene [7, 20] . Similarly, there is some decay constant associated with each gene. However, gene degradation is a slower process than gene synthesis. Thus, in the presence of inhibiting regulation, the net result can be seen as that of the degradation of the target gene [7, 20] .",
            "cite_spans": [
                {
                    "start": 28,
                    "end": 32,
                    "text": "[18,",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 33,
                    "end": 36,
                    "text": "19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 898,
                    "end": 901,
                    "text": "[7,",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 902,
                    "end": 905,
                    "text": "20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 1163,
                    "end": 1166,
                    "text": "[7,",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 1167,
                    "end": 1170,
                    "text": "20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Gene expression data is of the form of continuous gene expression levels. In gene regulation, a regulator gene remains in its inactive form until it reaches a threshold concentration. Only when its concentration increases above the threshold concentration, it becomes active [21] . The sigmoid shape of real interaction in gene regulation can be interpreted as a step function in its logical abstraction [22] . Therefore, the regulatory mechanism of genes can be interpreted in the switch form, that is, ON or OFF. In a logical abstraction view, a regulator gene (or TF) in its ON state attaches to the DNA and initiates the regulation of a target gene. Thus, the target gene upon its production goes from OFF to ON state. The discretization of time series data helps in identifying potential regulator genes for a target gene.",
            "cite_spans": [
                {
                    "start": 275,
                    "end": 279,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 404,
                    "end": 408,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Researchers have tried to explore the behaviour of GRNs using discrete data. Ito et al. [23] qualitatively analyze behaviour of a GRN using the logical abstraction of gene expression levels using two states ON and OFF and exploited the switching between two states to capture the GRN behaviour. Schaub et al. [24] used many discrete levels to represent a gene state and model some aspects of biological systems like negative auto-regulation. Thus, the logical abstraction of the continuous gene expression values preserves the qualitative features of the system dynamics such as oscillatory behaviour, steady-state, and reachability [22] . K\u00fcffner et al. [25] proposed a Petri net model with fuzzy logic (PNFL) for GRN inference. The PNFL is a discrete rule-based approach that performs simulations to retrieve system dynamics along with its topology.",
            "cite_spans": [
                {
                    "start": 88,
                    "end": 92,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 309,
                    "end": 313,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 633,
                    "end": 637,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 655,
                    "end": 659,
                    "text": "[25]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In this paper, we will present a discrete system-based approach for the inference of GRNs while dealing with the issues of noise, and stochasticity. A discrete system-based approach means that the approach is based on a discrete system where a countable number of gene expression levels exist in the data.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "DREAM4 in silico network challenge data set. DREAM4 in silico network challenge provides biologically plausible simulated expression data of 5 networks of size 10-gene and 5 networks of size 100-genes with the aim to recover the underlying network [2, 26, 27] . We used time series data sets of networks from the challenge. The time series data sets were generated by applying a perturbation to the network at time 0 and let the state change happen till time 10, after which the perturbation is removed and the network returns to its original state. Each time series consists of noisy expression data. For 10-gene networks, 5 time series were provided, and for 100-gene networks, 10 time series were provided. Each time series consists of 21 time points.",
            "cite_spans": [
                {
                    "start": 248,
                    "end": 251,
                    "text": "[2,",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 252,
                    "end": 255,
                    "text": "26,",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 256,
                    "end": 259,
                    "text": "27]",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [],
            "section": "Data sets"
        },
        {
            "text": "Real gene expression data set of Escherichia coli. E. coli is a well-studied organism in literature. The E. coli data set considered here is retrieved from the DREAM5 network inference challenge [6] . The complete data set of E. coli consists of 4511 genes and is generated from 805 microarray chip experiments. We have extracted the data corresponding to the time series experiments. The different time series contains 618 time points in total for 4511 genes. Then, to extract a sub-network, 400 genes are sampled randomly from 4511 genes. In the sub-network of 400 genes, only 236 are the participating genes (i.e., either outdegree > 0 or in-degree > 0 or both) and contains 257 edges. Finally, the time series data corresponding to these 236 genes is extracted. For the experiment, we used this sampled sub-network of 236 genes containing 257 edges and 38 TFs. We have used the known 38 TFs as background knowledge in our inference approach to restrict the edges in the inferred network.",
            "cite_spans": [
                {
                    "start": 195,
                    "end": 198,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Data sets"
        },
        {
            "text": "A Petri Net (PN) [28, 29] is a directed bipartite graph that can be used to model system behaviour. The concept of the Petri net originated from Carl Adam Petri's dissertation [30] in 1962. It contains two types of nodes: place nodes that represent components and transition nodes that represent interactions between the components. Each place contains tokens that represent the discretized amount of the component. A particular distribution of tokens over all places represents the marking of the net, which reflects the state of the system. Each transition has some input place and some output place. Directed arcs go from input place to transition and from transition to output place. Sufficient tokens in the input place enable the transition to fire and produce tokens at output place. Thus, the input place is considered as a pre-condition which, when satisfied, enables the transition to fire (or event to happen) and produce post-condition in the form of output place. The flow of tokens represents the underlying dynamics of the system, which makes it a visual tool to understand the functioning of a system.",
            "cite_spans": [
                {
                    "start": 17,
                    "end": 21,
                    "text": "[28,",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 22,
                    "end": 25,
                    "text": "29]",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 176,
                    "end": 180,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "Petri nets"
        },
        {
            "text": "Petri nets have been employed by Durzinsky et al. for the reconstruction of signal transduction as well as gene regulatory networks [31] . They further extended their work and proposed an extended Petri Net model to model biochemical processes that involve catalytic activities along with the consumption and production of components [32, 33] . The extended Petri net structure contains additional control nodes (to represent catalysts) that connect to transition nodes using special arcs known as read arc (represents activation) and write arc (represents inhibition). Fig 1B illustrates the structure of Petri net and extended Petri net for a biochemical reaction given in Fig 1A. A Logic Guarded Transition System (LGTS) [34] is a logic-based transition system proposed as a generalization of Petri nets in the sense that it allows constraint guard on each transition (see Fig 1C) . Constraint guards contain constraints that should be fulfilled in order to the transition to fire. The extended Petri net model and the LGTS are both deterministic discrete models. The use of the extended Petri net model and the LGTS system for biochemical reactions are advantageous over other computational models since they facilitate the inclusion of external conditions required for the reactions to happen in the form of control nodes and constraint guards. In the LGTS system, constraint guards can also be used for the incorporation of prior knowledge about the system which can help constrain the solution space.",
            "cite_spans": [
                {
                    "start": 132,
                    "end": 136,
                    "text": "[31]",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 334,
                    "end": 338,
                    "text": "[32,",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 339,
                    "end": 342,
                    "text": "33]",
                    "ref_id": "BIBREF32"
                },
                {
                    "start": 724,
                    "end": 728,
                    "text": "[34]",
                    "ref_id": "BIBREF33"
                }
            ],
            "ref_spans": [
                {
                    "start": 570,
                    "end": 588,
                    "text": "Fig 1B illustrates",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 675,
                    "end": 682,
                    "text": "Fig 1A.",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 876,
                    "end": 883,
                    "text": "Fig 1C)",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Petri nets"
        },
        {
            "text": "To deal with inherent stochasticity in the biochemical pathways, Vatsa et al. [35] developed a probabilistic extension of the LGTS model, Probabilistic Logic Guarded Transition System (PLGTS), for the network inference of biochemical networks such as signalling networks and metabolic networks. The PLGTS system makes use of the LGTS identifier to identify the transitions of the network and use probabilistic modelling to deal with inherent noise in the data. In PLGTS, each transition node is associated with a probability distribution for its firing. Srinivasan et al. [36] proposed another LGTS based approach for state transition identification in signalling and metabolic networks from noisy data. Though these two probabilistic approaches can work for signalling and metabolic networks, they will not work on gene regulatory networks, since, GRNs differ from signalling and metabolic networks in terms of the components involved as well as their actions.",
            "cite_spans": [
                {
                    "start": 78,
                    "end": 82,
                    "text": "[35]",
                    "ref_id": "BIBREF34"
                },
                {
                    "start": 572,
                    "end": 576,
                    "text": "[36]",
                    "ref_id": "BIBREF35"
                }
            ],
            "ref_spans": [],
            "section": "Petri nets"
        },
        {
            "text": "Biochemical reactions (involved in metabolic and signalling networks) are represented as consumption and production of components, and they happen instantaneously. Therefore, a reaction is modelled using a single transition node in the PLGTS learning approach. In GRNs, however, components are involved in regulatory activities, and no consumption of components takes place. Such regulatory actions can be modelled in the PLGTS, using only control and output places. But unlike signalling and metabolic networks, where a decrease in a protein (or metabolite) concentration represents its consumption, in gene expression data, a decrease in a gene expression level represents gene decay. Moreover, gene expression and gene decay are two separate processes in gene regulation that happen in parallel and thus cannot be modelled using a single transition node in the PLGTS approach. Therefore, the PLGTS approach cannot be used for the inference of GRNs. Considering these specifications, the aim is to develop a Petri net-based approach for GRN inference where gene expression and gene decay are modelled as separate processes.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Petri nets"
        },
        {
            "text": "Depending upon the characteristics of gene regulatory pathways, we have made certain assumptions for the proposed inference approach.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumptions for GRN inference approach"
        },
        {
            "text": "Assumption 1: Stochasticity GRNs are inherently stochastic; that is, there are fluctuations in the process of gene regulation in GRNs. Considering this, the inference approach is designed to be probabilistic in nature to capture the underlying stochasticity from the expression data.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumptions for GRN inference approach"
        },
        {
            "text": "Assumption 2: First-order Markov process In GRN, the regulation of genes takes place in a time series order-when the regulator gene is accumulated in sufficient quantity and activated, then the regulation process initiates, and the gene expression begins to happen. Thus, the regulation of a gene depends on the state of the regulator gene at the previous time point. Thus, the GRN is assumed to be following the first-order Markov process.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumptions for GRN inference approach"
        },
        {
            "text": "Assumption 3: Discrete model to capture state change",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumptions for GRN inference approach"
        },
        {
            "text": "The gene regulation initiates after the concentration of the regulator gene reaches a threshold, and the regulator gene becomes active [21] . The ON and OFF state of genes at the abstract level can be best monitored in discretized data. The time series discretized data gives us the complete picture of state changes of all gene expression levels. In this work, we have worked our approach with 2-bin (low and high), and 3-bin (low, medium, high) discretized levels of expression data.",
            "cite_spans": [
                {
                    "start": 135,
                    "end": 139,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [],
            "section": "Assumptions for GRN inference approach"
        },
        {
            "text": "Assumption 4: Restricted number of regulator genes In a GRN, a gene can regulate the expression of many target genes but it is unlikely that a large number of regulator genes regulate the expression of a particular target gene. That is, each gene is regulated by a few regulator genes. Thus, our model assumes that each gene has a restricted number of regulators. For this reason, in the case of large gene data sets, appropriate thresholds are used on the number of regulators for each target gene, and a final set of edges is inferred.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assumptions for GRN inference approach"
        },
        {
            "text": "The proposed network inference approach, Probabilistic Extended Petri Net for Gene Regulatory Network (PEPN-GRN) is based on probabilistic extended Petri net model that uses logic rules to represent the underlying mechanism of production and decay of genes in a gene regulation process. It identifies the regulator-target gene pairs by looking at the state transition patterns of gene expression levels in the data. For every adjacent state pair, the approach applies the defined logical rules to identify potential regulator-target gene pairs. Gene decay activity is also captured from the data, and its probability is presented explicitly in the inferred network. Fig 2 illustrates an extended Petri net structure of the PEPN-GRN network. Gene regulation is represented using only the control and output places where a control place represents a regulator gene, and an output place represents a target gene. For gene expression and gene decay, we have two types of transition nodes in the PEPN-GRN representation, namely, synthesis transition and decay transition, respectively. The synthesis transition is shown as a hollow transition while the decay transition is shown as a grey-colored transition. The regulatory action of activation (or inhibition) between control and output place is shown by read arc (or write arc), respectively.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 666,
                    "end": 683,
                    "text": "Fig 2 illustrates",
                    "ref_id": "FIGREF7"
                }
            ],
            "section": "Network inference approach"
        },
        {
            "text": "Evidence types and logical rules. In a binary setting, at any pair of adjacent time instants in time series data, a gene can either make a switch or remain constant. Thus, four events are possible:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Network inference approach"
        },
        {
            "text": "Sustained production 1 1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Network inference approach"
        },
        {
            "text": "A gene is said to be produced or synthesized when its expression level makes a transition from OFF to ON state (in a binary setting, 0 to 1). While when a gene is getting produced for some time and has attained some high level of expression, we term that instance as sustained production of a gene. Similarly for decay and sustained decay of gene. In production and decay events, gene expression level changes along with two adjacent time points while in sustained production and sustained decay events, gene expression level remains the same. Each such event in a state pair tells us about the action happening on the gene. By observing these states of gene expressions in a time series data, we can see how a particular gene is evolving. Each of the four events of a gene provides evidence about their potential regulator genes. Thus, they serve as four types of evidence to make predictions about the potential regulators of genes. Earlier work on GRN inference using Petri net modelling [32] has considered only the production of the target gene to identify potential regulator genes. In this work, we extend it by using all four evidence types for making predictions about the potential regulator genes. The inference approach uses logical rules defined for four evidence types on the data to infer regulator-target gene pairs. The logical rules are defined for each evidence type as a background knowledge (see Table 1 for logical rules in a binary setting).",
            "cite_spans": [
                {
                    "start": 991,
                    "end": 995,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                }
            ],
            "ref_spans": [
                {
                    "start": 1417,
                    "end": 1424,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "Sustained decay 0 0"
        },
        {
            "text": "We also used 3-bin discretization of gene expression levels where discretized levels 0, 1, and 2 correspond to three states of a gene: low, medium, and high. In a 3-bin setting, a gene is considered to be produced when it makes a transition to a high state, i.e., either from 0 to 2 or from 1 to 2. Similarly, it is considered decayed when it makes a transition to a low state, i.e., either from 2 to 0 or from 1 to 0. Logical rules we consider as providing evidence in 3-bin cases are as given in Table 2 . Table 1 . Logical rules for each evidence type for 2-bin discretized data.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 498,
                    "end": 505,
                    "text": "Table 2",
                    "ref_id": null
                },
                {
                    "start": 508,
                    "end": 515,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "Sustained decay 0 0"
        },
        {
            "text": "Gene Activation Inhibition Gene Activation Inhibition ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Each column vector X t l represents expression values of p genes at t l time point where l = 1, 2, . . ., n.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Sustained Production evidence Sustained Decay evidence"
        },
        {
            "text": "It basically represents the state of the network at time point t l . For every adjacent state pair i.e., (X t\u22121 , X t ) for t = 2, 3, . . ., n, using logical rules, the method retrieves the edges in the form of (regulator, target, sign) triplets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Sustained Production evidence Sustained Decay evidence"
        },
        {
            "text": "where i, j 2 {1, 2, . . ., p}, sign = {1, 0}, for each evidence e 2 {e1, e2, e3, e4}.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Sustained Production evidence Sustained Decay evidence"
        },
        {
            "text": "Here x i and x j represents regulator gene and target gene respectively. Edge sign 1 and 0 represents activatory and inhibitory edge respectively.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Sustained Production evidence Sustained Decay evidence"
        },
        {
            "text": "Let StatePairs(D) denotes all adjacent state pairs in the data set D,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Sustained Production evidence Sustained Decay evidence"
        },
        {
            "text": "Then, the edge set Edges retrieved from all adjacent state pairs for evidence e is:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Sustained Production evidence Sustained Decay evidence"
        },
        {
            "text": "The edge set corresponding to each evidence type may contain many regulators with both regulation signs for each target gene. Thus, the probability of each regulator-sign pair (x i , sign) is computed for each target gene x j as: Table 2 . Logical rules for each evidence type for 3-bin discretized data.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 230,
                    "end": 237,
                    "text": "Table 2",
                    "ref_id": null
                }
            ],
            "section": "Sustained Production evidence Sustained Decay evidence"
        },
        {
            "text": "Gene Activation Inhibition Gene Activation Inhibition",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Tables show the logical rules used for the four evidence types. In 3-bin discretized data, gene states 0, 1, and 2 represent low, medium, and high state levels, respectively. In each table, the target gene shows its state transition at adjacent time points as per the evidence type. Like in the first table, the state transition of the target gene from low/medium (0/1) to high (2) represents its production. Each table shows where the numerator represents the count of the edge (x i , x j , sign) in the edge set for evidence e and denominator represents the count or the number of times the target gene x j was present in evidence e. For instance, for decay evidence DE, C DE (x j ) represents count of the number of times the target gene x j makes the transition 1 ! 0 in all state pairs in data D. The final score for each edge is computed by taking the average of all evidence type probabilities:",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 409,
                    "end": 425,
                    "text": "Each table shows",
                    "ref_id": null
                }
            ],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "In cases where the triplet (x i , x j , sign) is present in the edge set corresponding to evidence let us say e1 but absent in evidence e2, the probability of the triplet for evidence e2 is taken to be 0 while computing the score. Thus for any gene pair even if any of the evidence types is missing from the data, still all evidence types are considered while computing the final score for the edge.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "The edge set returned after this step contains edges with their scores. In the final step of the PEPN-GRN approach, regulation sign selection is made for all edges. For edges with different scores across two signs, the higher score triplet is selected. In a GRN, any regulator gene can either positively regulate the target gene or negatively regulate it but cannot have both regulations. Therefore, the edges with the same score across two signs are discarded, as this signifies a clear case of a false positive. The final edge set contains the edges with a single regulation sign. The score of each edge represents its significance, the higher the score, the more significant is the edge. It should be noted that, here the score of an edge does not represent the probability with which the edge should be present in the network but represents the probability of the edge containing a particular regulation sign assuming that the edge is present. Thus, the score of an edge across two regulation signs sums up to be 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "The decay probability of each gene x i is computed as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "where the numerator represents the decay count of the gene x i and the denominator represents the occurrence count of the gene x i . If the Difference matrix Diff of the time series data D is defined as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Each i th row in the difference matrix, Diff(i,:) shows the difference of expression values of x i gene at adjacent time points. Therefore,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "The estimated decay probability of each gene shows how often the gene decays in the given data set. PEPN-GRN_v1. In the first variant, the final score of an edge is computed by taking the average of all evidence probabilities. No other weights are used in the score computation. This is termed as an unweighted aggregation basis of probabilities.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "PEPN-GRN_v2. In the second variant, instead of individual evidence probabilities, we use raw counts of evidence types for score computation. This variant is termed as a weighted aggregation of probabilities. Aggregation is done as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Where the numerator refers to the sum of counts of an edge in each evidence e and the denominator refers to the sum of counts of the target gene in each evidence. This way of aggregation For each state pair taken at adjacent time points from the discretized data, logical rules of evidence types are applied that return a set of edges with their evidence counts. Evidence probabilities are computed using these evidence counts. Next, score computation is done using different aggregation methods. Finally using a suitable threshold on the edge scores, a PEPN-GRN network is inferred.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "https://doi.org/10.1371/journal.pone.0251666.g003",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "allows some kind of weights on the evidence probabilities though we are not using any weights specifically here. The weighting is in accordance with the occurrence frequency of each evidence. Evidence that occurs less often will contribute less in the overall score, while high-frequency evidence will contribute more. PEPN-GRN_v3. The above two variants assumed that all evidence types contribute equally to the activation and inhibition of a gene. However, there is a possibility that some evidence types are more informative about gene activation or inhibition than other evidence types. Using this motivation, we propose the third variant, a supervised learning approach of the PEPN-GRN method that assigns weight to each evidence type as per their usefulness for predicting an inferred activation or inhibition interaction. The PEPN-GRN_v3 first identifies the individual evidence probabilities and then employs a supervised learning approach to learn the weights for each evidence type. After identifying the weights, a final edge probability (score) is computed using the weights and the individual evidence probabilities. The score computed for each edge represents the probability of an edge being present in the network.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "We used the Logistic Regression (LR) model to learn the evidence weights separately for activation as well as inhibition edges. The model uses the logistic function to predict the value of probability between 0 and 1. The logistic function is defined as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "where x i and w i represents the i th feature and coefficient for i th feature respectively for i = 1, . . ., n and n is the total number of features. w 0 represents the bias. \u03c3(z) represents the predicted probability of an example to lie in class 1. This probability is computed for all m examples.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "In our case, m is the total number of possible edges, the x i represent the different evidence type probabilities, and the w i represent their coefficients/weights. Here, since we have four types of evidence, i ranges from 1 to 4. The logistic regression model is applied to learn the weight w i for each evidence type on the training edge set. The weights are learned using the evidence probabilities of edges (features) and their class labels (edge present or absent). Thus, if the training set consists of m edges (examples), the class label would be a vector Y T of size m \u00d7 1, and the feature matrix would be a matrix X of size m \u00d7 4. The class label vector contains entries either \"0\" or \"1\" that represent the absence or the presence of edges, respectively. Upon training, the logistic regression model returns a vector W = [w 0 , w 1 , . . ., w 4 ]. The trained model is applied to the feature matrix X' of the test edges to predict the probability of each edge having class label 1. A probability threshold of 0.5 is used to classify the test edges into the two classes. Examples with predicted probability P > 0.5 are classified as class 1 and others as class 0.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "For the ideal performance of the LR model, the class distribution of the examples in the training set should be balanced; that is, the number of positive and negative examples should be similar. However, in real scenarios like GRN inference, often, the case of imbalanced data sets is found. In a gene regulatory network, a single gene can regulate many other genes, but it is unlikely that a gene is regulated by many other regulator genes at the same time. Therefore, in a GRN of a large number of genes, only a few regulator genes (TFs) regulate the target genes. Thus the number of positive examples (actual interactions) is less in comparison to the number of negative examples (non-existent interactions). In the training data, if the class distribution is too skewed, and the negative examples are over-represented, the learned weights will tend to be biased towards the negative examples, and the prediction accuracy would decrease. Therefore, we have used the Synthetic Minority Oversampling Technique (SMOTE) resampling technique to make the data set balanced. Synthetic Minority Oversampling TEchnique (SMOTE) [37] is an upsampling technique where new examples from the minority class are generated synthetically.",
            "cite_spans": [
                {
                    "start": 1121,
                    "end": 1125,
                    "text": "[37]",
                    "ref_id": "BIBREF36"
                }
            ],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "The pseudo code for the PEPN-GRN_v3 approach is given as Algorithm 1. The algorithm uses the function edge_evidence_probability which is given as Algorithm 2. Functions of different evidence types in Algorithm 2 use logical rules given in Tables 1 and 2 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 239,
                    "end": 253,
                    "text": "Tables 1 and 2",
                    "ref_id": null
                }
            ],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Algorithm 1: PEPN-GRN_v3",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Data: Time series data set D \u00bc fX t 1 ; X t 2 ; . . . ; X t n g; \u22b3 where each column vector X t l represents expression values of p genes at t l time point where l = 1, 2, . . ., n.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Result: Ranked edges of form (r,t,s,score); \u22b3 where r is regulator gene, t is target gene, s is regulation sign, and score is significance score. . . . ; X t n g Predefined regulator genes regulators Result: Edges of form (R,T,S,Pr); \u22b3 where R is a column vector of regulator genes, T is a column vector of target genes, S is a column vector of regulation sign, and Pr is a matrix of evidence probabilities for each edge. 1 S \u00bc f\u00f0X t 1 ; X t 2 \u00de; \u00f0X t 2 ; X t 3 \u00de; . . . ; \u00f0X t n\u00c0 1 ; X t n \u00deg; \u22b3 S is a set of adjacent state pairs 2 for each state pair s i 2 S where 1 \ufffd i \ufffd |S| 3 do 4",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Set prod_edges = ;, decay_edges = ;, sus_prod_edges = ;, sus_de-cay_edges = ; 5",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Difference vector d \u00bc X t i\u00fe1 \u00c0 X t i 6",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Find gene indexes prod_idx where d > 0 7",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "for each idx 2 prod_idx do 8 (reg, sign) = function prod_evidence(X t i , idx, regulators) ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Production evidence Decay evidence"
        },
        {
            "text": "Yong Li et al. [38] discussed different discretization methods that can be used for gene expression data. In this work, we have used three discretization methods namely, Equal Width Discretization (EWD), Equal Frequency Discretization (EFD), and the K-means method since they discretize the data along each gene level. The methods discretize each gene's expression values into k intervals, where 1 < k < n where n is the number of time points in the data.",
            "cite_spans": [
                {
                    "start": 15,
                    "end": 19,
                    "text": "[38]",
                    "ref_id": "BIBREF37"
                }
            ],
            "ref_spans": [],
            "section": "Discretization methods"
        },
        {
            "text": "Define the data matrix D as a p \u00d7 n matrix where p is the number of genes and n is the number of time points in all time series. D(p,:) denotes the expression levels of p th gene at all the time points in all time series. Let k be the number of intervals into which we want to discretize our data. Setting the value of k to 2 leads to binary discretization, setting it to 3 leads to ternary discretization and so on. The number of intervals is a user-defined parameter.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discretization methods"
        },
        {
            "text": "EWD method [39] [40] [41] discretizes the expression levels of each gene into k intervals such that each interval has the same width. The width threshold is computed as Thresh \u00bc \u00f0max\u00f0D\u00f0p; :\u00de\u00de \u00c0 min\u00f0D\u00f0p; :\u00de\u00de\u00de k \u00f013\u00de",
            "cite_spans": [
                {
                    "start": 11,
                    "end": 15,
                    "text": "[39]",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 16,
                    "end": 20,
                    "text": "[40]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 21,
                    "end": 25,
                    "text": "[41]",
                    "ref_id": "BIBREF40"
                }
            ],
            "ref_spans": [],
            "section": "Discretization methods"
        },
        {
            "text": "For any k ranging from 2 to l where l < n, interval 1 threshold \u00bc min\u00f0D\u00f0p; :\u00de\u00de \u00fe Thresh [39] [40] [41] discretizes the data matrix D by first sorting each gene row D(p,:) and then dividing it into k intervals such that each interval contains expression levels with the same frequency.",
            "cite_spans": [
                {
                    "start": 88,
                    "end": 92,
                    "text": "[39]",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 93,
                    "end": 97,
                    "text": "[40]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 98,
                    "end": 102,
                    "text": "[41]",
                    "ref_id": "BIBREF40"
                }
            ],
            "ref_spans": [],
            "section": "Discretization methods"
        },
        {
            "text": "K-means method [42] discretizes the data matrix D by applying K-means clustering on each gene row D(p,:) such that the neighboring expression levels are combined in the same cluster.",
            "cite_spans": [
                {
                    "start": 15,
                    "end": 19,
                    "text": "[42]",
                    "ref_id": "BIBREF41"
                }
            ],
            "ref_spans": [],
            "section": "Discretization methods"
        },
        {
            "text": "For performance assessment of inference models, two evaluation metrics are used For the experiments on the DREAM4 challenge data sets, we have used the scoring function provided by the DREAM organizers in the DREAMTools package [43] . The scoring function returns AUROC and AUPR scores that are computed as the average of the log of p-values of AUROC and AUPR of five networks respectively. AUROC score and AUPR score represents the single overall score of AUROC and AUPR obtained over n networks. The AUROC and AUPR scores are computed as:",
            "cite_spans": [
                {
                    "start": 228,
                    "end": 232,
                    "text": "[43]",
                    "ref_id": "BIBREF42"
                }
            ],
            "ref_spans": [],
            "section": "Assessment"
        },
        {
            "text": "The final score is the mean of AUROC score and AUPR score. It denotes the overall performance of the inference method.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Assessment"
        },
        {
            "text": "We first evaluated the performance of the PEPN-GRN variant methods and other inference methods on the DREAM4 in silico network challenge data sets. We then perform the evaluation on real expression data set of E. coli taken from the DREAM5 Challenge.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "Other network inference methods used for performance evaluation on the DREAM4 data set are Bayesian-based scanBMA [44] , regression-based DBN inference method G1DBN [45] , Random Forest-based dynGENIE3 [17] , and mutual information-based ARACNE, CLR, and MRNET [46] . Specifically, we have used the G1DBN method from the G1DBN package [47] , scanBMA from networkBMA package [48], mutual information-based methods from the minet package [49], and an R implementation of dynGENIE3 [50] . Note that we have not taken the metrics AUROC and AUPR from other papers but re-run these methods on our own to obtain the score matrix using each inference method. We have then used the DREAM-Tools package to assess the inferred networks. For details on the application of these inference methods, please refer to data in S1 Appendix.",
            "cite_spans": [
                {
                    "start": 114,
                    "end": 118,
                    "text": "[44]",
                    "ref_id": "BIBREF43"
                },
                {
                    "start": 165,
                    "end": 169,
                    "text": "[45]",
                    "ref_id": "BIBREF44"
                },
                {
                    "start": 202,
                    "end": 206,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 261,
                    "end": 265,
                    "text": "[46]",
                    "ref_id": "BIBREF45"
                },
                {
                    "start": 335,
                    "end": 339,
                    "text": "[47]",
                    "ref_id": null
                },
                {
                    "start": 479,
                    "end": 483,
                    "text": "[50]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "We first compared the performance of PEPN-GRN variant methods and other inference methods on discretized DREAM4 data sets. Data sets are discretized into 2 bins (binary) and 3 bins (ternary) using three chosen discretization methods, namely, EFD, EWD, and K-means. Second, to evaluate the impact of discretization, we compared the performance of inference methods (other than PEPN-GRN variant methods) on continuous and discretized DREAM4 data sets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DREAM4 in silico network challenge data set"
        },
        {
            "text": "Here, in the PEPN-GRN_v3 variant, k-fold cross-validation method is used with k = 5 to divide the data sets into the train and test sets. For each fold f, in 5-fold cross-validation where f = 1, 2, . . ., 5, the f th network is taken as the test network and the rest of the networks are considered as train networks. First, for each network in the train and test sets, evidence type probabilities are computed for each edge in the network. In 10-gene data sets, each network contains a total of 90 edges (excluding the self edges). When both regulatory signs (+ and -) are considered, total possible edges become 180, 90 activation edges and 90 inhibitory edges. In any fold in 5-fold cross-validation, the train set consists of four networks. Therefore, the feature matrix (made of evidence probabilities) contains 180 \ufffd 4 = 720 rows. Each row corresponds to the features of an edge. The feature matrix of the test set contains 180 rows. Since the role of each evidence type may differ for the activatory and inhibitory regulations, two logistic regression models are learned for the two sets of edges: activatory and inhibitory.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DREAM4 in silico network challenge data set"
        },
        {
            "text": "The performance of the three variants of the PEPN-GRN approach is compared on the DREAM4 data sets using average AUROC and average AUPR metrics (averaged over five networks) (see Table 3 ). Note that here, we have used scores of all gene pairs to compute the AUROC and AUPR metrics, and no thresholding is done for the selection of the final set of gene pairs since the number of genes is less in the DREAM4 in silico networks.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 179,
                    "end": 186,
                    "text": "Table 3",
                    "ref_id": null
                }
            ],
            "section": "DREAM4 in silico network challenge data set"
        },
        {
            "text": "The performance comparison of the PEPN-GRN variants on 2-bin and 3-bin discretized data sets shows an improvement on 3-bin as compared to 2-bin. The average AUROC increases by 6-11%, and the average AUPR increases by 3-6%. Comparing the performances of the PEPN-GRN variants in the 2-bin case, PEPN-GRN_v3 obtained the best performance with an average AUROC of 0.678 and AUPR 0.39 on 10-gene K-means data set while obtaining an average AUROC of 0.702 and AUPR of 0.114 on 100-gene EFD data set. In the 3-bin case, PEPN-GRN_v3 obtained average AUROC and AUPR of 0.71 and 0.4, respectively in the 10-gene EFD data set. Almost similar performance is obtained by the other two variants. However, on 100-gene data sets, PEPN-GRN_v3 performs the best with AUROC of 0.728 and AUPR of 0.132 on the EFD data set. Thus, on small data sets (like 10-gene), the PEPN-GRN_v3 gives almost a similar performance as the other two variants, while as the data set size increases (100-gene), the performance becomes much improved. The improvement is likely as the performance of a supervised learning model improves with the increase in data. Among the three discretization methods used, it is seen that the PEPN-GRN variants give the best results on EFD data sets and perform worst on EWD data sets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DREAM4 in silico network challenge data set"
        },
        {
            "text": "Comparative analysis of the performance of the PEPN-GRN variants and other inference methods on discretized DREAM4 data sets is shown in Fig 4. The bar plots show that all inference methods performed better on 3-bin discretized data than on 2-bin data. On 10-gene data sets, in the case of 2-bin discretization, the best performing method is the G1DBN with a score of 3.39, while in the case of 3-bin discretization, the best performing method is dynGenie3 with an overall score of 3.61. Both methods obtained their best performance on K-means discretized data sets. On 100-gene data sets, the best performance is obtained by PEPN-GRN_v3 in both 2-bin and 3-bin discretization with a score of 21.57 and 25.38, respectively. Both the scores are obtained on EFD discretized data sets. On EWD and K-means data sets, the best performance is achieved by G1DBN in both 2-bin and 3-bin cases. Thus, on 10-gene data sets, two top-performing methods are G1DBN and dynGenie3, while on 100-gene data sets, two top-performing methods are G1DBN and PEPN-GRN_v3.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 137,
                    "end": 143,
                    "text": "Fig 4.",
                    "ref_id": "FIGREF9"
                }
            ],
            "section": "DREAM4 in silico network challenge data set"
        },
        {
            "text": "Examining the performance of PEPN-GRN_v3, in the EFD 2-bin 10-gene data case, the performance of the PEPN-GRN_v3 is even lower than the other two PEPN-GRN variants; however, in the EFD 3-bin 10-gene data case, the performance is better than the two variants. This suggests that increasing the number of bins also helps in the predictions in the PEPN-GRN_v3 approach. The reason for relatively poor performance on 10-gene data as compared to the 100-gene data is that the model could not train well with fewer data. A sufficiently large amount of training data is crucial for supervised learning approaches. Thus the PEPN-GRN_v3 method is expected to perform better when trained on the large labeled data sets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DREAM4 in silico network challenge data set"
        },
        {
            "text": "From the 100-gene results, the best discretizing method for the G1DBN and the dynGenie3 is K-means (though their performance on EFD is also quite close) and for PEPN-GRN variants, it is EFD. Other inference methods such as ScanBMA, and mutual information-based methods also performed their best on the EFD discretized data. It was observed that all the methods have the least performance on the EWD data in the 100-gene case. Thus, EFD and Kmeans proved to be good discretization methods. Table 3 . Performance of the three variants of the PEPN-GRN approach on EFD, EWD, K-means discretized DREAM4 data sets. Average baseline AUPRs for 10-gene and 100-gene data sets are 0.158 and 0.02 respectively. In the PEPN-GRN_v3 approach, final scores obtained for the edges are their probabilities of being present in the network. The likelihood assessment of inferred edges in learned networks reflects the probabilistic aspect of the approach. Likelihood assessment of the learned network with respect to the ground truth network is done on 2-bin and 3-bin EFD discretized For different discretization methods, EFD, EWD, and K-means, the prediction performance of directed unsigned networks is shown as scores for 2-bin and 3-bin discretized 10-gene and 100-gene DREAM4 networks. The performance of all inference methods on 3-bin discretized data sets outperformed the performance on 2-bin discretized data sets. On 10-gene data sets, the best performing methods are G1DBN (in case of 2-bin discretization) with a score of 3.39, and dynGenie3 (in case of 3-bin discretization) with an overall score of 3.61. On 100-gene data sets, the best performing method is PEPN-GRN_v3 in both 2-bin and 3-bin discretization with a score of 21.57 and 25.38, respectively. 100-gene DREAM4 networks (see Table 4 ). Between 2-bin and 3-bin data sets, for most networks, likelihood is lower in the case of 2-bin data sets which signifies better edge prediction on 3-bin data sets as compared to 2-bin data. On network 3, the likelihood of ground truth network is lower for 2-bin data but the likelihood of edges present in ground truth network is lower for 3-bin data which shows that edges present in the ground truth network are predicted with higher accuracy in 2-bin data for this particular network. Such kind of assessment cannot be done on other competing methods where inferred edges are ranked using some different kinds of scores. For instance, the G1DBN approach ranks the edges based on their p-values which are not exactly probabilities.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 489,
                    "end": 496,
                    "text": "Table 3",
                    "ref_id": null
                },
                {
                    "start": 1782,
                    "end": 1789,
                    "text": "Table 4",
                    "ref_id": null
                }
            ],
            "section": "DREAM4 in silico network challenge data set"
        },
        {
            "text": "Impact of discretization. Data discretization leads to information loss to some extent and hence, likely impacts the performance of the inference technique. To estimate the impact, we have compared the performance of inference methods (other than the PEPN-GRN variant methods) on continuous data and discretized data. We first analyzed the results on the continuous DREAM4 data sets, as shown in Table 5 . According to the overall score metric achieved by all methods, the G1DBN method performs best on 10-gene data, where it obtained an overall score of 3.79 while the dynGenie3 approach obtained a slightly lower score of 3.68. On 100-gene data, the dynGenie3 method achieved the highest overall score of 37.96, while the G1DBN scores a much lower score of 27.8. Thus on the continuous data, the best performing inference technique is dynGenie3.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 396,
                    "end": 403,
                    "text": "Table 5",
                    "ref_id": null
                }
            ],
            "section": "Method EFD 2-bin EWD 2-bin K-means 2-bin EFD 2-bin EWD 2-bin K-means 2-bin"
        },
        {
            "text": "To examine the impact of data discretization on the performance of inference methods, the bar plot in Fig 5 compares the average AUROC and AUPR obtained on continuous as well as discretized DREAM4 data sets. Note that since in the case of discretized data sets, G1DBN and Table 4 . Likelihood assessment of inferred edges on EFD discretized 100-gene DREAM4 networks using the PEPN-GRN_v3 approach.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 102,
                    "end": 116,
                    "text": "Fig 5 compares",
                    "ref_id": "FIGREF11"
                },
                {
                    "start": 272,
                    "end": 279,
                    "text": "Table 4",
                    "ref_id": null
                }
            ],
            "section": "Method EFD 2-bin EWD 2-bin K-means 2-bin EFD 2-bin EWD 2-bin K-means 2-bin"
        },
        {
            "text": "Likelihood of only edges present in ground truth network The performance is evaluated using the overall score metric computed on all five data sets of 10-gene and 100-gene networks. Numbers in bold represent the highest score achieved.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Likelihood of ground truth network"
        },
        {
            "text": "https://doi.org/10.1371/journal.pone.0251666.t005",
            "cite_spans": [],
            "ref_spans": [],
            "section": "2-bin data 3-bin data 2-bin data 3-bin data"
        },
        {
            "text": "dynGenie3 achieved the best results on K-means data while scanBMA and mutual information-based methods performed their best on EFD data, here in the figure we have compared their performance on the continuous data with the discretized data on which they perform their best. On 100-gene data, it is seen that the performance of the dynGenie3 method dropped drastically on the discretized data with a decrease in performance of around 6% AUROC and 9% AUPR. The performance of all other methods is not impacted much, and only a drop of 1-2% is noticed in AUROC and AUPR. On 10-gene data, the accuracy of scanBMA is seen to be reduced by \ufffd4% AUROC and AUPR, and in the case of G1DBN, it is reduced by 8% AUPR. Since dynGenie3 and G1DBN, both are regression-based techniques, they work best with continuous data and hence seen the major drop in performance on discretized data. Though on 100-gene data, the performance of the G1DBN method is decreased by only 2% AUPR. Thus, the G1DBN is likely to perform well on discretized data if a large number of time series is available. Mutual information methods are seen to be the most unaffected by the discretization. Thus, though information loss is incurred by data discretization, most of the methods do not seem to be affected much by it.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "2-bin data 3-bin data 2-bin data 3-bin data"
        },
        {
            "text": "We applied the PEPN-GRN variant methods and the G1DBN method to infer the real network of organism Escherichia coli. E. coli is a well-studied organism in literature and its known biological knowledge can be used as an aid in network inference.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Real gene expression data sets"
        },
        {
            "text": "For the experiment, we used a sampled sub-network of E. coli having 236 genes, 257 edges, and 38 TFs. For the PEPN-GRN_v3 method, we sub-sampled another small network from the large network of 4511 genes for the training purpose. The train network contains 484 genes and 671 edges. For testing, we used the same sub-sampled network containing 236 genes and Although the PEPN-GRN_v3 method generates two feature matrices (feature matrix contains four evidence probabilities of all gene pairs), one for activation and one for inhibition edges, here, for the model of edges vs. non-edges, both feature matrices will be equivalent. This is explained as follows: Suppose for an edge g1!g2, we have evidence probabilities for activation regulation (sign +) as {p1, p2, p3, p4} and similarly for inhibitory regulation (sign -), we have {q1, q2, q3, q4}. Suppose g1!g2 exists in ground truth network with + sign. Therefore, the class label for g1!g2 with + sign will be 1 (considered as positive example) while for edge g1!g2 with-sign will be 0 (considered as negative example). Thus logistic regression model can be applied on both edges to separately learn weights for activation and inhibition edge. Now when we do not have information about the regulation sign of edges in the ground truth network, we cannot say which probability set to take as a positive example and which one to take as a negative example. We will basically have 8 features (evidence probabilities) for the edge g1!g2, out of which the first four features are of activating edge and the last four are of inhibiting edge. Now the first four features will be dependent on the last four features, e.g., if the production evidence probability (p1) for the activation edge is 0.7, for the inhibition edge, it will be 0.3 (q1), going by the logical rules of the PEPN-GRN method. Since in regression models, the features in training data of a model should be independent of each other, we can use any one of the evidence probabilities set as the feature set. Therefore for our experiment, we used a single 4-feature PEPN-GRN_v3 method for application on the E. coli data set.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Real gene expression data sets"
        },
        {
            "text": "The performance of the G1DBN and PEPN-GRN variant methods is evaluated on the subnetwork and summarized in Table 6 . In the G1DBN method, a threshold \u03b11 is used to control the number of regulators for each target gene, and a threshold \u03b12 is applied on the remaining edges to select the top significant edges having False Discovery Rate (FDR) \ufffd 0.01. Here, thresholds \u03b11 = 1 \u00d7 10 \u221210 and \u03b12 = 7.1 \u00d7 10 \u22123 are chosen for continuous data and \u03b11 = 1 \u00d7 10 \u22126 and \u03b12 = 7.7 \u00d7 10 \u22123 for discretized data sets. To understand the approach to choose these thresholds, refer to S1 Appendix. Using the same assumptions, we have also used two thresholds for our PEPN-GRN methods to select the final set of edges. After obtaining the ranked edges using the PEPN-GRN method, the first nReg threshold is used to control the number of regulators for each target gene, and then threshold th is used to select the significant edges. We did not use heuristic approaches to select these thresholds. Here, the nReg threshold is chosen to be 3 to limit the number of regulator genes for each target gene to 3. For threshold th, different threshold values are tried and we chose th = 0.7, 0.7, and 0.6 for PEPN-GRN_v1, PEPN-GRN_v2 and PEPN-GRN_v3 respectively to select edges in top 200-300 range. Table 6 (A) summarizes the number of inferred edges for each method. The performance of the G1DBN method is also compared for the continuous data as well as the discretized data. Using G1DBN, the number of inferred edges on the continuous data is 142 containing 11 true edges. On the K-means 3-bin discretized data set, the method retrieved 333 edges with 18 true edges. In the case of the PEPN-GRN variant methods, on the EFD 3-bin data, the PEPN-GRN_v1 inferred 209 edges with 8 true edges, PEPN-GRN_v2 obtained 341 edges with 15 true edges, and PEPN-GRN_v3 inferred 259 edges with 13 true edges. The performance of the methods is compared using the average rank metric (see Table 6 (B)). The method's performance is considered good when the average rank of random edges is higher, and that of true edges is lower. On the EFD 3-bin data set, the performance of G1DBN and PEPN-GRN_v3 is comparable: the average rank of 122/98 in the case of G1DBN and 121/105 in PEPN-GRN_v3. On the K-means 3-bin data set, G1DBN performed better with the average rank of 162/81. In the case of K-means data set, the improvement is also due to the fact that more edges are inferred in this case and thus the average rank of random edges increased. Also, it has been observed that though the number of inferred edges for the methods lies in the 300s, the number of shared edges between the methods is not significantly large.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 107,
                    "end": 114,
                    "text": "Table 6",
                    "ref_id": "TABREF5"
                },
                {
                    "start": 1273,
                    "end": 1280,
                    "text": "Table 6",
                    "ref_id": "TABREF5"
                },
                {
                    "start": 1950,
                    "end": 1957,
                    "text": "Table 6",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "Real gene expression data sets"
        },
        {
            "text": "In the PEPN-GRN_v3 method, to understand the contribution of different evidence types in the activatory and inhibitory regulation of the gene, we analyzed the learned weights of the model in each EFD discretized DREAM4 data set (see Table 7 (A)). The table shows for different EFD discretized data sets, the learned weights aggregated across all folds of 5-fold crossvalidation. It is seen that all data sets except for the EFD 2-bin 10-gene data contain the same pattern of weight assignment to each evidence type. Looking at the signs of weights in activation edges, production, decay, and sustained decay evidence types increase the odds of the correct edges while the negative weight for sustained production evidence type decreases the odds of the correct edges. Similarly, for inhibition edges, production evidence, decay evidence, and sustained production evidence types obtained positive weights, thus contribute to increasing the odds of correct edges while sustained decay evidence decreases the odds. Among different evidence types, the sustained decay evidence contributes the most for the activation edges since it attains the highest weight, and sustained production evidence is more informative for inferring inhibition edges. The contribution of different evidence types in activation regulation and inhibition regulation of genes is depicted pictorially in Fig 6 where the four evidence types are shown as different color-coded links between regulator and target gene and the width of a link represents the learned weight of the corresponding evidence type. Higher weights for sustained production and sustained decay evidence types than for production and decay evidence types could also be because the instances of sustained production or sustained decay are seen to be much more than the switch from OFF to ON state for production and from ON to OFF state for the decay of gene expressions in the data. The contribution of evidence types can be associated with the underlying relationship shared by regulators and target genes. Yu et al. [51] have shown that the single input motifs exhibit time-shifted and inverted time-shifted relationships with their target genes in the S. cerevisiae gene network. In some way, the learned weights reflect these relationships between regulators and their target genes. For instance, for activation edges, we assumed in the logical rule defined for the production evidence type that the TF is ON (1) at time t-1 while the target gene transitions from OFF (0) to ON (1) state between adjacent time points. This reflects the timedelay or time-shift in the regulatory response of a target gene. In the logical rule of sustained production evidence, we assumed that the TF is ON at time t-1 and the target gene is ON at both time points t-1 and t. Negative weights for this evidence type suggest that our assumption is wrong and TF should be OFF at time point t-1. This can be explained as an inverted timeshifted relationship between TF and target gene where, after a time-delay (explained by production evidence), the relationship got reversed. Similar can be said in the case of inhibition edges as there negative weights are obtained for sustained decay evidence type. However, we obtained different weights on the real E. coli network (see Table 7 (B)). Learned weights for different evidence types reveal that production and sustained production evidence contribute more than decay and sustained decay evidence in the prediction of edges. It should be noted that in E. coli data set, the knowledge of the regulation sign in the ground truth network is missing. So, the learned weights for the E. coli data set reveal the contribution of evidence types for the regulation of gene expression of a target gene by a regulator gene.",
            "cite_spans": [
                {
                    "start": 2058,
                    "end": 2062,
                    "text": "[51]",
                    "ref_id": "BIBREF47"
                }
            ],
            "ref_spans": [
                {
                    "start": 233,
                    "end": 240,
                    "text": "Table 7",
                    "ref_id": "TABREF6"
                },
                {
                    "start": 1374,
                    "end": 1379,
                    "text": "Fig 6",
                    "ref_id": "FIGREF12"
                },
                {
                    "start": 3298,
                    "end": 3305,
                    "text": "Table 7",
                    "ref_id": "TABREF6"
                }
            ],
            "section": "Contribution of evidence types"
        },
        {
            "text": "In this paper, we proposed a probabilistic inference approach, PEPN-GRN for gene regulatory networks from noisy expression data sets. The approach is designed to work on discretized Here w 0 is bias, weight w 1 corresponds to production evidence, w 2 corresponds to decay evidence, w 3 corresponds to sustained production evidence, and w 4 corresponds to sustained decay evidence. time series data sets. The novelty of the proposed approach lies in the four evidence types used for the inference of potential regulators for each target gene. We extended the earlier work done using the PN-based approaches (like Durzinsky et al. [32] ) where only one evidence type related to the production of the gene expression is used for the inference of potential regulators for a target gene. The paper presents three variants of the proposed PEPN-GRN inference approach which differ mainly by the way the different evidence probabilities for an inferred edge are aggregated for score computation. The performance of the variants is evaluated on benchmark in silico data from the DREAM4 challenge and real expression data of organism E. coli taken from the DREAM5 challenge. The experiments show that out of the three variants of the PEPN-GRN approach, PEPN-GRN_v3 performs the best followed by PEPN-GRN_v1 and then PEPN-GRN_v2. The PEPN-GRN_v3 is competitive with other inference methods as well since it outperforms all methods in the case of the DREAM4 data set. The second best performing method is the G1DBN method. On real data set, the performance comparison of two leading methods -the PEPN-GRN_v3 and the G1DBN method-reveals that among the top \ufffd300 inferred edges, both methods infer a small number of true edges (<20), and the number of shared edges by both methods is not large. The inference methods (other than the PEPN-GRN method) considered in the paper infer the directed edges for a given data set. The PEPN-GRN approach extends the results by inferring directed edges along with their regulation signs. In PEPN-GRN_v3, the knowledge of regulation sign of the inferred edges and ground truth edges is used in learning weights of evidence types for activation and inhibition edges. The learned weights in the case of the DREAM4 data set help us understand the time-shifted and inverted time-shifted relationship between regulator and target gene. Thus, different evidence types and the knowledge of regulation sign of edges is used to explain the interplay between regulator and target gene at different time points, providing an insight into the functional understanding of the GRNs.",
            "cite_spans": [
                {
                    "start": 629,
                    "end": 633,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                }
            ],
            "ref_spans": [],
            "section": "Discussion and conclusions"
        },
        {
            "text": "To examine the impact of discretization on inference methods other than the PEPN-GRN, the performance is compared on continuous as well as discretized DREAM4 data sets. The comparative results reveal that not much information loss is incurred by data discretization, and the methods still achieve good accuracy except for the regression-based methods like dynGenie3 and G1DBN. Though the drop in the performance of the G1DBN method is seen on 10-gene networks, the method performed well on 100-gene networks. Thus, the dynGenie3 method is the one most affected by discretization and hence not suitable to use with discretized data sets.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion and conclusions"
        },
        {
            "text": "The application of the PEPN-GRN variant methods on real gene expression data set infers a large number of false positives, along with a few true positives. The performance of the G1DBN method on both continuous and discretized real data set is also quite similar. The results, however, are not surprising, and even the top-performing methods in the DREAM5 challenge that worked well on in silico networks did not achieve good performance on the E. coli data sets [6] . Thus, it requires us to come up with more sophisticated techniques that can include various aspects of the biological subsystems such as scale-free nature, structural properties, motifs, environmental factors, etc. that affect the interactions inside the cell. The current framework of the PEPN-GRN method allows for the addition of prior knowledge to some extent, like setting a maximum possible number of candidate regulators for each gene, and setting which genes can or cannot play the role of a regulator in a particular network. However, adding more domain-specific knowledge to the method would likely be helpful to predict the network more accurately. The Logic Guarded Transition System (LGTS) modeling framework which is a generalized form of an extended Petri net model, facilitates the incorporation of domain-specific knowledge in the form of logical rules. Using the existing knowledge of the subsystem not only helps in accurately inferring the network but also aids in gaining new insights about the dynamics. Thus, adapting the PEPN-GRN approach into the LGTS framework in future work would likely increase the usefulness of the inference approach.",
            "cite_spans": [
                {
                    "start": 463,
                    "end": 466,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Discussion and conclusions"
        },
        {
            "text": "Supporting information S1 Appendix. Application of other inference methods on the DREAM4 data sets. (PDF)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion and conclusions"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Reconstructing gene networks: what are the limits?",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Stark",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Brewer",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Barenco",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Tomescu",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Callard",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Hubank",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Biochemical Society Transactions",
            "volume": "31",
            "issn": "6",
            "pages": "1519--1525",
            "other_ids": {
                "DOI": [
                    "10.1042/bst0311519"
                ],
                "PMID": [
                    "14641103"
                ]
            }
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Revealing strengths and weaknesses of methods for gene network inference",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Marbach",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Prill",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Schaffter",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Mattiussi",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Floreano",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Stolovitzky",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "Proceedings of the National Academy of Sciences",
            "volume": "107",
            "issn": "14",
            "pages": "6286--6291",
            "other_ids": {
                "DOI": [
                    "10.1073/pnas.0913357107"
                ],
                "PMID": [
                    "20308593"
                ]
            }
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Inferring cellular networks-A review",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Markowetz",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Spang",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "BMC Bioinformatics",
            "volume": "8",
            "issn": "6",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/1471-2105-8-S6-S5"
                ],
                "PMID": [
                    "17903286"
                ]
            }
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "How to infer gene networks from expression profiles",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Bansal",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Belcastro",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Ambesi-Impiombato",
                    "suffix": ""
                },
                {
                    "first": "Di",
                    "middle": [],
                    "last": "Bernardo",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "Molecular Systems Biology",
            "volume": "3",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1038/msb4100120"
                ],
                "PMID": [
                    "17299415"
                ]
            }
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Current approaches to gene regulatory network modelling",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Schlitt",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Brazma",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "BMC Bioinformatics",
            "volume": "8",
            "issn": "6",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/1471-2105-8-S6-S9"
                ],
                "PMID": [
                    "17903290"
                ]
            }
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Wisdom of crowds for robust gene network inference",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Marbach",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "C"
                    ],
                    "last": "Costello",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "K\u00fcffner",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Vega",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Prill",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "M"
                    ],
                    "last": "Camacho",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Nature Methods",
            "volume": "9",
            "issn": "",
            "pages": "796--804",
            "other_ids": {
                "DOI": [
                    "10.1038/nmeth.2016"
                ],
                "PMID": [
                    "22796662"
                ]
            }
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Modelling and analysis of gene regulatory networks",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Karlebach",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Shamir",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Nature Reviews Molecular Cell Biology",
            "volume": "9",
            "issn": "10",
            "pages": "770--780",
            "other_ids": {
                "DOI": [
                    "10.1038/nrm2503"
                ],
                "PMID": [
                    "18797474"
                ]
            }
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Genetic Network Modeling",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Van Someren",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Wessels",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Backer",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Reinders",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "Pharmacogenomics",
            "volume": "3",
            "issn": "",
            "pages": "507--532",
            "other_ids": {
                "DOI": [
                    "10.1517/14622416.3.4.507"
                ],
                "PMID": [
                    "12164774"
                ]
            }
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Lessons from the DREAM2 challenges",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Stolovitzky",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Prill",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Califano",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "Annals of the New York Academy of Sciences",
            "volume": "1158",
            "issn": "",
            "pages": "159--195",
            "other_ids": {
                "DOI": [
                    "10.1111/j.1749-6632.2009.04497.x"
                ],
                "PMID": [
                    "19348640"
                ]
            }
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Gene regulatory network inference from sparsely sampled noisy data",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Aalto",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Viitasaari",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Ilmonen",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Mombaerts",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Gon\u00e7alves",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Nature Communications",
            "volume": "11",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1038/s41467-020-17217-1"
                ]
            }
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Inference of Gene Regulatory Network Based on Local Bayesian Networks",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "W"
                    ],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "F"
                    ],
                    "last": "Guo",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [
                        "G"
                    ],
                    "last": "Wei",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "PLOS Computational Biology",
            "volume": "12",
            "issn": "8",
            "pages": "1--17",
            "other_ids": {
                "DOI": [
                    "10.1371/journal.pcbi.1005024"
                ],
                "PMID": [
                    "27479082"
                ]
            }
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Node-based learning of multiple Gaussian graphical models",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Mohan",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "London",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fazel",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Witten",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "I"
                    ],
                    "last": "Lee",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Journal of Machine Learning Research",
            "volume": "15",
            "issn": "1",
            "pages": "445--488",
            "other_ids": {
                "PMID": [
                    "25309137"
                ]
            }
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Extreme learning machines for reverse engineering of gene regulatory networks from expression time series",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Rubiolo",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "H"
                    ],
                    "last": "Milone",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Stegmayer",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Bioinformatics",
            "volume": "34",
            "issn": "7",
            "pages": "1253--1260",
            "other_ids": {
                "DOI": [
                    "10.1093/bioinformatics/btx730"
                ],
                "PMID": [
                    "29182723"
                ]
            }
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Gene regulatory networks on transfer entropy (GRNTE): a novel approach to reconstruct gene regulatory interactions applied to a case study for the plant pathogen Phytophthora infestans",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "C"
                    ],
                    "last": "Castro",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Vald\u00e9 S I",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "N"
                    ],
                    "last": "Gonzalez-Garc\u00eda",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Theoretical Biology and Medical Modelling",
            "volume": "16",
            "issn": "7",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/s12976-019-0103-7"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Gene Regulatory Network Inference: An Introductory Survey",
            "authors": [
                {
                    "first": "V",
                    "middle": [
                        "A"
                    ],
                    "last": "Huynh-Thu",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Sanguinetti",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "1--23",
            "other_ids": {
                "DOI": [
                    "10.1007/978-1-4939-8882-2_1"
                ]
            }
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Computational inference of gene regulatory networks: Approaches, limitations and opportunities",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Banf",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "Y"
                    ],
                    "last": "Rhee",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Biochim Biophys Acta Gene Regul Mech",
            "volume": "1860",
            "issn": "1",
            "pages": "41--52",
            "other_ids": {
                "DOI": [
                    "10.1016/j.bbagrm.2016.09.003"
                ],
                "PMID": [
                    "27641093"
                ]
            }
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "DynGENIE3: Dynamical GENIE3 for the inference of gene networks from time series expression data",
            "authors": [
                {
                    "first": "V",
                    "middle": [
                        "A"
                    ],
                    "last": "Huynh-Thu",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Geurts",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Scientific Reports",
            "volume": "8",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1038/s41598-018-21715-0"
                ]
            }
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Systems Biology: Properties of Reconstructed Networks",
            "authors": [
                {
                    "first": "B",
                    "middle": [
                        "O"
                    ],
                    "last": "Palsson",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Signal Transduction and Gene Regulation Networks",
            "authors": [
                {
                    "first": "A",
                    "middle": [
                        "P"
                    ],
                    "last": "Potapov",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "Analysis of Biological Networks",
            "volume": "",
            "issn": "",
            "pages": "181--206",
            "other_ids": {
                "DOI": [
                    "https:/onlinelibrary.wiley.com/doi/abs/10.1002/9780470253489.ch8"
                ]
            }
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Systems Biology In Practice: Concepts, Implementation And Application",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Klipp",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "the basis of cell differentiation and memory. II. Logical analysis of regulatory networks in terms of feedback circuits",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Thomas",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Kaufman",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Multistationarity",
                    "suffix": ""
                }
            ],
            "year": 2001,
            "venue": "Chaos: An Interdisciplinary Journal of Nonlinear Science",
            "volume": "11",
            "issn": "1",
            "pages": "180--195",
            "other_ids": {
                "DOI": [
                    "10.1063/1.1349893"
                ],
                "PMID": [
                    "12779452"
                ]
            }
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "The logical analysis of continuous, non-linear biochemical control networks",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Glass",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "A"
                    ],
                    "last": "Kauffman",
                    "suffix": ""
                }
            ],
            "year": 1973,
            "venue": "Journal of Theoretical Biology",
            "volume": "39",
            "issn": "1",
            "pages": "90208--90215",
            "other_ids": {
                "DOI": [
                    "10.1016/0022-5193(73)90208-7"
                ],
                "PMID": [
                    "4741704"
                ]
            }
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Qualitative analysis of gene regulatory networks by temporal logic",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ito",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Ichinose",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Shimakawa",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Izumi",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Hagihara",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Yonezaki",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Theoretical Computer Science",
            "volume": "594",
            "issn": "",
            "pages": "151--179",
            "other_ids": {
                "DOI": [
                    "10.1016/j.tcs.2015.06.017"
                ]
            }
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Qualitative networks: A symbolic approach to analyze biological signaling networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "A"
                    ],
                    "last": "Schaub",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [
                        "A"
                    ],
                    "last": "Henzinger",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Fisher",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "BMC Systems Biology",
            "volume": "1",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/1752-0509-1-4"
                ]
            }
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Petri Nets with Fuzzy Logic (PNFL): reverse engineering and parametrization",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "K\u00fc Ffner",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Petri",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Windhager",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Zimmer",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "PLOS ONE",
            "volume": "5",
            "issn": "9",
            "pages": "1--10",
            "other_ids": {
                "DOI": [
                    "10.1371/journal.pone.0012807"
                ],
                "PMID": [
                    "20862218"
                ]
            }
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Generating realistic in silico gene networks for performance assessment of reverse engineering methods",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Marbach",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Schaffter",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Mattiussi",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Floreano",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "Journal of computational biology",
            "volume": "16",
            "issn": "2",
            "pages": "229--239",
            "other_ids": {
                "DOI": [
                    "10.1089/cmb.2008.09TT"
                ],
                "PMID": [
                    "19183003"
                ]
            }
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Towards a rigorous assessment of systems biology models: The DREAM3 challenges",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Prill",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Marbach",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Saez-Rodriguez",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "K"
                    ],
                    "last": "Sorger",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "G"
                    ],
                    "last": "Alexopoulos",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Xue",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "PLOS ONE",
            "volume": "5",
            "issn": "2",
            "pages": "1--18",
            "other_ids": {
                "DOI": [
                    "10.1371/journal.pone.0009202"
                ],
                "PMID": [
                    "20186320"
                ]
            }
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Discrete, Continuous, and Hybrid Petri Nets",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "David",
                    "suffix": ""
                },
                {
                    "first": "Alla",
                    "middle": [
                        "H"
                    ],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Petri nets: Properties, analysis and applications",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Murata",
                    "suffix": ""
                }
            ],
            "year": 1989,
            "venue": "Proceedings of the IEEE",
            "volume": "77",
            "issn": "",
            "pages": "541--580",
            "other_ids": {
                "DOI": [
                    "10.1109/5.24143"
                ]
            }
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Kommunikation mit Automaten",
            "authors": [
                {
                    "first": "C",
                    "middle": [
                        "A"
                    ],
                    "last": "Petri",
                    "suffix": ""
                }
            ],
            "year": 1962,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "A combinatorial approach to reconstruct Petri nets from experimental data",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Durzinsky",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wagler",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Weismantel",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Computational Methods in Systems Biology",
            "volume": "5307",
            "issn": "",
            "pages": "328--346",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-540-88562-7_23"
                ]
            }
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Reconstruction of extended Petri nets from time series data and its application to signal transduction and to gene regulatory networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Durzinsky",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wagler",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Marwan",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "BMC Systems Biology",
            "volume": "5",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/1752-0509-5-113"
                ],
                "PMID": [
                    "21762503"
                ]
            }
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "Reconstruction of extended Petri nets from time series data by using logical control functions",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Durzinsky",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Marwan",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wagler",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Journal of Mathematical Biology",
            "volume": "66",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1007/s00285-012-0511-3"
                ]
            }
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "Knowledge-guided identification of Petri net models of large biological systems",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Srinivasan",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Bain",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Inductive Logic Programming",
            "volume": "7207",
            "issn": "",
            "pages": "317--331",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-642-31951-8_27"
                ]
            }
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "Learning transition models of biological regulatory and signaling networks from noisy data",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Vatsa",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Agarwal",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Srinivasan",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Proceedings of the 3rd IKDD Conference on Data Science, 2016. CODS'16",
            "volume": "9",
            "issn": "",
            "pages": "1--9",
            "other_ids": {
                "DOI": [
                    "http:/doi.acm.org/10.1145/2888451.2888469"
                ]
            }
        },
        "BIBREF35": {
            "ref_id": "b35",
            "title": "Identification of transition models of biological systems in the presence of transition noise",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Srinivasan",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Bain",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Vatsa",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Agarwal",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "200--214",
            "other_ids": {}
        },
        "BIBREF36": {
            "ref_id": "b36",
            "title": "SMOTE: Synthetic Minority Over-sampling Technique",
            "authors": [
                {
                    "first": "N",
                    "middle": [
                        "V"
                    ],
                    "last": "Chawla",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "W"
                    ],
                    "last": "Bowyer",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "O"
                    ],
                    "last": "Hall",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "P"
                    ],
                    "last": "Kegelmeyer",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "Journal of Artificial Intelligence Research",
            "volume": "16",
            "issn": "1",
            "pages": "321--357",
            "other_ids": {
                "DOI": [
                    "10.1613/jair.953"
                ]
            }
        },
        "BIBREF37": {
            "ref_id": "b37",
            "title": "Comparative study of discretization methods of microarray data for inferring transcriptional regulatory networks",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Bai",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Cai",
                    "suffix": ""
                },
                {
                    "first": "Ji",
                    "middle": [
                        "W"
                    ],
                    "last": "Guo",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "BMC Bioinformatics",
            "volume": "11",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/1471-2105-11-520"
                ],
                "PMID": [
                    "20955620"
                ]
            }
        },
        "BIBREF38": {
            "ref_id": "b38",
            "title": "On changing continuous attributes into ordered discrete attributes",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Catlett",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "Machine Learning-EWSL-91",
            "volume": "",
            "issn": "",
            "pages": "164--178",
            "other_ids": {}
        },
        "BIBREF39": {
            "ref_id": "b39",
            "title": "ChiMerge: Discretization of numeric attributes",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Kerber",
                    "suffix": ""
                }
            ],
            "year": 1992,
            "venue": "Proceedings of the Tenth National Conference on Artificial Intelligence. AAAI'92",
            "volume": "",
            "issn": "",
            "pages": "123--128",
            "other_ids": {}
        },
        "BIBREF40": {
            "ref_id": "b40",
            "title": "Supervised and unsupervised discretization of continuous features",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Dougherty",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Kohavi",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Sahami",
                    "suffix": ""
                }
            ],
            "year": 1995,
            "venue": "Machine Learning Proceedings",
            "volume": "",
            "issn": "",
            "pages": "194--202",
            "other_ids": {}
        },
        "BIBREF41": {
            "ref_id": "b41",
            "title": "Some methods for classification and analysis of multivariate observations",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Macqueen",
                    "suffix": ""
                }
            ],
            "year": 1967,
            "venue": "Proceedings of the Fifth Berkeley Symposium on Mathematical Statistics and Probability",
            "volume": "1",
            "issn": "",
            "pages": "281--297",
            "other_ids": {}
        },
        "BIBREF42": {
            "ref_id": "b42",
            "title": "DREAMTools: a Python package for scoring collaborative challenges",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Cokelaer",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Bansal",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Bare",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "4",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.12688/f1000research.7118.2"
                ],
                "PMID": [
                    "27134723"
                ]
            }
        },
        "BIBREF43": {
            "ref_id": "b43",
            "title": "Fast Bayesian inference for gene regulatory networks using ScanBMA",
            "authors": [
                {
                    "first": "W",
                    "middle": [
                        "C"
                    ],
                    "last": "Young",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "E"
                    ],
                    "last": "Raftery",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "Y"
                    ],
                    "last": "Yeung",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "BMC Systems Biology",
            "volume": "8",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/1752-0509-8-47"
                ],
                "PMID": [
                    "24742092"
                ]
            }
        },
        "BIBREF44": {
            "ref_id": "b44",
            "title": "Inferring dynamic genetic networks with low order independencies. Statistical applications in genetics and molecular biology",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "L\u00e8bre",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "",
            "volume": "8",
            "issn": "",
            "pages": "",
            "other_ids": {
                "PMID": [
                    "19222392"
                ]
            }
        },
        "BIBREF45": {
            "ref_id": "b45",
            "title": "minet: A R/Bioconductor package for inferring large transcriptional networks using mutual information",
            "authors": [
                {
                    "first": "P",
                    "middle": [
                        "E"
                    ],
                    "last": "Meyer",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Lafitte",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Bontempi",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "BMC Bioinformatics",
            "volume": "9",
            "issn": "1",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/1471-2105-9-461"
                ],
                "PMID": [
                    "18959772"
                ]
            }
        },
        "BIBREF47": {
            "ref_id": "b47",
            "title": "Genomic analysis of gene expression relationships in transcriptional regulatory networks",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Yu",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [
                        "M"
                    ],
                    "last": "Luscombe",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Qian",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Gerstein",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Trends in Genetics",
            "volume": "19",
            "issn": "8",
            "pages": "175--181",
            "other_ids": {
                "DOI": [
                    "10.1016/S0168-9525(03)00175-6"
                ],
                "PMID": [
                    "12902159"
                ]
            }
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Illustration of Petri net, extended Petri net and LGTS structure representation of a biochemical reaction. (A) A biochemical reaction (B) Petri net and extended Petri net representation of a biochemical reaction. (C) LGTS representation of a biochemical reaction. The box in (C) represents the constraint box for the reaction to happen. https://doi.org/10.1371/journal.pone.0251666.g001",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "the logical rules used for the four evidence types. In 2-bin discretized data, state values 0 and 1 represent OFF and ON state of a gene, respectively. In each table, the target gene shows its state transition at adjacent time points as per the evidence type. Like in the first table, the state transition of the target gene from OFF (0) to ON (1) represents its production. Each table shows the values a potential regulator gene can take at adjacent time points for both activation and inhibition regulation of the target gene. For instance, for the production of a target gene, a regulator gene (with activation regulation) should be ON(1)at time t-1 and can be OFF and ON (0 or 1) at time t. For inhibition regulation, it should be OFF (0 value) at time t-1 and can be OFF and ON (0 or 1) at time t. https://doi.org/10.1371/journal.pone.0251666.t001 PEPN-GRN framework. Consider a time series expression data set D that contains the expression values of p genes measured at n time points.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "the values a potential regulator gene can take at adjacent time points for both activation and inhibition regulation of the target gene. For instance, for the production of a target gene, a regulator gene (with activation regulation) can be medium/high (1/2) at time t-1 and can have any level (0, 1 or 2) at time t. For inhibition regulation, it should be at low level (0) at time t-1 and can have any level (0, 1 or 2) at time t. https://doi.org/10.1371/journal.pone.0251666.t002",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Fig 3 presents the work flow of the PEPN-GRN approach. Weighted aggregation of probabilities. We now introduce three variants of the PEPN-GRN approach on the basis of weight aggregation of evidence probabilities to compute the final score of edges.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Work flow of the PEPN-GRN method. The main steps of the PEPN-GRN approach are shown here.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "1 {R, T, S, Pr} = function edge_evidence_prob (D) 2 Let Edges E = {R, T, S}; \u22b3 where R is column vector of regulator genes, T is column vector of target genes, and S is a column vector of regulation signs for corresponding gene pair in (R, T) 3 Let Edge_features F = fPr e 1 \u00f0E\u00de; Pr e 2 \u00f0E\u00de; Pr e 3 \u00f0E\u00de; Pr e 4 \u00f0E\u00deg; \u22b3 where each column vector Pr e l \u00f0E\u00de represents l th evidence probabilities of edges in E. 4 Edge_labels L = [L 1 , L 2 , . . ., L p ] 0 ; \u22b3 a column vector of c class labels for p edges.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "function (R,T,S,Pr) = edge_evidence_prob(D) Data: Time series data set D \u00bc fX t 1 ; X t 2 ;",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": ": Receiver Operating Characteristic (ROC) curve and Precision-Recall (PR) curve. The ROC curve shows the plot between the fraction of correctly classified positive examples over the total positive examples (known as True Positive Rate (TPR)) and the fraction of incorrectly classified negative examples over the total negative examples (known as False Positive Rate (FPR)). With TPR on the y-axis and FPR on the x-axis, the area under the ROC curve (AUROC) can be regarded as a metric of the performance of a model. It basically represents how well the model distinguishes between the two classes. The Precision-Recall curve plots the Precision and Recall values obtained for different thresholds. The Precision (also known as Positive Predictive Value (PPV)) is defined as the fraction of correctly classified positive examples among the total number of examples classified as positive. The Recall or Sensitivity is the same as TPR. With Precision on the y-axis and Recall at the x-axis, the area under the PR curve (AUPR) defines the performance of a model.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "Performance evaluation of inference methods on discretized 10-gene and 100-gene DREAM4 data sets.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "https://doi.org/10.1371/journal.pone.0251666.g004",
            "latex": null,
            "type": "figure"
        },
        "FIGREF11": {
            "text": "Performance comparison of the inference methods on continuous and discretized DREAM4 data. The bar plot shows the evaluation of inference methods using AUROC and AUPR metric. The only method affected much by discretization is the dynGenie3.https://doi.org/10.1371/journal.pone.0251666.g005 257 edges. In the ground truth of the E. coli data set, edges do not contain a regulation sign. So, here, the training model considers all the edges present in the network as positive examples and all the non-edges as negative examples.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF12": {
            "text": "Contribution of evidence types in activatory and inhibitory edges. Four evidence types are shown as different color-coded links between a regulator and a target gene where the width of a link represents the learned weight for the corresponding evidence type. Below bar plot further shows the learned weights for both types of edges in case of EFD discretized 3-bin 100-gene DREAM4 data sets.https://doi.org/10.1371/journal.pone.0251666.g006",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "PLOS ONE | https://doi.org/10.1371/journal.pone.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "Ts_features = F for edges 2 Ts_edges; \u22b3 For activation edges 10 Tr_edges_act = Tr_edges with sign s 1, Tr_features_act = F for edges 2 Tr_edges_act, Tr_labels_act = L for edges 2 Tr_edges_act",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "Set edges = ; 30 for each evidence e i where i = {1, 2, 3, 4} do 31 for each target gene x j where j = 1: p do 32 Compute edge probability Pr e i \u00f0reg; x j ; sign\u00de \u00bc",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "Performance evaluation of the G1DBN and PEPN-GRN variant methods on the E. coli data set. (A) Number of inferred edgesNo. of inferred edges (True edges)For the selection of significant edges, thresholds used in the G1DBN are: \u03b11 = 1 \u00d7 10 \u221210 , \u03b12 = 7.1 \u00d7 10 \u22123 in case of continuous data and \u03b11 = 1 \u00d7 10 \u22126 , \u03b12 = 7.7 \u00d7 10 \u22123 for discretized data sets. In PEPN-GRN variants, threshold nReg = 3 is used to limit the number of regulator genes for each target gene. Thresholds th used in the three variants are 0.7, 0.7, and 0.6 respectively to select top 300 edges. The table in (A) shows the number of inferred edges with the number of true edges in parentheses. The table in (B) shows the average rank of random and true edges in the inferred networks obtained by each inference method. TF information is used as background knowledge to restrict the number of edges.https://doi.org/10.1371/journal.pone.0251666.t006",
            "latex": null,
            "type": "table"
        },
        "TABREF6": {
            "text": "Learned weights [w 0 , w 1 , w 2 , w 3 , w 4 ] in case of PEPN-GRN_v3 method on EFD discretized DREAM4 and E. coli data sets.(A) EFD discretized DREAM4 data",
            "latex": null,
            "type": "table"
        },
        "TABREF7": {
            "text": ") shows the learned weights averaged across 5-fold cross validation in case of EFD discretized DREAM4 data sets.Table (B) shows the learned weights for activation edges in case of EFD discretized E. coli data set. https://doi.org/10.1371/journal.pone.0251666.t007",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "We are grateful to Ashwin Srinivasan for insightful discussion and ideas which motivated the conceptualization of the PEPN-GRN model presented here. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Acknowledgments"
        }
    ]
}