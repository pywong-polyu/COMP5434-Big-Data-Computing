{
    "paper_id": "d7523b157b391516a06ad4c5865a2843578970ce",
    "metadata": {
        "title": "A Comparison of WebRTC and Conventional Videoconferencing for Synchronized Remote Medical Image Presentation",
        "authors": [
            {
                "first": "Vishal",
                "middle": [],
                "last": "Patel",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Charles",
                "middle": [
                    "H"
                ],
                "last": "Li",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "\u00b7",
                "middle": [],
                "last": "Van Rye",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "\u00b7",
                "middle": [],
                "last": "Chia-Shang",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "J",
                "middle": [],
                "last": "Liu",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "\u00b7",
                "middle": [
                    "Alexander"
                ],
                "last": "Lerner",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "\u00b7",
                "middle": [
                    "Jay"
                ],
                "last": "Acharya",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "\u00b7",
                "middle": [],
                "last": "Anandh",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "G",
                "middle": [],
                "last": "Rajamohan",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "DICOM viewers must fulfill roles beyond primary diagnostic interpretation, including serving as presentation tools in teaching and multidisciplinary conferences, thereby enabling multiple individuals to review images collaboratively in real time. When in-person gathering is not possible, a variety of solutions have been deployed to maintain the ability for spatially separated users to view medical images simultaneously. These approaches differ in their backend architectures, utilization of application-specific optimizations, and ultimately in their end user satisfaction. In this work, we systematically compare the performance of conventional screensharing using a videoconferencing application with that of a custom, synchronized DICOM viewer linked using Web Real Time Communications (WebRTC) technology. We find superior performance for the WebRTC method with regard to image quality and latency across a range of simulated adverse network conditions, and we show how increasing the number of conference participants differentially affects the bandwidth requirements of the two viewing solutions. In addition, we compare these two approaches in a real-world teaching scenario and gather the feedback of trainee and faculty radiologists, who we found to favor the WebRTC method for its decreased latency, improved image quality, ease of setup, and overall experience. Ultimately, our results demonstrate the value of application-specific solutions for the remote synchronized viewing of medical imaging, which, given the recent increase in reliance on remote collaboration, may constitute a significant consideration for future enterprise viewer procurement decisions.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Publisher's Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "A DICOM viewer constitutes an essential component of a digital radiology practice. The role of the image viewer is multifaceted and extends beyond its use by individual radiologists for primary diagnostic interpretation. Importantly, the viewer is often used to display images to multiple physicians simultaneously. In academic practices, this occurs routinely during trainee \"readout,\" an educational process in which attending staff radiologists perform live review of imaging studies with a resident who has already preliminarily inspected the cases in order to verify the trainee's findings and interpretation. In addition to the trainee responsible for the initial review of the case, additional residents and staff may be recruited to the readout of particularly interesting or challenging cases, and medical students frequently also participate to gain practical exposure to the field of radiology. Another situation requiring the display of images to multiple physicians is that of multidisciplinary conferences. An instance of the DICOM viewer often plays a central role during these meetings in which several physicians from various specialties (e.g., surgery, oncology, radiation oncology, pathology, and radiology) all convene to review important diagnostic information about a patient's case and decide on an appropriate course of treatment.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Conventionally, this simultaneous viewing of imaging by multiple users has been achieved by physically convening the physicians around a single instance of the DICOM viewer, which may be displayed on a standard radiology workstation in the case of trainee readout or on a projection screen in multidisciplinary conferences. When physical gathering is impractical, however, some solution for synchronized remote viewing is required. The need for remote image viewer synchronization has been greatly magnified during the COVID-19 pandemic, with many radiology departments restructuring their educational models to allow for social distancing in their reading rooms and multidisciplinary conferences moving to entirely virtual formats [1] [2] [3] [4] .",
            "cite_spans": [
                {
                    "start": 732,
                    "end": 735,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 736,
                    "end": 739,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 740,
                    "end": 743,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 744,
                    "end": 747,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "There are several approaches to achieving the synchronized presentation of medical imaging among remote viewers. In one common approach, this scenario is understood as a specific instance of the more general problem of screen sharing for real-time collaboration. A wide range of screen sharing solutions are available, including dedicated enterprise videoconferencing systems and consumer-oriented group messaging applications. The underlying protocols are often proprietary, but may be derived from or similar to open technologies such as virtual network computing (VNC), NX, and Jingle [5] [6] [7] . Ultimately, these solutions, due to their general nature, rely on the capture and transmission of screen pixel data over the network link, with various caching and compression optimizations applied to reduce bandwidth utilization and latency. In contrast to general screen sharing software, some medical image viewers include built-in conferencing capabilities limited to image review. Though again, the exact details are often proprietary, because the scope of synchronization is more narrowly defined, an applicationspecific technique can be used: rather than handling arbitrary pixel data, these viewers can pre-fetch the studies at both endpoints and synchronize only the viewer state over the network. This is analogous to the approach used by some multiplayer online video games that load large assets such as character and environment models locally and transmit only game state updates to each client [8] .",
            "cite_spans": [
                {
                    "start": 588,
                    "end": 591,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 592,
                    "end": 595,
                    "text": "[6]",
                    "ref_id": null
                },
                {
                    "start": 596,
                    "end": 599,
                    "text": "[7]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 1511,
                    "end": 1514,
                    "text": "[8]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "The transmission of the pixel data or viewer update instructions can take place over either a client-server architecture or a peer-to-peer (P2P) architecture (Fig. 1) . A client-server model may reduce bandwidth requirements at the viewing endpoints and enable the inclusion of clients with limited network, computational, or power resources. However, this model concentrates the resource demands at the server, and the inclusion of a server between the viewing stations also results in increased latency. In addition, if the server is controlled by an outside entity, as is the case for many commercial videoconferencing systems, the client-server architecture may require the initiation of a business associate agreement prior to the transmission of protected health information [9] . The P2P model, on the other hand, directly connects all viewers without an intermediary, but increases the bandwidth demands on the endpoints as the number of viewers increases because each participant must establish its own direct connection with every other participant.",
            "cite_spans": [
                {
                    "start": 781,
                    "end": 784,
                    "text": "[9]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [
                {
                    "start": 158,
                    "end": 166,
                    "text": "(Fig. 1)",
                    "ref_id": null
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "These disparate approaches to viewer synchronization and the different underlying network architectures can result in varying levels of performance and degradation of the viewing experience under certain conditions. Given the active deployment of these fundamentally different technologies and the current increase in the need for reliable, synchronized remote viewing of medical images, we set out to systematically compare the latency and image quality characteristics of a conventional videoconferencing system (CVS) transmitting pixel data via a central server and a tailored viewing application communicating only state updates over a P2P architecture. The latter application was developed using the Web Real Time Communications (WebRTC) application programming interface (API), a set of related standards for enabling real-time sharing of media streams and arbitrary data through a web browser [10] . In this work, we quantitatively compare these approaches using Fig. 1 Schematic comparison of client-server and peer-to-peer network architectures. In the client-server model, each peer establishes a connection only with a server. The server is an intermediary, and so data transmitted between peers must traverse at least two network hops (double-headed arrows). Increasing the total number of participants does not affect the individual peers, but it does increase the number of connections required by the server. Alternatively, in a peer-to-peer model, each peer establishes a direct connection with every other peer, and thus, data exchange requires only a single hop. However, increasing the number of participants results in increasing connection demands for every peer controlled, simulated network conditions, and we also report radiologists' qualitative assessment of the methods following a typical readout scenario. We emphasize that our objective is not to implement a feature-complete alternative to a commercial CVS, nor a full-featured PACS thick client, but rather to investigate how an application-specific backend design affects overall system performance for the synchronized remote viewing of medical images.",
            "cite_spans": [
                {
                    "start": 900,
                    "end": 904,
                    "text": "[10]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [
                {
                    "start": 970,
                    "end": 976,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "We developed a WebRTC-enabled medical image viewer to test the hypotheses that this architecture would yield decreased latency and improved image quality compared to screen sharing with a CVS. While a number of open source, web-based DICOM viewers have been developed, we chose to construct the image display component of our web application around a customized version of Papaya, a JavaScript DICOM viewer distributed by the Research Imaging Institute at the University of Texas Health Science Center at San Antonio [11, 12] . We modified the Papaya source code to insert hooks to enable the registration of callback methods to be executed whenever the view was updated.",
            "cite_spans": [
                {
                    "start": 517,
                    "end": 521,
                    "text": "[11,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 522,
                    "end": 525,
                    "text": "12]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "WebRTC Image Viewer"
        },
        {
            "text": "We assigned each user a random peer identifier upon application startup; communication of this identifier via an outside channel enables connection initiation, analogous to the meeting identifier used in videoconferencing applications that is commonly distributed via e-mail invitations. Between each pair of peers, we established an RTCPeerConnection per the WebRTC API. Establishing a connection between peers requires the initial negotiation of capabilities (supported codecs) over Session Description Protocol (SDP) and resolution of routing via Interactive Connectivity Establishment (ICE) [13, 14] . This process is referred to as \"signaling\" and is facilitated by an intermediary signaling server. We used the open source PeerJS library to carry out this exchange of metadata between peers [15] . Of note, only the metadata needed to initiate the connection is transmitted to the signaling server; all media streams and application data are transmitted via encrypted protocols directly between the two peers as described below.",
            "cite_spans": [
                {
                    "start": 595,
                    "end": 599,
                    "text": "[13,",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 600,
                    "end": 603,
                    "text": "14]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 797,
                    "end": 801,
                    "text": "[15]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "WebRTC Image Viewer"
        },
        {
            "text": "Having established an RTC connection between two peers, we added a MediaStreamTrack to the connection to transmit an audio channel from the users' microphones, enabling voice communication with user-controlled mute capability. WebRTC communicates encrypted audio streams according to the Secure Realtime Protocol (SRTP) with encryption keys negotiated via Datagram Transport Layer Security (DTLS), transmitted over User Datagram Protocol (UDP) at the transport layer [16, 17] . To enable the unique approach we propose, we also attached an RTCDataChannel to the connection, enabling the bidirectional transfer of arbitrary data. WebRTC data messages are communicated through the Stream Control Transmission Protocol (SCTP) at the application layer, encrypted by DTLS, and transported over UDP [18] . SCTP enables the ordered, reliable delivery of messages over the conventionally unreliable UDP transport, while still limiting network overhead relative to Transmission Control Protocol (TCP). Figure 2 provides a schematic overview of the RTC connections established for our application. Our application specifies the following types of messages to be communicated over the data channel:",
            "cite_spans": [
                {
                    "start": 467,
                    "end": 471,
                    "text": "[16,",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 472,
                    "end": 475,
                    "text": "17]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 793,
                    "end": 797,
                    "text": "[18]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [
                {
                    "start": 993,
                    "end": 1001,
                    "text": "Figure 2",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "WebRTC Image Viewer"
        },
        {
            "text": "\u2022 Peer Roster: The list of known peers is broadcast whenever a new RTC connection is established, enabling the automated construction of a fully connected mesh network as new peers join. \u2022 Viewer Control: This message type provides conflict resolution to ensure only a single peer can manipulate the viewer at a given time. \u2022 Worklist Position: The application is organized around a worklist which includes multiple studies available for viewing. The peer in control of the viewer broadcasts the index of the study from the worklist that should currently be presented in the viewer. Whenever the index changes, the new image is downloaded into process memory and loaded into Papaya. \u2022 Viewer State: This message type, broadcast continuously by the peer in control of the viewer and triggered by the aforementioned Papaya hooks, provides the essential parameters needed for other peers to synchronize their views: slice positions, window center and width, zoom and pan transformations, and crosshair visibility. Serialization of these parameters was performed per the MessagePack specification to reduce packet sizes [19] . \u2022 Chat Message: Textual messages may be posted to a chatroom by any peer. This functionality enables communication by peers without microphone capability, can be used to avoid interrupting ongoing spoken conversations, and facilitates the sharing of information such as hyperlinks.",
            "cite_spans": [
                {
                    "start": 1116,
                    "end": 1120,
                    "text": "[19]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "WebRTC Image Viewer"
        },
        {
            "text": "To illustrate the capabilities of this technology, we deployed a demonstration site for an RTC-Enabled, P2P-Linked Imaging Conference Application (REPLICA) at https:// radio gra. ph/ rtc/.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "WebRTC Image Viewer"
        },
        {
            "text": "In order to measure the performance characteristics of the WebRTC synchronization method relative to CVS screensharing across a variety of network conditions in a controlled environment, we deployed two identical Linux (kernel version 4.19) virtual machines (VMs) connected by a virtual network to each other and to the host. We refer to this pair of VMs as sender and recipient; the former indicates the VM in control of manipulating the image in the viewer, and the latter designates the VM that updates its display in response to information transmitted by the sender over the virtual network. Of note, this terminology does not consider the audio stream data, which is always transmitted bidirectionally in our tests. WebRTC synchronization was evaluated by loading the aforementioned application in Mozilla Firefox (version 68.12.0esr) inside both VMs and linking the viewers using an RTCPeerConnection as described. To evaluate the CVS, we loaded the same browser-based viewing application in the sending VM, but we programmatically disabled the RTC communication components. Instead, Zoom Video Communications' Cloud Meetings application (version 5.2.458699.0906) was launched on both VMs and used to share the browser window to the receiving VM. All quantitative tests were conducted with a computed tomography (CT) study of the head loaded into the Papaya viewer. We chose to use CT as the imaging modality for assessment because its display typically places high data rate demands on the viewer application (typical matrix size: 512 \u00d7 512 or greater, typical bit depth: 12 or greater, peak stack scroll rates: 15 slices per second or greater). In addition, audio from a recording of the US presidential debate from September 26, 1960, was continuously piped as input to virtual microphones on both VMs to produce a reproducible audio stream of simulated speech and a realistic network and computational burden [20] .",
            "cite_spans": [
                {
                    "start": 1920,
                    "end": 1924,
                    "text": "[20]",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [],
            "section": "Quantitative Assessment"
        },
        {
            "text": "We examined performance across a variety of network conditions by adjusting the traffic control queuing discipline of the Linux kernel in the sending VM to emulate networks with varying degrees of latency (0-512 ms) and packet loss (0-10%). We programmatically triggered Papaya to increment the displayed image slice in the sending VM once per second. For each set of network conditions, over the course of 100 displayed slice updates, the screens of both guest VMs were captured from the host at a sampling rate of 120 frames per second, and the output was saved in an uncompressed format. This recorded video stream was then analyzed using OpenCV to determine the time delays with which display updates on the receiving VM lagged those of the sending VM [21] . In addition, we measured the magnitude of image compression artifacts at the receiving VM by calculating the mean squared error (MSE) relative to the image displayed on the sending VM. The performance of the RTC and CVS synchronization methods as captured by both of these metrics was statistically compared using one-way analysis of covariance (ANCOVA) to isolate the effect of the synchronization technology from the network condition covariate.",
            "cite_spans": [
                {
                    "start": 756,
                    "end": 760,
                    "text": "[21]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Quantitative Assessment"
        },
        {
            "text": "Also, given the difference in network architectures between the RTC and CVS linking methods, we examined the changes in maximum bandwidth requirements as the number of connected peers was increased. For this test, we updated the slice displayed by Papaya on the sending VM at a rate of 30 Hz (i.e., perceptually continuously), and we cloned the receiving VM to simulate up to 32 connected peers. We recorded inbound and outbound network data rates on the sending VM and one of the receiving VMs over 100 one-second windows, and again compared the network utilization between the two synchronization technologies using one-way ANCOVA.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Quantitative Assessment"
        },
        {
            "text": "We also sought to gauge the practical impact of the RTC synchronization technology by gathering the opinions of eight trainee and five attending radiologists. To this end, we selected 10 head CT examinations from our institutional teaching file and divided them into 2 worklists containing 5 studies each. Radiology trainees were asked individually to examine all 10 cases and then contact an attending neuroradiologist for remote review. Cases from one worklist were reviewed by screensharing over a CVS (Zoom), and cases from the other worklist were reviewed using the WebRTC synchronization method. Immediately following each review session, the trainee and faculty member were asked to complete a survey containing a set of 5-point Likert items comparing the two synchronization methods for perceived image lag, image quality, audio lag, audio quality, ease of setup, and overall experience. All raters were provided with a definition of terms to encourage uniform interpretation: image lag referred to latency between image manipulation and screen update, image quality referred to degree of degradation by compression artifacts, audio lag referred to perceived latency between speech production and speaker driver response, audio quality referred to perceived clarity of speech, and ease of setup was to include time and complexity of actions required to establish a collaborative session. Because the number of trainees exceeded the number of faculty, some attendings participated in more than one review session; however, each subject completed the survey only once, following his or her initial experience. Survey results were statistically compared using the Mann Whitney test, and a Bonferroni correction was applied to control the false discovery rate in the setting of multiple hypothesis tests.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Qualitative Assessment"
        },
        {
            "text": "The results from our quantitative analysis of RTC and CVS performance over simulated network conditions are summarized in Fig. 3 . We found that the proposed RTC data channel synchronization technique resulted in decreased image Fig. 3 Quantitative comparison of WebRTC and a CVS for synchronized viewing of medical images over adverse network conditions. Image update lag (top row) and error introduced by compression artifacts (bottom row) are shown as a function of increasing network latency (left column) and increasing packet loss (right column). Plotted points indicate means over 100 viewer updates and associated shaded regions span the standard error lag relative to CVS screensharing at all levels of simulated network latency (p < 0.001). We also observed that the image lag was significantly dependent on the amount of latency (p < 0.001), increasing approximately linearly for both methods as network latency increased. Similarly, we found that RTC synchronization resulted in reduced lag relative to the CVS in the setting of simulated packet loss (p < 0.001). Again, increasing packet loss also resulted increased image lag for both methods (p < 0.001), though the magnitude of the effect was less pronounced than that for network latency over the range tested.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 122,
                    "end": 128,
                    "text": "Fig. 3",
                    "ref_id": null
                },
                {
                    "start": 229,
                    "end": 235,
                    "text": "Fig. 3",
                    "ref_id": null
                }
            ],
            "section": "Results"
        },
        {
            "text": "Regarding image compression artifacts, we observed no compression-related error in the RTC-synchronized viewer as per the design -full resolution images are loaded on each peer locally, and pixel data is not transmitted over the RTCPeerConnection. We did, however, detect compression related artifacts in the images transmitted over the CVS connection. A representative example of these artifacts are provided in Fig. 4 , which shows that the CVS-compressed image exhibits attenuation of high frequency information like the boundaries between gray matter and white matter in cortical and subcortical areas, the edges of thin linear structures like narrow sulci and dural reflections, and the quantum mottle inherent to CT. The MSE associated with the compression artifacts in the CVS was statistically greater than that of RTC (i.e., greater than zero) for both the network latency (p < 0.001) and packet loss (p < 0.001) tests. The severity of compression-related artifacts appeared to be independent of the degree of network latency (p = 0.502) or packet loss (p = 0.913) over the ranges tested.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 413,
                    "end": 419,
                    "text": "Fig. 4",
                    "ref_id": null
                }
            ],
            "section": "Results"
        },
        {
            "text": "Our examination of network data rates during continuous image updates is summarized in Fig. 5 . We found a significant dependence of network utilization on synchronization method (p < 0.001), and post hoc tests revealed that as the number of connected peers increased, the P2P architecture of the RTC synchronization method resulted in corresponding increases in inbound and outbound data transmission rates on both the sending and receiving endpoints (p < 0.001 in each case). In contrast, the centralized architecture of the CVS yielded approximately constant network utilization in the context of increasing peer count. For groups of 4 or fewer individuals (i.e., 3 or fewer connected peers), all measured data rates were less for the RTC method than for the CVS. Maximum RTC bandwidth requirements exceeded those of the CVS for the sender inbound and receiver outbound categories when group size exceeded 4, for the sender outbound category once group size surpassed 13, and for the receiver inbound category for groups larger than 27 members.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 87,
                    "end": 93,
                    "text": "Fig. 5",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Results"
        },
        {
            "text": "Our qualitative testing showed that subjects rated the RTC experience superior to the CVS for perceived image quality, image latency, ease of setup, and overall experience (p < 0.001 for all cases). There was no significant difference in the RTC and CVS ratings for perceived audio quality or audio latency. Stratifying responses by role (i.e., trainees or attendings) did not alter the results.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "We have studied the performance of WebRTC as a technology for linking remote DICOM viewers for use cases such as radiology education and multidisciplinary patient care. Our results indicate that the approach of loading image data locally and transmitting only viewer synchronization instructions over an RTCDataChannel provides a reduction in image latency relative to screensharing with conventional videoconferencing software, and it also eliminates image compression artifacts. These effects appear to have perceptual relevance as both trainee and faculty radiologists rated the RTC synchronization experience more favorably than CVS screensharing with regards to perceived image quality and latency, ease of setup, and overall experience.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Data transmission rates increased approximately linearly for the RTC synchronization method with the number of participants, as expected for a P2P architecture (Fig. 1) , while that of the CVS we tested remained constant. Most of the linear increase in bandwidth requirements at the receivers is attributable to the always-active bidirectional audio Fig. 4 Representative example of image compression artifacts typical of screen sharing with a CVS. The WebRTC synchronization scheme (left) shows the original image by design, while the data compression applied by the videoconferencing server degrades image quality, blurring subtle edges (center). The difference between the two techniques is more clearly visible in the subtraction image (right) stream established with each peer; on further examination of Firefox's internal RTC statistics (not shown), we discovered that the default Opus audio codec consumed approximately 26 kbps/peer in each direction, revealing that only about 22 kbps of bandwidth was devoted to receiving the viewer update stream [22] . The sender additionally bears the load of transmitting the continuous viewer updates to each peer and receives corresponding inbound traffic in the form of SCTP selective acknowledgements. Despite this linear dependence on the number of peers, for common use cases involving small groups (4 or fewer individuals), the bandwidth requirements of the RTC method remained less than that of the CVS we tested. As group size increased, the CVS approach provided lower data rates, albeit at the expense of increased latency and compression artifacts as shown. We note that even for groups including up to 32 viewers, the peak bandwidth required by the P2P architecture (approximately 1.1 Mbps down/1.5 Mbps up) falls well within the nominal limits of even previous generation local networking infrastructure such as 10BASE-T Ethernet and 802.11 g WiFi [23] . The requisite bandwidth also appears readily accessible over the WAN, given the Federal Communications Commission report that as of the end of 2018, 99.1% of the US population was covered by deployments of fixed terrestrial broadband with speeds of at least 25 Mbps downstream and 3 Mbps upstream or mobile long term evolution (LTE) connections with median speeds of 10 Mbps downstream and 3 Mbps upstream [24] .",
            "cite_spans": [
                {
                    "start": 1056,
                    "end": 1060,
                    "text": "[22]",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 1908,
                    "end": 1912,
                    "text": "[23]",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 2321,
                    "end": 2325,
                    "text": "[24]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 160,
                    "end": 168,
                    "text": "(Fig. 1)",
                    "ref_id": null
                },
                {
                    "start": 350,
                    "end": 356,
                    "text": "Fig. 4",
                    "ref_id": null
                }
            ],
            "section": "Discussion"
        },
        {
            "text": "We emphasize that the approach presented herecommunicating viewer state updates over a P2P network using a low-latency transmission protocol -can be implemented independently of WebRTC, which simply provides a convenient API for achieving this result in a web browser. Dedicated implementations could extend the minimal set of message types that we have presented to provide additional optimizations and functionality, such as synchronization of thick-client features like multiplanar reformation, intensity projection, and volume rendering. For the same reason, we have intentionally not addressed the mechanism by which the images or worklist are initially loaded at each peer. In a practical implementation, the communication of these viewer synchronization instructions would ideally be included as a function of an enterprise PACS viewer itself, rather than in a third-party application. In that setting, the worklist and image prefetching can occur over the same virtual private network (VPN) or other secure tunneling solution that an enterprise has already established for remote image viewing by its thin clients. This arrangement also serves to internalize and thus protect the signaling server from outside threats.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Limitations of our work include the examination of a single commercial videoconferencing system as a comparison to the RTC approach; we studied the only HIPAAcompliant solution deployed at our institution. Different videoconferencing applications may have different latency and compression characteristics relative to that which we measured. Nevertheless, though the relative magnitudes may change with other videoconferencing applications, we expect the key findings of our work to hold since any CVS requiring data transit via a central server will experience additional latency related to this intermediate hop, and any system employing lossy compression to limit data rates will necessarily suffer from image degradation. We note that even those screen sharing applications with browser-based clients often employ a client-server architecture and are limited by the increased data rates required by the transmission of pixel data rather than viewer state. We have also assumed that all peers have access to an audio input device. While this assumption is likely to be satisfied for radiology workstations with speech recognition capabilities and most modern mobile computing devices, other workstations in physician offices and clinical areas, for example, may not have audio recording hardware. The ability to call into a conference over the public switched telephone network (PSTN) is offered by most CVS applications and is a particularly important feature to support for multidisciplinary conferences in which the majority of participants are often non-radiologists (and thus perhaps more likely to be connecting from workstations without an audio input device). Incorporating this interworking capability into the WebRTC scheme would require the additional overhead of running a private branch exchange (PBX) server.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Ultimately, the results presented here support the thesis that transmitting DICOM viewer update instructions over a lowlatency connection enables a quantitatively and qualitatively superior collaborative image review experience for small groups, relative to conventional videoconferencing systems. This systematic analysis may be useful to imaging informatics professionals as they define vendor selection criteria for future PACS viewer procurements, given the increasing importance of remote conferencing capabilities in the modern era.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Virtual Read-out: Radiology Education for the 21st century during the COVID-19 pandemic",
            "authors": [
                {
                    "first": "C",
                    "middle": [
                        "H"
                    ],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "G"
                    ],
                    "last": "Rajamohan",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "T"
                    ],
                    "last": "Acharya",
                    "suffix": ""
                },
                {
                    "first": "C-Sj",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Patel",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "L"
                    ],
                    "last": "Go",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Academic Radiology",
            "volume": "27",
            "issn": "6",
            "pages": "872--881",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Trainee and Attending Perspectives on Remote Radiology Readouts in the Era of the COVID-19 Pandemic",
            "authors": [
                {
                    "first": "S",
                    "middle": [
                        "A"
                    ],
                    "last": "Matalon",
                    "suffix": ""
                },
                {
                    "first": "Dat",
                    "middle": [],
                    "last": "Souza",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "C"
                    ],
                    "last": "Gaviola",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "G"
                    ],
                    "last": "Silverman",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "W"
                    ],
                    "last": "Mayo-Smith",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "K"
                    ],
                    "last": "Lee",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Academic Radiology",
            "volume": "27",
            "issn": "8",
            "pages": "1147--53",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Preserving Radiology Resident Education During the COVID-19 Pandemic: The Simulated Daily Readout. Academic Radiology",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "P"
                    ],
                    "last": "Recht",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [
                        "R"
                    ],
                    "last": "Fefferman",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "E"
                    ],
                    "last": "Bittman",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Dane",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Fritz",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "C"
                    ],
                    "last": "Hoffmann",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "27",
            "issn": "",
            "pages": "1154--61",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Radiology Education in the Time of COVID-19: A Novel Distance Learning Workstation Experience for Residents. Academic Radiology",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Mcroy",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Patel",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "S"
                    ],
                    "last": "Gaddam",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Rothenberg",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Herring",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Hamm",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "27",
            "issn": "",
            "pages": "1467--74",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "TightVNC: VNC-Compatible Free Remote Control / Remote Desktop Software",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Kaplinsky",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "XEP-0116: Jingle",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ludwig",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Beda",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Saint-Andre",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Mcqueen",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Egan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Hildebrand",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "XMPP Specifications. XMPP Standards Foundation",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Multiplayer Game Programming: Architecting Networked Games",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Glazer",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Madhav",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "386",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "New HIPAA rules: a guide for radiology providers",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Dresevic",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Mikel",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Radiol Manage",
            "volume": "35",
            "issn": "2",
            "pages": "34--43",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "WebRTC 1.0: Real-Time Communication Between Browsers",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Jennings",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Bostr\u00f6m",
                    "suffix": ""
                },
                {
                    "first": "J-I",
                    "middle": [],
                    "last": "Bruaroey",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Evaluation of Free, Open-source, Web-based DICOM Viewers for the Indian National Telemedicine Service (eSanjeevani)",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "S"
                    ],
                    "last": "Wadali",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "P"
                    ],
                    "last": "Sood",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Kaushish",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Syed-Abdul",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "K"
                    ],
                    "last": "Khosla",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Bhatia",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "J Digit Imaging",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1007/s10278-020-00368-4"
                ]
            }
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "SDP: Session Description Protocol",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Handley",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Perkins",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Jacobson",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Internet Engineering Task Force",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT)",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Rosenberg",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Holmberg",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Internet Engineering Task Force",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "PeerJS -Simple peer-to-peer with WebRTC",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "The Secure Real-time Transport Protocol (SRTP)",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "A"
                    ],
                    "last": "Mcgrew",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Norrman",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Internet Engineering Task Force",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Datagram Transport Layer Security Version 1",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Rescorla",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Modadugu",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Internet Engineering Task Force",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Stream Control Transmission Protocol",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Stewart",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Debate with Richard Nixon in Chicago",
            "authors": [],
            "year": 1960,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Definition of the Opus Audio Codec",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Terriberry",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Vos",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Internet Engineering Task Force",
            "authors": [],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "Essential Principles and Modern Practice",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Wang",
                    "middle": [
                        "J"
                    ],
                    "last": "Pacs",
                    "suffix": ""
                },
                {
                    "first": "Digital",
                    "middle": [],
                    "last": "Medicine",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "",
            "volume": "370",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Federal Communications Commission",
            "authors": [],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Schematic overview of the WebRTC connections established for remote DICOM viewer synchronization. Initial connection negotiation is facilitated by a signaling server, but the continuous data updates are passed directly between peers over an RTCPeerConnection that encapsulates a MediaStreamTrack carrying microphone audio and an RTC-DataChannel carrying viewer state updates",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Comparison of network resources required by the WebRTC and CVS image viewer synchronization methods. Bandwidth utilization is shown for the peer sending the image updates (top row) and a peer receiving the image updates (bottom row) as a function of the total number of meeting participants. Data rates are divided into inbound (left column) and outbound (right column) flows. Plotted points indicate means over 100 sampling windows and associated shaded regions span the standard error",
            "latex": null,
            "type": "figure"
        }
    },
    "back_matter": [
        {
            "text": "The authors wish to acknowledge Michael Lee, MD; Ruskin Cua, MD; Ishita Desai, MD; and Sari Umekawa, MD, for their valuable feedback in testing the RTC technology.Author Contribution VP and CL conceived the original idea. VP performed the data collection, processing, and statistical analysis, with support from CL and VR. VP and CL wrote the initial draft of the manuscript, with critical feedback and revisions by CL, AL, JA, and AR.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Acknowledgements"
        },
        {
            "text": "The authors declare that they had full access to all of the data in this study, and the authors take complete responsibility for the integrity of the data and the accuracy of the data analysis.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Statement of Data Access and Integrity"
        },
        {
            "text": "The authors declare no competing interests.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conflict of Interest"
        }
    ]
}