{
    "paper_id": "ce77d5fa4c65441e3c77f0d886e49679c9303190",
    "metadata": {
        "title": "A Study on Team Bisimulations for BPP Nets",
        "authors": [
            {
                "first": "Roberto",
                "middle": [],
                "last": "Gorrieri",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Mura A. Zamboni",
                    "location": {
                        "postCode": "40127",
                        "settlement": "Bologna",
                        "country": "Italy"
                    }
                },
                "email": "roberto.gorrieri@unibo.it"
            }
        ]
    },
    "abstract": [
        {
            "text": "BPP nets, a subclass of finite P/T nets, were equipped in [13] with an efficiently decidable, truly concurrent, behavioral equivalence, called team bisi-milarity. This equivalence is a very intuitive extension of classic bisimulation equivalence (over labeled transition systems) to BPP nets and it is checked in a distributed manner, without building a global model of the overall behavior of the marked BPP net. This paper has three goals. First, we provide BPP nets with various causality-based equivalences, notably a novel one, called causal-net bisimilarity, and (a version of) fully-concurrent bisimilarity [3]. Then, we define a variant equivalence, h-team bisimilarity, coarser than team bisimilarity. Then, we complete the study by comparing them with the causality-based semantics we have introduced: the main results are that team bisimilarity coincides with causal-net bisimilarity, while h-team bisimilarity with fully-concurrent bisimilarity. (N , \u03c1 3 ) , \u03c1 3 (t) = t 3 and \u03c1 3 (Max(N )) = m 3 ; and finally,",
            "cite_spans": [
                {
                    "start": 58,
                    "end": 62,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [
                {
                    "start": 958,
                    "end": 968,
                    "text": "(N , \u03c1 3 )",
                    "ref_id": null
                }
            ],
            "section": "Abstract"
        },
        {
            "text": "The symmetric case when (N, \u03c1 3 ) moves first is analogous, hence omitted. Therefore, R 1 \u2022 R 2 is a causal-net bisimulation, indeed. Proposition 2. For each BPP net N = (S, A, T ), relation \u223c cn \u2286 M (S) \u00d7 M (S) is an equivalence relation. Proof. Standard, by exploiting Proposition 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "A BPP net is a simple type of finite Place/Transition Petri net [18] whose transitions have singleton pre-set. Nonetheless, as a transition can produce more tokens than the only one consumed, there can be infinitely many reachable markings of a BPP net. BPP is the acronym of Basic Parallel Processes [4] , a simple CCS [11, 15] subcalculus (without the restriction operator) whose processes cannot communicate. In [12] a variant of BPP, which requires guarded sum and guarded recursion, is actually shown to represent all and only the BPP nets, up to net isomorphism, and this explains the name of this class of nets.",
            "cite_spans": [
                {
                    "start": 64,
                    "end": 68,
                    "text": "[18]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 301,
                    "end": 304,
                    "text": "[4]",
                    "ref_id": null
                },
                {
                    "start": 320,
                    "end": 324,
                    "text": "[11,",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 325,
                    "end": 328,
                    "text": "15]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In a recent paper [13] , we proposed a novel behavioral equivalence for BPP nets, based on a suitable generalization of the concept of bisimulation [15] , originally defined over labeled transition systems (LTSs, for short). A team bisimulation R over the places of an unmarked BPP net is a relation such that if two places s 1 and s 2 are related by R, then if s 1 performs a and reaches the marking m 1 , then s 2 may perform a reaching a marking m 2 such that m 1 and m 2 are element-wise, bijectively related by R (and vice versa if s 2 moves first). Team bisimilarity is the largest team bisimulation over the places of the unmarked BPP net, and then such a relation is lifted to markings by additive closure: if place s 1 is team bisimilar to place s 2 and the marking m 1 is team bisimilar to m 2 (the base case relates the empty marking to itself), then also s 1 \u2295 m 1 is team bisimilar to s 2 \u2295 m 2 , where \u2295 is the operator of multiset union. Note that to check if two markings are team bisimilar we need not to construct an LTS, such as the interleaving marking graph, describing the global behavior of the whole system, but only to find a bijective, team bisimilarity-preserving match among the elements of the two markings. In other words, two distributed systems, each composed of a team of sequential, non-cooperating processes (i.e., the tokens in the BPP net), are equivalent if it is possible to match each sequential component of the first system with one team-bisimilar, sequential component of the other system, as in any sports where two competing (distributed) teams have the same number of (sequential) players.",
            "cite_spans": [
                {
                    "start": 18,
                    "end": 22,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 148,
                    "end": 152,
                    "text": "[15]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "The complexity of checking whether two markings of equal size are team bisimilar is very low. First, by adapting the optimal algorithm for standard bisimulation equivalence over LTSs [19] , team bisimulation equivalence over places can be computed in O(m \u00b7 p 2 \u00b7 log (n + 1)) time, where m is the number of net transitions, p is the size of the largest post-set (i.e., p is the least natural such that |t \u2022 | \u2264 p for all t) and n is the number of places. Then, checking whether two markings of size k are team bisimilar can be done in O(k 2 ) time. Of course, we proved that team bisimilar markings respect the global behavior; in particular, we proved that team bisimilarity implies interleaving bisimilarity and that team bisimilarity coincides with strong place bisimilarity [1] .",
            "cite_spans": [
                {
                    "start": 183,
                    "end": 187,
                    "text": "[19]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 778,
                    "end": 781,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In this paper, we complete the comparison between team bisimilarity on markings and the causal semantics of BPP nets. In particular, we propose a novel coinductive equivalence, called causal-net bisimulation equivalence, inspired by [9] , which is essentially a bisimulation semantics over the causal nets [2, 17] of the BPP net under scrutiny. We prove that team bisimilarity on markings coincides with causal-net bisimilarity, hence proving that our distributed semantics is coherent with the expected causal semantics of BPP nets. Moreover, we adapt the definition of fully-concurrent bisimulation (fc-bisimulation, for short) in [3] , in order to be better suited for our aims. Fc-bisimilarity was inspired by previous notions of equivalence on other models of concurrency, in particular, by history-preserving bisimulation (hpb, for short) [8] . Moreover, we define also a slight strengthening of fc-bisimulation, called state-sensitive fc-bisimulation, which requires additionally that, for each pair of related processes, the current markings have the same size. We also prove that causal-net bisimilarity coincides with state-sensitive fc-bisimilarity. These behavioral causal semantics have been provided for BPP nets, but they can be easily adapted for general P/T nets.",
            "cite_spans": [
                {
                    "start": 233,
                    "end": 236,
                    "text": "[9]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 306,
                    "end": 309,
                    "text": "[2,",
                    "ref_id": null
                },
                {
                    "start": 310,
                    "end": 313,
                    "text": "17]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 633,
                    "end": 636,
                    "text": "[3]",
                    "ref_id": null
                },
                {
                    "start": 845,
                    "end": 848,
                    "text": "[8]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "The other main goal of this paper is to show that fc-bisimilarity (hence also hpb) can be characterized for BPP nets in a team-style, by means of h-team bisimulation equivalence. (The prefix h-is used to remind that h-team bisimilarity is connected to hpb.) The essential difference between a team bisimulation and an h-team bisimulation is that the former is a relation on the set of places only, while the latter is a relation on the set composed of the places and the empty marking \u03b8.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "The paper is organized as follows. Section 2 introduces the basic definitions about BPP nets and recalls interleaving bisimilarity. Section 3 discusses the causal semantics of BPP nets. First, the novel causal-net bisimulation is introduced, then (state-sensitive) fully-concurrent bisimilarity, as an improvement of the original one [3] , which better suits our aims. Section 4 recalls the main definitions and results about team bisimilarity from [13] ; in this section we also prove a novel result: causal-net bisimilarity coincides with team bisimilarity for BPP nets. Section 5 defines h-team bisimulation equivalence and studies its properties; in particular, we prove that h-team bisimilarity coincides with fc-bisimilarity. Finally, Sect. 6 discusses related literature. ",
            "cite_spans": [
                {
                    "start": 334,
                    "end": 337,
                    "text": "[3]",
                    "ref_id": null
                },
                {
                    "start": 449,
                    "end": 453,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Multiset union \u2295 is defined as follows: (m \u2295 m )(s) = m(s) + m (s); it is commutative, associative and has \u03b8 as neutral element. Multiset difference is defined as follows: (m 1 m 2 )(s) = max{m 1 (s)\u2212m 2 (s), 0}. The scalar product of a number j with m is the multiset j \u00b7 m defined as (j \u00b7 m)(s) = j \u00b7 (m(s)). By s i we also denote the multiset with s i as its only element. Hence, a multiset m over S = {s 1 , . . . , s n } can be represented as k 1 \u00b7 s 1 \u2295 k 2 \u00b7 s 2 \u2295 . . . \u2295 k n \u00b7 s n , where k j = m(s j ) \u2265 0 for j = 1, . . . , n. Given a transition t = (s, , m), we use the notation:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Basic Definitions"
        },
        {
            "text": "\u2022 \u2022 t to denote its pre-set s (which is a single place) of tokens to be consumed; \u2022 l(t) for its label , and \u2022 t \u2022 to denote its post-set m (which is a multiset) of tokens to be produced.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2 (BPP net). A labeled"
        },
        {
            "text": "Hence, transition t can be also represented as \u2022 t",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2 (BPP net). A labeled"
        },
        {
            "text": "We also define pre-sets and post-sets for places as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2 (BPP net). A labeled"
        },
        {
            "text": "Note that the pre-set (post-set) of a place is a set. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 2 (BPP net). A labeled"
        },
        {
            "text": "A multiset over S is called a marking. Given a marking m and a place s, we say that the place s contains m(s) tokens, graphically represented by m(s) bullets inside place s. A BPP net system N (m 0 ) is a tuple (S, A, T, m 0 ), where (S, A, T ) is a BPP net and m 0 is a marking over S, called the initial marking. We also say that N (m 0 ) is a marked net. Note that reach(s) is always a finite set, even if [s is infinite.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 3 (Marking, BPP net system)."
        },
        {
            "text": "Example 1. Figure 1 (a) shows the simplest BPP net representing a semi-counter, i.e., a counter unable to test for zero. Note that the number represented by this semi-counter is the number of tokens which are present in s 2 , i.e., in the place ready to perform dec; hence, Fig. 1 (a) represents a semi-counter holding 0; note also that the number of tokens which can be accumulated in s 2 is unbounded. Indeed, the set of reachable markings for a BPP net can be countably infinite. In (b), a variant semi-counter is outlined, which holds number 2 (i.e., two tokens are ready to perform dec).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 11,
                    "end": 19,
                    "text": "Figure 1",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 274,
                    "end": 280,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Definition 4 (Firing sequence). A transition"
        },
        {
            "text": "Two markings m 1 and m 2 are interleaving bisimilar, denoted by m 1 \u223c int m 2 , if there exists an interleaving bisimulation R such that (m 1 , m 2 ) \u2208 R.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 5 (Interleaving Bisimulation). Let"
        },
        {
            "text": "Interleaving bisimilarity \u223c int , which is defined as the union of all the interleaving bisimulations, is the largest interleaving bisimulation and also an equivalence relation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 5 (Interleaving Bisimulation). Let"
        },
        {
            "text": "The definition above covers also the case of an interleaving bisimulation between two BPP nets, say, N 1 = (S 1 , A, T 1 ) and N 2 = (S 2 , A, T 2 ) with S 1 \u2229 S 2 = \u2205, because we may consider just one single BPP net N = (S 1 \u222a S 2 , A, T 1 \u222a T 2 ): An interleaving bisimulation R \u2286 M (S 1 ) \u00d7 M (S 2 ) is also an interleaving bisimulation on M (S 1 \u222aS 2 )\u00d7M (S 1 \u222aS 2 ). Similar considerations hold for all the bisimulation-like definitions we propose in the following.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Remark 1 (Interleaving bisimulation between two nets)."
        },
        {
            "text": "Remark 2 (Comparing two marked nets). The definition above of interleaving bisimulation is defined over an unmarked BPP net, i.e., a net without the specification of an initial marking m 0 . Of course, if one desires to compare two marked nets, then it is enough to find an interleaving bisimulation (over the union of the two nets, as discussed in the previous remark), containing the pair composed of the respective initial markings. This approach is followed for all the other bisimulation-like definitions we propose.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Remark 1 (Interleaving bisimulation between two nets)."
        },
        {
            "text": "Continuing Example 1 about Fig. 1 , it is easy to realize that relation",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 27,
                    "end": 33,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Example 2."
        },
        {
            "text": "k = k 1 + k 2 and k, k 1 , k 2 \u2265 0} is an interleaving bisimulation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example 2."
        },
        {
            "text": "We start with the most concrete equivalence definable over BPP nets: isomorphism equivalence. Definition 6 (Isomorphism). Given two BPP nets N 1 = (S 1 , A, T 1 ) and N 2 = (S 2 , A, T 2 ), we say that N 1 and N 2 are isomorphic via f if there exists a type-preserving bijection f : S 1 \u222a T 1 \u2192 S 2 \u222a T 2 (i.e., a bijection such that f (S 1 ) = S 2 and f (T 1 ) = T 2 ), satisfying the following condition:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Causality-Based Semantics"
        },
        {
            "text": "where f is homomorphically extended to markings (i.e., f is applied element-wise to each component of the marking:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Causality-Based Semantics"
        },
        {
            "text": "Two BPP net systems N 1 (m 1 ) and N 2 (m 2 ) are rooted isomorphic if the isomorphism f ensures, additionally, that f (m 1 ) = m 2 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Causality-Based Semantics"
        },
        {
            "text": "In order to define our approach to causality-based semantics for BPP nets, we need some auxiliary definitions, adapting those in, e.g., [3, 9, 10] .",
            "cite_spans": [
                {
                    "start": 136,
                    "end": 139,
                    "text": "[3,",
                    "ref_id": null
                },
                {
                    "start": 140,
                    "end": 142,
                    "text": "9,",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 143,
                    "end": 146,
                    "text": "10]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Causality-Based Semantics"
        },
        {
            "text": ", the arcs of the net do not form any cycle. Note that a BPP causal net, being a BPP net, is finite; since it is acyclic, it represents a finite computation. Note also that any reachable marking of a BPP causal net is a set, i.e., this net is safe; in fact, the initial marking is a set and, assuming by induction that a reachable marking m is a set and enables t, i.e., m[t m , then also m = (m \u2022 t) \u2295 t \u2022 is a set, because the net is acyclic and because of the condition on the shape of the post-set of t (weights can only be 1).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 7 (Acyclic net). A BPP net"
        },
        {
            "text": "N(m 0 ) = (S, A, T, m 0 ) satisfying the following conditions: 1. N is acyclic; 2. \u2200s \u2208 S | \u2022 s| \u2264 1 \u2227 |s \u2022 | \u2264 1 (i.e., the places are not branched); 3. \u2200s \u2208 S m 0 (s) = 1 if \u2022 s = \u2205 0 otherwise; 4. \u2200t \u2208 T t \u2022 (s) \u2264 1 for all s \u2208 S (i.e.,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 8 (Causal net). A BPP causal net is a marked BPP net"
        },
        {
            "text": "causal net N(m 0 ) = (S, A, T, m 0 ), we can extract the partial order of its events",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 9 (Partial orders of events from a causal net). From a BPP"
        },
        {
            "text": "Two partial orders (T 1 , 1 ) and (T 2 , 2 ) are isomorphic if there is a labelpreserving, order-preserving bijection g : T 1 \u2192 T 2 , i.e., a bijection such that l 1 (t) = l 2 (g(t)) and t 1 t if and only if g(t) 2 g(t ).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 9 (Partial orders of events from a causal net). From a BPP"
        },
        {
            "text": "We also say that g is an event isomorphism between the causal nets N 1 and N 2 if it is an isomorphism between their associated partial orders of events E N1 and E N2 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 9 (Partial orders of events from a causal net). From a BPP"
        },
        {
            "text": "Remark 3. As the initial marking of a causal net is fixed by its shape (according to item 3 of Definition 8), in the following, in order to make the notation lighter, we often omit the indication of the initial marking, so that the causal net N(m 0 ) is denoted by N.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 9 (Partial orders of events from a causal net). From a BPP"
        },
        {
            "text": "N = (S, A, T, m 0 ) and N = (S , A, T , m 0 ), we say that N moves in one step to N through t, denoted by N[t N , if \u2022 t \u2208 Max(N), T = T \u222a {t} and S = S \u222a t \u2022 ; in other words, N extends N by one event t.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 10 (Moves of a causal net). Given two BPP causal nets"
        },
        {
            "text": "which is type-preserving, i.e., such that \u03c1(S) \u2286 S and \u03c1(T) \u2286 T , satisfying the following: Definition 6) and",
            "cite_spans": [
                {
                    "start": 92,
                    "end": 105,
                    "text": "Definition 6)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Definition 11 (Folding and Process). A folding from a BPP causal net"
        },
        {
            "text": "N (m 0 ), two of its processes (N 1 , \u03c1 1 ) and (N 2 , \u03c1 2 ) are isomorphic via f if N 1 and N 2 are rooted isomorphic via bijection f (see\u03c1 1 = \u03c1 2 \u2022 f .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 12 (Isomorphic processes). Given a BPP net system"
        },
        {
            "text": "Let N (m 0 ) = (S, A, T, m 0 ) be a BPP system and let (N i , \u03c1 i ), for i = 1, 2, be two processes of N (m 0 ). We say that",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 13 (Moves of a process)."
        },
        {
            "text": "We would like to define a bisimulation-based equivalence which is coarser than the branching-time semantics of isomorphism of (nondeterministic) occurrence nets (or unfoldings) [5, 7, 16] and finer than the linear-time semantics of isomorphism of causal nets [2, 17] . The proposed novel behavioral equivalence is the following causal-net bisimulation, inspired by [9] . ",
            "cite_spans": [
                {
                    "start": 177,
                    "end": 180,
                    "text": "[5,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 181,
                    "end": 183,
                    "text": "7,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 184,
                    "end": 187,
                    "text": "16]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 259,
                    "end": 262,
                    "text": "[2,",
                    "ref_id": null
                },
                {
                    "start": 263,
                    "end": 266,
                    "text": "17]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 365,
                    "end": 368,
                    "text": "[9]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "Causal-Net Bisimulation"
        },
        {
            "text": "Two markings m 1 and m 2 of N are cn-bisimilar (or cn-bisimulation equivalent), denoted by",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "Let us denote by \u223c cn R = (m 1 , m 2 ) m 1 is cn-bisimilar to m 2 thanks to R . Of course, cn-bisimilarity \u223c cn can be seen as",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "R is a causal-net bisimulation is the largest causal-net bisimulation by item 4 of the following proposition. Proposition 1. For each BPP net N = (S, A, T ), the following hold:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "Proof. Trivial for 1, 2 and 4. For case 3, assume that (\u03c1 1 , N, Since (N, \u03c1 2 ) and (N,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "Note that (N , \u03c1 2 ) and (N , \u03c1 2 ) are isomorphic via f , where f extends f in the obvious way (notably, by mapping transition t to t). As",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "Example 3. Consider the nets in Fig. 1 . Clearly the net in a) with initial marking s 1 and the net in b) with initial marking s 3 are not isomorphic; however, we can prove that they have isomorphic unfoldings [5, 7, 16] ; moreover, s 1 \u223c cn s 3 , even if the required causal-net bisimulation contains infinitely many triples.",
            "cite_spans": [
                {
                    "start": 210,
                    "end": 213,
                    "text": "[5,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 214,
                    "end": 216,
                    "text": "7,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 217,
                    "end": 220,
                    "text": "16]",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [
                {
                    "start": 32,
                    "end": 38,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "Example 4. Consider the nets in Fig. 2 . Of course, the initial markings s 1 and s 2 do not generate isomorphic unfoldings; however, s 1 \u223c cn s 2 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 32,
                    "end": 38,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF14"
                }
            ],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "Example 5. Look at Fig. 3 . Of course, s 1 \u223c cn s 3 , even if they generate the same causal nets. In fact, s 1 a \u2212\u2192 s 2 might be matched by s 3 either with s 3 a \u2212\u2192 s 4 or with s 3 a \u2212\u2192 s 5 , so that it is necessary that s 2 \u223c cn s 4 or s 2 \u223c cn s 5 ; but this is impossible, because only s 2 can perform both b and c. Moreover, s 6 \u223c cn s 8 as they generate different causal nets.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 19,
                    "end": 25,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Definition 14 (Causal-net bisimulation). Let N = (S, A, T ) be a BPP net. A causal-net bisimulation is a relation R, composed of triples of the form"
        },
        {
            "text": "Behavioral equivalences for distributed systems, usually, observe only the events. Hence, causal-net bisimulation, which also observes the structure of the distributed state, may be considered too concrete an equivalence. We disagree with this view, as the structure of the distributed state is not less observable than the events this distributed system can perform. Among the equivalences not observing the state, the most prominent is fully-concurrent bisimulation (fcbisimulation, for short) [3] . As we think that the definition in [3] is not very practical (as it assumes implicitly a universal quantification over the infinite set of all the possible extensions of the current process), we prefer to offer here an equivalent definition, by considering a universal quantification over the finite set of the net transitions only. We define also a novel, slightly stronger version, called state-sensitive fc-bisimulation equivalence, that we prove to coincide with cn-bisimilarity.",
            "cite_spans": [
                {
                    "start": 496,
                    "end": 499,
                    "text": "[3]",
                    "ref_id": null
                },
                {
                    "start": 537,
                    "end": 540,
                    "text": "[3]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "(State-Sensitive) Fully-Concurrent Bisimulation"
        },
        {
            "text": "Let N = (S, A, T ) be a BPP net. An fc-bisimulation is a relation R, composed of triples of the form ((N 1 , \u03c1 1 ), g, (N 2 , \u03c1 2 )), where, for i = 1, 2, (N i , \u03c1 i ) is a process of N (m 0i ) for some m 0i and g is an event isomorphism between N 1 and N 2 , such that if",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 15 (Fully-concurrent bisimulation)."
        },
        {
            "text": ", \u03c1 2 (t 2 ) = t 2 and \u03c1 2 (Max(N 2 )) = m 2 ; 4. g = g \u222a {(t 1 , t 2 )}, and finally, 5. ((N 1 , \u03c1 1 ), g , (N 2 , \u03c1 2 ) ) \u2208 R; ii) symmetrically, if \u03c1 2 (Max(N 2 )) moves first. ((N, \u03c1), id, (N, \u03c1) ) \u2203m. (N, \u03c1) is a process of N (m) and id is the identity event isomorphism on N} is an fc-bisimulation; that (ii) the inverse relation R \u22121 of an fcbisimulation R is an fc-bisimulation; that (iii) the composition",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 90,
                    "end": 121,
                    "text": "((N 1 , \u03c1 1 ), g , (N 2 , \u03c1 2 )",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 180,
                    "end": 199,
                    "text": "((N, \u03c1), id, (N, \u03c1)",
                    "ref_id": null
                },
                {
                    "start": 206,
                    "end": 212,
                    "text": "(N, \u03c1)",
                    "ref_id": null
                }
            ],
            "section": "Definition 15 (Fully-concurrent bisimulation)."
        },
        {
            "text": ")} of two fc-bisimulations R 1 and R 2 is an fc-bisimulation; and finally, that (iv) the union i\u2208I R i of a family of fc-bisimulations R i is an fc-bisimulation. Fig. 3 we argued that s 6 cn s 8 ; however, s 6 \u223c fc s 8 , because, even if they do not generate the same causal net, still they generate isomorphic partial orders of events. On the contrary, s 1 fc s 3 because, even if they generate the same causal nets, the two markings have a different branching structure. Note that the deadlock place s 7 and the empty marking \u03b8 are fcbisimilar.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 162,
                    "end": 168,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Definition 15 (Fully-concurrent bisimulation)."
        },
        {
            "text": "An fcbisimulation R is state-sensitive if for each triple ((N 1 , \u03c1 1 ), g, (N 2 , \u03c1 2 )) \u2208 R, the maximal markings have equal size, i.e., |\u03c1 1 (Max(N 1 ))| = |\u03c1 2 (Max(N 2 ))|. Two markings m 1 and m 2 of N are sfc-bisimilar, denoted by m 1 \u223c sf c m 2 , if there exists a state-sensitive fc-bisimulation R containing a triple ((N 0 1 , \u03c1 0 1 ), g 0 , (N 0 2 , \u03c1 0 2 )), where N 0 i contains no transitions, g 0 is empty and",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 16 (State-sensitive fully-concurrent bisimulation)."
        },
        {
            "text": "Of course, also the above definition is defined coinductively; as we can prove an analogous of Proposition 1, it follows that \u223c sf c is an equivalence relation, too. N, \u03c1 1 ), id, (N, \u03c1 2 ) ) (\u03c1 1 , N, \u03c1 2 ) \u2208 R}, where id is the identity event isomorphism on N, is a state-sensitive fc-bisimulation. Since R contains the triple ((N 0 , \u03c1 0 1 ), id, (N 0 , \u03c1 0 2 )), it follows that m 1 \u223c sf c m 2 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 166,
                    "end": 189,
                    "text": "N, \u03c1 1 ), id, (N, \u03c1 2 )",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Definition 16 (State-sensitive fully-concurrent bisimulation)."
        },
        {
            "text": "\u21d0) (Sketch). If m 1 \u223c sf c m 2 , then there exists a state-sensitive fc-bisimulation R containing a triple ((N 0 1 , \u03c1 0 1 ), g 0 , (N 0 2 , \u03c1 0 2 )), where N 0 i contains no transitions, g 0 is empty and \u03c1 0 i (Min(N 0 i )) = \u03c1 0 i (Max(N 0 i )) = m i for i = 1, 2, with |m 1 | = |m 2 |. Hence, N 0 1 and N 0 2 are isomorphic, where the isomorphism function f 0 is a suitably chosen bijection from Min(N 0 1 ) to Min(N 0 2 ). 1 We build the candidate causal-net bisimulation R inductively, by first including the triple (\u03c1 0 1 , N 0 1 , \u03c1 0 2 \u2022 f 0 ); hence, if R is a causal-net bisimulation, then m 1 \u223c cn m 2 .",
            "cite_spans": [
                {
                    "start": 427,
                    "end": 428,
                    "text": "1",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Definition 16 (State-sensitive fully-concurrent bisimulation)."
        },
        {
            "text": "Since ((N 0 1 , \u03c1 0 1 ), g 0 , (N 0 2 , \u03c1 0 2 )) \u2208 R and R is a state-sensitive fully-concurrent bisimulation, if \u03c1 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 16 (State-sensitive fully-concurrent bisimulation)."
        },
        {
            "text": ", \u03c1 2 (t 2 ) = t 2 and \u03c1 2 (Max(N 2 )) = m 2 ; 4. g = g 0 \u222a {(t 1 , t 2 )}, and finally, 5. ((N 1 , \u03c1 1 ), g, (N 2 , \u03c1 2 )) \u2208 R, with |\u03c1 1 (Max(N 1 ))| = |\u03c1 2 (Max(N 2 ))|.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 16 (State-sensitive fully-concurrent bisimulation)."
        },
        {
            "text": "It is necessary that the isomorphism f 0 has been chosen in such a way that f 0 ( \u2022 t 1 ) = \u2022 t 2 . As |\u03c1 0 1 (Max(N 0 1 ))| = |\u03c1 0 2 (Max(N 0 2 ))| and |\u03c1 1 (Max(N 1 ))| = |\u03c1 2 (Max(N 2 ))|, it is necessary that t 1 and t 2 have the same post-set size; hence, N 1 and N 2 are isomorphic and the bijection f 0 can be extended to bijection f with the pair {(t 1 , t 2 )} and also with a suitably chosen bijection between the post-sets of these two transitions. Hence, we include into R also the triple (\u03c1 1 , N 1 , \u03c1 2 \u2022 f ). Symmetrically, if \u03c1 0 2 (N 0 2 ) moves first. By iterating this procedure, we add (possibly unboundedly many) triples to R. It is an easy observation to realize that R is a causal-net bisimulation. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 16 (State-sensitive fully-concurrent bisimulation)."
        },
        {
            "text": "Proof \u21d0). Of course, a state-sensitive fc-bisimulation is also an fc-bisimulation. \u21d2). If there are no deadlock places, an fc-bisimulation must be state sensitive. In fact, if two related markings have a different size, then, since no place is a deadlock and the BPP net transitions have singleton pre-set, they would originate different partial orders of events. Proof \u21d2). If m 1 \u223c fc m 2 , then there exists an fc-bisimulation R on N containing a triple ((N 0 1 , \u03c1 0 1 ), g 0 , (N 0 2 , \u03c1 0 2 )), where N 0 i contains no transitions, g 0 is empty and",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 4 (Fc-bisimilarity and sfc-bisimilarity coincide on deadlock-free nets). For each deadlock-free BPP net"
        },
        {
            "text": "} is an fc-bisimulation on d(N ). By Proposition 4, R is actually a state-sensitive fully-concurrent bisimulation on d(N ). Note that R contains the triple ((d(N 0 ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 4 (Fc-bisimilarity and sfc-bisimilarity coincide on deadlock-free nets). For each deadlock-free BPP net"
        },
        {
            "text": "is the restriction of \u03c1 i on the places of d(N i ), for i = 1, 2, and g is such that",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 4 (Fc-bisimilarity and sfc-bisimilarity coincide on deadlock-free nets). For each deadlock-free BPP net"
        },
        {
            "text": "In this section, we recall the main definitions and results about team bisimulation equivalence, outlined in [13] . We also include one novel, main result: causal-net bisimilarity coincides with team bisimilarity. ",
            "cite_spans": [
                {
                    "start": 109,
                    "end": 113,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Team Bisimulation Equivalence"
        },
        {
            "text": "Note that, by definition, two markings are related by R \u2295 only if they have the same size; in fact, the axiom states that the empty marking is related to itself, while the rule, assuming by induction that m 1 and m 2 have the same size, ensures that s 1 \u2295 m 1 and s 2 \u2295 m 2 have the same size. An alternative way to define that two markings m 1 and m 2 are related by R \u2295 is to state that m 1 can be represented as s 1 \u2295 s 2 \u2295 . . . \u2295 s k , m 2 can be represented as s 1 \u2295 s 2 \u2295 . . . \u2295 s k and (s i , s i ) \u2208 R for i = 1, . . . , k.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Additive Closure and Its"
        },
        {
            "text": "It is possible to prove that if R is an equivalence relation, then its additive closure R \u2295 is also an equivalence relation. Moreover, if R 1 \u2286 R 2 , then R \u2295 1 \u2286 R \u2295 2 , i.e., the additive closure is monotonic.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Additive Closure and Its"
        },
        {
            "text": "Two places s and s are team bisimilar (or team bisimulation equivalent), denoted s \u223c s , if there exists a team bisimulation R such that (s, s ) \u2208 R. The team bisimulation R above is a very simple, finite relation, proving that s 1 and s 3 are team bisimulation equivalent. In Example 2, in order to show that s 1 and s 3 are interleaving bisimilar, we had to introduce a complex relation, with infinitely many pairs. In Example 3 we argued that s 1 \u223c cn s 3 , even if we did not provide any causal-net bisimulation (which would be composed of infinitely many triples). Fig. 2 . Of course, s 1 \u223c s 2 because the finite relation R = {(s 1 , s 2 ), (s 1 , s 3 ), (s 1 , s 4 )} is a team bisimulation. Actually, all the places are pairwise team bisimilar. In Example 4 we argued that s 1 \u223c cn s 2 , but the justifying causal-net bisimulation would contain infinitely many triples. Fig. 4 . It is easy to see that R = {(s 1 , s 4 ), (s 2 , s 5 ), (s 2 , s 6 ), (s 2 , s 7 ), (s 3 , s 8 ), (s 3 , s 9 )} is a team bisimulation. This example shows that team bisimulation is compatible with duplication of behavior and fusion of places.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 570,
                    "end": 576,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF14"
                },
                {
                    "start": 878,
                    "end": 884,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "Definition 19 (Team bisimulation). Let N = (S, A, T ) be a BPP net. A team bisimulation is a place relation"
        },
        {
            "text": "It is not difficult to prove [13] that (i) the identity relation I S = {(s, s) s \u2208 S} is a team bisimulation; that (ii) the inverse relation R \u22121 = {(s , s) (s, s ) \u2208 R} of a team bisimulation R is a team bisimulation; that (iii) the relational composition R 1 \u2022 R 2 = {(s, s ) \u2203s .(s, s ) \u2208 R 1 \u2227 (s , s ) \u2208 R 2 } of two team bisimulations R 1 and R 2 is a team bisimulation; and, finally, that (iv) the union i\u2208I R i of team bisimulations R i is a team bisimulation. Remember that s \u223c s if there exists a team bisimulation containing the pair (s, s ). This means that \u223c is the union of all team bisimulations, i.e.,",
            "cite_spans": [
                {
                    "start": 29,
                    "end": 33,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [
                {
                    "start": 267,
                    "end": 277,
                    "text": "= {(s, s )",
                    "ref_id": null
                }
            ],
            "section": "Example 10. Consider the nets in"
        },
        {
            "text": "Hence \u223c is also a team bisimulation, the largest such relation. Moreover, by the property listed above, relation \u223c \u2286 S \u00d7 S is an equivalence relation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example 10. Consider the nets in"
        },
        {
            "text": "It is well-known that the optimal algorithm for computing bisimilarity over a finite-state LTS with n states and m transitions has O(m\u00b7 log n) time complexity [19] ; this very same partition refinement algorithm can be easily adapted also for team bisimilarity over BPP nets; it is enough to start from an initial partition composed of two blocks: S and {\u03b8}, and to consider the little additional cost due to the fact that the reached markings are to be related by the additive closure of the current partition; this extra cost is related to the size of the post-set of the net transitions; if p is the size of the largest post-set of the net transitions, then the time complexity is O(m\u00b7p 2 \u00b7 log (n+1)), where m is the number of the net transitions and n is the number of the net places.",
            "cite_spans": [
                {
                    "start": 159,
                    "end": 163,
                    "text": "[19]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Remark 5 (Complexity 1)."
        },
        {
            "text": "Starting from team bisimulation equivalence \u223c, which has been computed over the places of an unmarked BPP net N , we can lift it over the markings of N in a distributed way: m 1 is team bisimulation equivalent to m 2 if these two markings are related by the additive closure of \u223c, i.e., if (m 1 , m 2 ) \u2208\u223c \u2295 , usually denoted by",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Team Bisimilarity over Markings"
        },
        {
            "text": "Remark 6 (Complexity 2). Once \u223c has been computed once and for all for the given net (in O(m \u00b7 p 2 \u00b7 log (n + 1)) time), the algorithm in [13] checks whether two markings m 1 and m 2 are team bisimulation equivalent in O(k 2 ) time, where k is the size of the markings. In fact, if \u223c is implemented as an adjacency matrix, then the complexity of checking if two markings m 1 and m 2 (represented as an array of places with multiplicities) are related by \u223c \u2295 is O(k 2 ), because the problem is essentially that of finding for each element s 1 of m 1 a matching, \u223c-related element s 2 of m 2 . Moreover, if we want to check whether other two markings of the same net are team bisimilar, we can reuse the already computed \u223c relation, so that the time complexity is again quadratic.",
            "cite_spans": [
                {
                    "start": 138,
                    "end": 142,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Team Bisimilarity over Markings"
        },
        {
            "text": "Continuing Example 8 about the semi-counters, the marking s 1 \u2295 2 \u00b7 s 2 is team bisimilar to the following markings of the net in (b): s 3 \u2295 2 \u00b7 s 5 , or s 3 \u2295 s 5 \u2295 s 6 , or s 3 \u2295 2 \u00b7 s 6 , or s 4 \u2295 2 \u00b7 s 5 , or s 4 \u2295 s 5 \u2295 s 6 , or s 4 \u2295 2 \u00b7 s 6 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example 11."
        },
        {
            "text": "Of course, two markings m 1 and m 2 are not team bisimilar if there is no bijective, team-bisimilar-preserving mapping between them; this is the case when m 1 and m 2 have different size, or if the algorithm in [13] ends with b holding false, i.e., by singling out a place s i in (the residual of) m 1 which has no matching team bisimilar place in (the residual of) m 2 .",
            "cite_spans": [
                {
                    "start": 211,
                    "end": 215,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Example 11."
        },
        {
            "text": "The following theorem provides a characterization of team bisimulation equivalence \u223c \u2295 as a suitable bisimulation-like relation over markings. It is interesting to observe that this characterization gives a dynamic interpretation of team bisimulation equivalence, while Definition 18 gives a structural definition of team bisimulation equivalence \u223c \u2295 as the additive closure of \u223c. The proof is outlined in [13] . ",
            "cite_spans": [
                {
                    "start": 406,
                    "end": 410,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Example 11."
        },
        {
            "text": "By the theorem above, it is clear that \u223c \u2295 is an interleaving bisimulation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example 11."
        },
        {
            "text": "Let N = (S, A, T ) be a BPP net. If m 1 \u223c \u2295 m 2 , then m 1 \u223c int m 2 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Corollary 1 (Team bisimilarity is finer than interleaving bisimilarity)."
        },
        {
            "text": "Theorem 3 (Team bisimilarity implies cn-bisimilarity). Let N = (S, A, T ) be a BPP net. If m 1 \u223c \u2295 m 2 , then m 1 \u223c cn m 2 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Team Bisimilarity and Causal-Net Bisimilarity Coincide"
        },
        {
            "text": "Proof. Let R = {(\u03c1 1 , N, \u03c1 2 ) (N, \u03c1 1 ) is a process of N (m 1 ) and (N, \u03c1 2 ) is a process of N (m 2 ) such that \u03c1 1 (s) \u223c \u03c1 2 (s), for all s \u2208 Max(N)}. We want to prove that R is a causal-net bisimulation. First, observe that, any triple of the form (\u03c1 0 1 , N 0 , \u03c1 0 2 ), where N 0 is a BPP causal net with no transitions, \u03c1 0 i (Max(N 0 )) = m i and \u03c1 0 1 (s) \u223c \u03c1 0 2 (s), for all s \u2208 Max(N 0 ), belongs to R and its existence is justified by the hypothesis m 1 \u223c \u2295 m 2 . Note also that if the relation R is a causal-net bisimulation, then this triple ensures that m 1 \u223c cn m 2 . Now assume (\u03c1 1 , N, \u03c1 2 ) \u2208 R. In order to be a causal-net bisimulation triple, it is necessary that i) \u2200t 1 such that \u03c1 1 (Max(N))[t 1 m 1 , \u2203t 2 , m 2 , t, N , \u03c1 1 , \u03c1 2 such that 1. Let t 1 be any transition such that \u03c1 1 (Max(N))[t 1 m 1 and let s 1 = \u2022 t 1 . Since by hypothesis we have that \u03c1 1 (s) \u223c \u03c1 2 (s), for all s \u2208 Max(N), if s 1 = \u03c1 1 (s ), then there exists s 2 = \u03c1 2 (s ) such that s 1 \u223c s 2 . Hence, there exists t 2 such that",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Team Bisimilarity and Causal-Net Bisimilarity Coincide"
        },
        {
            "text": ", so that, by Theorem 2, \u03c1 2 (Max(N))[t 2 m 2 and m 1 \u223c \u2295 m 2 . Therefore, it is really possible to extend the causal net N to the causal net N through a suitable transition t such that \u2022 t = s , as required above, and to extend \u03c1 1 and \u03c1 2 to \u03c1 1 and \u03c1 2 , respectively, in such a way that \u03c1 1 (s) \u223c \u03c1 2 (s), for all s \u2208 t \u2022 because t \u2022 1 \u223c \u2295 t \u2022 2 . Summing up, for the move t 1 , we have that (\u03c1 1 , N , \u03c1 2 ) \u2208 R because \u03c1 1 (s) \u223c \u03c1 2 (s), for all s \u2208 Max(N ), as required. Symmetrically, if \u03c1 2 (Max(N)) moves first. Proof. By Corollary 2 and Theorem 1, we get the thesis.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Team Bisimilarity and Causal-Net Bisimilarity Coincide"
        },
        {
            "text": "Therefore, our characterization of cn-bisimilarity and sfc-bisimilarity, which are, in our opinion, the intuitively correct (strong) causal semantics for BPP nets, is quite appealing because it is based on the very simple technical definition of team bisimulation on the places of the unmarked net, and, moreover, offers a very efficient algorithm to check if two markings are cn-bisimilar (see Remarks 5 and 6).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Corollary 3 (Team bisimilarity and sfc-bisimilarity coincide). Let"
        },
        {
            "text": "We provide the definition of h-bisimulation on places for unmarked BPP nets, adapting the definition of team bisimulation on places (cf. Definition 19) . In this definition, the empty marking \u03b8 is considered as an additional place, so that the relation is defined not on S, rather on S \u222a {\u03b8}; therefore, the symbols p 1 and p 2 that occur in the definition below can only denote either the empty marking \u03b8 or a single place.",
            "cite_spans": [
                {
                    "start": 137,
                    "end": 151,
                    "text": "Definition 19)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "H-Team Bisimulation"
        },
        {
            "text": "\u2022 \u2200m 1 such that p 1 \u2212\u2192 m 1 , \u2203m 2 such that p 2 \u2212\u2192 m 2 and (m 1 , m 2 ) \u2208 R \u2295 , \u2022 \u2200m 2 such that p 2 \u2212\u2192 m 2 , \u2203m 1 such that p 1 \u2212\u2192 m 1 and (m 1 , m 2 ) \u2208 R \u2295 . p 1 and p 2 are h-team bisimilar (or h-team bisimulation equivalent), denoted p 1 \u223c h p 2 , if there exists an h-team bisimulation R such that (p 1 , p 2 ) \u2208 R.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "Since a team bisimulation is also an h-team bisimulation, we have that team bisimilarity \u223c implies h-team bisimilarity \u223c h . This implication is strict as illustrated in the following example.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "Example 12. Consider the nets in Fig. 3 . It is not difficult to realize that s 6 and s 8 are h-team bisimilar because R = {(s 6 , s 8 ), (s 7 , \u03b8)} is an h-team bisimulation. In fact, s 6 can reach s 7 by performing a, and s 8 can reply by reaching the empty marking \u03b8, and (s 7 , \u03b8) \u2208 R. In Example 6 we argued that s 6 \u223c fc s 8 and in fact we will prove that h-team bisimilarity coincide with fc-bisimilarity.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 33,
                    "end": 39,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "Remark 7 (Additive closure properties). Note that the additive closure of an h-team bisimulation R does not ensure that if two markings are related by R \u2295 , then they must have the same size. For instance, considering the above relation R = {(s 6 , s 8 ), (s 7 , \u03b8)}, we have that, e.g., s 6 \u2295 s 7 R \u2295 s 8 , because \u03b8 is the identity for multiset union. However, the other properties of the additive closure described in Sect. 4.1 hold also for these more general place relations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "It is not difficult to prove that, for any BPP net N = (S, A, T ), the following hold:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "Hence, \u223c h is also an h-team bisimulation, the largest such relation. Moreover, by the observations above, relation \u223c h \u2286 (S \u222a {\u03b8}) \u00d7 (S \u222a {\u03b8}) is an equivalence relation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "Starting from h-team bisimulation equivalence \u223c h , which has been computed over the places (and the empty marking) of an unmarked BPP net N , we can lift it over the markings of N in a distributed way: m 1 is h-team bisimulation equivalent to m 2 if these two markings are related by the additive closure of",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "is an equivalence relation.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Definition 20 (H-team bisimulation). Let N = (S, A, T ) be a BPP net. An h-team bisimulation is a place relation"
        },
        {
            "text": "Computing \u223c h is not more difficult than computing \u223c. The partition refinement algorithm in [19] can be adapted also in this case. It is enough to consider the empty marking \u03b8 as an additional, special place which is h-team bisimilar to each deadlock place. Hence, the initial partition considers two sets: one composed of all the deadlock places and \u03b8, the other one with all the non-deadlock places. Therefore, the time complexity is also in this case O(m \u00b7 p 2 \u00b7 log (n + 1)), where m is the number of the net transitions, n is the number of the net places and p the size of the largest post-set of the net transitions.",
            "cite_spans": [
                {
                    "start": 92,
                    "end": 96,
                    "text": "[19]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Remark 8 (Complexity 3)."
        },
        {
            "text": "Once \u223c h has been computed once and for all for the given net, the complexity of checking whether two markings m 1 and m 2 are h-team bisimulation equivalent, according to the algorithm in [13] , is O(k 2 ), where k is the size of the largest marking, since the problem is essentially that of finding for each element s 1 (not \u223c h -related to \u03b8) of m 1 a matching, \u223c h -related element s 2 of m 2 (and then checking that all the remaining elements of m 1 and m 2 are \u223c h -related to \u03b8).",
            "cite_spans": [
                {
                    "start": 189,
                    "end": 193,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Remark 8 (Complexity 3)."
        },
        {
            "text": "In this section, we first show that h-team bisimilarity over a BPP net N coincides with team-bisimilarity over its associated deadlock-free net d(N ). A consequence of this result is that h-team bisimilarity coincides with fc-bisimilarity on BPP nets. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "H-Team Bisimilarity and Fully-Concurrent Bisimilarity Coincide"
        },
        {
            "text": "Team bisimilarity is the most natural, intuitive and simple extension of LTS bisimilarity to BPP nets; it also has a very low complexity, actually lower than any other equivalence for BPP nets. Moreover, it coincides with causal-net bisimilarity and state-sensitive fully-concurrent bisimilarity, hence it corresponds to the intuitively correct bisimulation-based causal semantics for BPP nets. Moreover, it coincides also with structure-preserving bisimilarity, because our causalnet bisimilarity is rather similar to its process-oriented characterization in [9] . From a technical point of view, team bisimulation seems a sort of egg of Columbus: a simple (actually, a bit surprising in its simplicity) solution for a presumedly hard problem. This paper is not only an addition to [13] , where team bisimilarity was originally introduced, but also an extension to a team-style characterization of fully-concurrent bisimilarity, namely h-team bisimilarity. We think that state-sensitive fc-bisimilarity (hence, also team bisimilarity) is more accurate than fc-bisimilarity (hence, h-team bisimilarity) because it is resource-aware, i.e., it is sensitive to the number of resources that are present in the net. This more concrete equivalence is justified in, e.g., the area of information flow security [14] .",
            "cite_spans": [
                {
                    "start": 560,
                    "end": 563,
                    "text": "[9]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 783,
                    "end": 787,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 1303,
                    "end": 1307,
                    "text": "[14]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion"
        },
        {
            "text": "Our complexity results for fc-bisimilarity in terms of the equivalent h-team bisimilarity (cf. Remark 8), seem comparable with those in [6] , where, by using an event structure [20] semantics, Fr\u00f6schle et al. show that history-preserving bisimilarity (hpb, for short) is decidable for the BPP process algebra with guarded summation in O(n 3 \u00b7 log n) time, where n is the size of the involved BPP terms.",
            "cite_spans": [
                {
                    "start": 136,
                    "end": 139,
                    "text": "[6]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 177,
                    "end": 181,
                    "text": "[20]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion"
        },
        {
            "text": "However, this value n is strictly larger than the size of the corresponding BPP net. In fact, in [6] the size of a BPP term p is defined as \"the total number of occurrences of symbols (including parentheses)\", where p is defined by means of a concrete syntax. E.g., p = (a.0) | (a.0) has size 11, while the net semantics for p generates one place and one transition (and 2 tokens). For a comparison of team bisimilarity with other equivalences for BPP, we refer you to [13] .",
            "cite_spans": [
                {
                    "start": 97,
                    "end": 100,
                    "text": "[6]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 469,
                    "end": 473,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion"
        },
        {
            "text": "In [13] we presented a modal logic characterization of \u223c \u2295 and also a finite axiomatization for the process algebra BPP (with guarded sum and guarded recursion). As a future work, we plan to extend these results to \u223c \u2295 h , hence equipping fc-bisimilarity (and hpb) with a logic characterization and an axiomatic one for the process algebra BPP.",
            "cite_spans": [
                {
                    "start": 3,
                    "end": 7,
                    "text": "[13]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "The identity relation I S = {(s, s) s \u2208 S} is an h-team bisimulation",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "R} of an h-team bisimulation R is an h-team bisimulation",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "the relational composition R 1 \u2022 R 2 = {(p, p ) \u2203p .(p, p ) \u2208 R 1 \u2227",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "R 2 } of two h-team bisimulations R 1 and R 2 is an h-team bisimulation",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Strong bisimilarity on nets revisited",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Belmesk",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Schnoebelen",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "Relation \u223c h is the union of all h-team bisimulations, i.e., References 1. Autant",
            "volume": "506",
            "issn": "",
            "pages": "295--312",
            "other_ids": {
                "DOI": [
                    "10.1007/3-540-54152-7_71"
                ]
            }
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Sequential and concurrent behavior in Petri net theory",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Best",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Devillers",
                    "suffix": ""
                }
            ],
            "year": 1987,
            "venue": "Theor. Comput. Sci",
            "volume": "55",
            "issn": "1",
            "pages": "87--136",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Concurrent bisimulations in Petri nets",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Best",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Devillers",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Kiehn",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Pomello",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "Acta Informatica",
            "volume": "28",
            "issn": "3",
            "pages": "231--264",
            "other_ids": {
                "DOI": [
                    "10.1007/BF01178506"
                ]
            }
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Decidability and decomposition in process algebra",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Christensen",
                    "suffix": ""
                }
            ],
            "year": 1993,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Branching processes of Petri nets",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Engelfriet",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "Acta Informatica",
            "volume": "28",
            "issn": "6",
            "pages": "575--591",
            "other_ids": {
                "DOI": [
                    "10.1007/BF01463946"
                ]
            }
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Non-interleaving bisimulation equivalences on basic parallel processes",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Fr\u00f6schle",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Jancar",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Lasota",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Sawa",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "Inf. Comput",
            "volume": "208",
            "issn": "1",
            "pages": "42--62",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Petri net models for algebraic theories of concurrency",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Van Glabbeek",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Vaandrager",
                    "suffix": ""
                }
            ],
            "year": 1987,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Equivalence notions for concurrent systems and refinement of actions",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Van Glabbeek",
                    "suffix": ""
                },
                {
                    "first": "U",
                    "middle": [],
                    "last": "Goltz",
                    "suffix": ""
                }
            ],
            "year": 1989,
            "venue": "MFCS 1989",
            "volume": "379",
            "issn": "",
            "pages": "237--248",
            "other_ids": {
                "DOI": [
                    "10.1007/3-540-51486-4_71"
                ]
            }
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Structure preserving bisimilarity, supporting an operational petri net semantics of CCSP",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Glabbeek",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Correct System Design",
            "volume": "9360",
            "issn": "",
            "pages": "99--130",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-319-23506-6_9"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "The non-sequential behaviour of Petri nets",
            "authors": [
                {
                    "first": "U",
                    "middle": [],
                    "last": "Goltz",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Reisig",
                    "suffix": ""
                }
            ],
            "year": 1983,
            "venue": "Inf. Control",
            "volume": "57",
            "issn": "2-3",
            "pages": "125--147",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Introduction to Concurrency Theory: Transition Systems and CCS. EATCS Texts in Theoretical Computer Science",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Gorrieri",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Versari",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-319-21491-7"
                ]
            }
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Process Algebras for Petri Nets: The Alphabetization of Distributed Systems. EATCS Monographs in Theoretical Computer Science",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Gorrieri",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-319-55559-1"
                ]
            }
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Team bisimilarity, and its associated modal logic, for BPP nets. Acta Informatica",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Gorrieri",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1007/s00236-020-00377-4"
                ]
            }
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Interleaving vs true concurrency: some instructive security examples",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Gorrieri",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Petri Nets 2020",
            "volume": "12152",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Communication and Concurrency",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Milner",
                    "suffix": ""
                }
            ],
            "year": 1989,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Petri nets, event structures and domains, part I. Theor",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Nielsen",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "D"
                    ],
                    "last": "Plotkin",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Winskel",
                    "suffix": ""
                }
            ],
            "year": 1981,
            "venue": "Comput. Sci",
            "volume": "13",
            "issn": "1",
            "pages": "85--108",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Nets, Terms and Formulas",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "R"
                    ],
                    "last": "Olderog",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "",
            "volume": "23",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Petri Net Theory and the Modeling of Systems",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "L"
                    ],
                    "last": "Peterson",
                    "suffix": ""
                }
            ],
            "year": 1981,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Three partition refinement algorithms",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Paige",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "E"
                    ],
                    "last": "Tarjan",
                    "suffix": ""
                }
            ],
            "year": 1987,
            "venue": "SIAM J. Comput",
            "volume": "16",
            "issn": "6",
            "pages": "973--989",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Event structures",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Winskel",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Brauer",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Reisig",
                    "suffix": ""
                }
            ],
            "year": 1987,
            "venue": "ACPN 1986",
            "volume": "255",
            "issn": "",
            "pages": "325--392",
            "other_ids": {
                "DOI": [
                    "10.1007/3-540-17906-2_31"
                ]
            }
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "BPP net is a tuple N = (S, A, T ), where \u2022 S is the finite set of places, ranged over by s (possibly indexed), \u2022 A is the finite set of labels, ranged over by (possibly indexed), and \u2022 T \u2286 S \u00d7 A \u00d7 M (S) is the finite set of transitions, ranged over by t (possibly indexed).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "The net representing a semi-counter in (a), and a variant in (b)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "The firing of t enabled at m produces the marking m = (m \u2022 t) \u2295 t \u2022 , written m[t m . A firing sequence starting at m is defined inductively as follows: \u2022 m[\u03b5 m is a firing sequence (where \u03b5 denotes an empty sequence of transitions) and \u2022 if m[\u03c3 m is a firing sequence and m [t m , then m[\u03c3t m is a firing sequence. If \u03c3 = t 1 . . . t n (for n \u2265 0) and m[\u03c3 m is a firing sequence, then there exist m 1 , . . . , m n+1 such that m = m 1 [t 1 m 2 [t 2 . . . m n [t n m n+1 = m , and \u03c3 = t 1 . . . t n is called a transition sequence starting at m and ending at m . The set of reachable markings from m is [m = {m \u2203\u03c3.m[\u03c3 m }. Note that the reachable markings can be countably infinite. A BPP net system N (m 0 ) = (S, A, T, m 0 ) is safe if each marking m reachable from the initial marking m 0 is a set, i.e., \u2200m \u2208 [m 0 , m(s) \u2264 1 for all s \u2208 S. The set of reachable places from s is reach(s) = m\u2208[s dom(m).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "all the arcs have weight 1). We denote by Min(N) the set m 0 , and by Max(N) the set {s \u2208 S s \u2022 = \u2205}.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "\u03c1 2 (t) = t 2 and \u03c1 2 (Max(N )) = m 2 ; and finally, 4. (\u03c1 1 , N , \u03c1 2 ) \u2208 R 1 ; Some non-cn-bisimilar BPP nets",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Two markings m 1 and m 2 of N are fc-bisimilar, denoted by m 1 \u223c fc m 2 , if there exists an fc-bisimulation R containing a triple ((N 0 1 , \u03c1 0 1 ), g 0 , (N 0 2 , \u03c1 0 2 )), where N 0 i contains no transitions, g 0 is empty and \u03c1 0 i (Min(N 0 i )) = \u03c1 0 i (Max(N 0 i )) = m i for i = 1, 2. Let us denote by \u223c fc R = {(m 1 , m 2 ) m 1 is fc-bisimilar to m 2 thanks to R}. Of course, \u223c fc = {\u223c fc R R is a fully-concurrent bisimulation} = \u223c fc R , where relation R = {R R is a fully-concurrent bisimulation} is the largest fully-concurrent bisimulation. Similarly to what done in Proposition 1, we can prove that (i) the identity relation I = {",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "For each BPP net N = (S, A, T ), relation \u223c fc \u2286 M (S) \u00d7 M (S) is an equivalence relation. Example 6. In Example 5 about",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "cn-bisimilarity and sfc-bisimilarity coincide). For each BPP net N = (S, A, T ), m 1 \u223c cn m 2 if and only if m 1 \u223c sf c m 2 . Proof \u21d2). If m 1 \u223c cn m 2 , then there exists a causal-net bisimulation R such that it contains a triple (\u03c1 0 1 , N 0 , \u03c1 0 2 ), where N 0 contains no transitions and \u03c1 0 i (Min(N 0 )) = \u03c1 0 i (Max(N 0 )) = m i for i = 1, 2. Relation R = {((",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "For general P/T nets, \u223c cn is finer than \u223c sf c . E.g., consider the nets N = ({s 1 , s 2 , s 3 , s 4 }, {a}, {(s 1 \u2295 s 2 , a, s 3 \u2295 s 4 )}) and N = ({s 1 , s 2 , s 3 }, {a}, {(s 1 , a, s 3 )}). Of course, s 1 \u2295 s 2 \u223c sf c s 1 \u2295 s 2 , but s 1 \u2295 s 2 cn s 1 \u2295 s 2 .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "We first define a cleaning-up operation on a BPP net N , yielding a net d(N )   where all the deadlock places of N are removed. Then, we show that two markings m 1 and m 2 of N are fc-bisimilar if and only if the markings d(m 1 ) and d(m 2 ), obtained by removing all the deadlock places in m 1 and m 2 respectively, are state-senstive fc-bisimilar in d(N ).Definition 17 (Deadlock-free BPP net). For each BPP netN = (S, A, T ), we define its associated deadlock-free net d(N ) as the tuple (d(S), A, d(T )) where \u2022 d(S) = S\\{s \u2208 S s }, where s if and only if \u2203m, a.s a \u2212\u2192 m; \u2022 d(T ) = {d(t) t \u2208 T }, where d(t) = ( \u2022 t, l(t),d(t \u2022 )) and d(m) \u2208 M (d(S)) is the marking obtained from m \u2208 M (S) by removing all its deadlock places. A BPP net N = (S, A, T ) is deadlock-free if all of its places are not a deadlock, i.e., d(S) = S and so d(T ) = T . Formally, given a marking m \u2208 M (S), we define d(m) as the marking d(m)(s) = m(s) if s \u2208 d(S) 0 otherwise. For instance, let us consider the FSM in Fig. 3(c). Then, d(2\u00b7s 6 \u22953\u00b7s 7 ) = 2\u00b7s 6 , or d(s 7 ) = \u03b8. Of course, d(m) is a multiset on d(S). Example 7. Let us consider the BPP net N = (S, A, T ), where S = {s 1 , s 2 }, A = {a} and T = {t 1 , t 2 }, where t 1 = (s 1 , a, s 2 ) and t 2 = (s 1 , a, \u03b8). Then, its associated deadlock-free net is d(N ) = ({s 1 }, A, {t 2 }). Note that d(t 1 ) = t 2 and d(t 2 ) = t 2 .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "Given a BPP net N = (S, A, T ) and its associated deadlockfree net d(N ) = (d(S), A, d(T )), two markings m 1 and m 2 of N are fc-bisimilar if and only if d(m 1 ) and d(m 2 ) in d(N ) are sfc-bisimilar.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF11": {
            "text": "(m i ) for i = 1, 2, and so d(m 1 ) \u223c sf c d(m 2 ). \u21d0). If d(m 1 ) \u223c sf c d(m 2 ), then there exists an sfc-bisimulation R on d(N ) containing a triple ((N 0 1 , \u03c1 0 1 ), g 0 , (N 0 2 , \u03c1 0 2 )), where N 0 i contains no transitions, g 0 is empty and \u03c1 0 i (Min(N 0 i )) = \u03c1 0 i (Max(N 0 i )) = d(m i ) for i = 1, 2. Two team bisimilar BPP nets",
            "latex": null,
            "type": "figure"
        },
        "FIGREF12": {
            "text": "Additive closure). Given a BPP net N = (S, A, T ) and a place relation R \u2286 S \u00d7 S, we define a marking relation R \u2295 \u2286 M (S) \u00d7 M (S), called the additive closure of R, as the least relation induced by the following axiom and rule.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF13": {
            "text": "Continuing Example 1 about Fig. 1, it is easy to see that relation R = {(s 1 , s 3 ), (s 1 , s 4 ), (s 2 , s 5 ), (s 2 , s 6 )} is a team bisimulation. In fact, (s 1 , s 3 ) is a team bisimulation pair because, to transition s 1 inc \u2212\u2192 s 1 \u2295 s 2 , s 3 can respond with s 3 inc \u2212\u2192 s 4 \u2295 s 5 , and (s 1 \u2295 s 2 , s 4 \u2295 s 5 ) \u2208 R \u2295 ; symmetrically, if s 3 moves first. Also (s 1 , s 4 ) is a team bisimulation pair because, to transition s 1 inc \u2212\u2192 s 1 \u2295 s 2 , s 4 can respond with s 4 inc \u2212\u2192 s 3 \u2295 s 6 , and (s 1 \u2295 s 2 , s 3 \u2295 s 6 ) \u2208 R \u2295 ; symmetrically, if s 4 moves first. Also (s 2 , s 5 ) is a team bisimulation pair: to transition s 2 dec \u2212\u2192 \u03b8, s 5 responds with s 5 dec \u2212\u2192 \u03b8, and (\u03b8, \u03b8) \u2208 R \u2295 . Similarly for the pair (s 2 , s 6 ). Hence, relation R is a team bisimulation, indeed.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF14": {
            "text": "Let N = (S, A, T ) be a BPP net. Two markings m 1 and m 2 are team bisimulation equivalent, m 1 \u223c \u2295 m 2 , if and only if |m 1 | = |m 2 | and",
            "latex": null,
            "type": "figure"
        },
        "FIGREF15": {
            "text": "Max(N))[t 2 m 2 , 2. (N, \u03c1 1 ) t \u2212\u2192 (N , \u03c1 1 ), \u03c1 1 (t) = t 1 and \u03c1 1 (Max(N )) = m 1 , 3. (N, \u03c1 2 ) t \u2212\u2192 (N , \u03c1 2 ), \u03c1 2 (t) = t 2 and \u03c1 2 (Max(N )) = m 2 ; and finally, 4. (\u03c1 1 , N , \u03c1 2 ) \u2208 R;ii) symmetrically, if \u03c1 2 (Max(N)) moves first.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF16": {
            "text": "N = (S, A, T ) be a BPP net. Then, m 1 \u223c sf c m 2 if and only if m 1 \u223c \u2295 m 2 .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF17": {
            "text": "Given a BPP net N = (S, A, T ) and its associated deadlock-free net d(N ) = (d(S), A, d(T )), two markings m 1 and m 2 of N are h-team bisimilar if and only if d(m 1 ) and d(m 2 ) in d(N ) are team bisimilar.Proof \u21d2). If m 1 \u223c \u2295 h m 2 , then there exists an h-team bisimulation R 1 on N such that m 1 R \u2295 1 m 2 . If we take relation R 2 = {(s 1 , s 2 ) s 1 , s 2 \u2208 d(S) \u2227 (s 1 , s 2 ) \u2208 R 1 }, then it is easy to see that R 2 is a team bisimulation on d(N ), so that d(m 1 )R \u2295 2 d(m 2 ), hence d(m 1 ) \u223c \u2295 d(m 2 ). \u21d0). If d(m 1 ) \u223c \u2295 d(m 2 ), then there exists a team bisimulation R 2 on d(N ) such that d(m 1 )R \u2295 2 d(m 2 ). Now, take relation R 1 = R 2 \u222a (S \u222a {\u03b8}) \u00d7 (S \u222a {\u03b8}), where the set S is {s \u2208 S s }. It is easy to observe that R 1 is an h-team bisimulation on N , so that m 1 R \u2295 1 m 2 , hence m 1 \u223c \u2295 h m 2 .Theorem 5 (Fully concurrent bisimilarity and h-team bisimilarity coincide). Given a BPP netN = (S, A, T ), m 1 \u223c fc m 2 if and only if m 1 \u223c \u2295 h m 2 . Proof. By Proposition 5, m 1 \u223c fc m 2 in N if and only if d(m 1 ) \u223c sf c d(m 2 ) in the associated deadlock-free net d(N ). By Corollary 3, d(m 1 ) \u223c sf c d(m 2 ) iff d(m 1 ) \u223c \u2295 d(m 2 ) in d(N ). By Proposition 6, d(m 1 ) \u223c \u2295 d(m 2 ) in d(N ) if and only if m 1 \u223c \u2295 h m 2 in N .",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "Definition 1 (Multiset). Let N be the set of natural numbers. Given a finite set S, a multiset over S is a function m : S \u2192 N. Its support set dom(m) is {s \u2208 S m(s) = 0}. The set M (S) of all multisets over S is ranged over by m. We write s \u2208 m if m(s) > 0. The multiplicity of s in m is the number m(s). The size of m, denoted by |m|, is the number s\u2208S m(s), i.e., the total number of its elements. A multiset m such that dom(m) = \u2205 is called empty and is denoted by",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "Acknowledgments. The anonymous referees are thanked for their comments.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theorem 4 (Cn-bisimilarity implies team bisimilarity). Let"
        },
        {
            "text": "Proof. If m 1 \u223c cn m 2 , then there exists a causal-net bisimulation R containing a triple (\u03c1 0 1 , N 0 , \u03c1 0 2 ), where N 0 is a BPP causal net which has no transitions andLet us consider a pair (s 1 , s 2 ) \u2208 R. Hence, there exist a triple (\u03c1 1 , N, \u03c1 2 ) \u2208 R and a place s \u2208 Max(N) such that s 1 = \u03c1 1 (s) and s 2 = \u03c1 2 (s). If s 1 moves, e.g.,Since R is a causal-net bisimulation, \u2203t 2 , m 2 , t, N , \u03c1 1 , \u03c1 2 such that 1. Note that t is such that \u2022 t = s, and so \u2022 t 2 = s 2 . This means that m 2 = \u03c1 2 (Max(N)) s 2 \u2295 m 2 , where m 2 = t \u2022 2 ; in other words, t 2 = s 2 \u2212\u2192 m 2 . Note also that \u03c1 1 extends \u03c1 1 by mapping t to t 1 and, similarly, \u03c1 2 extends \u03c1 2 by mapping t to t 2 ; in this way,Summing up, for (s 1 , s 2 ) \u2208 R, if s 1 \u2212\u2192 m 1 , then s 2 \u2212\u2192 m 2 such that (m 1 , m 2 ) \u2208 R \u2295 ; symmetrically, if s 2 moves first. Therefore, R is a team bisimulation. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "annex"
        }
    ]
}