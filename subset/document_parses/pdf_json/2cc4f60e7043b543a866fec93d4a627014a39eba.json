{
    "paper_id": "2cc4f60e7043b543a866fec93d4a627014a39eba",
    "metadata": {
        "title": "Dynamic Graph Streaming Algorithm for Digital Contact Tracing",
        "authors": [
            {
                "first": "",
                "middle": [],
                "last": "Journal Of L A T E X Class",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "",
                "middle": [],
                "last": "Files",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Digital contact tracing of an infected person, testing the possible infection for the contacted persons, and isolation play a crucial role in alleviating the outbreak. Here, we design a dynamic graph streaming algorithm that can trace the contacts under the control of the Public Health Authorities (PHA). The algorithm can work as the augmented part of the PHA for the crisis period. Our algorithm receives proximity data from the mobile devices as contact data streams and uses a sliding window model to construct a dynamic contact graph sketch. Prominently, we introduce the edge label of the contact graph as a contact vector, which acts like a sliding window and holds the latest D days of social interactions. Importantly, the algorithm prepares the direct and indirect (multilevel) contact list from the contact graph sketch for a given set of infected persons. The algorithm also uses a disjoint set data structure to construct the infectious trees for the trace list. The present study offers the design of algorithms with underlying data structures for digital contact trace relevant to the proximity data produced by Bluetooth enabled mobile devices. Our analysis reveals that for COVID-19 close contact parameters, the storage space requires maintaining the contact graph of ten million users having 14 days close contact data in PHA server takes 55 Gigabytes of memory and preparation of the contact list for a given set of the infected person depends on the size of the infected list.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "D Elaying in the vaccine or drug design increases the rapid spread of the COVID-19 disease. The current COVID-19 pandemic is caused by the dropletbased human to human transmission of SARS-CoV-2 [1] . At present, the whole human society is anxiously waiting for a possible new normal state of living. Almost every country adopts the social distancing along with lockdown to mitigate the pandemic [2] . Although complete lockdown reduces the risk of spread, extending the lockdown creates severe problems for the economy and the social life of the countries [3] . Also, as the pandemic stays a long time in a country, it becomes challenging to maintain the lockdown. Many countries ease the lockdown in terms of alternating and intermittent lockdown strategies to balance between infection spread and economy [3] , [4] . In this scenario, smartphone-based digital contact tracing becomes a promising approach to control the pandemic [1] , [5] , [6] . A recent study shows that highly effective contact tracing and case isolation is a good strategy to control a new outbreak of COVID-19 [7] .",
            "cite_spans": [
                {
                    "start": 194,
                    "end": 197,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 395,
                    "end": 398,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 556,
                    "end": 559,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 807,
                    "end": 810,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 813,
                    "end": 816,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 931,
                    "end": 934,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 937,
                    "end": 940,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 943,
                    "end": 946,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 1084,
                    "end": 1087,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "Contact tracing was a common and successful step to control several infectious diseases (e.g., Zika, HIV, influenza, Ebola viruses) [8] , [9] . The World Health Organisation (WHO) defines contact tracing as the identification and follow-up of persons who may contact an infected person [8] . For COVID-19, two persons are in close contact if they are exposed to each other for at least fifteen minutes within one meter of distance [8] . The goal of contact tracing is to reduce a diseases effective reproductive number (R 0 ) by identifying people who have been exposed to the virus through the said close contact with an infected person and listing them for immediate quarantine or isolation. It has been reported that 46% contribution to R 0 comes from the presymptomatic individual (before showing symptoms) for COVID-19 [10] . On the other hand, COVID-19 infection is mostly asymptomatic nature. Hence, highly effective direct and indirect contact tracing is a mandatory task and plays a crucial role in early infection detection and reduces the peak burden on the healthcare system. Due to higher uncertainties in social relations, manual contact tracing to find the contact structure is a very complicated task for the PHA [11] . Recently, digital contact tracing uses low power radio frequency-based Bluetooth enabled mobile devices to overcome the problems in manual contact tracing. The success of TraceTogether of Singapore Government [12] , COVID-Watch of Stanford University [13] , [14] , PACT of MIT [15] , Exposure Notification forthcoming App of Apple-Google [16] , Arogya Setu of MoHFA, Government of India [17] are all recent developments based on the Bluetooth technology to prepare the contact list more effectively to mitigate the COVID-19 pandemic [10] , [18] , [19] , [20] , [21] , [22] .",
            "cite_spans": [
                {
                    "start": 132,
                    "end": 135,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 138,
                    "end": 141,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 286,
                    "end": 289,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 431,
                    "end": 434,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 824,
                    "end": 828,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 1229,
                    "end": 1233,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 1445,
                    "end": 1449,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 1487,
                    "end": 1491,
                    "text": "[13]",
                    "ref_id": null
                },
                {
                    "start": 1494,
                    "end": 1498,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 1513,
                    "end": 1517,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 1574,
                    "end": 1578,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 1623,
                    "end": 1627,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 1769,
                    "end": 1773,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 1776,
                    "end": 1780,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 1783,
                    "end": 1787,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 1790,
                    "end": 1794,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 1797,
                    "end": 1801,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 1804,
                    "end": 1808,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "Although digital contact tracing substantially reduces human efforts, most smartphone apps store data locally in the device memory to maintain privacy [9] . Hence, the central authority has no control over the contact data. After detecting an infected person, PHA requests the person to donate the app data to make the trace list. As we know, a country's public health infrastructure is a national asset for which the government is responsible, and no pandemic can be addressed without a functional health system of the country [23] . Hence, to automate the trace list preparation in a regular interval, all proximity data should be automatically fetched by the PHA server from the registered devices and immediately stores in the form of ready to process structure. However, in the pandemic period, the vital question is how does the centralized control system store a large number of devices data as well as prepare direct and indirect contact lists about which little is known and remains elusive [24] .",
            "cite_spans": [
                {
                    "start": 151,
                    "end": 154,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 528,
                    "end": 532,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 1000,
                    "end": 1004,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "In this article, we provide a one-pass dynamic graph streaming algorithm with a sophisticated data structure to automate the multi-level digital contact tracing more accurately and efficiently of having centralized control under the PHA. After receiving the proximity data stream from the mobile devices, the algorithm uses a sliding window model to process the proximity data and dynamically evolves a close contact graph sketch. The nodes in the close contact graph are the individual users, and an edge is included if there exists an interaction between a pair of peoples for more than \u03c4 minutes within d meters distance in D days. Importantly, we introduce an edge label (interactions) between a pair of the individual in the contact graph as a fixed-sized binary first-in-first-out (FIFO) contact vector to reflect the communications in the last D days. In other words, during a pandemic, the contact graph stores the latest D days of continuous close contact data in a discrete form inside contact vectors. Finally, the system prepares the contact list for the given infected persons from the contact graph. We wish to emphasize that our algorithm prepares the direct and indirect (multi-level) contact list of the infected persons and stores in disjoint sets. We use the index file structure to store the large contact graph for fast accessing. The salient feature of the system is that it automatically removes the inactive edge when the D days over and updates the graph through a sliding window model over the contact vectors. We provide implementation details and analysis of our devised streaming algorithm. Remarkably, our analysis reveals that for COVID-19 contact trace parameters, to store the contact graph for 14 days for 10 7 , users take 55 GB of memory space. In addition, the preparation of the contact list for a given set of infected persons depends on the size of the infected list. Our algorithm is simple and easy to implement, and we expect it to be an attractive choice to deploy in the application of digital contact traces in real-world pandemic situations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "We fabricate the article as follows: Section 2 discusses the problem formulation and methodology of digital contact tracing process, Section 3 provide implementation detail of our dynamic graph streaming algorithm with sliding window model. Section 4 contains the space complexity of the contact graph and analyzes the contact trace algorithm. Finally, section 5 summarizes our work and discusses various open problems for further investigations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "At any time for infectious disease, we can divide the whole population (\u03a3) under a PHA jurisdiction into two disjoint sub-populations denoted as H and I. Here, H and I (H \u2229 I = \u00f8) represent healthy and infected subpopulations, respectively. Due to the contagious nature of the disease and human nature for social interactions, an infection may transmit from I to H and to stop the virus transmission chains, contact tracing became a non-pharmaceutical intervention to mitigate the outbreak [18] . Formally, a close contact trace for an infectious disease is a non-commutative binary operator, \u03c3 (d,\u03c4,D) between two individuals (P and P \u2032 ), represented as P \u03c3 (d,\u03c4,D) P \u2032 . This operator returns TRUE when a healthy person P \u2032 \u2208 H has come in social contact with an infected person P \u2208 I within d distance and remain exposed for at least \u03c4 min during infectious period D day so that infection may transmit from P to P \u2032 where \u03c4 , d and D are the close contact trace parameters. Using the operator, H sub-divided into two sets where \u0393 and \u2206 (= H \u2212 \u0393). Here, \u0393 represents a set of uninfected (or suspected) persons who have been identified that they have come in close contact with an infected person(s) in I during D days and it is the output of the close contact trace. On the other hand, \u2206 is the set of people who have not come in close contacts of any person in I; thus, they are free from infection. Therefore, repeated application of \u03c3 (d,\u03c4,D) on the members of I and H, we get contact tracing list, \u0393. Monitoring proximity data of Bluetooth enabled digital communication devices; we successfully design and implement the digital form of the close contact trace operator to generate a contact trace list.",
            "cite_spans": [
                {
                    "start": 490,
                    "end": 494,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "METHODOLOGY AND RESULTS"
        },
        {
            "text": "A close contact between a pair of persons P and P \u2032 satisfies the maximum proximity distance d, minimum time duration within the proximity as \u03c4 min and at least one such event of closeness within D days of an infectious period so that infection may transmit between contacted persons [25] . Therefore, at any point in the immediate past of 24\u00d760\u00d7D = 1440D minutes after having an infection, the person can transmit the infection to another person who comes in the close contact. Hence, there is a maximum of n = \u2308 1440D \u03c4 \u2309 number of non-overlapped consecutive time slots of spreading infections by an infected person. For instance, in COVID-19 pandemic, d is one meter, \u03c4 is 15 minutes, and to ensure close contact, we should hold D = 14 days data. To identify close contact, we subdivide the 14 days into 15 minutes time slots (i.e., n) and store one bit if there is a proximity contact in a particular time slot. In other words, our system converts continuous sensor data into the discrete close contact slots in the server data structure. Moreover, to improve the accuracy of proximity data acquisition by Bluetooth devices for the detection of close contact, we assume that 15 min time slot is further subdivided or sampled in 3 min (\u03b4) time interval (i.e., D days contains n \u2032 = \u2308 1440D \u03b4 \u2309 number of sample intervals where \u03c4 = \u03b4 \u00d7 \u03c1, \u03c1 is a nonzero positive integer.",
            "cite_spans": [
                {
                    "start": 284,
                    "end": 288,
                    "text": "[25]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "Digitization of Close Contacts"
        },
        {
            "text": "Here, we introduce a digitized form of close contacts between P and P \u2032 over the D days time window and represent as binary FIFO vector, denoted as c = (c n\u22121 , . . . c 1 , c 0 ) where c \u2032 i s are different consecutive time slots, c 0 is latest, and c n\u22121 is the earliest (Fig. 1) . Hence, any communication between a pair of persons is represented as a binary vector where each time slot stores one bit corresponding to \u03c4 min of time. Our system searches for contacts using proximitybased digital data communication performed by the mobile devices, which converts social asynchronous and analog contacts into the digital form. For this, employed smartphones sample the social contacts in \u03b4 time interval to collect data regarding the presence of a person within d distance. Now sampled digital data stream is analyzed through an watch window of length \u03c1 = \u2308 \u03c4 \u03b4 \u2309 to identify close contacts. Our system continuously gets digital contacts and is recorded in contact vector c, which holds all close contact information between two individuals during the latest D days. Here, c helps to implement a digital form of \u03c3 (d,\u03c4,D) , and with this, our system is transforming populations' close contact dynamics for the latest infectious period D into a ready to use dynamic contact graph sketch. Finally, for a given infected sub-population I \u2286 \u03a3, our algorithm uses \u03c3 (d,\u03c4,D) to prepare \u0393 from this contact graph sketch.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 272,
                    "end": 280,
                    "text": "(Fig. 1)",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Digitization of Close Contacts"
        },
        {
            "text": "We represent contact graph as",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Contact Graph"
        },
        {
            "text": ". . , m} is the set of edges which are used to maintain the contact relation between members. For G, edge relation encodes transmission of virus or infection from one person to other. Here, V \u2261 \u03a3, so any P , P \u2032 and P \u2032\u2032 \u2208 \u03a3 are three individuals which are three different vertices in G. When contact vectors between (P, P \u2032 ) and (P \u2032 , P \u2032\u2032 ) are nonzero (c (P,P \u2032 ) = 0, c (P \u2032 ,P \u2032\u2032 ) = 0), then these are two different edges in G. Note that these non-zero digital contact vectors help to implement \u03c3 (d,\u03c4,D) for G. Now, if P \u2032 \u2208 I then P \u2032 \u03c3 (d,\u03c4,D) P and P \u2032 \u03c3 (d,\u03c4,D) P \u2032\u2032 return TRUE, hence, P and P \u2032\u2032 are included in \u0393. However, if P \u2208 I then P \u03c3 (d,\u03c4,D) P \u2032 returns TRUE, but P \u2032 \u03c3 (d,\u03c4,D) P \u2032\u2032 may not be TRUE due to the order of close contacts. We wish to emphasize that \u03c3 (d,\u03c4,D) returns FALSE when all close contacts between P \u2032 and P \u2032\u2032 occur earlier than close contact(s) of P and P \u2032 . Therefore, \u03c3 (d,\u03c4,D) is not transitive. An operator is transitive means if P is related to P \u2032 and P \u2032 is related to P \u2032\u2032 then it implies that P is also related to P \u2032\u2032 [26] . Binary number representations of contact vectors play an crucial role in decision making of transitivity of \u03c3 (d,\u03c4,D) . Hence, we need to store contact vectors to prepare the indirect or multi-level contact tracing list.",
            "cite_spans": [
                {
                    "start": 1073,
                    "end": 1077,
                    "text": "[26]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Contact Graph"
        },
        {
            "text": "It has been reported that due to social relationships for a sufficiently large population, everyone is not coming in close contact with every other [30] . That means the average number of close contact relationships q is small compared to N (q \u226a N ), and hence G is highly sparse. On the other hand, forming a close Fig. 2 . Contact graph (G) annotated with the contact vectors (c) at D and D + \u03c4 time instance. Here, we consider N = 10 and size of c is n = 5. One can observe that during the D days window, there is no close contact between P 1 and P 9 . However, as time progress the data streams from the devices at D + \u03c4 , there is close contact between P 1 and P 9 ; thus, the algorithm sets one bit in c (P 1 ,P 9 ) . Similarly, there is an edge between P 6 and P 8 during the D days window; however, at D + \u03c4 time slot, they have no close contact; thus algorithm removes this edge and updates G. Further, for a given infected member P 2 , from G by analyzing associated contact vector we get first-level contact list as {P 0 , P 7 , P 8 }, second-level as {P 5 }, and third-level as {P 3 } respectively.",
            "cite_spans": [
                {
                    "start": 148,
                    "end": 152,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 316,
                    "end": 322,
                    "text": "Fig. 2",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Contact Graph"
        },
        {
            "text": "contact requires human mobility, and coming close to each other, which is dynamic in nature. To store such sparse connectivity and the dynamic nature of human behavior, we use adjacency lists [26] and the respective digital contact vector to represent G under the PHA server. Here, we use index-based [27] dynamic adjacency lists to maintain this fast access of ready-to-use digital form of G so that direct contacts fetching for the generation of multi-level contact list becomes easy and accurate.",
            "cite_spans": [
                {
                    "start": 192,
                    "end": 196,
                    "text": "[26]",
                    "ref_id": null
                },
                {
                    "start": 301,
                    "end": 305,
                    "text": "[27]",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [],
            "section": "Contact Graph"
        },
        {
            "text": "Here, we illustrate the contact tracing process with an example. Fig. 2 is a scenario of G with ten individuals H = \u03a3 = {P 0 , P 1 , . . . , P 9 } with n = 5. Let us assume I = \u00f8, \u0393 = \u00f8 at latest D th day time instance. In our system, we can think G which is a graph-based sliding watch window of digital close contacts. Here, G is sliding one slot from D days i.e., from n th slot instance to (n + 1) th slot. As D days infectious period is over so it shows the quitting of earliest slot and entering of latest slot using circular queue behaviour. Here, latest c 0 is assigned to the out going c 4 and earlier c 3 is now assigned to c 4 and so on, forming the one place logical shift (Appendix Fig. A1 ). Now, let us assume that none is infected within the last D days duration (Fig. 2) . However, at D + \u03c4 instance P 2 is detected as infected person (marked as red in Fig. 2 ) and immediately contact tracing is required. We can observe that P 0 , P 7 and P 8 are in direct close contact of P 2 in latest D days window, and will be in the adjacency list of P 2 . Hence, \u0393 = {P 0 .1, P 7 .1, P 8 .1} is the first-level (direct) close contact list of P 2 . To prepare the second-level (indirect) close contact list of P 2 , we observe that P 3 and P 5 are possible candidates (Fig. 2) . However, we can not confirm this by observing only the edges. Now, we need to analyze the respective contact vectors to check the transitivity of \u03c3 (d,\u03c4,D) . From the contact vectors one can observe that P 3 meets both P 7 and P 8 earlier than they are being exposed to virus transmission from P 2 , and there is no further close contact, therefore, P 3 will be excluded from \u0393 (Fig. 2) . Whereas, P 5 has met with P 0 after the exposure of a virus of P 2 , so P 5 is coming into transitive closure relation of \u03c3 (d,\u03c4,D) and included in second-level contact. Moreover, during the latest D days window, P 3 comes in contact with P 5 , who may get a virus of P 2 and by extending the transitivity of \u03c3 (d,\u03c4,D) , we can observe that P 3 will be included in the third-level contact list (Fig. 2) . No further processing is possible and trac-ing stops with \u0393(P 2 ) = {P 0 .1, P 7 .1, P 8 .1, P 5 .2, P 3 .3}, I = {P 2 }, \u2206 = {P 1 , P 4 , P 6 , P 9 } and \u03c7 = {(P 2 , P 8 ), (P 2 , P 7 ), (P 2 , P 0 ), (P 0 , P 5 ), (P 5 , P 3 )} where (P i , P j ) represents P i transmits infection to P j .",
            "cite_spans": [
                {
                    "start": 2070,
                    "end": 2078,
                    "text": "(Fig. 2)",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 65,
                    "end": 71,
                    "text": "Fig. 2",
                    "ref_id": null
                },
                {
                    "start": 695,
                    "end": 702,
                    "text": "Fig. A1",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 779,
                    "end": 787,
                    "text": "(Fig. 2)",
                    "ref_id": null
                },
                {
                    "start": 870,
                    "end": 876,
                    "text": "Fig. 2",
                    "ref_id": null
                },
                {
                    "start": 1276,
                    "end": 1284,
                    "text": "(Fig. 2)",
                    "ref_id": null
                },
                {
                    "start": 1665,
                    "end": 1673,
                    "text": "(Fig. 2)",
                    "ref_id": null
                }
            ],
            "section": "Contact Tracing"
        },
        {
            "text": "Remarkably, the listing and pruning of second and higher-level contact list using \u03c3 (d,\u03c4,D) can be prepared through numerical operations on the equivalent decimal integer values of contact vectors. For any binary integer number, weight of higher significant position (2 i ) is always greater than sum of all weights at lower significant positions (i \u2212 1 to 0) [26] . For this reason, if the decimal value of any binary number (v 1 ) is greater than decimal value of another non-zero binary number (v 2 ), indicates that at least one close contact appears earlier for the close contact vector corresponds to v 1 than all close contacts corresponds to v 2 . From and v 2 = c 4 c 3 c 2 c 1 c 0 = 01001 = 9 respectively. Here, v 2 < v 1 says at least one contact between P 2 and P 0 happened earlier than the contact between P 0 and P 5 . Hence, P 5 may get infection from P 0 as he/she has been exposed to the infected person P 2 and thus P 5 will be included in the second level contact list. Similarly, in case of P 3 , the c values with P 8 and P 7 (respectively 16 and 8) are greater in both cases than c values of P 8 and P 7 with the infected person P 2 (respectively 8 and 4). Hence, direct inclusion of P 3 into second level contact list is not required. Further, for i th bit position of a binary number the weight is 2 i , i.e., power of two, so if any decimal value of c is power of two means only one close contact during D days, hence, analysis of other lower bit positions are not required for the confirmation of non-inclusion of P 3 . The value of c (P5,P3) is 25 which is greater than value of c (P0,P5) i.e., 9, but these are not power of two, so analysis of lower bit positions include P 3 as thirdlevel member of the contact list. In this way, algorithm can implement \u03c3 (d,\u03c4,D) operator and use it to prepare the indirect contact list easily and accurately from G.",
            "cite_spans": [
                {
                    "start": 360,
                    "end": 364,
                    "text": "[26]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Contact Tracing"
        },
        {
            "text": "A particular jurisdiction has one PHA server that maintains all processing of the automated contact tracing process. We consider PHA employs Bluetooth enabled smartphones as the representatives of individuals for the automated data acquisition to implement the digital close contact trace operator (\u03c3 (d,\u03c4,D) ). Let T is the start time or deployment time of our system (in dd/mm/yyyy : HH/M M format). On initialization, the PHA server creates an empty G along with I = \u00f8, H = \u03a3 and hence \u0393 = \u00f8 and having population \u03a3 = {P 0 , P 1 , . . . , P N \u22121 }. Here, the population is identified by the first N positive integers starting from zero. Now, to maintain privacy during Bluetooth communication, it is not possible to know the assigned phone number of a nearby person comes into social contacts [12] . Hence, Bluetooth-based short-distance broadcasting uses virtual IDs. After deployment, in a regular interval, the PHA server randomly generates a set of virtual IDs for whole populations \u03a3. For this purpose, non-negative natural numbers (N) are sub-divided into N numbers of non-overlapping sets each of size r(\u2265 1), i.e., \u03c0 = {\u03c0 1 , \u03c0 2 , . . . , \u03c0 N }, where \u03c0 i = {k 1 , k 2 , . . . , k r }, \u03c0 i \u2229 \u03c0 j = \u00f8, |\u03c0 i | = r, k i \u2208 N. Now server randomly assigns \u03c0 i to the different members in \u03a3. Now, the system is ready to receive contact data streams from mobile devices under PHA, and evolving of G begins. Consider P and P \u2032 are two distinct Bluetooth enabled smartphones.",
            "cite_spans": [
                {
                    "start": 796,
                    "end": 800,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [
                {
                    "start": 301,
                    "end": 308,
                    "text": "(d,\u03c4,D)",
                    "ref_id": null
                }
            ],
            "section": "IMPLEMENTATIONS"
        },
        {
            "text": "Let \u03c0 P \u2261 \u03c0 i and \u03c0 P \u2032 \u2261 \u03c0 j assigned virtual IDs sets for P and P \u2032 respectively. Next, P and P \u2032 randomly choose k i \u2208 \u03c0 P and k j \u2208 \u03c0 P \u2032 and used as virtual IDs. Now, when both P and P \u2032 (or others) come in social contact with a minimum distance (d) confirmed by the Bluetooth signals, respective devices broadcast messages using their virtual IDs in \u03b4 time intervals [28] . During this communication, P receives messages from P \u2032 with used virtual ID and vice-versa. These transmitted and received messages are locally stored in the device memory, and the send/receive time-stamp. As both P and P \u2032 are having multiple assigned IDs, in a specific time period, they use separate k i and k j as their virtual IDs. Finally, devices pre-process the proximity data locally and send as data stream represented as \u2126 to the PHA server to identify the close contact(s). In the following sections, we provide an implementation detail of G.",
            "cite_spans": [
                {
                    "start": 373,
                    "end": 377,
                    "text": "[28]",
                    "ref_id": "BIBREF27"
                }
            ],
            "ref_spans": [],
            "section": "IMPLEMENTATIONS"
        },
        {
            "text": "We represent G using adjacency lists having two components, index file (G.\u03a8) and contact record or data file (G.\u0398). The G.\u03a8 stores q number of index records with two fields (UserID, Pointer) for each user (Fig. 3) . Here, q, the average degree of the G represents the average number of distinct persons coming in close contacts to a person during D days. Moreover, we maintain one extra index record in G.\u03a8 to move into the overflow area when contacts exceed the average value of q.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 205,
                    "end": 213,
                    "text": "(Fig. 3)",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Data Structure for Contact Graph Sketch"
        },
        {
            "text": "For each pairs of individuals, we store c only once in G.\u0398 at A index position. For an edge e = (P, P \u2032 , c (P,P \u2032 ) ), P \u2032 will appear as one record (P \u2032 , A) under P . Similarly, we keep another record (P, A) under P \u2032 . For an implementation, D and \u03c4 are fixed implies size of c is also fixed. Also, we assume in an average there are q number of distinct close contacts during D days period. Therefore, we can access both G.\u03a8 and G.\u0398 as an array with constant access time.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Data Structure for Contact Graph Sketch"
        },
        {
            "text": "Here, algorithm uses G.\u03a8[P (q + 1)] to access the starting contact record of P . Similarly, G.\u0398[(A) \u00d7 n] uses to access the first bit of c. In addition, to access the overflow area we use G.\u03a8[P (2q + 1)] [29] . Therefore, G can watch every close contact of the society for latest D days and reflecting as sliding watch window with all c 0 is the close contact front of the \u03a3.",
            "cite_spans": [
                {
                    "start": 204,
                    "end": 208,
                    "text": "[29]",
                    "ref_id": "BIBREF28"
                }
            ],
            "ref_spans": [],
            "section": "Data Structure for Contact Graph Sketch"
        },
        {
            "text": "The PHA server receives the contact data stream (\u2126) from registered mobile devices (Fig. 4) . The \u2126 contains a header part and communication details. The header part holds actual sender ID as P in \u2126.U ID and broadcast start time as \u2126.StartT ime as t. Further, communication details contain \u2126.T ran and \u2126.Rec for transmitted and all received virtual user IDs during proximity contact (Fig. 4) . Note that mobile devices sample for the proximity of neighbors in \u03b4 time intervals and send processed contact information in the form of a data stream to the PHA server (Fig. 4) . A valid close contact requires \u03c4 min of continuous proximity neighbors' data. Here, we consider \u03c4 = \u03b4 \u00d7\u03c1 min, i.e., if someone is present nearby with a person for a continuous \u03c1 number of samples, then there will be a close contact. Hence, to detect close contact during stream processing, the algorithm uses a sliding window (W) of size \u03c1. For COVID-19, one can set \u03b4 = 3 min, and thus, \u03c1 = 5, and hence, to ensure a close contact, one person should appear 5 times inside W. Therefore, to process stream data of mobile devices and detect close contact, we use one sliding window. On the other hand, contact vector (c), which always holds the latest D days binary close contact data, is another siding window. The first window is implemented as a FIFO queue, and the second one is implemented as a FIFO circular queue, and we always insert data at REAR and remove from FRONT of the queue. Hence, maintaining G is the interplay between two sliding windows. Here, latest slot (c 0 ) of c always appears at REAR and earliest slot (c n\u22121 ) at the FRONT of the queue and we can find c 0 at array index \u03bd \u2190 (\u03bd + 1) mod n. For circular behavior of modulo-arithmetic when queue becomes full after passing D days, c 0 returns to the \u03bd = 0 index location and c n\u22121 appears at array index 1 and so on (Fig. 3 and Appendix Fig. A1 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 83,
                    "end": 91,
                    "text": "(Fig. 4)",
                    "ref_id": null
                },
                {
                    "start": 383,
                    "end": 391,
                    "text": "(Fig. 4)",
                    "ref_id": null
                },
                {
                    "start": 563,
                    "end": 571,
                    "text": "(Fig. 4)",
                    "ref_id": null
                },
                {
                    "start": 1864,
                    "end": 1871,
                    "text": "(Fig. 3",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 1876,
                    "end": 1892,
                    "text": "Appendix Fig. A1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Embedding data stream into contact graph"
        },
        {
            "text": "In Fig. 4 , we show that at the beginning of interval of the proximity contact data for a new user (P = P 2 ), algorithm creates an empty W. Now, PHA server determines the actual user IDs (e.g., P 1 for 4, P 3 for 8) from virtual user IDs (4 and 8) in \u2126.Rec field of the current sample data and store temporarily inside U ({P 1 , P 2 }). Therefore, (P 2 , P 1 ) and (P 2 , P 3 ) are two proximity contacts in this current sample interval and stored at W[0] in a linked list form with associated communication count (\u033a) value set to one (P 1 .\u033a = P 3 .\u033a = 1). Similarly, for next interval data, we get same situation and the corresponding linked list is stored at W [1] . However, to indicate the appearance of an user in W, \u033a value of the earlier communication with Fig. 4 . Processing proximity data stream (\u2126) and detect close contact through a watch window (W). The PHA server assigns virtual IDs to the users P 0 , P 1 , . . ., P N\u22121 as \u03c0 P 0 = {1, 2}, \u03c0 P 1 = {3, 4}, . . . , \u03c0 P N \u22121 = {2N \u2212 1, 2N }. Individuals communicate with each other through virtual IDs during broadcast and appears in the T ran. and Rec. fields in \u2126. For every user, \u2126 begins with a start time (t) and actual user ID of the sender. The W is a fixed size (\u03c1 = 5) array of pointers which works as a FIFO queue where data enters at the REAR and exits from FRONT. The window and holds proximity data for latest \u03c1 intervals. Each entry of W holds actual sender ID and the list of actual receiver IDs in a linked list form. Receiver ID in W associates a communication count value (\u033a) to count the appearance in \u03c1 number of intervals. During removal from FRONT of W if the \u033a of any user P \u2032 is equal to \u03c1 then it is a close contact between P and P \u2032 . A pointer field is NULL, means there is no proximity communication in the next interval.",
            "cite_spans": [
                {
                    "start": 239,
                    "end": 248,
                    "text": "(4 and 8)",
                    "ref_id": null
                },
                {
                    "start": 665,
                    "end": 668,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 766,
                    "end": 772,
                    "text": "Fig. 4",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 3,
                    "end": 9,
                    "text": "Fig. 4",
                    "ref_id": null
                }
            ],
            "section": "Embedding data stream into contact graph"
        },
        {
            "text": "persons in U are increased by one for record at W[0] (P 1 .\u033a = P 3 .\u033a = 2). Similarly, processing continues until W is full. Now, to accommodate the next interval data at REAR, algorithm removes elements from FRONT at W[0]. After removal, algorithm checks \u033a value for an user. If it is equal to \u03c1, then it is a close contact. Here, one can observe that for P 1 .\u033a = \u03c1 (Fig. 4) . Hence, P 1 was in proximity contact for latest all \u03c1 number sample intervals leading to a close contact with P 2 . Therefore, we require to install into c 0 slot of the contact vector (c (P2,P1) ) in G. However, (P 2 , P 3 ) is not a close contact as P 3 .\u033a = \u03c1. Now, to embed the detected close contact in G, we determine the array index number (\u03bd) for c 0 of c by synchronizing the start time (t) of P with the system start time (T ) (Eq. 1). Also, note that due to unpredictable nature of human communication, the close contact may appear at any time. That means first sample interval of close contact may be at any of \u03c1 number of intervals in earlier slot i.e., c 1 and accordingly ends at any of \u03c1 number of sample intervals in c 0 slot (Fig. 5) . In this situation, we select suitable one for c 0 and c 1 depending on the most proximity contact intervals (Fig. 5) . Therefore, to make decision about c 0 and c 1 , we also synchronize t of P with T for the interval number (\u03bb) of the current \u03bd (Eq. 1).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 368,
                    "end": 376,
                    "text": "(Fig. 4)",
                    "ref_id": null
                },
                {
                    "start": 566,
                    "end": 573,
                    "text": "(P2,P1)",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 1121,
                    "end": 1129,
                    "text": "(Fig. 5)",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1240,
                    "end": 1248,
                    "text": "(Fig. 5)",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Embedding data stream into contact graph"
        },
        {
            "text": "where T \u2032 = (1440 \u00d7 X.Days + 60 \u00d7 X.Hrs + X.M in) and X = T \u2212 t (date difference), here T is the system deployment time, both t and T are in format dd/mm/yyyy : hh : mm and date difference T \u2212 t is in format Days/Hrs/M in, and n \u2032 = \u230a 1440D \u03b4 \u230b. Further, when there is no communication for one or more \u03b4 time interval(s) between nearby Bluetooth devices, we consider the next record in \u2126 is of Gx format, indicating that there is a communication gap for x(\u2265 1) number of \u03b4 time intervals. For Gx, we update \u03bd and \u03bb for starting slot (c 0 ) using Eq. (2) to skip x number intervals.",
            "cite_spans": [
                {
                    "start": 550,
                    "end": 553,
                    "text": "(2)",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Embedding data stream into contact graph"
        },
        {
            "text": "Now, in Fig. 5 , we show how \u03bd and \u03bb are used to identify correct slot in c accordingly update the detected close contact in G. Here, c[\u03bd] is equivalent to c 0 slot, and c[(\u03bd \u2212 1) mod n] is the immediate earlier slot c 1 . Now, we divide close contact duration \u03c4 = 15 min into \u03c1 = 5, number of sample intervals each of length \u03b4 = 3 min. Here, half of the number of sample intervals is \u230a \u03c1 2 \u230b = 2. In Fig. 5 (a) , we show that current close contact watch window ends before half of the number intervals of c 0 slot (\u03bb = 2 \u2264 \u230a \u03c1 2 \u230b). This indicates that most of the part of current close contact exists in the immediate earlier slot, so c 1 = 1. Similarly, in Fig.5 (b) , we show \u03bb = 5(> \u230a \u03c1 2 \u230b), that means most of part of current W exists in the latest slot, so c 0 = 1. In this way conflict for c 1 and c 0 is resolved.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 8,
                    "end": 14,
                    "text": "Fig. 5",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 401,
                    "end": 411,
                    "text": "Fig. 5 (a)",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 660,
                    "end": 669,
                    "text": "Fig.5 (b)",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Embedding data stream into contact graph"
        },
        {
            "text": "Finally, Set() function is used to perform these changes of c in G. The process will continue for the whole contact data stream of the different users (Algorithm 1). Algorithm 2 helps to install any detected close contact (P, P \u2032 , \u03bd, \u03bb) into G during data stream processing. To install the close contact for P , search starts from G.\u03a8[P (q + 1)] location of the index file. If it is successful then update is performed in the target slot. However, on an unsuccessful search, the algorithm creates an empty contact vector in G.\u0398 and accordingly updates the target slot. New contact vector means new relation between P and P \u2032 and hence, we also update G.\u03a8 (Algorithm 1). As time passes, the social contact dynamics are changing, and some contacts are older than infectious duration D. Hence, the",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Embedding data stream into contact graph"
        },
        {
            "text": "edge(s) along with contact vector(s) will be removed from G.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Embedding data stream into contact graph"
        },
        {
            "text": "The G maintains the digital form of the social contact dynamics of \u03a3 for the particular geopolitical area under a PHA for the last D days. We assume that at any time, the system has a contact trace list (\u0393) for a given set of infected persons (I), and the rest are uninfected individuals (\u2206). Now, we iteratively update the contact list as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Contact Tracing on G"
        },
        {
            "text": "Now, suppose at present, one or more individuals are detected as a newly infected person and kept in I \u2032 . After receiving I \u2032 , system will perform immediate contact tracing in G where I \u2032 , \u0393, G and L are passed as input parameters (Algorithm 3). Here, L means up to which level indirect contacts will be traced. The algorithm returns updated \u0393, which contains first, second, and other required higher levels of indirect contacts along with respective edge list \u03c7 \u2032 . Finally, we update new infected list as I \u2190 I \u222aI \u2032 , new uninfected list as \u2206 \u2190 \u2206 \u2212 \u0393 and new edge list as \u03c7 \u2190 \u03c7 \u222a \u03c7 \u2032 . If a person appears more than one contact list, Algorithm 3 automatically remove the redundancy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Contact Tracing on G"
        },
        {
            "text": "The algorithm uses two queues Q 1 and Q 2 alternatively as processing and waiting of individuals to trace close contact (Algorithm 3). Initially, we set current contact level number l = 1 (direct or first-level contact), and all members in I \u2032 are in the processing queue (Q 1 ) and hence, Q 2 is empty and working as waiting queue. Now, for all members in the Q 1 direct contact list are generated from indexed adjacency list in G.\u03a8 and stored in \u0393 as well as in the waiting queue (Q 2 ). For higher-level contact tracing we update l, swap Q 1 and Q 2 and then use the transitivity of \u03c3 (d,\u03c4,D) (Algorithm 3). In section 2.3, we explain the different such situations for filtering the second and higher-level contact tracing for which bit-patterns of c and decimal values are used to exclude or include next member in the contact list and also pruning of further processing. The process will continue either up to the state with no more individuals left in the waiting queue or target level (L) of indirect contacts has reached (Algorithm 3).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Contact Tracing on G"
        },
        {
            "text": "Practically the contact trace output divides the whole population into three different disjoint subpopulations -namely infected (I), suspected (\u0393), and uninfected (\u2206). The system also generates the edge list (\u03c7) of the suspected members (Algorithm 3). There are general questions from the perspective of management -how many clusters of infected groups list the members of these clusters, the order of spreading, or refer as infectious trees. Only \u0393 is not sufficient to meet these requirements, and we cannot answer only from \u0393. We use Disjoint Set Data structure (DSD) denoted as F to address the above queries [26] . Initially, \u03a3, F maintains N number of rooted single node disjoint trees all marked with status 'Free' and F .EdgeList is empty. Rebuild algorithm of DSD use results from the contact L) and not (IsEmpty(Q 1 ) and IsEmpty(Q 2 ))) do while (not IsEmpty(Q 1 )) do",
            "cite_spans": [
                {
                    "start": 613,
                    "end": 617,
                    "text": "[26]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 802,
                    "end": 804,
                    "text": "L)",
                    "ref_id": null
                }
            ],
            "section": "Disjoint Sets for Contact Trace Results"
        },
        {
            "text": "trace algorithm to update F and F .EdgeList stores all edges in \u03c7 (Algorithm 4). Now, using union \u2212 f ind() operation of DSD, all edges in \u03c7 are processed to form the final disjoint sets. Nodes are also marked according to 'Infected' and 'Suspected'. For any individual, f ind() returns the tree's root, which means the group or cluster in which the individual is a member. Further, traversing this rooted tree provides the full cluster, size of the cluster, and the order of spreading or infectious tree. The number of such rooted trees in the F is the count of the disjoint sets, i.e., the number of clusters exists presently in the PHA. Each such cluster is an infection zone with separate active infections and suspected members under the isolation process. In this way, if the contact tracing result is stored in a DSD structure, then taking different management decisions during a pandemic will be easy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Disjoint Sets for Contact Trace Results"
        },
        {
            "text": "Here, we calculate the space requirement to store the graph sketch for the D days proximity data of N number of users as adjacency list representation (Fig. 3) . We know G has two parts G.\u03a8 for index store and G.\u0398 for data store and space requirement is denoted as S(G.\u03a8) and S(G.\u0398) respectively. We need b = \u2308log 2 N \u2309 bits to access ID of the N number of different users. Next, we assume in an average there are q number of distinct close contacts during a time period of D days or n (n = \u2308 1440D \u03c4 \u2309) number time slots of duration \u03c4 min. For each user, we store q + 1 number of direct index records in G.\u03a8 and for these direct records qN 2 number contact vectors each of (n + 1) bits (one extra bit for deletion flag) are stored in G.\u0398. To identify each such contact vector, we require s = \u2308log 2 qN 2 \u2309 bits index in the pointer field of the index record. Therefore, the space requirement for G.\u03a8 is",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 151,
                    "end": 159,
                    "text": "(Fig. 3)",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Space complexity analysis"
        },
        {
            "text": "bits. Similarly, for qN 2 number of records in G.\u0398 is",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Space complexity analysis"
        },
        {
            "text": "bits. Hence, the total space requirement (in bits) is",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Space complexity analysis"
        },
        {
            "text": "Study shows that for a very small percentage of cases overflow area is required [30] . Hence, the additional memory requirement will be nominal. Here, D, \u03c4 , and q are constant for a particular type of infection, and hence, we get the space complexity of G is O (N log N ) .",
            "cite_spans": [
                {
                    "start": 80,
                    "end": 84,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [
                {
                    "start": 262,
                    "end": 272,
                    "text": "(N log N )",
                    "ref_id": null
                }
            ],
            "section": "Space complexity analysis"
        },
        {
            "text": "For COVID-19 outbreak, we assume for population of N = 10 7 , the length of infectious period D = 14 days, minimum time of contact \u03c4 = 15 min at maximum separation of one meter. To estimate q, we use statistics from a recent UK based social contact survey [30] . It suggests that for COVID-19 pandemic the average number of contacts (q) over 14 days is 217. However, only 59 (27%) of contacts are meeting close contact definition [11] , [30] . With this statistics, we choose q = 64. Hence, the estimated storage requirements for G using Eq. (3) is:",
            "cite_spans": [
                {
                    "start": 256,
                    "end": 260,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 430,
                    "end": 434,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 437,
                    "end": 441,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "Space complexity analysis"
        },
        {
            "text": "S(G) = 10 7 [(64 + 1)(2 log 10 7 + log 64 \u2212 1)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Space complexity analysis"
        },
        {
            "text": "\u2248 55 GB as 1GB = 2 33 bits.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Space complexity analysis"
        },
        {
            "text": "The system has three parts for the operation -(a) detecting and then storing of digital close contacts during stream processing, (b) tracing of multi-level contacts for a set of infected individuals and (c) storing tracing results in the disjoint set data structure to answer different standard management and control operations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Time complexity"
        },
        {
            "text": "To detect a close contact in \u2126 and installation into G, requires maximum q number array index manipulations. We assume q is constant and independent of N , thus average number of computation required for the processing of \u2126 is constant and hence, time complexity is O(1). The G is a ready to use form for contact tracing. Computation complexity for the preparation of \u0393 has two parts -computation counts for direct list preparation denoted as (T direct (q, L, n, N )) and for indirect list as (T indirect (q, L, n, N )). Now, we evaluate T direct (q, L, n, N ) for given I as follows. For any infected person P in I, we access at most q number of consecutive pointer field in G.\u03a8 array. We know that one can reach to the beginning of the adjacency list of P using G.\u03a8[P (q + 1)] (section 3.1). Therefore, total pointer comparison count takes",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Time complexity"
        },
        {
            "text": "However, to prepare the second level contact list, we perform n bits contact vector comparison to execute \u03c3 (d,\u03c4,D) for each members in the direct contact list of q \u00d7 |I| individuals (Algorithm 3) is q \u00d7 (q \u00d7 |I|) , and for third-level it is q \u00d7 (q 2 \u00d7 |I|) and so on. Hence, the total computation complexity for indirect levels is",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Time complexity"
        },
        {
            "text": "Now, for both direct and indirect contact list tracing computation takes T (q, L, n, N ) = O(q L |I|)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Time complexity"
        },
        {
            "text": "Finally, for disjoint set representation having |\u0393| of contact trace members with |\u03c7| number edges takes O(|\u03c7|\u03b1(|\u0393|)) where \u03b1() is the Inverse Ackermann() function, \u03b1() \u2264 5 [26] . From the above analysis, we can show that for COVID-19 contact trace parameters, to prepare the contact list for a given I, it takes O(|I|) when q and L are constant.",
            "cite_spans": [
                {
                    "start": 173,
                    "end": 177,
                    "text": "[26]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Time complexity"
        },
        {
            "text": "In this article, we design a dynamic graph streaming algorithm with sophisticated data structures for a digital contact tracing system to mitigate the spreading of a contagious outbreak under the control of the Public Health Authority of a country. After receiving the data stream from the mobile devices, the algorithm uses a sliding window model to convert continuous proximity-based device data into the discrete close contact slots and convert it into a fixed-length bit pattern and stored in the contact vector. Finally, in the server, all close contact vectors use to form an efficient dynamic contact graph sketch. Once the server maintains the close contact graph sketch, our algorithm prepares the direct and indirect (multilevel) contact list of the infected persons and stores in disjoint sets. We use the index file structure to store the large contact graph in an array. Here, we use two sliding windows, one to process the stream data of mobile devices and detection of close contacts and another sliding window use to maintain the close contact vector over D days period. The first one is implemented as a FIFO queue, and the second one is implemented as a FIFO circular queue. Our framework is relevant to general contact-transmitted diseases like COVID-19 and can trace digital contact for other infectious diseases by changing the parameters of the contact trace operator. Heart of our algorithm is the contact trace operator, which uses numerical computation over the binary number stored inside the contact vector to decide the multilevel contact trace list. Our analysis unveils that for COVID-19 outbreak close contact parameters, the storage space requires maintaining the contact graph of 10 7 individuals having 14 days close contact data in PHA server takes 55 Gigabytes of memory and prepares the contact list for I takes O(|I|).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "CONCLUSION"
        },
        {
            "text": "The binary representation of close contact is an integral part of our algorithm. Importantly, interactions between a pair of the individual are annotated as a binary circular vector to elucidate the communication in a different time and capture a complete picture of the social interactions. Therefore, dynamic contact graph sketch reflects the population dynamics of the jurisdiction and can be used for further study related to epidemic dynamics to predict the trajectory of the spread accurately [18] . Here, we develop the algorithm relevant to the proximity data of Bluetooth enabled mobile devices. However, we can easily extend the algorithm for Global Positioning Systems (GPS) based sensor data with some modification and further research [19] . Although our goal is to provide spaceefficient and an easily accessible digital contact tracing algorithm under the control of PHA and prepare the direct as well as indirect contact list, however, considering the virtual ID and binary contact vector, the algorithm implicitly enforces the privacy of users. For more details of the privacy concern of the digital contact trace, we refer to the current articles [17] , [31] , [32] . On the other hand, the sliding window model is space-efficient and can have a further application from the applied and theoretical perspectives to analyze the streaming data [33] . We consider the mobility of users under one PHA. Our model can be extended to design multilevel and distributed forms to make this more manageable and concurrently operable.",
            "cite_spans": [
                {
                    "start": 499,
                    "end": 503,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 748,
                    "end": 752,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 1165,
                    "end": 1169,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 1172,
                    "end": 1176,
                    "text": "[31]",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 1179,
                    "end": 1183,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 1360,
                    "end": 1364,
                    "text": "[33]",
                    "ref_id": "BIBREF32"
                }
            ],
            "ref_spans": [],
            "section": "CONCLUSION"
        },
        {
            "text": "The main objective of this Information Technology (IT) based system is to make solutions feasible to computation, and that can control the further transmission of diseases. However, as in practical situations, we should also follow other pre-existing processes like social distancing, partial lockdown, preventive measures like washing hands, disinfection must continue for controlling infections.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "CONCLUSION"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Effective configurations of a digital contact tracing App: A report to NHSX",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Hinch",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Age-structured impact of social distancing on the COVID-19 epidemic in India",
            "authors": [
                {
                    "first": "Rajesh",
                    "middle": [],
                    "last": "Singh",
                    "suffix": ""
                },
                {
                    "first": "Ronojoy",
                    "middle": [],
                    "last": "Adhikari",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2003.12055"
                ]
            }
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Adaptive cyclic exit strategies from lockdown to suppress COVID-19 and allow economic activity, medRxiv",
            "authors": [
                {
                    "first": "Omer",
                    "middle": [],
                    "last": "Karin",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "An alternating lock-down strategy for sustainable mitigation of COVID-19",
            "authors": [
                {
                    "first": "Dror",
                    "middle": [],
                    "last": "Meidan",
                    "suffix": ""
                },
                {
                    "first": "Reuven",
                    "middle": [],
                    "last": "Cohen",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Haber",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Simcha",
                    "suffix": ""
                },
                {
                    "first": "Baruch",
                    "middle": [],
                    "last": "Barzel",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2004.01453"
                ]
            }
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Coronavirus contact-tracing apps: can they slow the spread of COVID-19?",
            "authors": [
                {
                    "first": "Mark",
                    "middle": [],
                    "last": "Zastrow",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Nature",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "COVID-19 contact tracing apps are coming to a phone near you. How will we know whether they work?",
            "authors": [
                {
                    "first": "Kelly",
                    "middle": [],
                    "last": "Servick",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Science",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Feasibility of controlling COVID-19 outbreaks by isolation of cases and contacts, The Lancet Global Health",
            "authors": [
                {
                    "first": "Joel",
                    "middle": [],
                    "last": "Hellewell",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "World Health Organization and others, Coronavirus disease 2019 (COVID-19): situation report, 107, World Health Organization",
            "authors": [],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "WeTrace-A Privacy-preserving Mobile COVID-19 Tracing Approach and Application",
            "authors": [
                {
                    "first": "De",
                    "middle": [],
                    "last": "Carli",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Franco",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Gassmann",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Killer",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Rodrigues",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Scheid",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Schoenbaechler",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Stiller",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2004.08812"
                ]
            }
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Quantifying SARS-CoV-2 transmission suggests epidemic control with digital contact tracing",
            "authors": [
                {
                    "first": "Luca",
                    "middle": [],
                    "last": "Ferretti",
                    "suffix": ""
                },
                {
                    "first": "Chris",
                    "middle": [],
                    "last": "Wymant",
                    "suffix": ""
                },
                {
                    "first": "Michelle",
                    "middle": [],
                    "last": "Kendall",
                    "suffix": ""
                },
                {
                    "first": "Lele",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Anel",
                    "middle": [],
                    "last": "Nurtay",
                    "suffix": ""
                },
                {
                    "first": "Lucie",
                    "middle": [],
                    "last": "Abeler-D\u00f6rner",
                    "suffix": ""
                },
                {
                    "first": "Michael",
                    "middle": [],
                    "last": "Parker",
                    "suffix": ""
                },
                {
                    "first": "David",
                    "middle": [],
                    "last": "Bonsall",
                    "suffix": ""
                },
                {
                    "first": "Christophe",
                    "middle": [],
                    "last": "Fraser",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "Science",
            "volume": "368",
            "issn": "6491",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "The Efficacy of Contact Tracing for the Containment of the 2019 Novel Coronavirus (COVID-19), medRxiv",
            "authors": [
                {
                    "first": "Matt",
                    "middle": [
                        "J"
                    ],
                    "last": "Keeling",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Hollingsworth",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Deirdre",
                    "suffix": ""
                },
                {
                    "first": "Jonathan",
                    "middle": [
                        "M"
                    ],
                    "last": "Read",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "How does TraceTogether work?",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Tracetogether",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "2020--2023",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Slowing the Spread of Infectious Diseases Using Crowdsourced Data",
            "authors": [
                {
                    "first": "Sydney",
                    "middle": [
                        "Von"
                    ],
                    "last": "Arx",
                    "suffix": ""
                },
                {
                    "first": "Daniel",
                    "middle": [],
                    "last": "Blank",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "The PACT protocol specification",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Rivest",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Privacy-Preserving Contact Tracing",
            "authors": [],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "2020--2025",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Mobile phone data for informing public health actions across the COVID-19 pandemic life cycle",
            "authors": [
                {
                    "first": "Nuria",
                    "middle": [],
                    "last": "Oliver",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Evaluating how smartphone contact tracing technology can reduce the spread of infectious diseases: the case of COVID-19",
            "authors": [
                {
                    "first": "Enrique",
                    "middle": [],
                    "last": "Hern\u00e1ndez-Orallo",
                    "suffix": ""
                },
                {
                    "first": "Pietro",
                    "middle": [],
                    "last": "Manzoni",
                    "suffix": ""
                },
                {
                    "first": "Carlos",
                    "middle": [
                        "T"
                    ],
                    "last": "Calafate",
                    "suffix": ""
                },
                {
                    "first": "Juan-Carlos",
                    "middle": [],
                    "last": "Cano",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Mass-surveillance technologies to fight coronavirus spread: the case of Israel",
            "authors": [
                {
                    "first": "Moran",
                    "middle": [],
                    "last": "Amit",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Kimhi",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Heli",
                    "suffix": ""
                },
                {
                    "first": "Tarif",
                    "middle": [],
                    "last": "Bader",
                    "suffix": ""
                },
                {
                    "first": "Jacob",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Elon",
                    "middle": [],
                    "last": "Glassberg",
                    "suffix": ""
                },
                {
                    "first": "Avi",
                    "middle": [],
                    "last": "Benov",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Nature Medicine",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Can tracking people through phone-call data improve lives?",
            "authors": [
                {
                    "first": "Amy",
                    "middle": [],
                    "last": "Maxmen",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Nature",
            "volume": "569",
            "issn": "7758",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Turing algorithms may improve accuracy of Apple/Google contact tracing API",
            "authors": [
                {
                    "first": "Ben",
                    "middle": [],
                    "last": "Lovejay",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "2020--2026",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Securing Justice, Health, and Democracy against the COVID-19 Threat",
            "authors": [
                {
                    "first": "Danielle",
                    "middle": [],
                    "last": "Allen",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Not even close to being over. Worst is yet to come",
            "authors": [
                {
                    "first": "Moneycontrol",
                    "middle": [],
                    "last": "News",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "WHO warning on COVID-19",
            "volume": "",
            "issn": "",
            "pages": "2020--2020",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Science Forum: SARS-CoV-2 (COVID-19) by the numbers",
            "authors": [
                {
                    "first": "Yinon",
                    "middle": [
                        "M"
                    ],
                    "last": "Bar-On",
                    "suffix": ""
                },
                {
                    "first": "Avi",
                    "middle": [],
                    "last": "Flamholz",
                    "suffix": ""
                },
                {
                    "first": "Rob",
                    "middle": [],
                    "last": "Phillips",
                    "suffix": ""
                },
                {
                    "first": "Ron",
                    "middle": [],
                    "last": "Milo",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "57309",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Database system concepts",
            "authors": [
                {
                    "first": "Abraham",
                    "middle": [],
                    "last": "Silberschatz",
                    "suffix": ""
                },
                {
                    "first": "Henry",
                    "middle": [
                        "F"
                    ],
                    "last": "Korth",
                    "suffix": ""
                },
                {
                    "first": "Shashank",
                    "middle": [],
                    "last": "Sudarshan",
                    "suffix": ""
                }
            ],
            "year": 1997,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Bluetooth Low Energy Application in home automation",
            "authors": [
                {
                    "first": "Xin",
                    "middle": [],
                    "last": "Zhong",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Database system implementation",
            "authors": [
                {
                    "first": "Hector",
                    "middle": [],
                    "last": "Garcia-Molina",
                    "suffix": ""
                },
                {
                    "first": "Jeffrey",
                    "middle": [
                        "D"
                    ],
                    "last": "Ullman",
                    "suffix": ""
                },
                {
                    "first": "Jennifer",
                    "middle": [],
                    "last": "Widom",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Social encounter networks: characterizing Great Britain",
            "authors": [
                {
                    "first": "Leon",
                    "middle": [],
                    "last": "Danon",
                    "suffix": ""
                },
                {
                    "first": "Jonathan",
                    "middle": [
                        "M"
                    ],
                    "last": "Read",
                    "suffix": ""
                },
                {
                    "first": "Thomas",
                    "middle": [
                        "A"
                    ],
                    "last": "House",
                    "suffix": ""
                },
                {
                    "first": "Matthew",
                    "middle": [
                        "C"
                    ],
                    "last": "Vernon",
                    "suffix": ""
                },
                {
                    "first": "Matt",
                    "middle": [
                        "J"
                    ],
                    "last": "Keeling",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "Proceedings of the Royal Society B: Biological Sciences",
            "volume": "280",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "The need for privacy with public digital contact tracing during the COVID-19 pandemic, The Lancet Digital Health",
            "authors": [
                {
                    "first": "Yoshua",
                    "middle": [],
                    "last": "Bengio",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Ethics and governance for digital disease surveillance",
            "authors": [
                {
                    "first": "Michelle",
                    "middle": [
                        "M"
                    ],
                    "last": "Mello",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Jason",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Science",
            "volume": "368",
            "issn": "6494",
            "pages": "951--954",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "Appendix: Dynamic Graph Streaming Algorithm for Digital Contact Tracing",
            "authors": [
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Mcgregor",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "ACM SIGMOD Record",
            "volume": "43",
            "issn": "1",
            "pages": "9--20",
            "other_ids": {}
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "Priodyuti Pradhan 3 , Ranjan Chattaraj 2 , and Soumya Banerjee 4 1",
            "authors": [],
            "year": null,
            "venue": "Gautam Mahapatra",
            "volume": "1",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "Illustration of the array-based circular queue implementation using modular-arithmetic for sliding window of the contact vector c (P,P \u2032 ) in G. For simplicity, we consider D = 5 days, \u03c4 = 1 day, so size of the contact vector is n = 5. After D days c (P,P \u2032 ) attends the full length. Here, c = 0 means there is no close contact during the latest D days, so the possibility of infection transmission is nullified, and hence respective edge will be removed. However, they may come in close contact again",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Fig",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Schematic representation of close contact graph (G). We introduce edge label of G as binary vector (c). Here, D is the observation period, \u03c4 is the time slot for exposure. For COVID-19, D = 14 and \u03c4 = 15 minutes. We set c k to be 1, when a close contact is detected at the k th time slot duration and 0 otherwise.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Fig. 2, the decimal integer values of c (P2,P0) and c (P0,P5) at D + \u03c4 time are v 1 = c 4 c 3 c 2 c 1 c 0 = 11000 = 24",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Data Structure for the contact graph (G). Here, G.\u03a8 is the index representation of adjacency lists of N persons as (UserID, Pointer). The G.\u0398 holds fixed size contact vectors c of size n. Both are in the form of array. Here, (q + 1) th index record for each user is assigned to enter into the respective overflow area.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Resolving the conflict between slot numbers (c 1 and c 0 ) of c for a detected close contact at c 0 . The maximum part of the close contact duration lies (a) in c 1 slot and (b) in c 0 slot.",
            "latex": null,
            "type": "figure"
        }
    },
    "back_matter": [
        {
            "text": "ACKNOWLEDGMENT GM acknowledges Post-graduate Division of Asutosh College, University of Calcutta for financial support and computational resources. PP acknowledges Bar-Ilan University for providing Kolam-Soref postdoctoral fellowship.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "acknowledgement"
        }
    ]
}