{
    "paper_id": "484ce01af8c89a17ed1daaa4c0854d9d3afbb022",
    "metadata": {
        "title": "Improving Human Decision-Making with Machine Learning",
        "authors": [
            {
                "first": "Hamsa",
                "middle": [],
                "last": "Bastani",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "University of Pennsylvania",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Osbert",
                "middle": [],
                "last": "Bastani",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "University of Pennsylvania",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Wichinpong",
                "middle": [
                    "Park"
                ],
                "last": "Sinchaisri",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "University of California",
                    "location": {
                        "settlement": "Berkeley"
                    }
                },
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "A key aspect of human intelligence is their ability to convey their knowledge to others in succinct forms. However, despite their predictive power, current machine learning models are largely blackboxes, making it difficult for humans to extract useful insights. Focusing on sequential decision-making, we design a novel machine learning algorithm that conveys its insights to humans in the form of interpretable \"tips\". Our algorithm selects the tip that best bridges the gap in performance between human users and the optimal policy. We evaluate our approach through a series of randomized controlled user studies where participants manage a virtual kitchen. Our experiments show that the tips generated by our algorithm can significantly improve human performance relative to intuitive baselines. In addition, we discuss a number of empirical insights that can help inform the design of algorithms intended for human-AI interfaces. For instance, we find evidence that participants do not simply blindly follow our tips; instead, they combine them with their own experience to discover additional strategies for improving performance.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "A hallmark of human intelligence is our ability to distill knowledge and expertise into clear and simple representations that can be communicated to others. This ability is critical for human progress, since even simple insights often require a great deal of costly experience and experimentation to discover-for instance, Newton's laws of motion span a few lines of text, yet represent the culmination of millennia of scientific thinking. As a more commonplace example, humans naturally pass on their knowledge to help others-for instance, doctors regularly communicate best practices to their less experienced peers to help them improve their performance [1] . While often succinct, these best practices typically require a great deal of trial and error to discover. By sharing our insights with others, we avoid repeatedly reinventing concepts and instead focus our efforts on expanding the sum of human knowledge.",
            "cite_spans": [
                {
                    "start": 657,
                    "end": 660,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "While recent advances in deep learning have enabled machines to achieve human-level or super-human performance at many artificial intelligence tasks [2, 3] , the knowledge behind their abilities is hidden within blackbox models such as deep neural networks. As a consequence, despite enormous progress, deep learning has remained a tool for pattern matching and prediction rather than one for augmenting human understanding. One of the holy grails of machine learning is to develop techniques for learning compact representations of knowledge that can be understood by humans [4] . Recent work on interpretable machine learning has strived to learn structured models where the computation is transparent to the user, such as decision trees [5, 6] , rule lists [7] , generalized additive models [8] , sparse linear models [9] , or interpretable representations [10] . Indeed, recent work suggests that there often exist interpretable models that achieve performance similar to their deep neural network counterparts [11] ; instead, the challenge lies in discovering these high-performing models.",
            "cite_spans": [
                {
                    "start": 149,
                    "end": 152,
                    "text": "[2,",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 153,
                    "end": 155,
                    "text": "3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 576,
                    "end": 579,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 740,
                    "end": 743,
                    "text": "[5,",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 744,
                    "end": 746,
                    "text": "6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 760,
                    "end": 763,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 794,
                    "end": 797,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 821,
                    "end": 824,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 860,
                    "end": 864,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 1015,
                    "end": 1019,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "A natural question arises: can we leverage these techniques to learn representations of knowledge that are useful to humans? In particular, existing work on interpretable machine learning has largely focused on whether a human can understand the computation performed by a model [8, 12] ; in contrast, our goal is to examine whether these models can convey useful insights to humans. To this end, we devise a novel algorithm for inferring simple tips that can be used to improve performance of a human user. We focus on settings where the human must make a sequence of decisions to optimize an outcome in a complex environment. These settings are particularly challenging for humans, since they must trade off short-term and long-term rewards in ways that are often highly counterintuitive. Our algorithm builds on the idea of using model distillation [13, 14] for interpretable reinforcement learning [15, 16] , which involves first training a high-performance neural network decision-making policy using reinforcement learning [17] , and then training an interpretable policy to approximate this neural network.",
            "cite_spans": [
                {
                    "start": 279,
                    "end": 282,
                    "text": "[8,",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 283,
                    "end": 286,
                    "text": "12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 852,
                    "end": 856,
                    "text": "[13,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 857,
                    "end": 860,
                    "text": "14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 902,
                    "end": 906,
                    "text": "[15,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 907,
                    "end": 910,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 1029,
                    "end": 1033,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In our setting, we are interested in interpreting the discrepancy between the human policy and the neural network, not the neural network itself. To this end, we derive a novel objective encoding this discrepancy; then, our algorithm selects an interpretable tip that minimizes this discrepancy. Intuitively, this tip best bridges the gap between the actions taken by the human users and the ones taken by the neural network. Importantly, it does so in a way that accounts for which actions are consequential for achieving higher performance-i.e., it suggests actions that are expected to improve the long-term performance of the human rather than to simply mimic the neural network. While previous work has leveraged machine learning to predict when humans make mistakes compared to the optimal policy [18, 19, 20] , they do so in an uninterpretable way that makes it difficult to convey their insights to humans.",
            "cite_spans": [
                {
                    "start": 803,
                    "end": 807,
                    "text": "[18,",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 808,
                    "end": 811,
                    "text": "19,",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 812,
                    "end": 815,
                    "text": "20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Two criteria are needed for our approach to be effective. First, our algorithm must be able to identify sufficiently useful tips to improve performance. Second, humans must be able to understand our tip and furthermore comply with its suggested actions. To study these issues, we perform an extensive user study in a scenario where human users play a game managing a virtual kitchen; an illustration of this task is shown in Figure 1 . In this game, users must the workflow required to complete a burger order, and (ii) the game screen that allows available tasks to be dragged and dropped to one of 3 virtual workers. The right panel depicts the study design: in the normal configuration, participants play the same game for 3 rounds; in the disrupted configuration, participants play the same game for 2 rounds, face a disruption in the kitchen, and play the disrupted game for 4 rounds.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 425,
                    "end": 433,
                    "text": "Figure 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "assign subtasks to virtual workers with varying capabilities in a way that optimizes the time it takes to complete a set of food orders. This game is challenging because human users must make tradeoffs such as deciding whether to greedily assign a worker to a subtask that they are slow to complete, or leave them idle in anticipation of a more suitable subtask.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Our results demonstrate that our algorithm can generate novel insights that enable human users to substantially improve their performance compared to counterparts that are not shown the tip or that are shown alternative tips derived from natural baselines. Interestingly, users do not merely adjust their actions by blindly following the tip. Instead, as they gain experience with the game, they increasingly understand the significance of the tip and improve their performance in ways beyond the surface-level meaning of the tip. Overall, our findings suggest that our algorithm infers interpretable and useful insights about the underlying task, and successfully conveys these insights to human participants.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Beyond demonstrating the effectiveness of our algorithm, our results also have implications for the design of effective human-AI interfaces. Examining the rate at which participants comply with various tips, we find evidence suggesting that, to achieve high compliance, the human must not only understand the actions suggested by the tip, but also how to operationalize the suggested actions. Thus, effective human-AI interfaces must convey not just the decisions suggested by the AI, but also how these decisions fit into a broader strategy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Consider a human making a sequence of decisions to achieve some desired outcome. We study settings where current decisions affect future outcomes-for instance, if the human decides to consume some resources at the current time step, they can no longer use these resources in the future. These settings are particularly challenging for decision-making due to the need to reason about how current actions affect future decisions, making them ideal targets for leveraging tips to improve human performance.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "We begin by formalizing the tip inference problem. We model our setting as the human acting to maximize reward in an undiscounted Markov Decision Process (MDP) M = (S, A, R, P ) over a finite time horizon T [21] ; here, S is the state space, A is the action space, R is the reward function, and P is the transition function. Intuitively, a state s \u2208 S captures the current configuration of the system (e.g., available resources), and an action a \u2208 A is a decision that the human can make (e.g., consume some resources to produce an item).",
            "cite_spans": [
                {
                    "start": 207,
                    "end": 211,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "In particular, we represent the human as a decision-making policy \u03c0 H mapping states to (possibly random) actions. At each time step t \u2208 {1, ..., T }, the human observes the current state s t and selects an action a t to take according to the probability distribution p(a t | s t ) = \u03c0 H (s t , a t ). Then, they receive reward r t = R(s t , a t ), and the system transitions to the next state s t+1 , which is a random variable with probability distribution p(s t+1 | s t , a t ) = P (s t , a t , s t+1 ), after which the process is repeated until t = T . A sequence of state-action-reward triples sampled according to this process is called a rollout, denoted \u03b6 = ((s 1 , a 1 , r 1 ), ..., (s T , a T , r T )). The human's goal is to act according to a policy \u03c0 H that maximizes the cumulative expected reward J(\u03c0 H ), where",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "and where D (\u03c0) is the distribution of rollouts induced by using policy \u03c0. Now, given the MDP M along with the human policy \u03c0 H , our goal is to learn a tip \u03c1 that most improves the cumulative expected reward. Formally, a tip indicates that in certain states s, the human should use action \u03c1(s) \u2208 A instead of following their own policy \u03c0 H . For simplicity, we assume that the human always follows the tip. While this assumption does not necessarily hold in practice, we find that it works sufficiently well to improve performance as long as the human can understand both the tip and its rationale (we give a detailed discussion on compliance in our Results section). Thus, we consider tips in the form of a single, interpretable rule:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "where a \u2208 A is an action and \u03c8(s) \u2208 {true, false} is a logical predicate over states s \u2208 S-e.g., it might say that a sufficient quantity of a certain resource is currently available. Intuitively, a tip \u03c1 = (\u03c8, a) says that if the predicate \u03c8 is satisfied, then the human should use action a; otherwise, they should use their own policy \u03c0 H . Assuming the human follows this tip exactly, then the resulting policy they use is \u03c0 H \u2295 \u03c1, where",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "where 1 is the indicator function; that is, the human takes action a with probability one if \u03c8(s) holds, and follows their existing policy otherwise. Then, our goal is to compute the tip that most improves the human's performance-i.e.,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "This formulation ensures that the optimal tip is consequential to improving performance, rather than na\u00efvely identifying state-action pairs that frequently differ between the human and optimal policies; we compare to such a baseline in our Results section.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "Next, we describe our algorithm for solving this problem. To guide our algorithm, we first compute the optimal Q-function Q * by (approximately) solving the Bellman equations",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "using Q-learning [22] , where we parameterize Q * using a neural network with a single hidden layer. Then, we can rewrite the objective J(\u03c0 H \u2295 \u03c1) in (1) as follows [16] :",
            "cite_spans": [
                {
                    "start": 17,
                    "end": 21,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 165,
                    "end": 169,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "Since we do not have access to samples \u03b6 \u223c D (\u03c0 H \u2295\u03c1) , we use the approximation using D (\u03c0 H \u2295\u03c1) \u2248 D (\u03c0 H ) , which is good as long as the tip \u03c1 does not drastically change the human's decisions. Furthermore, we approximate the expectation in our objective using rollouts \u03b6 1 , ..., \u03b6 k \u223c D (\u03c0 H ) from the human policy \u03c0 H , where \u03b6 i = ((s i,1 , a i,1 , r i,1 ), ..., (s i,T , a i,T , r i,T )). Thus, our algorithm computes the tip",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "where for a given tip \u03c1 = (\u03c8, a) and action a , we define",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "We optimize (2) by enumerating through candidate tips \u03c1, evaluating the objective, and selecting the tip\u03c1 with the highest objective value.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Inferring Tips via Interpretable Reinforcement Learning"
        },
        {
            "text": "Inspired by a recent multi-agent reinforcement learning benchmark [23] , we consider a sequential decision-making task in the form of a virtual kitchen-management game that can be played by individual human users (see Figure 1 ). 1 In this game, the user takes the role of a manager of several virtual workers-namely, chef, sous-chef, and server-serving burgers in a virtual kitchen. Each burger consists of a fixed set of subtasks that must be completed in order-namely, chopping meat, cooking the burger, and plating the burger.The game consists of discrete time steps; on each step, the user must decide which (if any) subtask to assign to each idle worker. The worker then completes the subtask across a fixed number of subsequent time steps, and then becomes idle again. A burger is completed once all its subtasks are completed, and the user completes the game once four burger orders are completed. The user's goal is to complete the game in as few steps as possible.",
            "cite_spans": [
                {
                    "start": 66,
                    "end": 70,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 230,
                    "end": 231,
                    "text": "1",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [
                {
                    "start": 218,
                    "end": 226,
                    "text": "Figure 1",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Case Study: Virtual Kitchen-Management Game"
        },
        {
            "text": "There are two key aspects of the game that make it challenging. First, the subtasks have dependencies-i.e., a subtask can only be assigned once previous subtasks of the same order have already been completed. For example, the \"plate burger\" task can only be assigned once the \"cook burger\" task is completed. Second, the virtual workers have heterogeneous skills-i.e., different workers take different numbers of steps to complete different subtasks. For example, the chef is skilled at chopping/cooking but performs poorly at plating, while the server is the opposite, and the sous-chef has average skill on all subtasks; see Table  1 in the Appendix for details. Ideally, one would match workers to tasks that they are skilled at to reduce completion time. Thus, the user faces the following dilemma. When a worker becomes available but is not skilled at any of the currently available subtasks, then the user must decide between (i) assigning a suboptimal subtask to that worker, potentially creating a bottleneck, or (ii) leaving the worker idle until a more suitable subtask becomes available. For instance, if the server is idle but all available subtasks are \"cook burger\", then the user must either (i) assign cooking to the unskilled server, thereby slowing down completion of that burger and eliminating the possibility of assigning plating to the server for the near future, or (ii) leave the server idle until a \"plate burger\" subtask becomes available. Furthermore, users are not shown the number of steps a worker takes to complete a subtask until they assign the subtask to that worker; instead, they must experiment to learn this information.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 627,
                    "end": 635,
                    "text": "Table  1",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "Case Study: Virtual Kitchen-Management Game"
        },
        {
            "text": "We consider two scenarios of the game, differing only in terms of worker availability. In the first scenario, the kitchen is fully-staffed, where the human user has access to all three virtual workers (chef, sous-chef, and server). In the second scenario, the human user faces a disruption and the kitchen becomes understaffed, with only two virtual workers (sous-chef and server).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Case Study: Virtual Kitchen-Management Game"
        },
        {
            "text": "We investigate how humans interpret and follow the tips inferred by our algorithm in preregistered behavioral experiments involving Amazon Mechanical Turk (AMT) users. 2 Participants are compensated a flat rate for completion of the study, and a relatively larger performance-based bonus determined by how quickly they complete each round of the game; see Experimental Design Details in the Appendix for payment details and game screenshots.",
            "cite_spans": [
                {
                    "start": 168,
                    "end": 169,
                    "text": "2",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "First and foremost, we study whether participants shown our tip (the \"algorithm\" treatment condition) outperform participants not shown any tips (the control group), participants shown a tip suggested by previous human participants who played the same scenario multiple times (the \"human\" condition), and participants shown a tip derived by a baseline algorithm that identifies the state-action pair where human participants and the optimal policy most frequently differ (the \"baseline\" condition). Second, we examine participant behaviors in response to different tips, particularly their compliance and how they learn beyond the provided tips.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "Our experiments proceed in two phases: in Phase I, we collect trace and survey data for learning tips (without showing tips to any participants); in Phase II, we randomize participants to different conditions (where they are shown varying tips) and evaluate their performance. In both phases, each participant plays a sequence of three to six rounds of the game, which we call a configuration; this approach enables us to study both how performance varies with the tip they are shown, as well as how it evolves across games as participants gain experience.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "We consider two configurations. In the normal configuration, each participant simply plays three rounds of the fully-staffed scenario. In the disrupted configuration, each participant plays two rounds of the fully-staffed scenario, followed by four rounds of the understaffed scenario. Intuitively, the normal configuration studies whether tips can help human participants fine-tune their performance. In contrast, the disrupted configuration is designed to show how tips can help participants adapt to novel situations where the optimal strategy substantially changes. The set of participants across all four configuration-phase pairs is mutually exclusive-i.e., no participant has prior experience with any version of the game.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "We provide an overview of each phase here; see Figure 2 for a summary and the Appendix for additional details. In Phase I, we have a small sample of human participants (normal: N = 183 participants; disrupted: N = 172 participants) play each configuration without tips, and collect data on the actions they take. Then, we use our tip inference algorithm in conjunction with this data to generate our tip. Each participant is also shown a comprehensive list of candidate tips at the end of Phase I, and is asked to select the tip they believe would most improve the performance of future players; we take the most commonly chosen tip as the \"human tip\" baseline. Our second baseline computes the best tip that would match the human user's actions in Phase I with those of the optimal policy, without regard to which actions are consequential for improving performance. In particular, given rolloutsD from the optimal policy \u03c0 * , it computes the frequency C * (s, a) of state-action pairs inD, and then selects\u03c1 bl = arg max",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 47,
                    "end": 55,
                    "text": "Figure 2",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Experimental Design"
        },
        {
            "text": "Intuitively, this objective ignores the structure of the MDP implicitly encoded in the Qfunction, and instead directly tries to imitate the optimal policy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "Then, in Phase II, we randomly assign a large number of new participants (normal: N = 1, 317 participants; disrupted: N = 1, 011 participants) into one of four conditions: control (no tip), algorithm (shown the tip\u03c1 inferred by our algorithm in Eq. (2) based on Phase I data), human (shown the tip most frequently chosen by Phase I participants), or baseline (shown the tip\u03c1 bl inferred by the baseline algorithm in Eq. (3) based on Phase I data). In the normal configuration, Phase II participants are shown the tip designated by their condition for the fully-staffed scenario on all rounds. In the disrupted configuration, they are shown the tip designated by their condition for the understaffed scenario (the last 4 rounds). Our goal in the first 2 rounds of the disrupted configuration is to quickly acclimate participants to the fully-staffed scenario in a way that is consistent across conditions. Thus, we show our algorithm tip \"Chef should never plate\" across all conditions (including control) for the first two rounds-as shown in our Results section, this tip most quickly improves performance.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "Finally, we assess performance in each condition both through the overall completion time in the final round, as well as the fraction of participants who learn the optimal policy (20 and 34 time steps for the fully-staffed and understaffed scenarios, respectively).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "Despite their simplicity and conciseness, we find that our tips can significantly improve participant performance since they capture strategies that are hard for participants to learn; in contrast, alternative tips have varying empirical shortcomings that reduce their effectiveness. We also describe how participant compliance varies across tips; in particular, participants must understand how to operationalize the tip effectively for them to comply. Finally, we find evidence that participants do not blindly follow our tips, but combine them with their own experience to discover additional strategies beyond our tips. Figure 3a shows the tips inferred in each condition for each configuration using trace and survey data from Phase I.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 624,
                    "end": 633,
                    "text": "Figure 3a",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Results"
        },
        {
            "text": "Performance: Figure 3 shows performance results across all four conditions and both configurations. The normal configuration is relatively easy-a substantial fraction (24%) discover the optimal policy by the final round without the aid of tips (control group). As shown in Figure  3b , participants shown our tip completed the final round in 22.5 steps on average, significantly outperforming participants in the control group (p < 10 \u22124 ), those shown the humansuggested tip (p = 2\u00d710 \u22124 ), and those shown the tip from the baseline algorithm (p < 10 \u22124 ). 3 Our tip speeds up learning by at least one round compared to the other conditions-i.e., the performance of participants given our tip on round k was similar to or better than the performance of participants in other conditions on round k + 1 (Figure 3d ). Our tip also helped more participants (35%) achieve optimal performance (20 steps) in the final round, compared to 24-29% in other conditions.",
            "cite_spans": [
                {
                    "start": 558,
                    "end": 559,
                    "text": "3",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [
                {
                    "start": 13,
                    "end": 21,
                    "text": "Figure 3",
                    "ref_id": "FIGREF4"
                },
                {
                    "start": 273,
                    "end": 283,
                    "text": "Figure  3b",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 802,
                    "end": 812,
                    "text": "(Figure 3d",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Results"
        },
        {
            "text": "The disrupted configuration is substantially harder, since participants must adapt to the more counterintuitive understaffed scenario. Perhaps as a consequence, participants benefit much more from tips: those in the control group took four rounds to achieve the same level of performance as those shown our tip on the first round. Participants shown our tip completed the final round in 37.1 steps, again significantly outperforming participants in the control group (p < 10 \u22124 ), those shown the human-suggested tip (p = 6 \u00d7 10 \u22123 ), and those shown the tip from the baseline algorithm (p < 10 \u22124 ). In the disrupted configuration, the baseline tip actually reduces participant performance, likely by misleading participants. More starkly, 19% of participants shown our tip achieved optimal performance (34 steps) in the final round, compared to less than 1% in all other conditions-i.e., our tip uniquely helps participants learn to play optimally. 4",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "Shortcomings of alternative tips: Next, we discuss potential reasons for the success of our tips compared to the others. First, the baseline tips likely perform poorly since it blindly tries to mimic the optimal policy rather than focusing on consequential actions. Specifically, in the disrupted configuration, the baseline tip \"Sous-chef should plate twice\" suggests actions that occur at the end of the game, after it is too late for participants to significantly improve their performance. In contrast, our algorithm focuses on mimicking decisions made by the optimal policy that have long-term benefits-e.g., our tip \"Server should cook twice\" frees the sous-chef to plate later in the game.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "While the human-suggested tips consistently improve performance compared to the control group, they can be overly general or incorrect. In the normal configuration, Phase I participants were unable to translate their strategy into a specific tip-i.e., their suggested tip \"Strategically leave some workers idle\" captures a strategy needed to perform better but does convey details needed to ascertain the optimal strategy. Alternatively, in the disrupted configuration, Phase I participants provided an incorrect tip, suggesting \"Server should cook once\", whereas the optimal policy actually assigns the server to cook twice (as suggested by our tip)-i.e., participants identified the correct direction of change, but at an insufficient magnitude.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "Compliance: As discussed earlier, the effectiveness of a tip critically depends on whether humans are able to understand it and implement it effectively. This involves both complying with the tip's suggested actions as well as modifying other portions of their strategy to make full use of the tip. Here, we examine compliance with the tips; we examine learning strategies beyond the tips below. In particular, Figure 4 shows the fraction of participants that complied with the tip they were offered in each condition. 5 As can be seen, participants increasingly comply with the tips shown over time in all conditions.",
            "cite_spans": [
                {
                    "start": 519,
                    "end": 520,
                    "text": "5",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [
                {
                    "start": 411,
                    "end": 419,
                    "text": "Figure 4",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "Results"
        },
        {
            "text": "Compliance with the baseline tip was relatively low in both configurations, suggesting that participants did not find it as useful. Alternatively, compliance with the human-suggested tip was higher than compliance with our tip, particularly in the disrupted configuration; most likely, the human-suggested tip is more intuitive since it was devised by humans. In contrast, even if our tip is correct, it can be highly counterintuitive-in the disrupted scenario, our tip \"Server should cook twice\" is counterintuitive since the server is very slow at cooking, yet this strategy is the only way to achieve optimal performance.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "Our results suggest that participants do not blindly follow tips; instead, they only follow them if they understand why the suggested strategy is effective. Thus, compliance is not only a function of the syntactic structure of the tip (which is unchanged across conditions), but also its semantic content. When the optimal strategy is counterintuitive, we observe an intrinsic tradeoff between the optimality of the tip and compliance to the tip. In the disrupted configuration, our tip succeeds despite relatively lower compliance since it suggests a highly effective strategy; as seen in Figure 3g , participants that understand this strategy can achieve optimal performance. We also found qualitative evidence that participants ignored tips they could not understand based on their post-game survey responses, which we discuss in the Appendix.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 590,
                    "end": 599,
                    "text": "Figure 3g",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Results"
        },
        {
            "text": "Learning beyond tips: Next, we examine how humans learned a strategy that goes beyond the tips they were shown. To this end, we examine cross-compliance, which is the compliance of the participant to tips other than the one they were shown. Na\u00efvely, there is no reason to expect participants to cross-comply with a tip that we did not show them beyond the cross-compliance exhibited by the control group (assuming that it does not overlap with the tip they were shown). Thus, any cross-compliance beyond that of the control group measures how a tip enables participants to learn strategies beyond the stated tip. We focus on the disrupted configuration since it is more challenging for participants, leading to more complex cross-compliance patterns across conditions. Figure 5 shows the cross-compliance of participants in each condition with the different tips (algorithm, baseline, human), as well as a new rule (\"Server chops once\") that is taken by the optimal policy (but not shown to any participants).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 769,
                    "end": 777,
                    "text": "Figure 5",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "Results"
        },
        {
            "text": "Participants in the human and control groups only comply with the human tip; indeed, the human-suggested tip actually contradicts the optimal policy, thereby preventing participants from learning the other tips which are part of the optimal policy. Similarly, participants shown the baseline tip only have high compliance with this tip, indicating that the baseline tip could not help participants uncover the optimal policy. In contrast, participants who received our tip have high cross-compliance with all parts of the optimal policy (i.e., the baseline and unshown tips); furthermore, our algorithm is the only condition where crosscompliance with the suboptimal human tip decreases over time. That is, our tip uniquely enables participants to combine the tip with their own experience to discover useful strategies beyond what is stated in the tip. cross-comply with each offered tip over time in the disrupted configuration; results from participants in the same condition are marked with yellow stars. Panel (d) shows analogous results for a rule that is part of the optimal policy but was not shown as a tip in any condition.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "We have proposed a novel machine learning algorithm for automatically identifying interpretable tips designed to help improve human decision-making. Our large-scale behavioral study demonstrates that the tips inferred by our algorithm can successfully improve human performance at challenging sequential decision-making tasks, speeding up learning by up to three rounds of in-game experience. Furthermore, we find evidence that participants combine our tips with their own experience to discover additional strategies beyond those stated in the tip. In other words, our machine learning algorithm is capable of identifying concise insights and communicating them to humans in a way that expands and improves their knowledge. To the best of our knowledge, our work is the first to empirically demonstrate that machine learning can be used to improve human decision-making.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Furthermore, we provide a number of insights that can aid the design of human-AI interfaces. First, a significant factor in the performance of a tip is whether humans comply with that tip. Prior work has studied compliance from the perspective of algorithm aversion (i.e., whether humans trust other humans more than algorithms) [25, 24, 26] , as well as interpretability (i.e., whether the human understands the tip) [12, 27, 11] . Our results suggest that human compliance additionally depends on whether humans understand how to operationalize the tip to improve performance, which brings a novel dimension to the design of human-AI interfaces. Second, it takes time for humans to correctly operationalize and adopt the tiphumans need experience to understand why the tip is correct and to discover complementary strategies that further improve their performance. Thus, there is an opportunity for human-AI interfaces to help humans gradually adapt their behavior to improve performance. Third, even tips that are part of the optimal policy can hurt participant performance if they focus on actions that are not consequential; avoiding such tips is important since it can cause participants to lose trust in the AI. We anticipate that human-AI interfaces will become increasingly prevalent as machine learning algorithms are deployed in real-world settings to help humans make consequential decisions, and a better understanding of how to design trustworthy interfaces will be critical to ensuring that these interfaces ultimately improve human performance.",
            "cite_spans": [
                {
                    "start": 329,
                    "end": 333,
                    "text": "[25,",
                    "ref_id": "BIBREF24"
                },
                {
                    "start": 334,
                    "end": 337,
                    "text": "24,",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 338,
                    "end": 341,
                    "text": "26]",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 418,
                    "end": 422,
                    "text": "[12,",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 423,
                    "end": 426,
                    "text": "27,",
                    "ref_id": "BIBREF26"
                },
                {
                    "start": 427,
                    "end": 430,
                    "text": "11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "server, (vii) the second cooked burger must not be served until the third and fourth burgers are cooked, and (viii) both workers must be kept busy at all times.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Search space of tips: Each tip is actually composed of a set of rules inferred by our algorithm. Recall that our algorithm considers tips in the form of an if-then-else statement that says to take a certain action in a certain state. One challenge is the combinatorial nature of our action space-there can be as many as k!/(k \u2212 m)! actions, where m is the number of workers and k = n j=1 k j is the total number of subtasks. The large number of actions can make the tips very specific-e.g., simultaneously assigning three distinct subtasks to three of the virtual workers. Instead, we decompose the action space and consider assigning a single subtask to a single virtual worker. More precisely, we include three features in the predicate \u03c6: (i) the subtask being considered, (ii) the order to which the subtask belongs, and (iii) the virtual worker in consideration. Then, our algorithm considers tips of the form",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "where o is an order, s is a subtask, and w is a virtual worker.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Even with this action decomposition, we found that these tips are still too complicated for human users to internalize. Thus, we post-process the tips inferred by our algorithm by aggregating over tuples (o, s, w) that have the same s and w. 6 For example, instead of considering two separate tips if (order = burger 1 \u2227 subtask = cooking \u2227 virtual worker = chef) then (assign (burger 1 , cooking) to chef) if (order = burger 2 \u2227 subtask = cooking \u2227 virtual worker = chef) then (assign (burger 2 , cooking) to chef), we merge them into a tip assign cooking to chef 2 times.",
            "cite_spans": [
                {
                    "start": 242,
                    "end": 243,
                    "text": "6",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "In other words, a tip is a combination of tips \u03c1 = (\u03c1 1 , ..., \u03c1 k ). Finally, the score our algorithm assigns to such a tip is J(\u03c1) = k i=1 J(\u03c1 i ); then, it chooses the tip with the highest score.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Tip inference procedure: Next, we describe how our algorithm computes optimal tips for the kitchen game MDP. In principle, we could use dynamic programming to solve for the optimal value function V * , and then compute the optimal Q-function based on V * . However, while our state space is finite, it is still too large for dynamic programming to be tractable. Instead, we use the policy gradient algorithm (which is widely used for model-free reinforcement learning) as a heuristic to learn an expert policy \u03c0 * for our MDP [28] . At a high level, the policy gradient algorithm searches over a family of policies \u03c0 \u03b8 parameterized by \u03b8 \u2208 \u0398 \u2286 R d \u0398 ; typically, \u03c0 \u03b8 is a neural network, and \u03b8 is the corresponding vector of neural network parameters. This approach requires featurizing the states in the MDP-i.e., constructing a feature mapping \u03c6 : S \u2192 {0, 1} d . Then, the neural network policy \u03c0 \u03b8 takes as input the featurized state \u03c6(s), and outputs an action \u03c0 * (\u03c6(s)) \u2208 A to take in state s. 7 Then, the policy gradient algorithm performs stochastic gradient descent on the objective J(\u03c0 \u03b8 ), and outputs the best policy \u03c0 * = \u03c0 \u03b8 * . In general, J(\u03c0 \u03b8 ) is nonconvex, so this algorithm is susceptible to local minima, but it has been shown to perform well in practice. For the kitchen game MDP, we use state features including whether each subtask of each order is available, the current status of each worker, and the current time step. We take \u03c0 \u03b8 to be a neural network with 50 hidden units; to optimize J(\u03c0 \u03b8 ), we take 10, 000 stochastic gradient steps with a learning rate of 0.001.",
            "cite_spans": [
                {
                    "start": 526,
                    "end": 530,
                    "text": "[28]",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 1000,
                    "end": 1001,
                    "text": "7",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "Once we have computed \u03c0 * , we use our tip inference algorithm to learn an estimateQ of the Q-function Q (\u03c0 * ) for \u03c0 * . We chooseQ to be a random forest [29] . It operates over the same featurized states as the neural network policy-i.e., it has the formQ(\u03c6(s), a) \u2248 Q (\u03c0 * ) (s, a). Finally, we apply our algorithm to inferring tips on state-action pairs collected from observing human users playing our game. Since our goal is to help human users improve their performance, we restrict the training dataset to the bottom 25% performing human users. In addition, we apply two post-processing steps to the set of candidate tips. First, we eliminate tips that apply in less than 10% of the (featurized) states that occur in the human dataset. This step eliminates high-variance tips that may have large benefit, but are useful only a small fraction of the time; we omit such tips since our estimates of their quality tend to have very high variance. Second, we eliminate tips that disagree with the expert policy more than 50% of the time-i.e., for a tip (\u03c8, a), we have \u03c8(s) = 1 and a = \u03c0 * (s) for more than 50% of state-action pairs in the human dataset. This step eliminates tips that have large benefits on average, but frequently offer incorrect advice that can confuse the human user or cause them to distrust our tips.",
            "cite_spans": [
                {
                    "start": 155,
                    "end": 159,
                    "text": "[29]",
                    "ref_id": "BIBREF28"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "We perform separate experiments for each of the two configurations of our game. The highlevel structure of our experimental design for each configuration is the same; they differ in terms of when we show tips to the participant and which tips we show. Before starting our game, each participant is shown a set of game instructions and comprehension checks; then, they play a practice scenario twice (with an option to skip the second one). The practice scenario is meant to familiarize participants with the game mechanics and the user interface. In this scenario, they manage three identical chefs to make a single, simple food order. This food order is significantly different than the burger order used in the main game. Then, they proceed to play the scenarios for the current configuration. Table 1 exhibits the number of time steps needed for each of the virtual workers to complete each of the subtasks required to complete a single burger order.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 796,
                    "end": 803,
                    "text": "Table 1",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "B Experimental Design Details"
        },
        {
            "text": "Finally, after completing all scenarios, we give each participant a post-game survey that includes several questions regarding their experience with the game. Each participant receives a participation fee of $0.10 for each round they complete; they also receive a performancebased bonus based on the number of time steps taken to complete each round. The bonus ranges from $0.15 to $0.75 per round. Participants provided informed consent, and all study procedures were approved by our institution's Institutional Review Board.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B Experimental Design Details"
        },
        {
            "text": "Phase I: For each configuration, we recruited 200 participants via Amazon Mechanical Turk to play the game. Figure 6 illustrates the study flow for Phase I. As part of the postgame survey, we ask the participants to suggest a tip for future players. In particular, we show each participant a comprehensive list of candidate tips and ask them to select the one they believe would most improve the performance of future players. This list of tips is constructed by merging three types of tips: (i) all possible tips in the search space considered by our algorithm (e.g., \"Chef shouldn't plate.\"), (ii) generic tips that arise frequently in our exploratory user studies (e.g., \"Keep everyone busy at all time.\"), (iii) a small number of manually constructed tips obtained by studying the optimal policy (e.g., \"Chef should chop as long as there is no cooking task\"). Importantly, this list always contains the top tip inferred using our algorithm.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 108,
                    "end": 116,
                    "text": "Figure 6",
                    "ref_id": "FIGREF10"
                }
            ],
            "section": "B Experimental Design Details"
        },
        {
            "text": "Inferred tips: Next, we use the data from the final round played by the participants to infer tips in three ways: (i) use our tip inference algorithm in conjunction with the data from Phase I, (ii) do the same with the baseline algorithm, and (iii) rank the candidate tips in the post-game survey based on the number of votes by the participants.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B Experimental Design Details"
        },
        {
            "text": "For the normal configuration, 183 participants 8 successfully completed the game. The top three tips inferred from each of the sources are reported in Table 2 . For the algorithm tip, \"Chef should never plate\" is selected as it is expected to be the most effective at shortening completion time (2.43 steps). For the baseline tip, our na\u00efve algorithm selects \"Chef should chop once\" as it is the most frequently observed state-action pair in the data. Finally, for the human tip, \"Strategically leave some workers idle\" received the most votes among the participants (28.42%). It is worth noting that all of the tips most voted by past players are in line with the optimal strategy. The first tip captures the key strategy that some virtual workers should be left idle rather than assigned to a time-consuming task. However, it is less specific than other tips. The second and third tips reflect the information participants could learn from assigning different tasks to different workers during the game: the server spends the most time cooking while the chef spends the most time plating. For the disrupted configuration, 172 participants 9 successfully completed the game. Table 3 reports the top three tips inferred from each of the sources. The best algorithm tip is \"Server should cook twice\" with the expected completion time reduction of 2.32 steps. The baseline algorithm chooses \"Sous-chef should plate twice\" and the human tip \"Server should cook once\" (equivalently \"Sous-chef should cook three times\") got the most votes. Unlike the normal configuration, the top two human tips are not part of the optimal policy. In the optimal policy, sous-chef and server should each cook twice. The third human tip does align with the optimal policy; however, it is much less specific than the other tips. This highlights the increased difficulty for humans to identify the optimal strategy in the disrupted configuration compared to the normal configuration.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 151,
                    "end": 158,
                    "text": "Table 2",
                    "ref_id": "TABREF6"
                },
                {
                    "start": 1176,
                    "end": 1183,
                    "text": "Table 3",
                    "ref_id": "TABREF7"
                }
            ],
            "section": "B Experimental Design Details"
        },
        {
            "text": "Phase II: Next, we evaluate the effectiveness of each of the inferred tips. In particular, Figure 7 illustrates the study flow for Phase II. In this phase, participants are randomly assigned to one of 4 conditions (control, baseline, algorithm, human). We recruited 350 AMT users to play each condition in each configuration, totaling to 2,800 users. The specific tips we show in each round depends not just on the condition, but also varies from round to round depending on the configuration. For the normal configuration, we show the tip for the current condition in all three rounds. However, for the disrupted configuration, the tip for the current condition is specific to the understaffed scenario. Thus, we only show the tip for the current condition in rounds 3-6; in all conditions, for rounds 1 and 2, we show the tip inferred by our algorithm for the fully-staffed scenario from the normal configuration. By doing so, we ensure that the tip shown during the fully-staffed scenario does not bias our evaluation of the tip for the understaffed scenario.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 91,
                    "end": 99,
                    "text": "Figure 7",
                    "ref_id": "FIGREF12"
                }
            ],
            "section": "B Experimental Design Details"
        },
        {
            "text": "Pay schemes: Normal configuration. In Phase I, participants received $0.30 as a base pay for their participation. In addition, they could earn a performance-based bonus for each of the three rounds of the game. The optimal (e.g., Disrupted configuration. In both phases, participants received $0.60 as a base pay for their participation. In addition, they could earn a performance-based bonus for each of the six rounds of the game. For the first two rounds, in which they managed a fully-staffed kitchen, the bonus scheme is the same as that of Phase I of the normal configuration. For the last four rounds, in which they managed an understaffed kitchen (optimal completion time is 34 time steps), the bonus is as follows Table 4 exhibits the demographic and gameplay information of the participants across our studies. The four groups of participants are not significantly different from one another, except that those playing the disrupted configuration spent slightly longer time to complete the game and found the game to be slightly more difficult, compared to the normal configuration. Tables 5 and 6 show the average performance within each round across two phases and treatment conditions for normal and disrupted configurations, respectively. Table 6 : Average performance by treatment condition and round (disrupted configuration).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 723,
                    "end": 730,
                    "text": "Table 4",
                    "ref_id": "TABREF10"
                },
                {
                    "start": 1093,
                    "end": 1107,
                    "text": "Tables 5 and 6",
                    "ref_id": "TABREF11"
                },
                {
                    "start": 1253,
                    "end": 1260,
                    "text": "Table 6",
                    "ref_id": null
                }
            ],
            "section": "B Experimental Design Details"
        },
        {
            "text": "Participant comments on the provided tips: The effectiveness of a tip depends in part on whether the participants follow it. In general, we observe that the compliance to more intuitive tips is significantly higher than compliance to counter-intuitive tips. In particular, for the disrupted configuration, the tips inferred from our algorithm are counter-intuitive since they ask the server to cook twice despite the fact that the server is slow at cooking. Here, we further discuss comments the participants provided regarding the tips they were shown. In the post-game survey, we asked the participants the following question: \"What did you think about the tip for these last [three/four] rounds and how did you incorporate it in your strategy?\" We manually code these responses; Tables 7 and 8 exhibit the breakdown of participants in each condition based on the coded responses for normal and disrupted configurations, respectively. Note that participants were not informed of the source of the tips, so variation in compliance is entirely due to the content of the tips. We also note that we verified that the participants saw each tip by asking them to write the content of the tips in the survey.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Experimental Results Details"
        },
        {
            "text": "\"Chef shouldn't plate\" \"Chef chops once\" \"Leave some idle\" We first observe that for both configurations, a substantially larger fraction of participants in the human condition responded positively to the tips compared to the other conditions. Similarly, a substantially smaller fraction of those in the human condition viewed the tips negatively. These results suggest that human participants were effective at selecting a tip that would be also accepted by other humans, potentially due to such tip matching humans' intuition in general. On the other hand, counter-intuitive tips such as algorithm and baseline tips in the disrupted configuration received substantially more negative feedback. Both tips contradict the optimal strategy from the fully-staffed scenario in which the server who is the slowest at cooking should not be assigned to cook; instead, the server should be assigned Disrupted Algorithm Baseline Human \"Server cooks twice\" \"Sous-chef plates twice\" \"Server cooks once\" Table 8 : Participants' coded feedback on the provided tips (disrupted configuration).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 992,
                    "end": 999,
                    "text": "Table 8",
                    "ref_id": null
                }
            ],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "most of the plating tasks. The negative sentiment towards these two tips could explain the much lower compliance rates we observed in Figure 4b . The improvement in performance over time implied that it took the participants some time and effort to correctly incorporate these tips into their workflow. To better understand these trends, we next present selected excerpts from the participant comments.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 134,
                    "end": 143,
                    "text": "Figure 4b",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "(D1-A) Positive comments on the algorithm tip in the disrupted configuration:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"It was very helpful. It made me focus on making sure the server cooked more even if that was not his obvious strength.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I ignored the tip at first, but later I used the tip and it helped me complete the tasks quickly.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"At first I didn't follow it because it seemed counter intuitive since they're slow. But then I had trouble, so I tried it and came out ahead.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I did not listen to it at first because I didn't believe that it would actually help but it did.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"The tip was helpful. Without it, I think I would have tried to complete the task without the Server cooking, which would have left someone idle for a long time.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "(D2-A) Negative comments on the algorithm tip in the disrupted configuration:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I think it was a bad tip. I couldn't figure out how to incorporate it successfully.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"Seemed counterintuitive.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"It did not help me. I did not use it for round 1, I used it for round 2 and it made me do worse, so round 3 I tried it again and was still unable to do well, so the last round I ignored the tip.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I don't think it helped. I thought having the sous chef cook 3 times would take too long and the point at which I tried it, I decided last minute to have the server cook twice. So I don't think it told me anything useful.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"It was not needed since the server took so much longer to cook.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "(D1-H) Positive comments on the human tip in the disrupted configuration:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"It seemed pretty much essential to have server cook once.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I thought it was smart and I used it exclusively.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"It was accurate, and I implemented the tip.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I felt that tip was valid, as the server primarily is useful plating/chopping. I only had him cook once.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"It helped because she could cook one burger but any more than that and your ticks would be too high.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "(D2-H) Negative comments on the human tip in the disrupted configuration:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I used the tip but I don't think it was helpful. The server took long to cook.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"I don't agree with this tip.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "\u2022 \"It stunk honestly. The server takes forever to cook.\"",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "As can be seen, many users felt the human tip to be valid and accurate since it was closer to their intuition while disagreeing with tips that they found counter-intuitive. To some degree, the human tip was also counter-intuitive since it asks the server to cook once instead of not at all. As a consequence, compliance to the tip suffered. As discussed earlier, because the participants do not know the source of each tip, these differences are purely due to the content of the tips. As a consequence, to achieve high compliance, it is not sufficient for the participant to understand the action suggested by the tip; instead, they have to understand why the suggested action helps improve performance and how to correctly incorporate it into their workflow.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        },
        {
            "text": "Hypothetical disruption: In the post-game survey of both phases of the normal configuration, participants were asked to imagine a hypothetical understaffed scenario where the chef was no longer available in the kitchen and select the best tip that they believed would most help improve performance in such disruption. Note that these participants did not experience a disruption during their gameplay. The list of tip presented to them is the same as the one offered to the participants in the disruption configuration. Consistently in both phases, the tip that received the most votes is \"Server shouldn't cook\". Again, this is likely due to the fact that, after three rounds of managing the virtual kitchen under the fully-staffed scenario, the participants potentially learned the optimal policy that the server should not be assigned to cook any burger. Without the actual experience of managing the disruption, they appeared to be biased towards their strategy learned in the fully-staffed scenario, which felt more intuitive to them. This observation highlights one of the key insights of our study that humans' intuition could be far away from the optimal policy, making them less likely to comply to the counter-intuitive tip inferred from our algorithm.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Normal Algorithm Baseline Human"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Closing the productivity gap: Improving worker productivity through public relative performance feedback and validation of best practices",
            "authors": [
                {
                    "first": "Hummy",
                    "middle": [],
                    "last": "Song",
                    "suffix": ""
                },
                {
                    "first": "Anita",
                    "middle": [
                        "L"
                    ],
                    "last": "Tucker",
                    "suffix": ""
                },
                {
                    "first": "Karen",
                    "middle": [
                        "L"
                    ],
                    "last": "Murrell",
                    "suffix": ""
                },
                {
                    "first": "David R",
                    "middle": [],
                    "last": "Vinson",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Management Science",
            "volume": "64",
            "issn": "6",
            "pages": "2628--2649",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Human-level control through deep reinforcement learning",
            "authors": [
                {
                    "first": "Volodymyr",
                    "middle": [],
                    "last": "Mnih",
                    "suffix": ""
                },
                {
                    "first": "Koray",
                    "middle": [],
                    "last": "Kavukcuoglu",
                    "suffix": ""
                },
                {
                    "first": "David",
                    "middle": [],
                    "last": "Silver",
                    "suffix": ""
                },
                {
                    "first": "Andrei",
                    "middle": [
                        "A"
                    ],
                    "last": "Rusu",
                    "suffix": ""
                },
                {
                    "first": "Joel",
                    "middle": [],
                    "last": "Veness",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Marc",
                    "suffix": ""
                },
                {
                    "first": "Alex",
                    "middle": [],
                    "last": "Bellemare",
                    "suffix": ""
                },
                {
                    "first": "Martin",
                    "middle": [],
                    "last": "Graves",
                    "suffix": ""
                },
                {
                    "first": "Andreas",
                    "middle": [
                        "K"
                    ],
                    "last": "Riedmiller",
                    "suffix": ""
                },
                {
                    "first": "Georg",
                    "middle": [],
                    "last": "Fidjeland",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Ostrovski",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "nature",
            "volume": "518",
            "issn": "7540",
            "pages": "529--533",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Mastering the game of go with deep neural networks and tree search",
            "authors": [
                {
                    "first": "David",
                    "middle": [],
                    "last": "Silver",
                    "suffix": ""
                },
                {
                    "first": "Aja",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "Chris",
                    "middle": [
                        "J"
                    ],
                    "last": "Maddison",
                    "suffix": ""
                },
                {
                    "first": "Arthur",
                    "middle": [],
                    "last": "Guez",
                    "suffix": ""
                },
                {
                    "first": "Laurent",
                    "middle": [],
                    "last": "Sifre",
                    "suffix": ""
                },
                {
                    "first": "George",
                    "middle": [],
                    "last": "Van Den",
                    "suffix": ""
                },
                {
                    "first": "Julian",
                    "middle": [],
                    "last": "Driessche",
                    "suffix": ""
                },
                {
                    "first": "Ioannis",
                    "middle": [],
                    "last": "Schrittwieser",
                    "suffix": ""
                },
                {
                    "first": "Veda",
                    "middle": [],
                    "last": "Antonoglou",
                    "suffix": ""
                },
                {
                    "first": "Marc",
                    "middle": [],
                    "last": "Panneershelvam",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Lanctot",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "nature",
            "volume": "529",
            "issn": "7587",
            "pages": "484--489",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Integrating explanation and prediction in computational social science",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Jake",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Hofman",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Duncan",
                    "suffix": ""
                },
                {
                    "first": "Susan",
                    "middle": [],
                    "last": "Watts",
                    "suffix": ""
                },
                {
                    "first": "Filiz",
                    "middle": [],
                    "last": "Athey",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Garip",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Thomas",
                    "suffix": ""
                },
                {
                    "first": "Jon",
                    "middle": [],
                    "last": "Griffiths",
                    "suffix": ""
                },
                {
                    "first": "Helen",
                    "middle": [],
                    "last": "Kleinberg",
                    "suffix": ""
                },
                {
                    "first": "Sendhil",
                    "middle": [],
                    "last": "Margetts",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Mullainathan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Matthew",
                    "suffix": ""
                },
                {
                    "first": "Simine",
                    "middle": [],
                    "last": "Salganik",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Vazire",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Nature",
            "volume": "",
            "issn": "",
            "pages": "1--8",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Classification and regression trees",
            "authors": [
                {
                    "first": "Leo",
                    "middle": [],
                    "last": "Breiman",
                    "suffix": ""
                },
                {
                    "first": "Jerome",
                    "middle": [],
                    "last": "Friedman",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Charles",
                    "suffix": ""
                },
                {
                    "first": "Richard",
                    "middle": [
                        "A"
                    ],
                    "last": "Stone",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Olshen",
                    "suffix": ""
                }
            ],
            "year": 1984,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Optimal classification trees",
            "authors": [
                {
                    "first": "Dimitris",
                    "middle": [],
                    "last": "Bertsimas",
                    "suffix": ""
                },
                {
                    "first": "Jack",
                    "middle": [],
                    "last": "Dunn",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Machine Learning",
            "volume": "106",
            "issn": "",
            "pages": "1039--1082",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Interpretable classifiers using rules and bayesian analysis: Building a better stroke prediction model",
            "authors": [
                {
                    "first": "Benjamin",
                    "middle": [],
                    "last": "Letham",
                    "suffix": ""
                },
                {
                    "first": "Cynthia",
                    "middle": [],
                    "last": "Rudin",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Tyler",
                    "suffix": ""
                },
                {
                    "first": "David",
                    "middle": [],
                    "last": "Mccormick",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Madigan",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "The Annals of Applied Statistics",
            "volume": "9",
            "issn": "3",
            "pages": "1350--1371",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Intelligible models for healthcare: Predicting pneumonia risk and hospital 30-day readmission",
            "authors": [
                {
                    "first": "Rich",
                    "middle": [],
                    "last": "Caruana",
                    "suffix": ""
                },
                {
                    "first": "Yin",
                    "middle": [],
                    "last": "Lou",
                    "suffix": ""
                },
                {
                    "first": "Johannes",
                    "middle": [],
                    "last": "Gehrke",
                    "suffix": ""
                },
                {
                    "first": "Paul",
                    "middle": [],
                    "last": "Koch",
                    "suffix": ""
                },
                {
                    "first": "Marc",
                    "middle": [],
                    "last": "Sturm",
                    "suffix": ""
                },
                {
                    "first": "Noemie",
                    "middle": [],
                    "last": "Elhadad",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Proceedings of the 21th ACM SIGKDD international conference on knowledge discovery and data mining",
            "volume": "",
            "issn": "",
            "pages": "1721--1730",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Regression shrinkage and selection via the lasso",
            "authors": [
                {
                    "first": "Robert",
                    "middle": [],
                    "last": "Tibshirani",
                    "suffix": ""
                }
            ],
            "year": 1996,
            "venue": "Journal of the Royal Statistical Society: Series B (Methodological)",
            "volume": "58",
            "issn": "1",
            "pages": "267--288",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Learning representations by humans, for humans",
            "authors": [
                {
                    "first": "Sophie",
                    "middle": [],
                    "last": "Hilgard",
                    "suffix": ""
                },
                {
                    "first": "Nir",
                    "middle": [],
                    "last": "Rosenfeld",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Mahzarin",
                    "suffix": ""
                },
                {
                    "first": "Jack",
                    "middle": [],
                    "last": "Banaji",
                    "suffix": ""
                },
                {
                    "first": "David",
                    "middle": [],
                    "last": "Cao",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Parkes",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "International Conference on Machine Learning",
            "volume": "",
            "issn": "",
            "pages": "4227--4238",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Stop explaining black box machine learning models for high stakes decisions and use interpretable models instead",
            "authors": [
                {
                    "first": "Cynthia",
                    "middle": [],
                    "last": "Rudin",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Nature Machine Intelligence",
            "volume": "1",
            "issn": "5",
            "pages": "206--215",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Towards a rigorous science of interpretable machine learning",
            "authors": [
                {
                    "first": "Finale",
                    "middle": [],
                    "last": "Doshi",
                    "suffix": ""
                },
                {
                    "first": "-",
                    "middle": [],
                    "last": "Velez",
                    "suffix": ""
                },
                {
                    "first": "Been",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1702.08608"
                ]
            }
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Model compression",
            "authors": [
                {
                    "first": "Cristian",
                    "middle": [],
                    "last": "Bucilu\u01ce",
                    "suffix": ""
                },
                {
                    "first": "Rich",
                    "middle": [],
                    "last": "Caruana",
                    "suffix": ""
                },
                {
                    "first": "Alexandru",
                    "middle": [],
                    "last": "Niculescu-Mizil",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining",
            "volume": "",
            "issn": "",
            "pages": "535--541",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Distilling the knowledge in a neural network",
            "authors": [
                {
                    "first": "Geoffrey",
                    "middle": [],
                    "last": "Hinton",
                    "suffix": ""
                },
                {
                    "first": "Oriol",
                    "middle": [],
                    "last": "Vinyals",
                    "suffix": ""
                },
                {
                    "first": "Jeff",
                    "middle": [],
                    "last": "Dean",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1503.02531"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Programmatically interpretable reinforcement learning",
            "authors": [
                {
                    "first": "Abhinav",
                    "middle": [],
                    "last": "Verma",
                    "suffix": ""
                },
                {
                    "first": "Vijayaraghavan",
                    "middle": [],
                    "last": "Murali",
                    "suffix": ""
                },
                {
                    "first": "Rishabh",
                    "middle": [],
                    "last": "Singh",
                    "suffix": ""
                },
                {
                    "first": "Pushmeet",
                    "middle": [],
                    "last": "Kohli",
                    "suffix": ""
                },
                {
                    "first": "Swarat",
                    "middle": [],
                    "last": "Chaudhuri",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "International Conference on Machine Learning",
            "volume": "",
            "issn": "",
            "pages": "5045--5054",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Verifiable reinforcement learning via policy extraction",
            "authors": [
                {
                    "first": "Osbert",
                    "middle": [],
                    "last": "Bastani",
                    "suffix": ""
                },
                {
                    "first": "Yewen",
                    "middle": [],
                    "last": "Pu",
                    "suffix": ""
                },
                {
                    "first": "Armando",
                    "middle": [],
                    "last": "Solar-Lezama",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Advances in neural information processing systems",
            "volume": "",
            "issn": "",
            "pages": "2494--2504",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Reinforcement learning: An introduction",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Richard",
                    "suffix": ""
                },
                {
                    "first": "Andrew",
                    "middle": [
                        "G"
                    ],
                    "last": "Sutton",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Barto",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Aligning superhuman ai with human behavior: Chess as a model system",
            "authors": [
                {
                    "first": "Reid",
                    "middle": [],
                    "last": "Mcilroy-Young",
                    "suffix": ""
                },
                {
                    "first": "Siddhartha",
                    "middle": [],
                    "last": "Sen",
                    "suffix": ""
                },
                {
                    "first": "Jon",
                    "middle": [],
                    "last": "Kleinberg",
                    "suffix": ""
                },
                {
                    "first": "Ashton",
                    "middle": [],
                    "last": "Anderson",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining",
            "volume": "",
            "issn": "",
            "pages": "1677--1687",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Measuring the completeness of economic models",
            "authors": [
                {
                    "first": "Drew",
                    "middle": [],
                    "last": "Fudenberg",
                    "suffix": ""
                },
                {
                    "first": "Jon",
                    "middle": [],
                    "last": "Kleinberg",
                    "suffix": ""
                },
                {
                    "first": "Annie",
                    "middle": [],
                    "last": "Liang",
                    "suffix": ""
                },
                {
                    "first": "Sendhil",
                    "middle": [],
                    "last": "Mullainathan",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Predicting and understanding initial play",
            "authors": [
                {
                    "first": "Drew",
                    "middle": [],
                    "last": "Fudenberg",
                    "suffix": ""
                },
                {
                    "first": "Annie",
                    "middle": [],
                    "last": "Liang",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "American Economic Review",
            "volume": "109",
            "issn": "12",
            "pages": "4112--4153",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Markov decision processes. Handbooks in operations research and management science",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Martin L Puterman",
                    "suffix": ""
                }
            ],
            "year": 1990,
            "venue": "",
            "volume": "2",
            "issn": "",
            "pages": "331--434",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Q-learning",
            "authors": [
                {
                    "first": "Jch",
                    "middle": [],
                    "last": "Christopher",
                    "suffix": ""
                },
                {
                    "first": "Peter",
                    "middle": [],
                    "last": "Watkins",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Dayan",
                    "suffix": ""
                }
            ],
            "year": 1992,
            "venue": "Machine learning",
            "volume": "8",
            "issn": "3-4",
            "pages": "279--292",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Too many cooks: Bayesian inference for coordinating multi-agent collaboration",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Sarah",
                    "suffix": ""
                },
                {
                    "first": "Rose",
                    "middle": [
                        "E"
                    ],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "James",
                    "middle": [
                        "A"
                    ],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Joshua",
                    "middle": [
                        "B"
                    ],
                    "last": "Evans",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Tenenbaum",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "David",
                    "suffix": ""
                },
                {
                    "first": "Max",
                    "middle": [],
                    "last": "Parkes",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Kleiman-Weiner",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Topics in Cognitive Science",
            "volume": "13",
            "issn": "2",
            "pages": "414--432",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Algorithm aversion: People erroneously avoid algorithms after seeing them err",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Berkeley",
                    "suffix": ""
                },
                {
                    "first": "Joseph",
                    "middle": [
                        "P"
                    ],
                    "last": "Dietvorst",
                    "suffix": ""
                },
                {
                    "first": "Cade",
                    "middle": [],
                    "last": "Simmons",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Massey",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Journal of Experimental Psychology: General",
            "volume": "144",
            "issn": "1",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "What people want from their professionals: Attitudes toward decision-making strategies",
            "authors": [
                {
                    "first": "Joseph",
                    "middle": [],
                    "last": "Eastwood",
                    "suffix": ""
                },
                {
                    "first": "Brent",
                    "middle": [],
                    "last": "Snook",
                    "suffix": ""
                },
                {
                    "first": "Kirk",
                    "middle": [],
                    "last": "Luther",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Journal of Behavioral Decision Making",
            "volume": "25",
            "issn": "5",
            "pages": "458--468",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Overcoming algorithm aversion: People will use imperfect algorithms if they can (even slightly) modify them",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Berkeley",
                    "suffix": ""
                },
                {
                    "first": "Joseph",
                    "middle": [
                        "P"
                    ],
                    "last": "Dietvorst",
                    "suffix": ""
                },
                {
                    "first": "Cade",
                    "middle": [],
                    "last": "Simmons",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Massey",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Management Science",
            "volume": "64",
            "issn": "3",
            "pages": "1155--1170",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Human-in-the-loop interpretability prior. Advances in neural information processing systems",
            "authors": [
                {
                    "first": "Isaac",
                    "middle": [],
                    "last": "Lage",
                    "suffix": ""
                },
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Slavin Ross",
                    "suffix": ""
                },
                {
                    "first": "Been",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Samuel",
                    "suffix": ""
                },
                {
                    "first": "Finale",
                    "middle": [],
                    "last": "Gershman",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Doshi-Velez",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Policy gradient methods for reinforcement learning with function approximation",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Richard",
                    "suffix": ""
                },
                {
                    "first": "David",
                    "middle": [
                        "A"
                    ],
                    "last": "Sutton",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Mcallester",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Satinder",
                    "suffix": ""
                },
                {
                    "first": "Yishay",
                    "middle": [],
                    "last": "Singh",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Mansour",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "Advances in neural information processing systems",
            "volume": "",
            "issn": "",
            "pages": "1057--1063",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Random forests. Machine learning",
            "authors": [
                {
                    "first": "Leo",
                    "middle": [],
                    "last": "Breiman",
                    "suffix": ""
                }
            ],
            "year": 2001,
            "venue": "",
            "volume": "45",
            "issn": "",
            "pages": "5--32",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF1": {
            "text": "Overview of kitchen management game. The left panel depicts what participants see: (i)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Overview of experimental flow. The top two panels depict Phase I (left) and II (right) for the normal configuration, where each participant plays 3 fully-staffed scenarios. The bottom two panels depict Phase I (left) and II (right) for the disrupted configuration, where each participant plays 2 fully-staffed and 4 understaffed scenarios. Participants in Phase II are randomly assigned to one of 4 conditions (control, algorithm, human, and baseline). The set of participants across all 4 configuration-phase pairs is mutually exclusive.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "3c show participant performance in the final round of our game, Figure 3d & 3e show how performance improves across rounds, and Figure 3f & 3g show the fraction of users achieving optimal performance across rounds. We discuss these results below.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Phase II Participant Performance. The top row shows the tips derived for each condition and configuration based on Phase I data. Remaining rows depict various views of participant performance across conditions in the normal (left) and disrupted (right) configurations. The top row shows performance in the last round of the configuration, the second row shows how participant performance improves over time, and the third row shows the fraction of participants who execute an optimal policy over time.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Compliance with Tips. Participant compliance in Phase II with the respective tip they were shown in each condition for the normal (left) and disrupted (right) configurations over time.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "Learning beyond Tips. Panels (a)-(c) show the rate at which participants in each condition",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "Study flow for Phase I.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF11": {
            "text": "shortest possible) completion time is 20 time steps and the maximum time allowed is 50 time steps. The bonus is as follows: $0.75 if completing the round in exactly 20 time steps, $0.35 if completing the round in 21 to 22 time steps, $0.15 if completing the round in 23 to 26 time steps, or no bonus otherwise.The total pay ranges from $0.30 to $2.55, with a mean of $1.00, a median of $0.95, and a standard deviation of $0.56. In Phase II, which was conducted well into the COVID-19 pandemic,",
            "latex": null,
            "type": "figure"
        },
        "FIGREF12": {
            "text": "Study flow for Phase II. we kept the same base pay but slightly increased the tiered bonus: $1.25 if completing the round in exactly 20 time steps, $0.60 if completing the round in 21 to 22 time steps, $0.25 if completing the round in 23 to 26 time steps, or no bonus otherwise. The total pay ranges from $0.30 to $4.05, with a mean of $1.63, a median of $1.40, and a standard deviation of $1.03.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF13": {
            "text": "Screenshots of the game introduction (continued).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF14": {
            "text": "Screenshots of the instructions for the fully-staffed scenario.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF15": {
            "text": "Screenshots of the instructions for the understaffed scenario.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF16": {
            "text": "Screenshots of the pay information.",
            "latex": null,
            "type": "figure"
        },
        "TABREF2": {
            "text": "Chef shouldn't plate",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF6": {
            "text": "Top three tips inferred from different sources for the normal configuration.",
            "latex": null,
            "type": "table"
        },
        "TABREF7": {
            "text": "Top three tips inferred from different sources for the disrupted configuration.",
            "latex": null,
            "type": "table"
        },
        "TABREF8": {
            "text": "if completing the round in 35 to 36 time steps, $0.15 if completing the round in 37 to 38 time steps, or no bonus otherwise. In Phase I, the total pay ranges from $0.60 to $3.30, with a mean of $1.63, a median of $1.55, and a standard deviation of $0.60. In Phase II, the total pay ranges from $0.60 to $4.50, with a mean of $1.81, a median of $1.75, and a standard deviation of $0.68.",
            "latex": null,
            "type": "table"
        },
        "TABREF9": {
            "text": "Phase I: Normal Phase II: Normal Phase I: Disrupted Phase II: Disrupted",
            "latex": null,
            "type": "table"
        },
        "TABREF10": {
            "text": "Participants' demographic and gameplay information. I Phase II: Control Phase II: Algorithm Phase II: Baseline Phase II: Human",
            "latex": null,
            "type": "table"
        },
        "TABREF11": {
            "text": "Average performance by treatment condition and round (normal configuration). I Phase II: Control Phase II: Algorithm Phase II: Baseline Phase II: Human",
            "latex": null,
            "type": "table"
        },
        "TABREF13": {
            "text": "Participants' coded feedback on the provided tips (normal configuration).",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "The supplementary material is organized as follows. The first section describes our tip inference procedure in more detail, the second section describes additional details on the design of our behavioral study and payments, and the last section provides additional results.A Tip Inference for Virtual Kitchen-Management Game MDP formulation: At a high level, the states encode progress towards completing all orders, the actions encode the currently available assignments of subtasks to workers, and the rewards encode the number of ticks taken to complete all orders. Specifically, the states encode (i) which subtasks have been completed so far across all orders, and (ii) which subtask has been assigned to each virtual worker (if any), as well as how many steps remain to complete this subtask. Next, the actions consist of all possible assignments of available subtasks (i.e., have not yet been assigned) to available virtual workers (i.e., not currently working on any subtask). Finally, the reward is \u22121 at each step, until all orders are completed; thus, the total number of steps taken to complete all orders is the negative reward.Optimal policies: We now summarize the optimal policy for each scenario. Note that the optimal policy for the understaffed case is more complex and counter-intuitive than the optimal policy for the fully-staffed scenario.Fully-staffed scenario: In this scenario, the participant has access to all three virtual workers. The optimal number of steps needed to complete this scenario is 20 ticks. The key insights to achieving optimal performance are: (i) all three workers should be assigned to chopping in the first time step, (ii) the chef must cook three of the burgers and the sous-chef must cook one (i.e., the second burger), (iii) the server should never cook and must be kept idle when the third burger becomes available for cooking; they should instead wait to be assigned to plating the first cooked burger, (iv) the chef should never plate, (v) the sous-chef must plate exactly one of the burgers, and (vi) none of the three workers should be left idle except in the previous cases.Understaffed scenario: In this scenario, the participant has access to only two virtual workers-namely, the sous-chef and the server. The optimal number of steps needed to complete this scenario is 34 ticks. The keys insights to achieving the optimal performance are: (i) both workers should be assigned to chopping in the first time step, (ii) the sous-chef and the server must cook two burgers each, even though the server is very slow at cooking, (iii) the sous-chef must choose chopping over cooking after finishing her first chopping task, (iv) the server's first three tasks must be chopping, cooking, and cooking, in that order, (v) the sous-chef must chop three of the four burgers and the server must chop one, (vi) both workers must plate two burgers each, even though the sous-chef is slower at plating than the Selected screenshots: Finally, we provide screenshots to illustrate our experimental design. Figures 8 & 9 show the introduction to the task shown to participants explaining various concepts in the game. Figures 10 & 11 show instructions for the fully-staffed and understaffed scenarios, respectively, shown to participants. Finally, Figure 12 shows the payment information shown to the participants. ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 3048,
                    "end": 3061,
                    "text": "Figures 8 & 9",
                    "ref_id": null
                },
                {
                    "start": 3159,
                    "end": 3174,
                    "text": "Figures 10 & 11",
                    "ref_id": null
                },
                {
                    "start": 3289,
                    "end": 3298,
                    "text": "Figure 12",
                    "ref_id": null
                }
            ],
            "section": "Appendix"
        }
    ]
}