{
    "paper_id": "2ebaf4706bf9389fac46d3f598c75f3115f34f97",
    "metadata": {
        "title": "Predicting Popularity of Video Streaming Services with Representation Learning: A Survey and a Real-World Case Study",
        "authors": [
            {
                "first": "Sidney",
                "middle": [],
                "last": "Loyola De S\u00e1",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Universidade Federal Fluminense",
                    "location": {
                        "postCode": "24210-330",
                        "settlement": "Niter\u00f3i",
                        "region": "RJ",
                        "country": "Brazil"
                    }
                },
                "email": ""
            },
            {
                "first": "Antonio",
                "middle": [
                    "A"
                ],
                "last": "De",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Universidade Federal Fluminense",
                    "location": {
                        "postCode": "24210-330",
                        "settlement": "Niter\u00f3i",
                        "region": "RJ",
                        "country": "Brazil"
                    }
                },
                "email": ""
            },
            {
                "first": "A",
                "middle": [],
                "last": "Rocha",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Universidade Federal Fluminense",
                    "location": {
                        "postCode": "24210-330",
                        "settlement": "Niter\u00f3i",
                        "region": "RJ",
                        "country": "Brazil"
                    }
                },
                "email": ""
            },
            {
                "first": "Aline",
                "middle": [],
                "last": "Paes",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Universidade Federal Fluminense",
                    "location": {
                        "postCode": "24210-330",
                        "settlement": "Niter\u00f3i",
                        "region": "RJ",
                        "country": "Brazil"
                    }
                },
                "email": "alinepaes@ic.uff.bra.p."
            }
        ]
    },
    "abstract": [
        {
            "text": "Citation: S\u00e1, S.L.d.; Rocha, A.A.d.A.; Paes, A. Predicting Popularity of Video Streaming Services with",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Abstract: The Internet's popularization has increased the amount of content produced and consumed on the web. To take advantage of this new market, major content producers such as Netflix and Amazon Prime have emerged, focusing on video streaming services. However, despite the large number and diversity of videos made available by these content providers, few of them attract the attention of most users. For example, in the data explored in this article, only 6% of the most popular videos account for 85% of total views. Finding out in advance which videos will be popular is not trivial, especially given many influencing variables. Nevertheless, a tool with this ability would be of great value to help dimension network infrastructure and properly recommend new content to users. In this way, this manuscript examines the machine learning-based approaches that have been proposed to solve the prediction of web content popularity. To this end, we first survey the literature and elaborate a taxonomy that classifies models according to predictive features and describes stateof-the-art features and techniques used to solve this task. While analyzing previous works, we saw an opportunity to use textual features for video prediction. Thus, additionally, we propose a case study that combines features acquired through attribute engineering and word embedding to predict the popularity of a video. The first approach is based on predictive attributes defined by resource engineering. The second takes advantage of word embeddings from video descriptions and titles. We experimented with the proposed techniques in a set of videos from GloboPlay, the largest provider of video streaming services in Latin America. A combination of engineering features and embeddings using the Random Forest algorithm achieved the best result, with an accuracy of 87%. Sensors 2021, 21, 7328. https://doi.org/10.3390/s21217328 https://www.mdpi.com/journal/sensors Sensors 2021, 21, 7328 2 of 36",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "interview with GloboPlay's Digital Director, Erick Bretas stated, without revealing numbers that they ended the year 2020 with an 89% increase in subscribers. In addition, he said, \"We are broadcasting 100 million hours every month\" [7] . These services have complex and robust structures to deliver thousands of videos to millions of users.",
            "cite_spans": [
                {
                    "start": 233,
                    "end": 236,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Despite the massive amount of material offered by content providers, few videos attract the most attention from users. Thus, the ability to predict Web content's popularity finds several practical applications for content producers, marketing, and infrastructure providers. To mention a few, the advantages of correctly predicting which content will become popular include: increasing the return on marketing investment [8], proactively allocating network resources by adjusting them accurately to future demands [9], selecting the best content for the audience [10, 11] , directing investments to the content to be produced [8] , and increasing the hit rate of cache relocation algorithms [12] .",
            "cite_spans": [
                {
                    "start": 562,
                    "end": 566,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 567,
                    "end": 570,
                    "text": "11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 625,
                    "end": 628,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 690,
                    "end": 694,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "However, finding out which videos will be popular in advance is not trivial. Several variables can directly influence the popularity, including the topics covered in the material, the attachment of the content to what is going on in the world, the lexical content, the linguistic or visual style, the authors of the content, the target audience, the content's authors, among others. Because of so many influencing factors, researchers developed several strategies to improve the prediction's performance. Among them, Artificial Intelligence (AI) techniques that can find patterns relating the content and its variables to the popularity have obtained successful results lately. Mainly, methods of Machine Learning (ML), aided by Natural Language Processing (NLP) when one has textual content, are the subareas of AI mostly prominent to that task [10, [13] [14] [15] [16] .",
            "cite_spans": [
                {
                    "start": 846,
                    "end": 850,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 851,
                    "end": 855,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 856,
                    "end": 860,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 861,
                    "end": 865,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 866,
                    "end": 870,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "ML aims at creating models that learn to solve a task from experience [17] . The experience is usually represented by a dataset gathered from the task [18] . In popularity forecast, the task can be designed as a classification or as a regression task, according to the prediction's final objective. In order to handle the textual content, ML methods require that they are transformed into a categorical or numerical representation. Concerning the popularity prediction task, NLP allows for designing linguistic-based features or discovering them directly from the content [10, 16] . Recently, NLP techniques that transform written and spoken content into a vector representation embedded into a vector space have become the standard practice [19, 20] .",
            "cite_spans": [
                {
                    "start": 70,
                    "end": 74,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 151,
                    "end": 155,
                    "text": "[18]",
                    "ref_id": null
                },
                {
                    "start": 572,
                    "end": 576,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 577,
                    "end": 580,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 742,
                    "end": 746,
                    "text": "[19,",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 747,
                    "end": 750,
                    "text": "20]",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Predicting content popularity on the Web has been researched by several authors who have already examined different types of content such as tweets [13, 14] , images [21] , and videos [9, 22, 23] . One of the steps that most influences the outcome of predictive models is to define the predictive attributes. Motivated by that, in this manuscript, we identify the main methods used, their respective features, and the context in which the researchers applied them, facilitating the attribute engineering stage to use the popularity prediction models. Combining several features can improve the performance of the models already proposed according to the applied context. There is still no clear standardization in the literature in this regard, as identified by Zhou et al. [24]. Thus, we intend to evolve this discussion on feature combination by presenting a case study that combines features acquired through attribute engineering and word embeddings, both obtained from the title and description of videos of a streaming service.",
            "cite_spans": [
                {
                    "start": 148,
                    "end": 152,
                    "text": "[13,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 153,
                    "end": 156,
                    "text": "14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 166,
                    "end": 170,
                    "text": "[21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 184,
                    "end": 187,
                    "text": "[9,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 188,
                    "end": 191,
                    "text": "22,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 192,
                    "end": 195,
                    "text": "23]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "We propose two approaches aiming at predicting video popularity from a streaming service. Both focus on the textual content of the videos (title and description). The first approach focuses on feature engineering to select relevant predictive features that are yielded from NLP methods. The second approach leverages representation learning techniques to obtain latent features automatically through word embeddings. We extract the features to learn six ML models to classify which videos will become popular. The ML classifiers are evaluated with quantitative metrics, namely Precision, Recall, F1-Score, and Accuracy. We investigate the predictive power of each classifier when they are induced from engineered features, word embeddings, and when both types of those features are at their disposal on a set of 9989 videos from GloboPlay's streaming service. From the results, we found out that the best model was the Random Forest when using the dataset of the",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "The Internet has become one of the primary means of communication and information in the world. To give an idea, in 2012, 2 billion people had access to the Internet, representing 30% of the world population [1] . Almost ten years later, the number of Internet users has grown to 4.66 billion, representing 60% of the world population driven by the increase in the use of smartphones and other smart devices [2] . Recently, the challenges imposed by COVID-19 were responsible for almost 300 million people to access the Internet for the first time in the last year, according to the DataReportal [3] website.",
            "cite_spans": [
                {
                    "start": 208,
                    "end": 211,
                    "text": "[1]",
                    "ref_id": null
                },
                {
                    "start": 408,
                    "end": 411,
                    "text": "[2]",
                    "ref_id": null
                },
                {
                    "start": 596,
                    "end": 599,
                    "text": "[3]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "With the popularization of the Internet, streaming video services, such as YouTube, Netflix, GloboPlay, and Amazon Prime, have also grown. In April 2021, Netflix had 208 million subscribers while Amazon Prime had 200 million subscribers [4] worldwide. It is estimated that, in Brazil, there are 19.88 million subscribers to Video Streaming services [5] , 6.5 million of whom are GloboPlay subscribers [6] . The GloboPlay Streaming service was launched in 2015 and, nowadays, it is the largest one in Latin America. In an titles' word embeddings concatenated with the features obtained with NLP techniques, reaching an accuracy of 87%.",
            "cite_spans": [
                {
                    "start": 237,
                    "end": 240,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 349,
                    "end": 352,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 401,
                    "end": 404,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In 2014, Tatar et al. [8] presented a survey on the main popularity prediction research, specifying a taxonomy focusing on the objective and timing of prediction execution: classification or regression and before or after the publication of the content. Recently, Moniz and Torgo [25] prepared a review of predictive models proposing a classification focused on three elements: objective, selection of predictive attributes, and methods of data mining/machine learning. In 2021, Zhou et al. [24] presented a study on popularity prediction, focusing on information dissemination and including scientific articles as one of the types of content to be studied. This manuscript follows a different approach compared to the previous surveys about the popularity prediction theme: given the plethora of possible variables and the multitude of existing ML algorithms employable to the problem, here we take a representation-based approach focusing on the attributes and how they are used for each ML method. Another contribution over the previous works is the description of the use of Deep Learning techniques to extract attributes directly from the videos' frames, further extending to selecting attributes. In summary, the contributions of this work are:",
            "cite_spans": [
                {
                    "start": 22,
                    "end": 25,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 280,
                    "end": 284,
                    "text": "[25]",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 491,
                    "end": 495,
                    "text": "[24]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "\u2022",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "A review of state-of-the-art popularity prediction methods focused on extracting attributes directly from the content of news articles, images, and videos. \u2022 A taxonomy that classifies the models through the use of predictive features. \u2022",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Inclusion of recent studies that obtain predictive attributes directly from video frames. \u2022 Analysis of the best predictive models for each work, since previous works sometimes present more than one approach. \u2022 Implementation of predictive models with Python code publicly available [26] .",
            "cite_spans": [
                {
                    "start": 283,
                    "end": 287,
                    "text": "[26]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Comparison of models predictive using NLP and word embeddings. \u2022 Evaluate popularity prediction of Globoplay's videos using ML algorithms.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u2022 Extraction of Features from Titles and Descriptions of Globoplay's videos. \u2022"
        },
        {
            "text": "The rest of the manuscript is divided as follows: Section 2 introduces basic concepts of Machine Learning and Natural Language Processing, Section 3 presents the concepts of Popularity Prediction, its operation, types of content and taxonomy, in Section 4, the main Classification methods found in the literature are presented, in Section 5, the Regression methods are presented, in Section 6, we present the case study, identifying the methodology used, in Section 7, the results of experiments are presented. Finally, in Section 9, the conclusions are presented.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u2022 Extraction of Features from Titles and Descriptions of Globoplay's videos. \u2022"
        },
        {
            "text": "This section presents the basic concepts related to NLP. We briefly describe some models of representation and techniques used to extract attributes from the content. This entire section reflects the point of view of the task explored in this manuscript, namely, predicting the popularity of web content.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Theoretical Foundation"
        },
        {
            "text": "Machine Learning is a subfield of AI that aims at equipping machines with the ability to solve problems that require learning from experience. The main motivation is that not every problem can be modeled and solved using a deterministic algorithm, which follows a step-by-step fashion. For example, recognizing people from their face, despite being a simple task for humans, is not trivial for a machine. The many variables involved in the problem make it difficult to implement with a standard algorithm. In front of these situations, ML techniques build knowledge without being \"programmed\" to do so but instead by \"learning\" (improve performance at some task) through examples [17] .",
            "cite_spans": [
                {
                    "start": 680,
                    "end": 684,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "In an ML technique, the learning is, in most of the times, to search for a target function capable of solving the problem to be addressed. By using previous data related to the task (the experience), the algorithms induce functions capable of achieving a particular objective by themselves. The experience is commonly referred as the dataset and is composed of examples (an individual experience) and attributes (variables describing the experience).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Below, we present some common definitions in ML applied to the context of popularity prediction:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Dataset. When dealing with attribute-value scenarios, the dataset is a tabular representation of the attributes that represent the studied objects [17] . In our case, it means web content.",
            "cite_spans": [
                {
                    "start": 147,
                    "end": 151,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Feature. Characteristic of the content, obtained directly or derived (through some calculation or technique). Each attribute is associated with an object property (Web content) [17] .",
            "cite_spans": [
                {
                    "start": 177,
                    "end": 181,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Predictive attributes. These are features used as inputs for ML models. Usually, the entry is represented by an attribute vector [17] .",
            "cite_spans": [
                {
                    "start": 129,
                    "end": 133,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Target attribute. In addition, called output, it represents the phenomenon of interest of the prediction, in our case, the popularity measure.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Each ML approach may choose a number of different strategies to learn the target function. This includes the representation of the experience, including matrices of examples and attributes, pairs of input and output or only inputs, interaction with the environment; the representation of the learned function, for example, functions, rules, probability distributions; and the way the method traverses the search space to find an approximation of the target function [17] .",
            "cite_spans": [
                {
                    "start": 466,
                    "end": 470,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Regarding the type of gathered experience, ML methods follow three standard paradigms: supervised learning, unsupervised learning, and reinforcement learning (Other types of supervision also exist, namely, semi-supervised learning, when only a subset of the examples have an output; and self-supervised leaning, when the label is extracted from the task itself without human supervision.) In this manuscript, we focus on supervised techniques defined as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Supervised Learning. In this paradigm, the tasks are predictive, and the training dataset must have input and output attributes. The output attributes are also called target variable. The outputs are labeled simulating the activity of a supervisor, that is, someone who knows the \"answer\". The supervised learning task can be described as [18] :",
            "cite_spans": [
                {
                    "start": 339,
                    "end": 343,
                    "text": "[18]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Given a training set of n input and output pairs of examples (x 1 , y 1 ), (x 2 , y 2 ), . . . , (x n , y n ),",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "where each x i is a set of attributes valued according to the example i and each y i was generated by an unknown function y = f (x). Thus, the problem is to find a function h that approximates the true function f . The hypothesis function h must be valid for other objects in the same domain that do not belong to the training set. This property is called generalization. The low capacity for generalization means that the data are over-adjusted to the training set (overfitting) or under-adjusted to the data (underfitting) [17] .",
            "cite_spans": [
                {
                    "start": 525,
                    "end": 529,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "To measure the generalization capabilities, it is a common practice to adopt three sets of data: training, validation, and testing. The training set is used to learn the hypothesis function h from the examples. The validation set is important to verify if the model is neither over-adjusted nor under-adjusted. Finally, with the test set, the performance of the model is assessed, verifying whether it solves the proposed problem or not.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Predictive tasks are divided into classification or regression. In the former, the output is a set of discrete values, for example, the health status of a patient (healthy, sick). In the latter, the output is a numerical value, e.g.,: temperature. Russell and Norvig [18] present the following definitions:",
            "cite_spans": [
                {
                    "start": 267,
                    "end": 271,
                    "text": "[18]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "\u2022 Classification: y i = f (x i ) \u2208 {c 1 , . . . , c m }, that is, f (x i ) accepts values in a discrete and unordered set; \u2022 Regression: y i = f (x i ) \u2208 R that is, f (x i ) accepts values in an infinite and ordered set.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Machine Learning"
        },
        {
            "text": "Natural Language Processing is a subfield in the intersection of AI and Computational Linguistics that investigates methods and techniques through which computational agents can communicate with humans. Among the various existing communication formats, what interests us is writing because the Web, our study context, registers a large part of human knowledge through innumerable information pages. Computers use formal languages, such as Java or Python programming languages, with sentences precisely defined by a syntax, verifying whether a set of strings is valid or not in a given language. On the other hand, humans use ambiguous and confusing communication.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Natural Language Processing"
        },
        {
            "text": "There are two commonly used strategies to extract features from texts to feed ML methods. One way is manually engineering features based on linguistic cues and experts' experience and compute values to those features from the texts. The other way is representing the texts into a vector space relying on the distributional semantics [27] . In this case, two approaches are possible. The first one defines the features as the words in the vocabulary, and the values are measured based on the frequency of the words in the example. This is known as bag-of-words. The other strategy induces a language model from a large set of texts, relying on a probabilistic or a neural formulation [28, 29] .",
            "cite_spans": [
                {
                    "start": 333,
                    "end": 337,
                    "text": "[27]",
                    "ref_id": null
                },
                {
                    "start": 683,
                    "end": 687,
                    "text": "[28,",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 688,
                    "end": 691,
                    "text": "29]",
                    "ref_id": "BIBREF28"
                }
            ],
            "ref_spans": [],
            "section": "Natural Language Processing"
        },
        {
            "text": "Language models can be induced from characters, the basic unit, words, sentences, and documents. We will illustrate a language model from characters. The probability distribution over strings is commonly written as P(c 1:n ). Using these probabilities, we can create models defined as a Markov chain of order n \u2212 1. In these chains, the probability of the character c i depends on the immediately preceding characters. Thus, given a sequence of characters, we can estimate what will be the next character. We call these stripe sets of probabilities of n-gram models. In Equation (1), we have a trigram model (3-gram) [28] . These models do not need to be restricted to sets of characters; they can be extended to word sets:",
            "cite_spans": [
                {
                    "start": 617,
                    "end": 621,
                    "text": "[28]",
                    "ref_id": "BIBREF27"
                }
            ],
            "ref_spans": [],
            "section": "Natural Language Processing"
        },
        {
            "text": "The bag-of-words formulation does not take into account the order of the words. In addition, there is no capture of semantic values. All words have the same importance, differing from each other only by their frequency. This model can be extended to use the n-grams previously presented, counting the set of n words.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Natural Language Processing"
        },
        {
            "text": "Tasks and methods are built upon the bag-of-words formulation. A popular task is sentiment analysis to classify the texts according to their polarity, negative, positive, or neutral. In this sense, the use of bag-of-words with the SVM classifier is one of the most efficient models to classify a text as positive or negative, as seen in Agarwal and Mittal [30] . A popular method is Latent Dirichlet Alocation (LDA) to find topics into texts. LDA is a probabilistic model representing the corpus at three levels: topics, documents, and words. The topics are separated according to their frequencies through the concept of bag-of-words [31] .",
            "cite_spans": [
                {
                    "start": 356,
                    "end": 360,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 635,
                    "end": 639,
                    "text": "[31]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Natural Language Processing"
        },
        {
            "text": "Several NLP tasks can be addressed with language models. We can mention named entity recognition (NER), recognition of handwritten texts [32] , language recognition, spelling correction, and gender classification [18] . The recognition of named entities uses several techniques. One of the simplest is to find sequences that allow the identification of people, places, or Organizations. For example, the strings \"Mr\", \"Mrs\", \"Dr\" make it possible to identify people; in addition, \"street\" and \"Av\", make it possible to identify places. These ngram models can locate more complex entities as demonstrated in Downey et al. [33] . Much of the work presented in this article uses the Stanford NER [34] , a JAVA implementation of a NER recognizer. This software is already pre-trained to recognize people, organizations, and places in the English language. It uses linear field random field models incorporating non-local dependencies for information extraction, as presented in Finkel et al. [35] .",
            "cite_spans": [
                {
                    "start": 137,
                    "end": 141,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 213,
                    "end": 217,
                    "text": "[18]",
                    "ref_id": null
                },
                {
                    "start": 621,
                    "end": 625,
                    "text": "[33]",
                    "ref_id": "BIBREF32"
                },
                {
                    "start": 693,
                    "end": 697,
                    "text": "[34]",
                    "ref_id": null
                },
                {
                    "start": 988,
                    "end": 992,
                    "text": "[35]",
                    "ref_id": "BIBREF34"
                }
            ],
            "ref_spans": [],
            "section": "Natural Language Processing"
        },
        {
            "text": "Web pages do not always follow language formation standards, such as English or Portuguese, with several special symbols such as images, emojis, abbreviations without explaining their meaning, and many others. Thus, it is a demand to pre-process them. Next, we present the vastly used pre-processing steps.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Natural Language Processing"
        },
        {
            "text": "Tokenization segments texts by checking the limits of characters, words, and punctuation. The components that result from segmentation are identified as tokens. There are special cases in which segmentation is not trivial. For example, the hyphen is used to separate syllables from words at the end of a line. In this way, when tokenizing, the two parts on different lines need to be reconstructed as a single word. Because of these special needs, ML models with labeled bases started to perform segmentation with accuracy reaching 99% [36] . \u2022",
            "cite_spans": [
                {
                    "start": 536,
                    "end": 540,
                    "text": "[36]",
                    "ref_id": "BIBREF35"
                }
            ],
            "ref_spans": [],
            "section": "\u2022"
        },
        {
            "text": "Stemming reduces words to their radicals by eliminating morphological variations and inflections. This process helps to normalize the text and reduce ambiguities. For example, in the English language, \"Mr.\",\"Mr\", \"mister\", and \"Mister\" have the same meaning and must be represented in a single way [36] . \u2022 Stopwords are words that do not add meaning to the text, like prepositions and articles. Removing these words is a common strategy to retain more significant meaning to the sentences when retrieving information or computing frequencies.",
            "cite_spans": [
                {
                    "start": 298,
                    "end": 302,
                    "text": "[36]",
                    "ref_id": "BIBREF35"
                }
            ],
            "ref_spans": [],
            "section": "\u2022"
        },
        {
            "text": "We presented the main NLP concepts used to extract attributes from the databases used in popularity prediction studies. Thus, we present in a concise way the tasks of NER, sentiment analysis, text normalization to pre-process it, the LDA algorithm, and the models n-gram.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u2022"
        },
        {
            "text": "Tatar et al. [8] summarized the studies on popularity prediction reporting the initial approaches that tried to understand the pattern of distribution of users' access to different types of content [37] . After mapping these popularity probability distributions (mainly from videos), a search for models capable of predicting the popularity of information on the Web began [8] . It is interesting to note that researchers could use the popularity prediction in conjunction with other technologies such as: increasing the hit rate of cache relocation algorithms [12] , optimization of news articles [10] , associated with systems recommendation [38] among others. One of the first works that present a predictive method with ML was [22] , showing a linear correlation between the different moments of the content life cycle on the Web. The predictive model presented was used in other studies, including the proposal of on-demand video service cache reallocation [12] .",
            "cite_spans": [
                {
                    "start": 13,
                    "end": 16,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 198,
                    "end": 202,
                    "text": "[37]",
                    "ref_id": "BIBREF37"
                },
                {
                    "start": 373,
                    "end": 376,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 561,
                    "end": 565,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 598,
                    "end": 602,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 644,
                    "end": 648,
                    "text": "[38]",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 731,
                    "end": 735,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 962,
                    "end": 966,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Popularity Prediction"
        },
        {
            "text": "Our goal is to research and apply the ML methods used to predict the popularity of content on the web. To determine the search string for scientific articles, we use the following keywords: web content, popularity, prediction, classification, regression, feature selection, deep learning, word embedding, SVM, KNN, and Naive Bayes. The combinations of those keywords originate the following search string:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Popularity Prediction"
        },
        {
            "text": "(\"web content\" OR \"popularity prediction\") AND (\"machine learning\" OR \"classification\" OR \"regression\" OR \"feature selection\") AND (\"deep learning\" OR \"word embedding\" OR \"SVM\" OR \"KNN\" OR \"Naive Bayes\")",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Popularity Prediction"
        },
        {
            "text": "The databases selected for the research were Scopus, IEEE Xplore, and ACM Digital Library. We used as exclusion criteria papers that were not related to the prediction of popularity on the web, articles in other idioms that were not in English, and short texts with less than three pages. Using the search string, a search was performed on the IEEE Xplore database, returning 398 texts. From those, 387 were rejected as they did not fit the popularity prediction theme, leaving us with 11 articles. In the Scopus database, we obtained 573 papers with 547 excluded due to the three exclusion criteria, and, in the ACM Digital Library of 606 articles, 576 were discarded. All articles selected from the three bases added up to a total of 67 papers to be studied. We analyze and choose the most applied methods that will be explained in this manuscript.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Popularity Prediction"
        },
        {
            "text": "This section presents the taxonomy built from the methods involved in Popularity Prediction. We present definitions, the operation of popularity predictions, the types of content, and a taxonomy to classify the models studied.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Popularity Prediction"
        },
        {
            "text": "To structure the study and presentation, we divided the methods of predicting popularity according to the problem definition and the prediction task, as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Taxonomy"
        },
        {
            "text": "\u2022 Regression Methods. These methods perform a numerical prediction, quantifying the popularity according to the defined metric. The most common target attributes are the number of views, number of shares, number of tweets, and comments. These predictive methods use Regression and are often called regressors [9, 22] . \u2022 Classification Methods. Popularity classes are defined; the predictive model allocates the content in one of the defined classes. The goal is to predict whether content will become popular or not; in most cases, only two classes are used: popular and non-popular. These predictive methods use Classification and are often called classifiers [13, 15, 16] .",
            "cite_spans": [
                {
                    "start": 309,
                    "end": 312,
                    "text": "[9,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 313,
                    "end": 316,
                    "text": "22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 662,
                    "end": 666,
                    "text": "[13,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 667,
                    "end": 670,
                    "text": "15,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 671,
                    "end": 674,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Taxonomy"
        },
        {
            "text": "In addition to the above division, we can group the prediction methods according to the attributes used:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Taxonomy"
        },
        {
            "text": "\u2022 Textual Attributes. These attributes are extracted from the content using NLP techniques. The extraction can be direct from the content. In news articles, it can be from the description presented on the Web, as in videos and images, and even taking advantage of social media elements, such as comments published by users. \u2022 Visual Attributes. These attributes are extracted from videos and images using ML techniques (ANN, for example) or manually selecting features from the frames representative of the content. \u2022 Metadata Attributes. These attributes are provided by the website where the content was published and inherent to the Web. However, they do not belong to any previous groups, such as the source of the content, category, number of views, and publication date.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Taxonomy"
        },
        {
            "text": "This taxonomy is shown in Figure 1 : Here, we classify the studies that present popularity prediction models using the proposed taxonomy. We show the results in Table 1 , where C in predictive tasks indicates that the model studied uses Classification and R indicates a predictor that uses Regression. These surveys were also classified according to the attributes used. This classification is not exclusive. Some models are positioned in more than one category. These articles present several techniques and models that can be considered state of the art for predicting popularity. Table 2 shows the best models for each study and the performance earned. It is essential to pay attention to the metrics used to validate the comparisons. We observed that the classifiers that use textual attributes usually achieved the best results. In contrast, the regressors with the best results used visual features. The researchers can take this trend into account for future work. ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 26,
                    "end": 34,
                    "text": "Figure 1",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 161,
                    "end": 168,
                    "text": "Table 1",
                    "ref_id": "TABREF0"
                },
                {
                    "start": 583,
                    "end": 590,
                    "text": "Table 2",
                    "ref_id": "TABREF1"
                }
            ],
            "section": "Taxonomy"
        },
        {
            "text": "Videos and News [22] Videos [14] Videos [23] Images [21] Videos [9] Videos [39] News [13] News [10] News [15] Videos [11] News [16] Videos [40] C = Classification R = Regression. ",
            "cite_spans": [
                {
                    "start": 16,
                    "end": 20,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 28,
                    "end": 32,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 40,
                    "end": 44,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 52,
                    "end": 56,
                    "text": "[21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 64,
                    "end": 67,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 75,
                    "end": 79,
                    "text": "[39]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 85,
                    "end": 89,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 95,
                    "end": 99,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 105,
                    "end": 109,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 117,
                    "end": 121,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 127,
                    "end": 131,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 139,
                    "end": 143,
                    "text": "[40]",
                    "ref_id": "BIBREF40"
                }
            ],
            "ref_spans": [],
            "section": "C R Textual Visual Meta-Data Content Type References"
        },
        {
            "text": "Popularity of content is the relationship between an individual item and the users who consume it. Popularity is represented by a metric that defines the number of users attracted by the content being studied, reflecting the online community's interest in this item [8] . Looking at the \"most popular\" videos or texts on the Web, the concept of popularity is intuitively understood. However, it is necessary to define objective metrics to compare two items and define which one is the most popular. Several measures point out which content attracts the most attention on the Web; that is, the number of users willing to consume the item searched. The \"classic\" web metric is the number of views. It is not always available, and, in some cases, does not represent the relationship of interest between the content and the users. Yao and Sun [41] revealed that the most viewed news articles are not always the most commented on and vice versa. This inference extends to the most shared items. In summary, defining the metric to be used, which may vary according to the context, is essential in a study on popularity prediction. In the literature, the main metrics and their respective meanings are as follows:",
            "cite_spans": [
                {
                    "start": 266,
                    "end": 269,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 839,
                    "end": 843,
                    "text": "[41]",
                    "ref_id": "BIBREF41"
                }
            ],
            "ref_spans": [],
            "section": "Popularity Measure"
        },
        {
            "text": "\u2022 number of views, reflecting the number of users [11, 22] ; \u2022 number of shares, reflecting the notoriety of the content [10, 16] , and \u2022 number of tweets and comments, reflecting the time that users spend on the content [13] .",
            "cite_spans": [
                {
                    "start": 50,
                    "end": 54,
                    "text": "[11,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 55,
                    "end": 58,
                    "text": "22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 121,
                    "end": 125,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 126,
                    "end": 129,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 221,
                    "end": 225,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Popularity Measure"
        },
        {
            "text": "Web Content is defined as an individual item available on a website in text, audio, image, or video format [8] . The attention of users on the Web is spread over several sites and various types of content. Some of the most popular are: videos produced by users, responsible for much of the Internet traffic; news articles shared and consumed on mobile devices; stories published in news aggregators; and items (comments, photos, videos) published on social networks [8] . The concepts presented can be applied to any type of content available online. However, to define the work scope, we will present methods and techniques that predict the popularity of videos, news articles using Machine Learning and Natural Language Processing.",
            "cite_spans": [
                {
                    "start": 107,
                    "end": 110,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 466,
                    "end": 469,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Content Types"
        },
        {
            "text": "Videos Online. YouTube [42] , the largest online video platform uploading over 500 h per minute [43] and over one billion videos viewed per day, has been the main focus of previous work [8] . Studying the popularity of YouTube content is challenging due to the growing number of videos, the various features provided by the platform, and the limitations associated with selecting a representative subset of videos for the problem in question [44] . The number of views usually expresses the popularity of videos on the Web. It follows a long-tail distribution but depending on the set of videos chosen. A more detailed analysis reveals that different video's activities follow similar patterns during periods of peak popularity [37] .",
            "cite_spans": [
                {
                    "start": 23,
                    "end": 27,
                    "text": "[42]",
                    "ref_id": null
                },
                {
                    "start": 96,
                    "end": 100,
                    "text": "[43]",
                    "ref_id": "BIBREF43"
                },
                {
                    "start": 186,
                    "end": 189,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 442,
                    "end": 446,
                    "text": "[44]",
                    "ref_id": "BIBREF44"
                },
                {
                    "start": 728,
                    "end": 732,
                    "text": "[37]",
                    "ref_id": "BIBREF37"
                }
            ],
            "ref_spans": [],
            "section": "Content Types"
        },
        {
            "text": "News Articles. The primary source of information in the digital world, news articles, are distributed massively through social networks. While videos attract a user's attention over a long period, interest in the news is temporary, with their attention span a few days after publication. The popularity metric often used is number of comments, as news platforms rarely disclose the number of views [8] .",
            "cite_spans": [
                {
                    "start": 398,
                    "end": 401,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Content Types"
        },
        {
            "text": "As each type of content has different characteristics, it is necessary to select the attributes that describe the content and its associated variables. Such a selection is known as feature engineering and is an essential part of the popularity prediction. The choice of attributes directly influences the quality of the predictive models. For this reason, several studies try to find a correlation between them and the final popularity of the content [45] . However, several factors that may also influence the popularity are difficult to measure, such as content quality, the relevance of the author, and users' relevance.",
            "cite_spans": [
                {
                    "start": 451,
                    "end": 455,
                    "text": "[45]",
                    "ref_id": "BIBREF45"
                }
            ],
            "ref_spans": [],
            "section": "Content Types"
        },
        {
            "text": "There are some apparent attributes to select and others, not so obvious that strongly impact predictive models. Some influencing factors are already well established in the literature. For example, videos that evoke strong and positive emotions are among the most shared, in addition to being the ones that spread the most quickly [46] . Thus, conducting sentiment analysis to determine the content's polarity results in an essential predictive attribute [10] . On the other hand, the definition of other attributes that make items popular could be hard. However, we have known that high-quality content is among the most viewed. Nevertheless, quality is a complex metric to measure. It involves subjective factors, making it challenging to capture attributes that represent the quality of the content. Another factor, not trivial to include in the predictive models, is the real world's events that directly influence which virtual content will be most sought after, impacting its popularity. This has been a trend in items that go viral on the Internet [37] . Table 3 shows some of the most used predictive attributes: characteristics of the content creators, for example, the authors with the highest audience tend to have popular content just for their identity [13] ; sentiment analysis and keywords that strongly impact popularity, both positively and negatively. In most studies, the categorization of content contributed positively to the prediction of popularity. Finally, attributes related to social networks such as the number of followers, online reputation, previous content that had many views, and a large number of shares also contribute to the increase in popularity [10] . ",
            "cite_spans": [
                {
                    "start": 331,
                    "end": 335,
                    "text": "[46]",
                    "ref_id": "BIBREF46"
                },
                {
                    "start": 455,
                    "end": 459,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 1055,
                    "end": 1059,
                    "text": "[37]",
                    "ref_id": "BIBREF37"
                },
                {
                    "start": 1266,
                    "end": 1270,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 1685,
                    "end": 1689,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [
                {
                    "start": 1062,
                    "end": 1069,
                    "text": "Table 3",
                    "ref_id": "TABREF2"
                }
            ],
            "section": "Content Types"
        },
        {
            "text": "Category [10, 13, 15, 16] Author or Source [13, 15] Title subjectivity [10, 16] Content subjectivity score [10, 16] Number of friends/followers of Author [21] Number of Named Entities [13] Number of keywords [10, 16, 39] Frequency of positive words [14] Frequency of negative words [14] Number of words in title [10, 15, 16] Number of words in content [10, 16] HOG [11, 21] GIST [11, 21] Output of CaffeNet [11, 21] Output of ResNet [11, 21] Video's length [9] Video's resolution [9] HUE [9] Thumbnail contrast [39] Number of tweets/retweets [13] Number of Shares [9, 10, 16] Number of Views in the first day [22, 23, 39] Number of Views [9, 11, 15, 22] Mainly features observed in literature about popularity prediction.",
            "cite_spans": [
                {
                    "start": 9,
                    "end": 13,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 14,
                    "end": 17,
                    "text": "13,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 18,
                    "end": 21,
                    "text": "15,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 22,
                    "end": 25,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 43,
                    "end": 47,
                    "text": "[13,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 48,
                    "end": 51,
                    "text": "15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 71,
                    "end": 75,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 76,
                    "end": 79,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 107,
                    "end": 111,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 112,
                    "end": 115,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 154,
                    "end": 158,
                    "text": "[21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 184,
                    "end": 188,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 208,
                    "end": 212,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 213,
                    "end": 216,
                    "text": "16,",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 217,
                    "end": 220,
                    "text": "39]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 249,
                    "end": 253,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 282,
                    "end": 286,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 312,
                    "end": 316,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 317,
                    "end": 320,
                    "text": "15,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 321,
                    "end": 324,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 352,
                    "end": 356,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 357,
                    "end": 360,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 365,
                    "end": 369,
                    "text": "[11,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 370,
                    "end": 373,
                    "text": "21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 379,
                    "end": 383,
                    "text": "[11,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 384,
                    "end": 387,
                    "text": "21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 407,
                    "end": 411,
                    "text": "[11,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 412,
                    "end": 415,
                    "text": "21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 433,
                    "end": 437,
                    "text": "[11,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 438,
                    "end": 441,
                    "text": "21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 457,
                    "end": 460,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 480,
                    "end": 483,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 488,
                    "end": 491,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 511,
                    "end": 515,
                    "text": "[39]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 542,
                    "end": 546,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 564,
                    "end": 567,
                    "text": "[9,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 568,
                    "end": 571,
                    "text": "10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 572,
                    "end": 575,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 609,
                    "end": 613,
                    "text": "[22,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 614,
                    "end": 617,
                    "text": "23,",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 618,
                    "end": 621,
                    "text": "39]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 638,
                    "end": 641,
                    "text": "[9,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 642,
                    "end": 645,
                    "text": "11,",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 646,
                    "end": 649,
                    "text": "15,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 650,
                    "end": 653,
                    "text": "22]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [],
            "section": "Feature References"
        },
        {
            "text": "For the realization of the popularity prediction, we used the traditional ML flow. Although the studies do not explicitly report, we will use the model presented by Khan et al. [16] as a guide for our work, which has the following steps:",
            "cite_spans": [
                {
                    "start": 177,
                    "end": 181,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Operation"
        },
        {
            "text": "\u2022 Data collection. Obtaining the necessary data is not always a trivial task. Several studies use the YouTube and Twitter [47] platforms, which, despite not making the data openly available, there are several APIs facilitating this collection. Both platforms have a defined metric and an ecosystem that allows for determining the popularity of the published items. \u2022 Pre-processing. In this step, we try to adjust the data for the use of the algorithms. In addition to searching for missing elements, we defined popularity classes to try to balance the data set.",
            "cite_spans": [
                {
                    "start": 122,
                    "end": 126,
                    "text": "[47]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Operation"
        },
        {
            "text": "\u2022 Feature selection. This step is the center of current popularity prediction research. The most recent work tries to automate this selection to try to get better results. \u2022 Model Training. The prediction itself uses the models most relevant to the context of the problem to allow an efficient comparison with the research already carried out. \u2022 Validation. In this stage, the performance of the models is tested and evaluated.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Operation"
        },
        {
            "text": "In this section, we present the ML models that use classifiers to predict Web content's popularity. The definition of the class popular differs from one study to another, taking into account the dataset used and the context of the research. Usually, popular content belongs to the minority class, causing the popularity classes to become unbalanced, allowing the model to obtain high degree of correctness, without necessarily classifying them correctly. For this reason, several studies opt for employing a balancing strategy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Classification Models"
        },
        {
            "text": "Performance evaluation and comparison between models is vital to find the best answer to the problem in question. Among the metrics used to evaluate the classifiers is Accuracy, defined by Equation (2). This metric is the complement of Error Rate, or incorrect classifications, presented in Equation (3).f is the classifier, y i the known class of",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Classification Models"
        },
        {
            "text": "is true and 0, otherwise. Using as an example a problem of two classes, where one is popular content and the other unpopular, it is possible to present the Error Rate in a more understandable way as in Equation (4). FP are false positives, examples belonging to the unpopular class classified as popular and FN are false negatives, examples belonging to the popular class are classified as unpopular. [17] . As in the case of popularity prediction, popular content is in the minority. The algorithms that classify the content as unpopular tend to have better accuracy. In this context, it is worse to have many false negatives.",
            "cite_spans": [
                {
                    "start": 401,
                    "end": 405,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Classification Models"
        },
        {
            "text": "Still using the problem of two classes, we can mention other metrics used as the precision, defined by Equation (5), which presents the proportion of positive examples correctly classified among all those predicted as positive [17] , recall, defined by Equation (6), which corresponds to the hit rate in the positive class. In Equations (5) and (6), TP is the number of true positives, FP are the false positives, and FN is the number of false negatives. These equations were defined for models of two classes [17] :",
            "cite_spans": [
                {
                    "start": 227,
                    "end": 231,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 510,
                    "end": 514,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Classification Models"
        },
        {
            "text": "The precision indicates the accuracy of the model, while the recall indicates completeness. Analyzing only the precision, it is not possible to know how many examples were not classified correctly. With the recall, it is not possible to find out how many examples were classified incorrectly. Thus, we usually performed with the F-measure, which is the weighted harmonic mean of precision and recall. In Equation (7), w is the weight that weighs the importance of precision and recall. With weight 1, the degree of importance is the same for both metrics. The measure F 1 is presented in Equation (8) [17] :",
            "cite_spans": [
                {
                    "start": 601,
                    "end": 605,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Classification Models"
        },
        {
            "text": "The Receiving Operating Characteristics (ROC) graph [48] is represented in two dimensions with the xand y-axis representing the measures of false positive rate (FPR) and true positive rate (TPR), respectively [17] . In this graph, the diagonal represents a random classifier, so the best models can classify above this line, as shown in Figure 2 . It is usual to construct a ROC curve to compare the performance between the different classification models, as seen in Figure 2 , and calculate the area under ROC curve (AUC). For the construction of the ROC curve, it is necessary to order the test cases according to the continuous value provided by the classifier (depending on the model, an adaptation may be necessary) [48] .",
            "cite_spans": [
                {
                    "start": 52,
                    "end": 56,
                    "text": "[48]",
                    "ref_id": "BIBREF48"
                },
                {
                    "start": 209,
                    "end": 213,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 722,
                    "end": 726,
                    "text": "[48]",
                    "ref_id": "BIBREF48"
                }
            ],
            "ref_spans": [
                {
                    "start": 337,
                    "end": 345,
                    "text": "Figure 2",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 468,
                    "end": 476,
                    "text": "Figure 2",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Classification Models"
        },
        {
            "text": "NLP techniques allow the extraction of several attributes directly from content, as in news articles, or from information provided, such as descriptions of videos and images. Among these techniques, there are the sentiment analysis, NER, subjectivity of the text, and discovery of topics with the LDA algorithm [31] .",
            "cite_spans": [
                {
                    "start": 311,
                    "end": 315,
                    "text": "[31]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Twitter, one of the most popular social networks in the world, allows sharing information via short messages. News Articles are shared on Twitter by publishing the news URL and the retweet feature, which allows sending information without modification. Bandari et al. [13] used five classifiers with a set of multidimensional attributes to predict the popularity of news articles on Twitter through the number of tweets and retweets.",
            "cite_spans": [
                {
                    "start": 268,
                    "end": 272,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The news articles were collected from the news aggregator Feedzilla and the attributes which tried to cover different dimensions of the problem were:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The source of the news, which generated or published the article; 2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The category of the article, according to Feedzilla; 3.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The subjectivity of the article's language; 4.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Named entities present in the articles.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "They collected data from 8 August 2011, to 16 August 2011, totaling 44,000 articles. For each article, the Topsy [49] tool provided the number of tweets. For the recognition of named entities (places, people, or organizations) the Stanford-NER tool was used. For the articles' subjectivity, a Ling-Pipe classifier was used, which is a set of tools for NLP with ML algorithms developed in Pang and Lee [50] . To highlight the contribution of subjectivity in the analysis carried out, the authors sought two corpus: the first had a more informal language while the second was more objective and with less sentiment in the communication carried out. Next, the tool was trained with the transcripts of Rush Limbaugh [51] and Keith Olberman [52] as the subjective corpus. For the training of objective language, the transcripts of the CSPAN [53] were used, as well as the transcription of articles from the website FirstMonday [54].",
            "cite_spans": [
                {
                    "start": 113,
                    "end": 117,
                    "text": "[49]",
                    "ref_id": null
                },
                {
                    "start": 401,
                    "end": 405,
                    "text": "[50]",
                    "ref_id": "BIBREF50"
                },
                {
                    "start": 736,
                    "end": 740,
                    "text": "[52]",
                    "ref_id": null
                },
                {
                    "start": 836,
                    "end": 840,
                    "text": "[53]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The data collected showed that the absolute values sometimes did not represent the desired information. For example, the amount of news published in the health category does not emphasize its importance. This category has few published articles, but they are among the most shared. Thus, if we look only at the number of shares, a category with many articles would seem more important, even if your articles are not as shared. Due to this possibility of misinterpretation, the authors proposed the measure t-density (Equation (9)). Thus, a t-density was calculated for each category and for each source of the article [13] :",
            "cite_spans": [
                {
                    "start": 618,
                    "end": 622,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The dataset was divided into three classes, covering different ranges (tweets and retweets were counted as tweets): Class A with up to 20 tweets, Class B ranged from 20 to 100, and Class C with more than 100 tweets. Articles that were not shared on Twitter, that is, with 0 tweets, were not considered for the popularity prediction. Classifiers are induced from four ML methods: Bagging, Decision Tree J48, SVM, and Naive Bayes. They compare the performance of these models using accuracy as a metric. The results indicate that it is possible to predict the popularity before the publication with an accuracy of approximately 84% using a set of attributes extracted directly from the news articles' content, with algorithm Bagging. Moreover, the classifiers trained to predict whether or not an article will be shared from Twitter using the same set of attributes have reached an accuracy of 66% [13] .",
            "cite_spans": [
                {
                    "start": 896,
                    "end": 900,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Finding relevant textual attributes allows optimizing the content, in addition to prediction. In this sense, Fernandes et al. [10] propose an Intelligent Decision Support System (IDSS) to predict if a news article is popular or not and subsequently suggest simple changes in the content that would increase its popularity. The prediction module uses as inputs the digital media content (images, videos), previous popularity of the news referenced in the article, the average number of shares of keywords, and NLP attributes [10] . The news articles are gathered from the website Mashable [55] covering the period of two years. The metric for measuring popularity was the number of shares, and they considered a binary classification (popular/unpopular). To obtain a balanced distribution, the authors used the median number of shares, so articles with more than 1400 shares were considered popular.",
            "cite_spans": [
                {
                    "start": 126,
                    "end": 130,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 524,
                    "end": 528,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 588,
                    "end": 592,
                    "text": "[55]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The predictive results are explored in several ways. First, the five most relevant topics are identified in all the articles with the LDA algorithm [31] . After that, they measured the distance between each article and these topics. The results are incorporated as predictive attributes [10] . Regarding the subjectivity and polarity of the sentiment analysis, the authors adapted and used the Pattern module [56] developed in Smedt and Lucas [57] . Several attributes were extracted from the subjectivity and sentiment analysis, including subjectivity of the title, subjectivity of the text, polarity of the title, rate of positive and negative words, the polarity of the text, polarity of words, and rate of positive words between those that are not neutral and the rate of negative words among those that are not neutral.",
            "cite_spans": [
                {
                    "start": 148,
                    "end": 152,
                    "text": "[31]",
                    "ref_id": null
                },
                {
                    "start": 287,
                    "end": 291,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 443,
                    "end": 447,
                    "text": "[57]",
                    "ref_id": "BIBREF54"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The authors tested five classification methods: Random Forest (RF); Adaptive Boosting (AdaBoost), SVM with a Radial Base Function (RBF), KNN, and Naive Bayes (NB). The following metrics were computed: Accuracy, Precision, Recall, F 1 Score, and the AUC. The Random Forest has the best results with 0.67 of Accuracy and 0.73 of AUC.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "From the results, they identified that, among the 47 attributes used, those related to keywords, proximity to LDA topics, and article category are among the most important. The optimization module seeks the best combination over a subset of features suggesting changes, for example, by changing the number of words in the title. Realize that it is the responsibility of the author of the article to replace the word. Applying the optimization to 1000 articles, the proposed IDSS achieved, on average, a 15% increase in popularity. The authors observed that NLP techniques to extract attributes from the content proved to be successful.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "After the study was carried out in [10] , the database was made available in the UCI Machine Learning repository allowing for new research and experiments. In 2018, Khan et al. [16] presented a new methodology to improve the results presented in [10] . The first analysis was to reduce features to two dimensions using Principal Component Analysis (PCA). PCA is a statistical procedure that uses orthogonal transformations to convert a set of correlated attributes into a set of linearly uncorrelated values called principal components. Thus, the two-dimensional PCA analysis output would be two linearly separated sets, but the results of that dataset did not allow this separation. Three-dimensional PCA analysis was applied to attempt linear separation, but it was also unsuccessful [16] .",
            "cite_spans": [
                {
                    "start": 35,
                    "end": 39,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 177,
                    "end": 181,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 246,
                    "end": 250,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 786,
                    "end": 790,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Based on the observation that the features could not be linearly separated and on the trend observed in other studies, the authors sought to test models of nonlinear classifiers and ensemble methods such as Random Forest, Gradient Boosting, AdaBoost, and Bagging. In addition to those, other models were tested to prove the effectiveness of the hypothesis like Naive Bayes, Perceptron, Gradient Descent, and Decision Tree. In addition, Recursive Attribute Elimination (RFE) was applied to obtain the 30 main attributes for the classification models. RFE recursively removes the attributes one by one, building a model with the remaining attributes. It continues until a sharp drop in model accuracy is found [16] . The classification task adopted two classes: popular articles with more than 3395 shares, and non-popular. Eleven classification algorithms were applied, showing that the ensemble methods obtained the best results, with Gradient Boosting having the best average accuracy. Gradient Boosting is a set of models that trains several \"weak\" models and combines them into a \"strong\" model using the gradient optimization. Gradient Boosting reached an accuracy of 79%, improving the result found in Fernandes et al. [10] . Other models have obtained interesting results as well; for example, the Naive Bayes model was the fastest, but it did not perform well because the attributes are not independent. The Perceptron model had its performance deteriorated as the training data increased, which can be explained by the data's nonlinearity. Hence, the performance of the MLP classifier significantly improved the accuracy of the predictive task.",
            "cite_spans": [
                {
                    "start": 708,
                    "end": 712,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 1224,
                    "end": 1228,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "An exciting approach focusing on the attributes is presented in [15] . The authors hypothesized that the title's grammatical construction and the abstract could emerge curiosity and attract readers' attention. A new attribute, called Gramatical Score, was proposed to reflect the title's ability to attract users' attention. To segment and markup words, they relied on the open-source tool Jieba [58] . The Grammatical Score is computed followed the steps below:",
            "cite_spans": [
                {
                    "start": 64,
                    "end": 68,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 396,
                    "end": 400,
                    "text": "[58]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "\u2022 Each sentence was divided into words separated by spaces; \u2022 Each word received a grammatical label; \u2022",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The quantity of each word was counted in all items; \u2022 Finally, a table with words, labels, and the number of words was obtained; \u2022 Each item receives a score with the Equation (10), where gc i represents the Grammatical Score of the ith item in the dataset and k represents the kth word in the ith item.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The n is the number of words in the title or summary. The weight is the amount of the kth word in all news articles, and count in this equation is the amount of the kth word in the ith item:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "In addition to this attribute, the authors used a logarithmic transformation and normalization by building two new attributes: categoryscore and authorscore:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The categoryscore is the average view for each category. The variable n in the Equation (11) represents the total number of news articles of each author. For each category, the data that belonged to this category were selected, and Equation (11) was used:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The authorscore is defined in Equation (12), where m represents the total number of news articles of each author. Before calculating the authorscore, data are grouped by author. For the prediction, the authors used the titles and abstracts' length and temporal attributes in addition to the three mentioned attributes. The authors' objective was to predict whether a news article would be popular or not. For this, they used the freebuf [59] website as a data source. They collected the items from 2012 to 2016, and two classes were defined: popular and unpopular. As these classes are unbalanced and popular articles are the minority, the metric AUC was used, which is less influenced by the distribution of unbalanced classes. In addition, the kappa coefficient was used, which is a statistical measure of agreement for nominal scales [60] . The authors selected five ranking algorithms to observe the best algorithm for predicting the popularity of news articles: Random Forest, Decision Tree J48, ADTree, Naive Bayes, and Bayes Net. We identified that the ADTree algorithm has the best performance with 0.837 AUC, and the kappa coefficient equals 0.523.",
            "cite_spans": [
                {
                    "start": 837,
                    "end": 841,
                    "text": "[60]",
                    "ref_id": "BIBREF56"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Jeon et al. [40] proposed a hybrid model for popularity prediction and applied it to a real video dataset from a Korean Streaming service. The proposed model divides videos into two categories, the first category, called A, consisting of videos that have previously had related work, for example, television series and weekly TV programs. The second category, called B, is videos that are unrelated to previous videos, as in the case of movies. The model uses different characteristics for each type. For type A, the authors use structured data from previous contents, including the number of views. For type B, they use unstructured data such as texts from titles and keywords.",
            "cite_spans": [
                {
                    "start": 12,
                    "end": 16,
                    "text": "[40]",
                    "ref_id": "BIBREF40"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The XGBoosting algorithm, a model developed for rapid development and classification based on parallel processing, was used to predict a type A video. The authors use ANN with embedding techniques to obtain generation prediction resources for type B videos. They used Continuous Bag-of-Words (CBOW) through Word2Vec to build embeddings. In the end, they concatenate predictions of both models to deliver the final result. In addition to title and keywords, they use actor names, television channel names, and episode counts for feature extraction. The use of embeddings to obtain the title characteristics improved the prediction performance compared to the other four models with the same dataset [40] .",
            "cite_spans": [
                {
                    "start": 698,
                    "end": 702,
                    "text": "[40]",
                    "ref_id": "BIBREF40"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Most studies use the textual attributes and meta-attributes provided by the sites. However, in recent years, with technological advances, it has become possible to also use visual attributes extracted directly from videos. One of the first studies in this regard was [11] . The authors studied the problem of predicting the popularity of videos shared on social networks. The prediction was treated as a classification task, and the attributes were extracted directly from the videos using a Deep Neural Network (DNN) architecture. The authors postulated that, if the predictive model incorporated the sequential information presented in the videos, a better classification accuracy would be obtained. The DNN is a Long Term Recurrent Convolutional Network (LRCN) [61] that is able to take into account the order of the information when learning the weights. They called this method Popularity-LRCN and evaluated it with a dataset of 37,000 videos collected from Facebook [62] .",
            "cite_spans": [
                {
                    "start": 267,
                    "end": 271,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 764,
                    "end": 768,
                    "text": "[61]",
                    "ref_id": "BIBREF57"
                },
                {
                    "start": 972,
                    "end": 976,
                    "text": "[62]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "The network architecture is composed of an input layer that supports 18 frames of 227 \u00d7 227 \u00d7 3 dimension for each video. There are other eight layers, where the first five are convolutional layers, the sixth layer is a completely connected layer with 4096 neurons, the seventh is a Long Short-Term Memory (LSTM), and the last layer is the classification layer with two neurons. They used softmax in the classification layer [11] . To increase the network invariance, layers of max pooling were used after the first, second, and fifth convolutional layers. ReLU was used as a nonlinear activation function applied to all convolutional layers' outputs and the layers completely connected. During the training, the 320 \u00d7 240 \u00d7 3 video frames were randomly reduced to 227 \u00d7 227 \u00d7 3. In addition, a mirroring technique was used to increase the amount of sample in the training dataset. The network has been trained over 12 epochs with 30,000 iterations each [11] .",
            "cite_spans": [
                {
                    "start": 425,
                    "end": 429,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 954,
                    "end": 958,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "Data were collected from videos shared on Facebook from 1 June 2016 to 31 September 2016. Due to the massive difference in the videos' number of views (videos with millions of views and videos watched less than 1000 times), authors used a logarithmic transformation. In addition, in order to reduce the bias introduced by the fact that content producers with a large number of followers attract a large number of views, the authors included in the standardization procedure the number of followers of producers [11] . Thus, the normalized popularity score (NPS) is calculated using Equation (13):",
            "cite_spans": [
                {
                    "start": 511,
                    "end": 515,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "After normalization, the dataset was divided into two classes: popular and nonpopular. The normalized popularity median enables a balanced distribution of classes. The authors compared the proposed method with two traditional classifiers, namely, a logistic regression, and SVM with a radial base function. The input attributes to the classifiers are as follows: The Popularity-LRCN surpassed the other methods reaching 70% accuracy. The way that came closest was the SVM when used with features from CaffeNet or ResNet, which had an accuracy of approximately 65%. Features from HOG and GIST had less influence on the final result, reaching a maximum accuracy of 60% with logistic regression and SVM and emphasizing that Popularity-LRCN used raw frames without performing attribute engineering.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "We present the main popularity classification methods found in the literature. We observed that most of them rely on the extraction of attributes through NLP techniques, even when analyzing videos' popularity. Recently, Trzcinski et al. [11] presented a model that extracts features directly from the videos, expanding the search horizon.",
            "cite_spans": [
                {
                    "start": 237,
                    "end": 241,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "In this section, we present the methods used to perform the numerical popularity prediction. The goal is to quantify the degree of popularity. The applications for this type of prediction are diverse, among them, the proactive allocation of resources. It is usual to indicate the prediction error, the correlation coefficient (Pearson or Spearman), and the determination coefficient (R 2 ).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Regression Models"
        },
        {
            "text": "The determination coefficient indicates the degree to which the prediction made exceeds the average of the desired value. Thus, the value of R 2 , which can vary from 0 to 1 calculated according to Equation (14) , indicates the percentage of variation related to predictive features.N c (t i , t r ) is the popularity prediction of the item c for the instant t r realized at the instant t i and N c (t r ) is the actual popularity at time t r . For example, a value of 0.81 indicates that 81% of the variation in popularity can be explained based on the predictive variables used. In comparison, the other 19% are not related to the chosen features. Thus, this metric indicates the quality of the numerical predictions made [67] :",
            "cite_spans": [
                {
                    "start": 207,
                    "end": 211,
                    "text": "(14)",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 724,
                    "end": 728,
                    "text": "[67]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Regression Models"
        },
        {
            "text": "Another metric widely used to evaluate regressors is the correlation between the predicted popularity and the examples' verified popularity. The correlation determines the strength of the relationship between these two variables. It is important to note that the correlation does not indicate causality, but it does denote the quality of the prediction. Pearson's correlation coefficient measures the linear dependence between the predicted values and the actual popularity. The values of the correlation coefficient can vary between -1 and 1. They will be positive when high values of the prediction correspond to high values of popularity and negative when the prediction's high values correspond to low values of popularity. We want to find values as close to 1 as possible [67] .",
            "cite_spans": [
                {
                    "start": 777,
                    "end": 781,
                    "text": "[67]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Regression Models"
        },
        {
            "text": "Spearman's correlation coefficient is a well-known metric for rankings assessments. Like a Pearson's coefficient, the values are in the range of \u22121 to 1, and the positive value indicates agreement while the negative values indicate disagreement. Compared to Pearson's coefficient, it is easier to calculate and less susceptible to outlier values [67] .",
            "cite_spans": [
                {
                    "start": 346,
                    "end": 350,
                    "text": "[67]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Regression Models"
        },
        {
            "text": "Another way to evaluate the regression models is by calculating the prediction errors. The Least Squares Error consists of an estimator that minimizes the sum of the regression residuals' squares to maximize the degree of adjustment of the model to the observed data as we can see in Equation (15) . The least squares method requirement is that the unpredictable factor (error) is randomly distributed, and this distribution is normal. The Relative Square Error (RSE) would express the error if an average predictor were used. Thus, the RSE takes the total squared error and normalizes it by dividing it by the simple predictor's absolute squared error like in Equation (16):",
            "cite_spans": [
                {
                    "start": 293,
                    "end": 297,
                    "text": "(15)",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Regression Models"
        },
        {
            "text": "Oghina et al. [14] demonstrated that it is possible to predict IMDB's [68] film scores using multiple social networks. Modern Information retrievers use various sources of information to achieve their purpose, called the Cross Channel Prediction Task. That is, information from different sources (websites) are analyzed to make predictions on another channel [14] . The social networks chosen were Twitter and Youtube, obtaining the following quantitative attributes: number of views, number of comments, number of favorites, number of likes, number of dislikes, the fraction of likes over dislikes for each YouTube video, and number of tweets on Twitter. The value of each attribute is the natural logarithm of its frequency. In addition to those attributes, textual features were extracted by comparing the log-likelihood function of a term in two corpora to identify the words and phrases indicative of positive and negative moods like [69] . These corpora are tweets about the analyzed films and comments about the movie trailers on YouTube. Examples of extracted positive textual features include the stems amaz, awesom; negative ones include worst, terribl. Thus, the frequency of these words could be used as features.",
            "cite_spans": [
                {
                    "start": 14,
                    "end": 18,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 359,
                    "end": 363,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 939,
                    "end": 943,
                    "text": "[69]",
                    "ref_id": "BIBREF64"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "The dataset consisted of 70 films, with the notes reported on 4 April 2011. Ten films were kept separate for extracting textual attributes of this set, leaving 60 movies for testing. The dataset was supplemented with data from Twitter, 1.6 M tweets published between 4 March 2011, 4 April 2011, and 55 K YouTube comments. The authors used linear regression with WEKA implementation comparing the experiments using Spearman's coefficient (\u03c1) [14] . The baseline of the experiments was the prediction made only with quantitative data. Next, the authors included the textual attributes of Twitter, and later the textual attributes of YouTube were included in the predictive models. The performance, including the textual characteristics of YouTube data, worsened the result while the model with the Textual features of Twitter obtained a performance superior to baseline. Combining the Textual attributes of Twitter with those of YouTube, the baseline was surpassed, but the performance continued to be inferior to the Twitter model.",
            "cite_spans": [
                {
                    "start": 441,
                    "end": 445,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Evaluating the correlation of quantitative attributes with the prediction result, the authors discovered that the fraction of likes about dislikes is the best predictive attribute. This quantitative attribute was tested with the textual features, obtaining the best predictive result with a Spearman's coefficient (\u03c1) of 0.8539 [14] . In addition to comparing the Classifiers, Bandari et al. [13] (presented in Section 4.1) used the same attributes with three regressors: linear regression, KNN, and SVM. The attempt was to predict the exact number of tweets an article would receive. The best result found using the determination coefficient (R 2 ) as a comparison metric, with linear regression, was 0.34. With this performance, we cannot say that these models are good enough to predict the exact amount of tweets an article will receive.",
            "cite_spans": [
                {
                    "start": 328,
                    "end": 332,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 392,
                    "end": 396,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Liu et al. [15] made another unsuccessful attempt to use regression with textual attributes. Using the same features presented in Section 4.1, the WEKA linear regression, and the determination coefficient (R 2 ) as a metric, the authors obtained unsatisfactory results. They attempt to use the Grammatical Score feature to improve the results, achieving a 6.62% increase in performance, obtaining a final result of the determination coefficient (R 2 ) of 0.5332.",
            "cite_spans": [
                {
                    "start": 11,
                    "end": 15,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Although we present several methods that use different predictive attributes, it is possible to perform a popularity prediction using only the number of online content views. However, it can only be employed after the content is published, by capturing the number of views in an instant t i to predict the popularity in the instant t r , with t i < t r . This simple idea brought good results when the dataset is from two sharing portals, namely, Digg [70] , a news portal, and Youtube [22] . With Digg news, it is possible to predict the 30th day's popularity using the number of views obtained in the first two hours. For Youtube, it is necessary to use the views obtained during the first ten days to predict the popularity on the 30th day. The explanation is the fact that the life cycles on both types of shared contents are different [22] .",
            "cite_spans": [
                {
                    "start": 452,
                    "end": 456,
                    "text": "[70]",
                    "ref_id": null
                },
                {
                    "start": 486,
                    "end": 490,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 840,
                    "end": 844,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "The news has a short life cycle, with a quick peak of popularity, but the interest is dispersed at the same speed. Videos have a continually evolving growth rate and, as a consequence, a longer life cycle. The likelihood of a video attracting much attention on the Web, even after its peak of popularity, is greater than the news articles [22] . Szabo and Huberman [22] found a strong correlation (Pearson's coefficient above 0.9) between the logarithmic popularity in two distinct moments: the content that receives many views at the beginning tends to have a greater number of views in the future. The correlation found is described by a linear model with Equation (17):",
            "cite_spans": [
                {
                    "start": 339,
                    "end": 343,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 365,
                    "end": 369,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "N c (t) is the popularity of the item c from publication to time t and t 1 and t 2 are two arbitrarily chosen moments, with t 2 > t 1 . r(t 1 , t 2 ) is the linear relationship found between the logarithmic popularity and is independent of c. \u03b5 c is the noise term that describes the randomness observed in the data [22] . Szabo and Huberman [22] present three predictive models with error functions to be minimized using regression analysis. The first model uses linear regression applied on a logarithmic scale, the function to be minimized is the estimated least squares error (LSE) presented in Equation (15) .N c (t i , t r ) is the popularity prediction of the item c for the instant t r realized at the instant t i and N c (t r ) is the actual popularity at time t r .",
            "cite_spans": [
                {
                    "start": 316,
                    "end": 320,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 342,
                    "end": 346,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 608,
                    "end": 612,
                    "text": "(15)",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "The regression model that minimizes this function is presented in Equation (18) . In this equation, \u03b2 0 (t i ) is the regression coefficient and \u03c4 2 0 is the residual variation on the logarithmic scale:N",
            "cite_spans": [
                {
                    "start": 75,
                    "end": 79,
                    "text": "(18)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "The second model assumes that the evolution of popularity obeys a constant scale of growth. The error function to be minimized is the relative quadratic error (RSE) and is presented in Equation (16) .The linear correspondence found between the popularity rates in early times and future times suggests that the expected popularity value,N c (t i , t r ), for item c can be expressed as:N",
            "cite_spans": [
                {
                    "start": 194,
                    "end": 198,
                    "text": "(16)",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "\u03b1(t i , t r ) is independent of the item c, but will depend directly on the error function you want to minimize. In this specific case, to minimize RSE, we will have:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "The average growth profile of the training set's popularity is the base of the third predictive model. The average of the submissions' popularity at the time t i normalized by the popularity at the time t r represents growth profile:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "In Equation (21), . c is the average of the standardized popularity over the entire training set. The prediction for an item c is calculated with the Equation (22):",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "The models presented by Szabo and Huberman [22] are simple and efficient. Their results indicate that it is possible to predict future popularity based only on the number of initial views, but they have some flaws. The models use the total number of views until t i as input, but two items can have similar number of views in t i and very different numbers of popularity rates in t r . Thus, Pinto et al. [23] present two predictive models that try to correct these flaws and surpass the models presented in [22] . Instead of using the total number of views obtained in t i , these views are divided into regular measurement intervals from publication to the time t i , each interval is called delta popularity. Pinto et al. [23] proposes a Linear Multivariate (MLM) model that predicts popularity at instant t r as a linear function shown in Equation (23):",
            "cite_spans": [
                {
                    "start": 43,
                    "end": 47,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 405,
                    "end": 409,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 508,
                    "end": 512,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 725,
                    "end": 729,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "Let x i (c) be the number of views received in the time interval \u03b4 i and X c (t i ) the popularity vector for all ranges up to t i , so we have the following representation: X c (t i ) = [x 1 (c), x 2 (c), x 3 (c), . . . , x i (c)] T . The model parameters, \u0398(t i , t r ) = [\u03b8 1 , \u03b8 2 , . . . , \u03b8 i ] are computed to minimize the mean of the relative square error (MRSE), Equation (24):",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "The idea is that, due to the different weights attributed to the time intervals observed in the history of the items, the MLM model can capture the pattern of evolution of the content's popularity. However, this model is still limited, especially in videos that show different patterns of popularity evolution. A possible solution would be to create a specialized model for each known pattern, but the great difficulty is how to know, a priori, what will be the evolution pattern of the video to be predicted [23] . Thus, [23] chose to build a model that takes into account the similarity (number of views, up to t r ) between the video and known examples from the training set. This similarity is used to adapt to the popularity prediction. To measure the similarity between the videos, an RBF was used, which depends on the distances from the center's entrance. Given the training set v c , the parameter \u03c4, the video v, and the MLM X(v) model, the authors created a Gaussian RBF presented in Equation (25): (25) In the experiment, a random sample of the training set was selected to be used as the center of Equation (25) . For each video v, they computed RBF v c (v), C is the sample used as the center, w v c is the weight of the model associated with RBF feature, this model was called MRBF and is formally defined by the Equation (26) [23] :",
            "cite_spans": [
                {
                    "start": 509,
                    "end": 513,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 522,
                    "end": 526,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 1010,
                    "end": 1014,
                    "text": "(25)",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 1120,
                    "end": 1124,
                    "text": "(25)",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 1342,
                    "end": 1346,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "Finally, in [23] , the models are compared with the constant growth model of [22] called the S-H model, Equation (19) . The models were compared by applying them to a YouTube video dataset, the error metric used was the MRSE, and the indication and reference times for the models were: t i = 7 and t r = 30. As expected, the MRBF Model obtains the best performance.",
            "cite_spans": [
                {
                    "start": 12,
                    "end": 16,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 77,
                    "end": 81,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 113,
                    "end": 117,
                    "text": "(19)",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "Hoiles et al. [39] presented a study with the purpose to analyze how metadata contribute to the popularity of videos on YouTube. The dataset was provided by BBTV and includes the metadata for the BBTV videos from April 2007 to May 2015 on YouTube. There were about 6 million videos distributed on 25,000 channels. By applying various ML algorithms to analyze the correlation of attributes provided by YouTube, the authors listed the five most important ones for increasing popularity: number of views on the first day of the video, number of subscribers to the channel, thumbnail contrast, Google hits (number of results found with the Google search engine when entering the video title), and number of keywords. The application of several ML algorithms to determine the number of views had the best result of the Conditional Inference Random Forest [71] with the determination coefficient (R 2 ) of 0.80 [39] .",
            "cite_spans": [
                {
                    "start": 14,
                    "end": 18,
                    "text": "[39]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 850,
                    "end": 854,
                    "text": "[71]",
                    "ref_id": "BIBREF66"
                },
                {
                    "start": 905,
                    "end": 909,
                    "text": "[39]",
                    "ref_id": "BIBREF39"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "Another interesting finding was that the publication of videos outside the days scheduled for the videos' launch tends to increase the number of views. In addition, the authors demonstrated that the optimization of the features allows the increase in popularity. As an example, we have that the title's optimization increases the traffic due to the YouTube search engine [39] . The authors also presented a generalization of the Gompertz model presented in [72] to add external events, as shown in Equation (27) . Therev i (t) is the total view count for video i at time t, u(.) is the unit step function, t 0 is the time the video was uploaded, t k with k \u2208 1, . . . , K max are the times associated with the K max exogenous events, and w k i (t) are Gompertz models which account for the view count dynamics from uploading the video and from the exogenous events. In this way, they can identify the number of views from subscribers to the channel, non-subscribers, and increased views due to external events [39] :v",
            "cite_spans": [
                {
                    "start": 371,
                    "end": 375,
                    "text": "[39]",
                    "ref_id": "BIBREF39"
                },
                {
                    "start": 457,
                    "end": 461,
                    "text": "[72]",
                    "ref_id": "BIBREF67"
                },
                {
                    "start": 507,
                    "end": 511,
                    "text": "(27)",
                    "ref_id": null
                },
                {
                    "start": 1010,
                    "end": 1014,
                    "text": "[39]",
                    "ref_id": "BIBREF39"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Data Features"
        },
        {
            "text": "Khosla et al. [21] were one of the first works to use visual information to predict the number of views that images would obtain on the Web. The data were extracted from the Flickr [73] site, as the authors wanted to use the image publishers' social information. The attributes taken from the images were:",
            "cite_spans": [
                {
                    "start": 14,
                    "end": 18,
                    "text": "[21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 181,
                    "end": 185,
                    "text": "[73]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "\u2022 Color histogram: the authors used 50 colors as described in [74] , marking each pixel of the image for those colors, creating a histogram of colors. \u2022 Gist: a resource descriptor with 512 dimensions [64] . \u2022 Texture: they used the famous Local Binary Pattern (LBP) obtaining a descriptor with 1239 dimensions [75] . \u2022 Color patches: They used 50 colors as described in [74] , in a bag-of-words representation obtaining a final vector with 4200 dimensions. \u2022 HOG: a resource descriptor with 10,752 dimensions [63] . \u2022 ImageNet: They used deep learning to learn a representation of the image visible in a vector of 4096 dimensions [76] .",
            "cite_spans": [
                {
                    "start": 62,
                    "end": 66,
                    "text": "[74]",
                    "ref_id": "BIBREF69"
                },
                {
                    "start": 201,
                    "end": 205,
                    "text": "[64]",
                    "ref_id": "BIBREF60"
                },
                {
                    "start": 311,
                    "end": 315,
                    "text": "[75]",
                    "ref_id": "BIBREF70"
                },
                {
                    "start": 371,
                    "end": 375,
                    "text": "[74]",
                    "ref_id": "BIBREF69"
                },
                {
                    "start": 510,
                    "end": 514,
                    "text": "[63]",
                    "ref_id": "BIBREF59"
                },
                {
                    "start": 631,
                    "end": 635,
                    "text": "[76]",
                    "ref_id": "BIBREF71"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "The attributes are the input for a support vector regression (SVR) with a linear kernel to predict the number of views of an image, reaching a Spearman's coefficient (\u03c1) of 0.40. The model was fed only with visual attributes. When using only the social attributes-number of friends or number of photos uploaded-of the image publisher with the same model, Spearman's coefficient (\u03c1) was 0.77. The best result was defined by combining the visual and social features, reaching the mark of 0.81 [21] . Although this experiment demonstrates that the publisher's social contacts have more results for the generation prediction than the images' content, the visual attributes are essential to increase the prediction result. Other important factors were that colors closer to red tend to have more visualizations. In addition, the authors searched for the correlation of some objects produced in the images. A list of items was obtained, which, when obtained in the pictures, tend to have fewer views as examples: spatula, plunger, laptop, golf cart, space heater [21] .",
            "cite_spans": [
                {
                    "start": 491,
                    "end": 495,
                    "text": "[21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 1057,
                    "end": 1061,
                    "text": "[21]",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "Trzcinski and Rokita [9] proposed a regression method to predict the popularity of online videos using SVM with Gaussian radial base function, called Popularity-SVR. This method, when compared to the models presented in [22, 23] , is more accurate and stable, possibly due to the nonlinear character of Popularity-SVR. In the comparison experiments, two sets of data were used, with almost 24,000 videos taken from YouTube and Facebook. This work also shows that the use of visual attributes, such as the output of DNN or scene dynamics metrics, can be useful for predicting popularity, even because they are obtained before publication. The accuracy of the prediction can be improved by combining initial distribution patterns, as in the models of [22, 23] , with visual and social attributes such as the number of faces that appear in the video and the number of comments received by the video. The visual attributes used were:",
            "cite_spans": [
                {
                    "start": 21,
                    "end": 24,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 220,
                    "end": 224,
                    "text": "[22,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 225,
                    "end": 228,
                    "text": "23]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 749,
                    "end": 753,
                    "text": "[22,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 754,
                    "end": 757,
                    "text": "23]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "\u2022 Characteristics of the videos. Simple characteristics were used, such as length of the video, the number of frames, resolution of the video, and the frames' dimensions. \u2022",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "Color. The authors grouped the colors into ten classes depending on their coordinates in the HSV representation (hue, saturation, value): black, white, blue, cyan, green, yellow, orange, red, magenta and others. The predominant color was discovered for each frame, classifying it in one of these ten classes. \u2022 Face. Using a face detector was counted the number of faces per frame, the number of frames with faces, and the region's size with faces in relation to the size of the frame. \u2022 Text. Combining Edge Detection (image processing technique to determine points where light intensity changes suddenly) and morphological filters, regions of the video with printed text were identified, generating the following features: number of frames with printed text and the average size of the region with text in relation to the frame size.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "\u2022 Scene Dynamics. Using the Edge Change Ration algorithm, the authors determined the limits of shots (series of consecutive images representing a continuous action). The number of shots and the average size of shots, in seconds, were used as attributes [77] . \u2022",
            "cite_spans": [
                {
                    "start": 253,
                    "end": 257,
                    "text": "[77]",
                    "ref_id": "BIBREF72"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "Clutter. This measure represents the disorder of the video, the authors used the Canny edge detector to quantify the clutter [78] . The attribute used was the average of the detected pixels' proportion and the number of pixels in a frame. \u2022 Rigidity. To estimate the rigidity of the scene, the authors estimated the homography between two consecutive frames by combining the use of FAST [79] , and BRIEF [80] . The attribute was the average of the number of valid homographs found. \u2022 Thumbnail. The popularity for the thumbnail of the video was computed using the Popularity API following the work of [21] . The predictive features include the visual attributes above and social characteristics such as the number of shares, likes, and comments. The predictive methods used for comparison are those presented in [22, 23] and explained in Section 5.2. The MRBF regression model, explained by the Equation (26), presents the combination of two methods: the MLM regression model (linear) and RBF features (nonlinear). It is not necessary to perform this prediction in two stages. Inspired by the results of the MRBF, the Popularity-SVR uses a Gaussian RBF as the transformation kernel, allowing for mapping the vector of attributes in a nonlinear space where the relationships of the evolution patterns of the videos are easier to capture [9] .",
            "cite_spans": [
                {
                    "start": 125,
                    "end": 129,
                    "text": "[78]",
                    "ref_id": "BIBREF73"
                },
                {
                    "start": 387,
                    "end": 391,
                    "text": "[79]",
                    "ref_id": "BIBREF74"
                },
                {
                    "start": 404,
                    "end": 408,
                    "text": "[80]",
                    "ref_id": "BIBREF75"
                },
                {
                    "start": 601,
                    "end": 605,
                    "text": "[21]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 812,
                    "end": 816,
                    "text": "[22,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 817,
                    "end": 820,
                    "text": "23]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 1336,
                    "end": 1339,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "SVM with linear kernels create separation surfaces for linearly separable datasets or that have an approximately linear distribution. However, in nonlinear problems, this is not possible. This linear separation can be achieved by mapping the inputs from the original space to a larger space [17] . Let \u03a6 : X \u2192 be a mapping, where X is the input space and denotes the feature space. The appropriate choice of \u03a6 means that the training set mapped to can be separated by a linear SVM [17] . A kernel K is a function that receives two points x i and x j in the input space and calculates the scalar product of these objects in the characteristics space, mapping the input set in a new space dimensional [17] .",
            "cite_spans": [
                {
                    "start": 291,
                    "end": 295,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 481,
                    "end": 485,
                    "text": "[17]",
                    "ref_id": null
                },
                {
                    "start": 699,
                    "end": 703,
                    "text": "[17]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "As a result, the nonlinear characteristic of the transformation RBF kernel allows for a robust prediction based on similarity with the popularity evolution patterns identified in the training set. This proposal differs from the MRBF model that compares similarity with a set of videos selected at random from the training set [9] . The selection of the correct kernel can influence the performance of the model. For this reason, they search further for an optimal kernel. The popularity of a video v using the Popularity-SVR method can be calculated as in Equation (28) [9] :",
            "cite_spans": [
                {
                    "start": 326,
                    "end": 329,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 570,
                    "end": 573,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "In Equation (28) , \u03a6(x, y) = exp \u2212 ||xy|| 2 \u03c3 2 is an RBF Gaussian parameter \u03c3, X(v, t i )",
            "cite_spans": [
                {
                    "start": 12,
                    "end": 16,
                    "text": "(28)",
                    "ref_id": "BIBREF27"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "is the vector of attributes for the video v available at time t i and X(k, t i ) K k=1 is the set of support vectors returned by the SVR algorithm with the set of coefficients \u03b1 k K k=1 and intercepts b. The authors found optimal values for the C hyperparameter of the Support Vector Machine optimization and \u03c3 for the RBF kernel using a search grid with the Python scikit's sklearn.grid_search.GridSearchCV method in a preliminary set of experiments. The values found were: C = 10 and \u03c3 = 0.005 [9] .",
            "cite_spans": [
                {
                    "start": 496,
                    "end": 499,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "The Popularity-SVR was compared with other regression models using two sets of data. The first dataset was composed of YouTube videos, and the second dataset, also from videos, was extracted from different Facebook profiles. First, Popularity-SVR was compared with the prediction model presented in [22] , which we will call the SH model, and the MLM and MRBF models presented in [23] using the number of views of YouTube videos with t i = 6 days and t r = 30 days. The metric used for comparison was Spearman's correlation coefficient.",
            "cite_spans": [
                {
                    "start": 299,
                    "end": 303,
                    "text": "[22]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 380,
                    "end": 384,
                    "text": "[23]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "The other comparison used the Facebook dataset, testing the models only with the number of views, then only with the social data, only with the visual attributes, and combining all of them. This last test was combining the social, visual attributes, and the number of views. Predicting with the visual information had the worst performance. However, when all the attributes are combined, the prediction is more accurate, proving the advantage of using all the sets of attributes in a combined way.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "The Popularity-SVR method proposed in [9] is an evolution of the methods presented in [22, 23] , surpassing them in performance. In addition, the use of a set of visual attributes combined with the number of views and social data of the videos increases the popularity of the predictor's performance. This information can be extracted from the videos before publication and can be used in other prediction models.",
            "cite_spans": [
                {
                    "start": 38,
                    "end": 41,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 86,
                    "end": 90,
                    "text": "[22,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 91,
                    "end": 94,
                    "text": "23]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Visual Features"
        },
        {
            "text": "After reviewing the literature, we identified that most previous research that have proposed methods for predicting the popularity of videos relying on textual attributes gather them from the title, but not from the videos' content description. Among the works found in the literature, Fernandes et al. [10] is the one that engineers the most significant number of features to predict popularity. Thus, we use Fernandes et al. [10] as an inspiration for obtaining features not only from the title but also directly from the video descriptions in this work.",
            "cite_spans": [
                {
                    "start": 303,
                    "end": 307,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 427,
                    "end": 431,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "Case Study"
        },
        {
            "text": "In this section, we present the case study methodology, which is composed of four phases divided as follows: (i) Data Collection, (ii) Extraction of features engineered from the textual content, (iii) Extraction of Word Embeddings, and (iv) Popularity Classification.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Case Study"
        },
        {
            "text": "We can evaluate the user's Quality of Experience (QoE) according to several metrics, among which we can highlight: initial playback delay, video streaming quality, quality change, and video rebuffering events. Loh et al. [81] developed ML models to estimate the playback behavior, it being possible to carry out monitoring that allows for adjusting the buffer size, improving the transmission quality. As it is impossible to monitor every packet of every video stream, service providers look for intelligent techniques and strategies to predict a change in quality in the transmission to adjust the necessary parameters and provide a better quality of user experience. We propose to obtain popular videos before they are published by extracting textual features from the video's description. In this way, predictions and monitoring about the quality of streaming for the end-user can focus on the most significant videos, requiring a smaller quantity, improving performance for service providers and network operators who can better scale the necessary size of the buffer and improve QoE. In other words, our model can be used to identify videos that will demand more resources from the network infrastructure, allowing service providers to adopt preventive measures to maintain transmission quality.",
            "cite_spans": [
                {
                    "start": 221,
                    "end": 225,
                    "text": "[81]",
                    "ref_id": "BIBREF76"
                }
            ],
            "ref_spans": [],
            "section": "Video Communication"
        },
        {
            "text": "New technologies to improve the efficiency of video transmission have attracted attention. Kim et al. [82] investigate how to improve the efficiency of video streaming using client cache. This work proposes a cache update scheme using reinforcement learning. The results demonstrate that the proposed cache update scheme reduces the amount of XOR operations in cache management, decreasing the number of transmissions by 24%. Again, identifying popular videos before publication allows reinforcement learning training to be utilized with a set of more meaningful videos, optimizing performance.",
            "cite_spans": [
                {
                    "start": 102,
                    "end": 106,
                    "text": "[82]",
                    "ref_id": "BIBREF77"
                }
            ],
            "ref_spans": [],
            "section": "Video Communication"
        },
        {
            "text": "Our data are collected from Globoplay [83] . It uses the NGINX [84] software to manage HTTP requests [85, 86] . This software records a log message for each video segment transmitted. We access the logs of requests from the live services and Globoplay's on Demand Videos (VOD) [87, 88] . We downloaded the records stored from 25 January 2021 to 1 March 2021. As the number of logs and videos is huge, we removed a sample space representing the total content. The goal is to use ML models to tell whether a video will be popular or not. For this, we extract from the logs (i.) the number of views, (ii.) the number of bytes transmitted for each video, (iii.) the URL, and (iv.) the code of the video. After this step, we enriched the data with title information and description of the videos retrieved from the Globoplay website with the BeautifulSoup [89] library so that we could extract textual features and embeddings from them.",
            "cite_spans": [
                {
                    "start": 38,
                    "end": 42,
                    "text": "[83]",
                    "ref_id": null
                },
                {
                    "start": 63,
                    "end": 67,
                    "text": "[84]",
                    "ref_id": null
                },
                {
                    "start": 101,
                    "end": 105,
                    "text": "[85,",
                    "ref_id": "BIBREF80"
                },
                {
                    "start": 106,
                    "end": 109,
                    "text": "86]",
                    "ref_id": "BIBREF81"
                },
                {
                    "start": 277,
                    "end": 281,
                    "text": "[87,",
                    "ref_id": "BIBREF82"
                },
                {
                    "start": 282,
                    "end": 285,
                    "text": "88]",
                    "ref_id": "BIBREF83"
                },
                {
                    "start": 851,
                    "end": 855,
                    "text": "[89]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Data Collection"
        },
        {
            "text": "The dataset consists of 9989 videos, distributed as movies, series, entertainment, and news categories. Thus, our set is quite heterogeneous, and there is no predominance of video genres that can influence the prediction results. The most viewed video has 75,754 views. As the logs do not automatically record this value, we had to calculate it from the HTTP requests. Thus, all accesses made by the same user to the same video during 30 min count as just one view. This calculation can decrease the number of total views, but it does not interfere with the analysis. Figure 3 shows the complementary cumulative distribution function of probability for the Globoplay videos visualization, presented in log scale. From the graphic, we realize that the curve presents a long-tail behavior, which means that most of the visualizations occur to a small fraction of videos. For instance, only 6% of videos have more than 1000 views, while 50% have less than 20 views. The quartiles of the set of videos were measured, with the third quartile equal to 83. That is, only 25% of the videos have more than 83 views. If we look at videos with more than 1000 views, we will see that they represent just over 6% of the total videos. We can see this information in Figure 3 . Another interesting piece of data are the sum of the views of the videos: 6% of the most popular videos have 85% of the number of views as we can see in Figure 4 . These same videos correspond to 73% of the payload carried in bytes. We can see this information in Figure 5 . In Table 4 , we see that 616 videos with more than 1000 views correspond to 85% of our dataset's total number of views. These data corroborate that few videos concentrate most of the users' attention. Another important fact is that, by adding the videos between 83 and 1000 views (1875) and those with more than 1000 views (616), we get that 25% of our dataset is responsible for 93% of the total bytes transmitted. Thus, when forecasting videos with more than 83 views, we anticipate which videos will use more than 90% of the infrastructure of streaming services. For this reason, when defining the popularity class in our experiments, we will use the value of the third quartile. ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 568,
                    "end": 576,
                    "text": "Figure 3",
                    "ref_id": "FIGREF4"
                },
                {
                    "start": 1252,
                    "end": 1260,
                    "text": "Figure 3",
                    "ref_id": "FIGREF4"
                },
                {
                    "start": 1416,
                    "end": 1424,
                    "text": "Figure 4",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 1527,
                    "end": 1535,
                    "text": "Figure 5",
                    "ref_id": "FIGREF6"
                },
                {
                    "start": 1541,
                    "end": 1548,
                    "text": "Table 4",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "Data Collection"
        },
        {
            "text": "To extract textual features, we used Fernandes et al. [10] as a guide. We tried to get as many similar features as they have as possible. However, due to the difference in information provided by the platforms (they used Mashable [55] while we use Globoplay), we could obtain 35 features from 58 features presented in [10] . Among them, we collected the number of words from the title, and from the description, we collected the number of words, the rate of unique words, the rate of words that are not stopwords, and the number of named entities. In addition to these, we collected the five most relevant topics collected from the descriptions, using the LDA [31] algorithm. The features related to the topics are the proximity of them to each video description. All of these attributes are extracted with Scikit-learn [90], Spacy [91] , and NLTK [92] libraries.",
            "cite_spans": [
                {
                    "start": 54,
                    "end": 58,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 230,
                    "end": 234,
                    "text": "[55]",
                    "ref_id": null
                },
                {
                    "start": 318,
                    "end": 322,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 660,
                    "end": 664,
                    "text": "[31]",
                    "ref_id": null
                },
                {
                    "start": 832,
                    "end": 836,
                    "text": "[91]",
                    "ref_id": null
                },
                {
                    "start": 848,
                    "end": 852,
                    "text": "[92]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Part of the features is related to subjectivity and sentiment polarity. Fernandes et al. [10] use the Pattern software to collect them. As this software does not support the Portuguese language, we use the Microsoft Azure cognitive services API [93] to fetch the Sentimentbased features. The polarity associated with a text sample can be {'positive', 'neutral', 'negative'}; for the use of ML algorithms, we made the following conversion 1 for the positive polarity, \u22121 for negative polarity, and 0 for neutral. Likewise, the value of negative subjectivity is a real number that we multiplied by \u22121 before using the classifiers.",
            "cite_spans": [
                {
                    "start": 89,
                    "end": 93,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 245,
                    "end": 249,
                    "text": "[93]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Textual Features"
        },
        {
            "text": "Using the publication date, it was also possible to obtain the day of the week when the video was published. We include two Boolean features to inform if the day is a Saturday or a Sunday. Table 5 exhibits the set with the 35 textual features. ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 189,
                    "end": 196,
                    "text": "Table 5",
                    "ref_id": "TABREF5"
                }
            ],
            "section": "Textual Features"
        },
        {
            "text": "Word embeddings are dense low-dimension real-valued vector representations for words that are learned from data. Their goal is to capture the semantics of words so that similar words have a similar representation in a vector space. Using word embeddings, one can expect not to rely on the attribute engineering stage, which often requires study and prior knowledge of the content to be predicted. In addition, if there is no knowledge about the texts to be analyzed, it is possible to obtain critical predictive features. As a counterpoint, we have the disadvantage of losing the interpretability of the features.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Word Embeddings"
        },
        {
            "text": "To collect the word embeddings from the title and descriptions, we use Facebook's fastText [94] library for Python, which already comes with a pre-trained model for the Portuguese language. Their algorithm is based on the work of Piotr et al. [20] and Joulin et al. [95] . For each title and description, we first remove the stop words. Then, we run the fastText library and obtain a vector of 300 dimensions to the texts.",
            "cite_spans": [
                {
                    "start": 243,
                    "end": 247,
                    "text": "[20]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 266,
                    "end": 270,
                    "text": "[95]",
                    "ref_id": "BIBREF88"
                }
            ],
            "ref_spans": [],
            "section": "Word Embeddings"
        },
        {
            "text": "The popularity of content is the relationship between an individual item and the users who consume it. Popularity is represented by a metric that defines the number of users attracted by the content, reflecting the online community's interest in this item [8] . Looking at the \"most popular\" videos or texts on the Web, the concept of popularity is intuitively understood. However, it is necessary to define objective metrics to compare two items and define which one is the most popular. Several measures point out which content attracts the most attention on the Web: the number of users willing to consume the item searched. In this work, we will use the number of views as a popularity metric.",
            "cite_spans": [
                {
                    "start": 256,
                    "end": 259,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Classification"
        },
        {
            "text": "The choice of machine learning models to conduct the classification task took into account the work done by Fernandes et al. [10] that selected the most used models in the researched literature. Furthermore, we group ML models into distance-based models (KNN), probabilistic models (Naive Bayes), ensemble models (Random Forest, AdaBoost), and function-based models (SVM and MLP). In this way, our choice tried to cover all these categories for comparison.",
            "cite_spans": [
                {
                    "start": 125,
                    "end": 129,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "Classification"
        },
        {
            "text": "We use six classifiers to determine whether a video will become popular or not before its publication: KNN, Naive Bayes, SVM with a RBF, Random Forest, AdaBoost, and MLP. We performed five experiments to evaluate the effectiveness of these models. In the first experiment, we used only the 35 attributes obtained from Attribute Engineering as presented in Section 6.3. In the second, we used the vectors obtained with the fastText of the video descriptions, and, in the third, the predictive attributes were the word embeddings of the titles. In the last two experiments, we concatenate all the features. When combining the features engineered from the texts with the word embeddings, we reduce the dimension of the 300-dimension vector to 35 using the PCA and normalize all of them together. In this way, the 35 textual features do not lose representativeness given many features of the embeddings vectors.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Classification"
        },
        {
            "text": "As presented in most literature, we use a binary classification task in which a video is either popular or unpopular. We used the third quartile to define popularity in such a way that the goal was to find 25% of the most popular videos in our set. Our dataset has popular videos with 25% of the total and unpopular videos with 75%.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Classification"
        },
        {
            "text": "In our experimental evaluation, we used six classifiers to analyze the results. The entire implementation was carried out in Python using the Scikit-learn library. After extracting the features, we have three datasets. The first has the 35 predictive textual attributes that we will call d_NLP. The dataset called d_Descriptions has the word embeddings of the video descriptions with 300 dimensions. Our third dataset brings the embeddings collected from the title vectors called d_Titles, also with 300 dimensions. The objectives of our experiments are to answer the following questions:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results"
        },
        {
            "text": "Does the video's description contain information that a machine learning classifier can use to predict the popularity? 2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "1."
        },
        {
            "text": "How do the word embeddings features compare to attribute engineering in terms of the performance of the popularity forecast?",
            "cite_spans": [],
            "ref_spans": [],
            "section": "1."
        },
        {
            "text": "In all experiments, we follow a 10-fold cross-validation procedure to collect the predictive results. We balance the training set at each round of the cross-validation procedure with the Synthetic Minority Oversampling Technique (SMOTE) [96] algorithm implemented at imbalanced-learn [97] library. Similarly to Fernandes et al. [10] , we performed GridSearch to find the best value for some hyperparameters for each ML classifier, namely, the number of trees for Random Forest and AdaBoost, the C trade-off parameter for SVM, the number of neighbors for KNN, and the number of hidden layers and their neurons.",
            "cite_spans": [
                {
                    "start": 237,
                    "end": 241,
                    "text": "[96]",
                    "ref_id": "BIBREF89"
                },
                {
                    "start": 284,
                    "end": 288,
                    "text": "[97]",
                    "ref_id": "BIBREF90"
                },
                {
                    "start": 328,
                    "end": 332,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "1."
        },
        {
            "text": "To evaluate the predictive power of classifiers, we compute accuracy, precision, recall, and F-measure. Accuracy is defined in Equation (2). This metric is the complement of Error Rate, or incorrect classifications, presented in Equation (3).f is the classifier, y i the known class of x i andf (x i ) the predicted class, \u03b4(y i ,f (x i ) = 1 if y i =f (x i ) is true and 0, otherwise. With a problem of two classes, where one is popular content and the other unpopular, it is possible to present the Error Rate in a more understandable way as in Equation (4). As in the case of popularity prediction, popular content is in the minority. The algorithms that classify the content as unpopular tend to have better accuracy. In this context, it is worse to have many false negatives.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "1."
        },
        {
            "text": "Precision is defined in Equation (5), which presents the proportion of positive examples correctly classified among all those predicted as positive. Recall is defined in Equation (6), which corresponds to the hit rate in the positive class. In the Equations (5) and 6, TP is the number of true positives, FP are the false positives, and FN is the number of false negatives.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "1."
        },
        {
            "text": "The precision indicates the accuracy of the model, while the recall indicates completeness. Analyzing only the precision, it is not possible to know how many examples were not classified correctly. With the recall, it is not possible to find out how many examples were classified incorrectly. Thus, we usually compute the F-measure, which is the weighted harmonic mean of precision and recall. In Equation (7), w is the weight that weighs the importance of precision and recall. With weight 1, the degree of importance is the same for both metrics. The measure F 1 is presented in Equation (8).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "1."
        },
        {
            "text": "To answer the first question, we used d_NLP with the six classifiers to check the textual data popularity prediction performance. This experiment is the baseline of the analysis. The results are summarized in Table 6 . The Random Forest (RF) classifier achieved the highest accuracy and F1-Score. In contrast, SVM showed high accuracy, but analyzing the accuracy, we found that the hit rate was satisfactory among those that the model claimed to be popular. When we looked at the very low recall, we noticed that several instances were FN cases. We calculated the importance of the features for the Random Forest model and listed the top-five in order of importance in Table 7 . We found that the sentiment analysis features directly impact the popularity prediction. We still see the closeness to topic 2 of the LDA among the essential features. Below, we see the top ten words of the topic: We found that these words refer to the reality show Big Brother Brasil 21, which started showing on 25 January 2021, and is very popular in Brazil. When checking the 20 most viewed videos in our dataset, only one (the 20th) does not refer to this program. It makes sense that this topic is one of the most relevant to popularity prediction with so many popular videos.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 209,
                    "end": 216,
                    "text": "Table 6",
                    "ref_id": "TABREF6"
                },
                {
                    "start": 669,
                    "end": 676,
                    "text": "Table 7",
                    "ref_id": "TABREF7"
                }
            ],
            "section": "Experimenting with Feature Engineered Textual Attributes"
        },
        {
            "text": "Using the dataset d_Descriptions, we observed that the MLP is the best model, but the accuracy decreased, and the result of the F1-Score decreased by approximately 10%. We also note that other models have suffered performance reductions. We found that attribute engineering better builds good predictive models when looking at the descriptions. The word embeddings probably capture much information contained within the description that is not related to the video popularity. Table 8 shows the results of the second experiment. In this experiment, we use the word embeddings obtained from the titles of the videos. The best model continues to be the RF, with an increase of 2.5% accuracy and 4.05% over the first experiment. This result contrasts with using the embeddings of the descriptions. In addition, we noticed that RF, SVM, KNN, and MLP increased performance. In the case of SVM, we had a significant improvement in all metrics. The good performance of MLP can be credited to the numerical nature of the embeddings that may provide features better suited to these models. Despite this, the AdaBoost and Naive Bayes models showed deterioration in the performance. As the 300 features represent the same title, they are not independent of each other, significantly affecting the Naive Bayes algorithm. However, for the AdaBoost algorithm, we expected an improvement close to that observed in the RF. The results can be seen in Table 9 . In this experiment, we concatenate the d_NLP and d_Titles datasets. Before the concatenation, we used the PCA to reduce the dimensions of d_Titles from 300 to 35, so the concatenated dataset was left with 70 predictive features. Random Forest remains the best model reaching an accuracy of 87%. Compared to the baseline, the SVM, RF, AdaBoost, and MLP models also improve. The SVM model achieved a precision of 88%, but the Recall was reduced, which means an increase in FN. The combination of traditional features with word embeddings provided a performance increase of 10% compared to baseline. Combining an effective engineering analysis of attributes with the representation offered by word embeddings provides us with an effective model for predicting popularity. The results are in Table 10 . ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 477,
                    "end": 484,
                    "text": "Table 8",
                    "ref_id": "TABREF8"
                },
                {
                    "start": 1434,
                    "end": 1441,
                    "text": "Table 9",
                    "ref_id": "TABREF9"
                },
                {
                    "start": 2232,
                    "end": 2240,
                    "text": "Table 10",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Experimenting with the Word Embeddings of the Descriptions"
        },
        {
            "text": "In this last experiment, we concatenated all three datasets. The dimensions of d_Titles and d_Descriptions have been reduced to 35 each, so the concatenated dataset has 105 predictive features. Although there was an increase in the performance compared to the baseline, the results found with this experiment were similar to the fourth experiment. One of the main conclusions is that the word embeddings of the description holds more generic information that do not help the classifiers. On the other hand, as seen before, the representation obtained by fastText from the video titles substantially improves the performance of the models. The results are in Table 11 . ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 658,
                    "end": 666,
                    "text": "Table 11",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Joining Textual Engineered Attributes and Word Embeddings"
        },
        {
            "text": "This manuscript presented a review of the state-of-the-art and a real-world application to predict the popularity of content on the web using AI. Since it is not a trivial task, several strategies and models have been developed to determine which content attracts users' attention on the Internet. Among them, selecting predictive attributes plays a central role in the performance of the models. We present a brief description of the theoretical foundation necessary to understand the theories, algorithms, methods, and results. We also defined a taxonomy for the classification of methods based on the tasks performed and according to attributes' choice. The use of NLP to extract features, in general, provided the best results [10, [14] [15] [16] . In addition to the textual information, the models also leverage metadata provided by the website that publishes the content. With the advance of DNN, it has become straightforward to extract attributes directly from the visual information of the images and videos.",
            "cite_spans": [
                {
                    "start": 731,
                    "end": 735,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 736,
                    "end": 740,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 741,
                    "end": 745,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 746,
                    "end": 750,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "The use of the popularity prediction for content optimization is still largely untapped and has enormous potential. The systems could suggest changes to the content using the predictors to see an upward trend in popularity. The primary beneficiaries of such an approach would be the creators of content that would increase the chances of attracting attention in the immensity of information that is the Internet [10] . We see that the classification algorithms worked better using textual attributes [13, 16] . At the same time, the regressors obtained good results with metadata as attributes [22, 23] . It is crucial to take this trend into account when developing new predictive models. Another venue that deserves further investigation is the use of different attributes and the extraction of features from multiple sources.",
            "cite_spans": [
                {
                    "start": 412,
                    "end": 416,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 500,
                    "end": 504,
                    "text": "[13,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 505,
                    "end": 508,
                    "text": "16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 594,
                    "end": 598,
                    "text": "[22,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 599,
                    "end": 602,
                    "text": "23]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "The selection of predictive attributes uses NLP methods extensively. We can mention the sentiment analysis task, NER, topic modeling with classic LDA, and the removal of stopwords. Among the ML algorithms, the ensemble methods proved to be more appropriate to the context of the popularity prediction. The ensemble methods successfully used by researchers were Random Forest, Bagging, and Gradient Boosting. In addition to these, traditional methods such as Naive Bayes, SVM, and KNN are often used as baselines. SVM still works as a basis for several methods that group the items according to the similarity of the evolution of popularity as in Trzcinski and Rokita [9] .",
            "cite_spans": [
                {
                    "start": 667,
                    "end": 670,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "After reviewing several previous works about the task of popularity prediction over web content, we can point out the importance of carefully choosing the attributes. The selection of attributes directly influences the performance of the predictive models, as we can see in Tables 1 and 2 . Still, defining attributes remains manual and with a closed goal of proving the hypotheses listed by the researchers. As a consequence, an exciting venue for further investigation is the automatic generation and selection of features with deep representation learning methods.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 274,
                    "end": 288,
                    "text": "Tables 1 and 2",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Discussion"
        },
        {
            "text": "Predicting the popularity of web content has practical applications, for example, maximizing the return on marketing investment [8] , proactively allocating network resources, fine-tuning them to future demands [9] and selecting the best content for a target audience [10, 11] . Despite the development of research in this area and the sophisticated models presented, there are still several fields to be explored, such as content optimization, exploitation of data from social networks, and adaptation of real-world information to ML models.",
            "cite_spans": [
                {
                    "start": 128,
                    "end": 131,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 211,
                    "end": 214,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 268,
                    "end": 272,
                    "text": "[10,",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 273,
                    "end": 276,
                    "text": "11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "As a case study, we analyzed six ML models to predict the popularity of videos from the most prominent streaming provider in Latin America. The dataset analyzed was obtained from Globoplay's HTTP request logs. It has 9989 videos from the period from 25 January 2021 to 1 March 2021. The features used were primarily textual obtained from the titles and descriptions of the videos. We analyzed two different approaches to getting features: the first was to perform attribute engineering and obtain predictive attributes using NLP techniques; the second was representation learning, bringing features automatically through word embeddings. Finally, in the last experiments, we mixed the two approaches to see if there is an improvement when joining those features. The Random Forest model achieved the best results among those analyzed, obtaining an accuracy of 87% and F1-Score of 82% when used to combine the word embeddings of the titles and the attributes obtained through NLP. Among the features analyzed, we found that those associated with the polarity of words are the ones that most contribute to the popularity prediction. The description of the videos contributes significantly to popularity prediction when we use the feature engineering approach. Still, when we use fastText to get the word embeddings, we have had a substantial worsening in the performance of the classifiers.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "As future work, we suggest associating textual features with visual features, for example, obtained through the thumbnails provided in the videos. In addition, it is possible to look for new ways to calculate the word embeddings of the descriptions trying to improve performance. Another exciting direction would be to understand the reason for reducing AdaBoost performance when using word embeddings from the video descriptions. Another exciting contribution would be to build a model that incorporates information from the offline world to predict the popularity of online content. There is clear evidence of the significant influence of real-world events on content popularity. For example, in 2020, 300 million people accessed the Internet for the first time due to the impacts caused by COVID-19 [3] . However, it is not easy to incorporate this information into predictive models. One suggestion would be to monitor social networks and news sites, incorporating specific attributes at the prediction time.",
            "cite_spans": [
                {
                    "start": 802,
                    "end": 805,
                    "text": "[3]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "Finally, we emphasize that we made all predictions with features obtained before the videos are published. In this way, the built predictive model can be used for the correct dimensioning of the network infrastructures and assist in directing marketing costs. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "The authors wish to thank Globo.com for the collaboration giving access to the data center log.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Acknowledgments:"
        },
        {
            "text": "The authors declare no conflict of interest.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conflicts of Interest:"
        },
        {
            "text": "The following abbreviations are used in this manuscript: ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abbreviations"
        }
    ],
    "bib_entries": {
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Statistics & Facts that Define the Company's Dominance in 2021",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Cook",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Netflix",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Number of SVoD Subscribers 2020, by Country. 2020. Available online",
            "authors": [
                {
                    "first": "",
                    "middle": [
                        "Latin"
                    ],
                    "last": "Statista",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "America",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Number of Subscribers 2020. 2020. Available online",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Statista",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Globoplay",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "How Brazilian TV Giant Globo Is Planning to Compete with Netflix and Amazon in the Streaming War",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Grater",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "A survey on predicting the popularity of web content",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Tatar",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "D"
                    ],
                    "last": "De Amorim",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Fdida",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Antoniadis",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "J. Internet Serv. Appl",
            "volume": "5",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1186/s13174-014-0008-y"
                ]
            }
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Predicting Popularity of Online Videos Using Support Vector Regression",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Tomasz",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Przemyslaw",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Trans. Multimed",
            "volume": "19",
            "issn": "",
            "pages": "2561--2570",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "A Proactive Intelligent Decision Support System for Predicting the Popularity of Online News",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Kelwin",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Pedro",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Paulo",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "In Progress in Artificial Intelligence",
            "volume": "9273",
            "issn": "",
            "pages": "535--546",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Recurrent Neural Networks for Online Video Popularity Prediction",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Trzci\u0144ski",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Andruszkiewicz",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Boche\u0144ski",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Rokita",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "International Symposium on Methodologies for Intelligent Systems",
            "volume": "10352",
            "issn": "",
            "pages": "146--153",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Towards a predictive cache replacement strategy for multimedia content",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Famaey",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Iterbeke",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Wauters",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "De Turck",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "J. Netw. Comput. Appl",
            "volume": "36",
            "issn": "",
            "pages": "219--227",
            "other_ids": {
                "DOI": [
                    "10.1016/j.jnca.2012.08.014"
                ]
            }
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "The Pulse of News in Social Media: Forecasting Popularity",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Roja",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Sitaram",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Bernardo",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Proceedings of the International AAAI Conference on Web and Social Media-ICWSM 2012",
            "volume": "6",
            "issn": "",
            "pages": "17--20",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Predicting IMDB Movie Ratings Using Social Media",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Oghina",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Breuss",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Tsagkias",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "De Rijke",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Advances in Information Retrieval",
            "volume": "7224",
            "issn": "",
            "pages": "503--507",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Predicting the Popularity of Online News Based on Multivariate Analysis",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Dong",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Proceedings of the 2017 International Conference on Computer and Information Technology(ICCIT)",
            "volume": "",
            "issn": "",
            "pages": "9--15",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "News Popularity Prediction with Ensemble Methods of Classification",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Khan",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Worah",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Kothari",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [
                        "H"
                    ],
                    "last": "Jadhav",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "V"
                    ],
                    "last": "Nimkar",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Proceedings of the 2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)",
            "volume": "",
            "issn": "",
            "pages": "1--6",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Efficient Estimation of Word Representations in Vector Space",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Mikolov",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Corrado",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Dean",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Proceedings of the International Conference on Learning Representations(ICLR 2013)",
            "volume": "",
            "issn": "",
            "pages": "1--12",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Enriching Word Vectors with Subword Information",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Bojanowski",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Grave",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Joulin",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Mikolov",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Trans. Assoc. Comput. Linguist",
            "volume": "5",
            "issn": "",
            "pages": "135--146",
            "other_ids": {
                "DOI": [
                    "10.1162/tacl_a_00051"
                ]
            }
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "What makes an image popular?",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Khosla",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Das Sarma",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Hamid",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Proceedings of the 23rd International Conference on World Wide Web-(WWW'14)",
            "volume": "",
            "issn": "",
            "pages": "867--876",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Predicting the popularity of online content",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Szabo",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [
                        "A"
                    ],
                    "last": "Huberman",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "Commun. ACM",
            "volume": "53",
            "issn": "",
            "pages": "80--88",
            "other_ids": {
                "DOI": [
                    "10.1145/1787234.1787254"
                ]
            }
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Using Early View Patterns to Predict the Popularity of Youtube videos",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Pinto",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "M"
                    ],
                    "last": "Almeida",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "A"
                    ],
                    "last": "Gon\u00e7alves",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "6th ACM International Conference on Web Search and Data Mining",
            "volume": "",
            "issn": "",
            "pages": "4--8",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "A Survey of Information Cascade Analysis",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Trajcevski",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "ACM Comput. Surv",
            "volume": "54",
            "issn": "",
            "pages": "1--36",
            "other_ids": {
                "DOI": [
                    "10.1145/3433000"
                ]
            }
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "A review on web content popularity prediction: Issues and open challenges",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Moniz",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Torgo",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "12",
            "issn": "",
            "pages": "1--20",
            "other_ids": {
                "DOI": [
                    "10.1016/j.osnem.2019.05.002"
                ]
            }
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Speech & Language Processing",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Jurafsky",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "A Neural Probabilistic Language Model",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Bengio",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Ducharme",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Vincent",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Janvin",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "J. Mach. Learn. Res",
            "volume": "3",
            "issn": "",
            "pages": "1137--1155",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Machine Learning Approach for Sentiment Analysis. In Prominent Feature Extraction for Sentiment Analysis",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Agarwal",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Mittal",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Gram Language Models for Offline Handwritten Text Recognition",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Zimmermann",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Bunke",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "Proceedings of the Ninth International Workshop on Frontiers in Handwriting Recognition",
            "volume": "",
            "issn": "",
            "pages": "26--29",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "Locating Complex Named Entities in Web Text",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Downey",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Broadhead",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Etzioni",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "20th International Joint Conference on Artificial Intelligence",
            "volume": "",
            "issn": "",
            "pages": "6--12",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "Incorporating non-local information into information extraction systems by Gibbs sampling",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "R"
                    ],
                    "last": "Finkel",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Grenager",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "D"
                    ],
                    "last": "Manning",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics-(ACL'05)",
            "volume": "",
            "issn": "",
            "pages": "363--370",
            "other_ids": {}
        },
        "BIBREF35": {
            "ref_id": "b35",
            "title": "Handbook of Natural Language Processing",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Indurkhya",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Damerau",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF37": {
            "ref_id": "b37",
            "title": "Robust dynamic classes revealed by measuring the response function of a social system",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Crane",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Sornette",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Proc. Natl. Acad. Sci",
            "volume": "105",
            "issn": "",
            "pages": "15649--15653",
            "other_ids": {
                "DOI": [
                    "10.1073/pnas.0803685105"
                ]
            }
        },
        "BIBREF38": {
            "ref_id": "b38",
            "title": "Predicting the Top-N Popular Videos via a Cross-Domain Hybrid Model",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Trans. Multimed",
            "volume": "21",
            "issn": "",
            "pages": "147--156",
            "other_ids": {
                "DOI": [
                    "10.1109/TMM.2018.2845688"
                ]
            }
        },
        "BIBREF39": {
            "ref_id": "b39",
            "title": "Engagement and Popularity Dynamics of YouTube Videos and Sensitivity to Meta-Data",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "Hoiles",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Anup",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Krishnamurthy",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Trans. Knowl. Data Eng",
            "volume": "29",
            "issn": "",
            "pages": "1426--1437",
            "other_ids": {
                "DOI": [
                    "10.1109/TKDE.2017.2682858"
                ]
            }
        },
        "BIBREF40": {
            "ref_id": "b40",
            "title": "Hybrid machine learning approach for popularity prediction of newly released contents of online video streaming services",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Jeon",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Seo",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Park",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Choi",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Technol. Forecast. Soc. Chang",
            "volume": "161",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/j.techfore.2020.120303"
                ]
            }
        },
        "BIBREF41": {
            "ref_id": "b41",
            "title": "Are Most-Viewed News Articles Most-Shared?",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Yao",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Proceedings of the Conference: Asia Information Retrieval Symposium (AIRS)",
            "volume": "8281",
            "issn": "",
            "pages": "404--415",
            "other_ids": {}
        },
        "BIBREF43": {
            "ref_id": "b43",
            "title": "YouTube by the Numbers",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Aslam",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF44": {
            "ref_id": "b44",
            "title": "Characterizing and modelling popularity of user-generated videos",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Borghol",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Mitra",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ardon",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Carlsson",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Eager",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Mahanti",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Perform. Eval",
            "volume": "68",
            "issn": "",
            "pages": "1037--1055",
            "other_ids": {
                "DOI": [
                    "10.1016/j.peva.2011.07.008"
                ]
            }
        },
        "BIBREF45": {
            "ref_id": "b45",
            "title": "Predicting the popularity of online news from content metadata",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "T"
                    ],
                    "last": "Uddin",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "J A"
                    ],
                    "last": "Patwary",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Ahsan",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "S"
                    ],
                    "last": "Alam",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Proceedings of the 2016 International Conference on Innovations in Science, Engineering and Technology (ICISET)",
            "volume": "",
            "issn": "",
            "pages": "1--5",
            "other_ids": {}
        },
        "BIBREF46": {
            "ref_id": "b46",
            "title": "What Makes Online Content Viral?",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Berger",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "L"
                    ],
                    "last": "Milkman",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "J. Mark. Res. (JMR)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF48": {
            "ref_id": "b48",
            "title": "The use of the area under the ROC curve in the evaluation of machine learning algorithms",
            "authors": [
                {
                    "first": "A",
                    "middle": [
                        "P"
                    ],
                    "last": "Bradley",
                    "suffix": ""
                }
            ],
            "year": 1997,
            "venue": "Pattern Recognit",
            "volume": "30",
            "issn": "",
            "pages": "1145--1159",
            "other_ids": {
                "DOI": [
                    "10.1016/S0031-3203(96)00142-2"
                ]
            }
        },
        "BIBREF50": {
            "ref_id": "b50",
            "title": "A Sentimental Education: Sentiment Analysis Using Subjectivity Summarization Based on Minimum Cuts",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Pang",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics-(ACL'04)",
            "volume": "",
            "issn": "",
            "pages": "271--278",
            "other_ids": {}
        },
        "BIBREF54": {
            "ref_id": "b54",
            "title": "Creative Web Services with Pattern",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "De Smedt",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Nijs",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Daelemans",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Proceedings of the Fifth International Conference on Computational Creativity (ICCC)",
            "volume": "",
            "issn": "",
            "pages": "344--346",
            "other_ids": {}
        },
        "BIBREF56": {
            "ref_id": "b56",
            "title": "A Coefficient of Agreement for Nominal Scales",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Cohen",
                    "suffix": ""
                }
            ],
            "year": 1960,
            "venue": "Educ. Psychol. Meas",
            "volume": "20",
            "issn": "",
            "pages": "37--46",
            "other_ids": {
                "DOI": [
                    "10.1177/001316446002000104"
                ]
            }
        },
        "BIBREF57": {
            "ref_id": "b57",
            "title": "Long-term Recurrent Convolutional Networks for Visual Recognition and Description",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "A"
                    ],
                    "last": "Donahue",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Hendricks",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Guadarrama",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Rohrbach",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Venugopalan",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Saenko",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Darrell",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "IEEE Trans. Pattern Anal. Mach. Intell",
            "volume": "39",
            "issn": "",
            "pages": "677--691",
            "other_ids": {
                "DOI": [
                    "10.1109/TPAMI.2016.2599174"
                ]
            }
        },
        "BIBREF59": {
            "ref_id": "b59",
            "title": "Histograms of oriented gradients for human detection",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Dalal",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Triggs",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "Proceedings of the 2005 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'05)",
            "volume": "1",
            "issn": "",
            "pages": "886--893",
            "other_ids": {}
        },
        "BIBREF60": {
            "ref_id": "b60",
            "title": "Evaluation of GIST descriptors for web-scale image search. nt",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Douze",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [
                        "; S"
                    ],
                    "last": "J\u00e9gou",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Hawalia",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Amsaleg",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Schmid",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "Conf. Image Video Retro",
            "volume": "1",
            "issn": "",
            "pages": "1--8",
            "other_ids": {}
        },
        "BIBREF62": {
            "ref_id": "b62",
            "title": "Deep residual learning for image recognition",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ren",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Proceedings of the 2016 IEEE Conference on Computer Vision and Pattern Recognition",
            "volume": "",
            "issn": "",
            "pages": "770--778",
            "other_ids": {}
        },
        "BIBREF64": {
            "ref_id": "b64",
            "title": "Capturing global mood levels using blog posts",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Mishne",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "De Rijke",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "AAAI Spring Symposium-Technical Report",
            "volume": "",
            "issn": "",
            "pages": "145--152",
            "other_ids": {}
        },
        "BIBREF66": {
            "ref_id": "b66",
            "title": "Unbiased Recursive Partitioning: A Conditional Inference Framework",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Hothorn",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Hornik",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Zeileis",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "J. Comput. Graph. Stat",
            "volume": "15",
            "issn": "",
            "pages": "651--674",
            "other_ids": {
                "DOI": [
                    "10.1198/106186006X133933"
                ]
            }
        },
        "BIBREF67": {
            "ref_id": "b67",
            "title": "Bio-inspired Models for characterizing YouTube viewcount",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Richier",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Altman",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Elazouzi",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Jimenez",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Linares",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Portilla",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Proceedings of the IEEE/ACM International Conference on Advances in Social Networks Analysis anda Mining (ASONAM 2014)",
            "volume": "",
            "issn": "",
            "pages": "297--305",
            "other_ids": {}
        },
        "BIBREF69": {
            "ref_id": "b69",
            "title": "Proceedings of the 2013 IEEE Conference on Computer Vision and Pattern Recognition",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Khan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Van De Weijer",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "F"
                    ],
                    "last": "Shahbaz",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Muselet",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Ducottet",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Barat",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Discriminative Color",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Descriptor",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "2866--2873",
            "other_ids": {}
        },
        "BIBREF70": {
            "ref_id": "b70",
            "title": "Multiresolution Gray-Scale and Rotation Invariant Texture classification with Local Binary Patterns",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Ojala",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Pietikainen",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Maenpaa",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "IEEE Trans. Pattern Anal. Mach. Intell",
            "volume": "24",
            "issn": "",
            "pages": "971--987",
            "other_ids": {
                "DOI": [
                    "10.1109/TPAMI.2002.1017623"
                ]
            }
        },
        "BIBREF71": {
            "ref_id": "b71",
            "title": "Imagenet classification with Deep Convolutional Neural Networks",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Krizhevsky",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Sutskever",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Hinton",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Adv. Neural Inf. Process. Syst",
            "volume": "25",
            "issn": "",
            "pages": "1097--1105",
            "other_ids": {
                "DOI": [
                    "10.1145/3065386"
                ]
            }
        },
        "BIBREF72": {
            "ref_id": "b72",
            "title": "Automatic shot boundary detection combining color, edge, and motion features of adjacent frames",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Jacobs",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Miene",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "T"
                    ],
                    "last": "Ioannidis",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Herzog",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "TRECVID 2004 Workshop Notebook Papers",
            "volume": "",
            "issn": "",
            "pages": "197--206",
            "other_ids": {}
        },
        "BIBREF73": {
            "ref_id": "b73",
            "title": "A Computational Approach to Edge Detection",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Canny",
                    "suffix": ""
                }
            ],
            "year": 1986,
            "venue": "IEEE Trans. Pattern Anal. Mach. Intell",
            "volume": "8",
            "issn": "",
            "pages": "679--698",
            "other_ids": {
                "DOI": [
                    "10.1109/TPAMI.1986.4767851"
                ]
            }
        },
        "BIBREF74": {
            "ref_id": "b74",
            "title": "Faster and better: A machine learning approach to corner detection",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Rosten",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Porter",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Drummond",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "IEEE Trans. Pattern Anal. Mach. Intell",
            "volume": "32",
            "issn": "",
            "pages": "105--119",
            "other_ids": {
                "DOI": [
                    "10.1109/TPAMI.2008.275"
                ]
            }
        },
        "BIBREF75": {
            "ref_id": "b75",
            "title": "BRIEF: Computing a Local Binary Descriptor Very Fast",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Calonder",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Lepetit",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ozuysal",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Trzcinski",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Strecha",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Fua",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "IEEE Trans. Pattern Anal. Mach. Intell",
            "volume": "34",
            "issn": "",
            "pages": "1281--1298",
            "other_ids": {
                "DOI": [
                    "10.1109/TPAMI.2011.222"
                ]
            }
        },
        "BIBREF76": {
            "ref_id": "b76",
            "title": "Downlink: Machine Learning-Based Quality Prediction for HTTP Adaptive Video Streaming",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Loh",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Poign\u00e9e",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Wamser",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Leidinger",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Ho\u00dffeld",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Uplink",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Vs",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Sensors",
            "volume": "21",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.3390/s21124172"
                ]
            }
        },
        "BIBREF77": {
            "ref_id": "b77",
            "title": "A New Cache Update Scheme Using Reinforcement Learning for Coded Video Streaming Systems",
            "authors": [
                {
                    "first": "Y",
                    "middle": [
                        "S"
                    ],
                    "last": "Kim",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "M"
                    ],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "Y"
                    ],
                    "last": "Ryu",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [
                        "W"
                    ],
                    "last": "Ban",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.3390/s21082867"
                ]
            }
        },
        "BIBREF80": {
            "ref_id": "b80",
            "title": "A First Look at Mobile-Live-Users of a Large CDN",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "V C"
                    ],
                    "last": "Da Silva",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "A"
                    ],
                    "last": "De Augusto Rocha",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "B"
                    ],
                    "last": "Velloso",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "D M"
                    ],
                    "last": "Domingues",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Proceedings of the 23rd Brazillian Symposium on Multimedia and the Web",
            "volume": "",
            "issn": "",
            "pages": "81--84",
            "other_ids": {
                "DOI": [
                    "10.1145/3126858.3131565"
                ]
            }
        },
        "BIBREF81": {
            "ref_id": "b81",
            "title": "Analysis of Mobile-Live-Users of a Large CDN",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "V C"
                    ],
                    "last": "Da Silva",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "De Melo Baptista Domingues",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "B"
                    ],
                    "last": "Velloso",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "A"
                    ],
                    "last": "De Arag\u00e3o Rocha",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Proceedings of the 2018 IEEE Symposium on Computers and Communications",
            "volume": "",
            "issn": "",
            "pages": "946--951",
            "other_ids": {
                "DOI": [
                    "10.1109/ISCC.2018.8538704"
                ]
            }
        },
        "BIBREF82": {
            "ref_id": "b82",
            "title": "Using data mining techniques to extract key factors in Mobile live streaming",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "V"
                    ],
                    "last": "Correa Da Silva",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "B"
                    ],
                    "last": "Velloso",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "A"
                    ],
                    "last": "De Arag\u00e3o Rocha",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the 2019 IEEE Symposium on Computers and Communications (ISCC)",
            "volume": "",
            "issn": "",
            "pages": "1--6",
            "other_ids": {
                "DOI": [
                    "10.1109/ISCC47284.2019.8969600"
                ]
            }
        },
        "BIBREF83": {
            "ref_id": "b83",
            "title": "Mobile vs. Non-Mobile Live-Streaming: A Comparative Analysis of Users Engagement and Interruption Using Big Data from a Large CDN Perspective",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "V C"
                    ],
                    "last": "Da Silva",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "A D A"
                    ],
                    "last": "Rocha",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "B"
                    ],
                    "last": "Velloso",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Sensors",
            "volume": "21",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.3390/s21165616"
                ]
            }
        },
        "BIBREF88": {
            "ref_id": "b88",
            "title": "Bag of Tricks for Efficient Text Classification",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Arm",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Edouard",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Piotr",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Tomas",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Proceedings of the 15th Conferenceof the European Chapter of the Association for Computational Linguistics",
            "volume": "2",
            "issn": "",
            "pages": "427--431",
            "other_ids": {}
        },
        "BIBREF89": {
            "ref_id": "b89",
            "title": "Synthetic Minority Over-sampling Technique",
            "authors": [
                {
                    "first": "N",
                    "middle": [
                        "V"
                    ],
                    "last": "Chawla",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "W"
                    ],
                    "last": "Bowyer",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "O"
                    ],
                    "last": "Hall",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "P"
                    ],
                    "last": "Kegelmeyer",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Smote",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "J. Artif. Intell. Res",
            "volume": "16",
            "issn": "",
            "pages": "321--357",
            "other_ids": {
                "DOI": [
                    "10.1613/jair.953"
                ]
            }
        },
        "BIBREF90": {
            "ref_id": "b90",
            "title": "Imbalanced-learn: A Python Toolbox to Tackle the Curse of Imbalanced Datasets in Machine Learning",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Lema\u00eetre",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Nogueira",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "K"
                    ],
                    "last": "Aridas",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "J. Mach. Learn. Res",
            "volume": "18",
            "issn": "",
            "pages": "1--5",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF1": {
            "text": "Taxonomy according to the prediction methods and attributes used.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Example of the ROC curve.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "\u2022 Deep Features. A 152-layer convolutional neural network called ResNet-152[66] was used. For each video, a set of thumbnails per scene was extracted and propagated through ResNet-152. The output obtained was a vector of 1000 dimensions. This vector has been normalized resulting in a single value.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Complementary cumulative distribution function of number of views in log scale.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Percentage of total views separated by five classes of number of views.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Percentage of total payload separated by five classes of number of views.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "FP are false positives, examples belonging to the unpopular class classified as popular and FN are false negatives, examples belonging to the popular class that are classified as unpopular.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "Top Words: ['conk\u00e1', 'arthur', 'gilberto', 'l\u00edder', 'karol', 'sarah', 'brothers', 'tieta', 'casa', 'bbb21']",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "Contributions: This work is the result of the research and studies of the graduate student S.L.d.S. under the supervision of professors A.A.d.A.R. and A.P. S.L.d.S.'s responsibilities were coding, obtaining and analyzing the results, and writing the article with the professors. A.A.d.A.R. and A.P. were responsible for supervising the achievement of results and proposing the experimental methodology. They were interpreting and analyzing the results and participating in the writing and review of the paper. A.A.d.A.R. was responsible for managing the data assignment contract with GloboPlay. All authors have read and agreed to the published version of the manuscript. Funding: This work is partially funded by CAPES, FAPESP (grant 2015/24144-7), FAPERJ and CNPq. Institutional Review Board Statement: Not applicable. Informed Consent Statement: Not applicable.",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "Studies classified according to Taxonomy.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "Performance of models.",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "Features observed in literature.",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "Number of videos with corresponding percentage of total views and total payload.",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "Textual features collected from the title and the description of Globoplay.",
            "latex": null,
            "type": "table"
        },
        "TABREF6": {
            "text": "Classification Results Features NLP.",
            "latex": null,
            "type": "table"
        },
        "TABREF7": {
            "text": "The five most important features in RF Model.",
            "latex": null,
            "type": "table"
        },
        "TABREF8": {
            "text": "Classification Results Embeddings Descriptions.7.3. Experimenting with the Word Embeddings of the Title",
            "latex": null,
            "type": "table"
        },
        "TABREF9": {
            "text": "Classification Results Embeddings Titles. Joining Textual Engineered Attributes and Word Embeddings from the Titles",
            "latex": null,
            "type": "table"
        },
        "TABREF10": {
            "text": "Classification Results NLP + Titles.",
            "latex": null,
            "type": "table"
        },
        "TABREF11": {
            "text": "Classification Results Total Features.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}