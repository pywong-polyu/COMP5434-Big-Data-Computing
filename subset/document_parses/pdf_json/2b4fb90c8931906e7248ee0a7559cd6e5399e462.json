{
    "paper_id": "2b4fb90c8931906e7248ee0a7559cd6e5399e462",
    "metadata": {
        "title": "Case study of SARS-CoV-2 transmission risk assessment in indoor environments using cloud computing resources",
        "authors": [
            {
                "first": "Kumar",
                "middle": [],
                "last": "Saurabh",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Masado",
                "middle": [],
                "last": "Ishii",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": "masado@cs.utah.edu"
            },
            {
                "first": "Hari",
                "middle": [],
                "last": "Sundar",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Santi",
                "middle": [],
                "last": "Adavani",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Boshun",
                "middle": [],
                "last": "Gao",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": "boshun@iastate.edu"
            },
            {
                "first": "Kendrick",
                "middle": [],
                "last": "Tan",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Adarsh",
                "middle": [],
                "last": "Krishnamurthy",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": "adarsh@iastate.edu"
            },
            {
                "first": "Baskar",
                "middle": [],
                "last": "Ganapathysubramanian",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Iowa State University",
                    "location": {}
                },
                "email": "baskarg@iastate.edu"
            }
        ]
    },
    "abstract": [
        {
            "text": "Complex flow simulations are conventionally performed on HPC clusters. However, the limited availability of HPC resources and steep learning curve of executing on traditional supercomputer infrastructure has drawn attention towards deploying flow simulation software on the cloud. We showcase how a complex computational framework-that can evaluate COVID-19 transmission risk in various indoor classroom scenarios-can be abstracted and deployed on cloud services. The availability of such cloud-based personalized planning tools can enable educational institutions, medical institutions, public sector workers (courthouses, police stations, airports, etc.), and other entities to comprehensively evaluate various in-person interaction scenarios for transmission risk. We deploy the simulation framework on the Azure cloud framework, utilizing the DENDRO-KT mesh generation tool and PETSc solvers. The cloud abstraction is provided by RocketML cloud infrastructure. We compare the performance of the cloud machines with state-of-the-art HPC machine TACC Frontera. Our results suggest that cloud-based HPC resources are a viable strategy for a diverse array of endusers to rapidly and efficiently deploy simulation software.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Current and next-generation high-performance computing (HPC) resources play a pivotal role in helping answer many of the fundamental questions related to science and technology. However, the limited availability of HPC resources, along with the steep learning curve needed to employ these resources effectively, have limited the utilization of HPC resources to academic and large industrial R&D groups. Additionally, standard HPC resource utilization policies restrict the number of nodes available to the user and the number of job instances per user. These limitations become a bottleneck, especially in risk assessment and design exploration, where parametric studies need to be performed that involve executing multiple instances of the simulation with different simulation inputs. In this context, the availability of on-demand cloud services suggests an attractive alternative for adaptive, interactive scientific computing workloads.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "The ubiquitous availability of cloud computing suggests a path to the democratization of complex multi-physics simulations. Simulations-for example, parametric studies of ventilation rates and seating arrangements in critical public places such as courthouses, hospital waiting rooms, etc. to evaluate transmission risk-are currently limited to deployment on HPC clusters that require a steep learning curve to deploy, which disenfranchises non-computer savvy scientists, decision-makers, and designers. Additionally, the data visualization and analysis can be done in-situ without copying data from one place to another. In this work, we propose a public cloud-based framework with in-situ visualization and post-processing capabilities for scalable deployment of fluid dynamics simulation using FEM discretization. Our results suggest that the performance of such a framework is at par, if not better, with the framework executed on state-of-the-art HPC resources.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "A large fraction of engineered and natural systems are analyzed using scientific simulation codes that involve numerical solutions of partial differential equations (PDE). The Finite Element Method (FEM) is a widely popular approach for the numerical solution of PDEs in complex domains, with multiple $ billions/year spent in CAD and CAM (computer-aided design and manufacturing) based FEM software alone [1]. The popularity arises from a compelling set of properties, including the ability (a) to model arbitrary geometries, (b) to change the order of representation (linear, quadratic, and higher-order), (c) to utilize variational arguments that guarantee monotonic convergence to the solution with improved discretization, and (d) to seamlessly utilize a posteriori error estimates to adapt the mesh. Over the past several years, we have developed a scalable FEM solver based on adaptive octree mesh and arXiv:2111.09353v1 [cs.DC] ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Abstract-Complex flow simulations are conventionally performed on HPC clusters. However, the limited availability of HPC resources and steep learning curve of executing on traditional supercomputer infrastructure has drawn attention towards deploying flow simulation software on the cloud. We showcase how a complex computational framework-that can evaluate COVID-19 transmission risk in various indoor classroom scenarios-can be abstracted and deployed on cloud services. The availability of such cloud-based personalized planning tools can enable educational institutions, medical institutions, public sector workers (courthouses, police stations, airports, etc.), and other entities to comprehensively evaluate various in-person interaction scenarios for transmission risk. We deploy the simulation framework on the Azure cloud framework, utilizing the DENDRO-KT mesh generation tool and PETSc solvers. The cloud abstraction is provided by RocketML cloud infrastructure. We compare the performance of the cloud machines with state-of-the-art HPC machine TACC Frontera. Our results suggest that cloud-based HPC resources are a viable strategy for a diverse array of endusers to rapidly and efficiently deploy simulation software.",
            "cite_spans": [],
            "ref_spans": [],
            "section": ""
        },
        {
            "text": "Current and next-generation high-performance computing (HPC) resources play a pivotal role in helping answer many of the fundamental questions related to science and technology. However, the limited availability of HPC resources, along with the steep learning curve needed to employ these resources effectively, have limited the utilization of HPC resources to academic and large industrial R&D groups. Additionally, standard HPC resource utilization policies restrict the number of nodes available to the user and the number of job instances per user. These limitations become a bottleneck, especially in risk assessment and design exploration, where parametric studies need to be performed that involve executing multiple instances of the simulation with different simulation inputs. In this context, the availability of on-demand cloud services suggests an attractive alternative for adaptive, interactive scientific computing workloads.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "I. MOTIVATION"
        },
        {
            "text": "The ubiquitous availability of cloud computing suggests a path to the democratization of complex multi-physics simulations. Simulations-for example, parametric studies of ventilation rates and seating arrangements in critical public places such as courthouses, hospital waiting rooms, etc. to evaluate transmission risk-are currently limited to deployment on HPC clusters that require a steep learning curve to deploy, which disenfranchises non-computer savvy scientists, decision-makers, and designers. Additionally, the data visualization and analysis can be done in-situ without copying data from one place to another. In this work, we propose a public cloud-based framework with in-situ visualization and post-processing capabilities for scalable deployment of fluid dynamics simulation using FEM discretization. Our results suggest that the performance of such a framework is at par, if not better, with the framework executed on state-of-the-art HPC resources.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "I. MOTIVATION"
        },
        {
            "text": "A large fraction of engineered and natural systems are analyzed using scientific simulation codes that involve numerical solutions of partial differential equations (PDE). The Finite Element Method (FEM) is a widely popular approach for the numerical solution of PDEs in complex domains, with multiple $ billions/year spent in CAD and CAM (computer-aided design and manufacturing) based FEM software alone [1] . The popularity arises from a compelling set of properties, including the ability (a) to model arbitrary geometries, (b) to change the order of representation (linear, quadratic, and higher-order), (c) to utilize variational arguments that guarantee monotonic convergence to the solution with improved discretization, and (d) to seamlessly utilize a posteriori error estimates to adapt the mesh. Over the past several years, we have developed a scalable FEM solver based on adaptive octree mesh and deployed this framework for a diverse array of multi-physics simulations-primarily on HPC resources [2] [3] [4] [5] [6] [7] [8] .",
            "cite_spans": [
                {
                    "start": 406,
                    "end": 409,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 1010,
                    "end": 1013,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 1014,
                    "end": 1017,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 1018,
                    "end": 1021,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 1022,
                    "end": 1025,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 1026,
                    "end": 1029,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 1030,
                    "end": 1033,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 1034,
                    "end": 1037,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "In this work, we explore the deployment (and assess performance) of this FEM framework on a public cloud computing facility. Cloud computing provides on-demand access to computing resources, data storage, development, and networking facilities via the internet. Cloud computing offers some key benefits compared to the traditional HPC settings, in particular:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "\u2022 Lower IT costs: Cloud facilities enable the offloading of some or most of the costs and effort of purchasing, installing, configuring, and managing on-premises infrastructure. This can be especially significant for small research groups.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "\u2022 Scale on demand: Instead of purchasing the capacity and waiting for the arrival of hardware, the cloud enables ondemand access and elastic scalability.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "\u2022 Choice of architecture: Cloud allows to choose from different types of architecture, depending on the nature of codes. Some computer architectures are tailored for computebound codes, whereas others provide good performance for memory-bound codes. A traditional HPC cluster usually has limited flexibility in terms of the availability of different types of machines. In contrast, cloud computing allows the flexibility to choose the machines based on the nature of the underlying code (compute-bound vs. memory-bound vs. communication-bound).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "\u2022 End-to-end deployment: Cloud enables the full stack of software, starting from development to testing to execution to visualization. The latter aspect-visualization-is particularly appealing, as it allows for in-situ visualization and analysis without extensive data movement. We note that some federal HPC clusters, like TACC, have a dedicated visualization portal but are not accessible on all of them.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "In this paper, we seek to address the following three components of the workshop:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "\u2022 On-demand and interactivity with performance, scaling, and cost efficiencies;",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "\u2022 Application environment, integration and deployment technologies;",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "\u2022 Workflow orchestration using public cloud and HPC data center resources.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "II. BACKGROUND"
        },
        {
            "text": "COVID-19 has irreversibly changed how we consider transmission risk in indoor environments. The Six-Foot Rule, for instance, is a guideline that does not account for small aerosol droplets that are continuously mixed through an indoor space. The distribution of aerosolized particles depends on a wide array of factors (ventilation, airflow patterns that are impacted by furniture, as well as the respiratory activity of the inhabitants. While conventional risk assessment tools may indicate that a particular room is low-risk on average, there may be specific locations in the room with significantly higher risk for transmission-for example, where there is local recirculation causing limited air exchange with the outside environment. Assessing the localized risk becomes especially important if individuals are seated in such locations for extended periods, increasing their cumulative exposure time. We consider scenarios that impact first-responders, essential workers, and K-12 students. For instance, courthouse activities require participants (judges, clerks, petitioners, jurors) to remain sedentary over long periods. Similarly, most classroom activities require K-12 students to stay seated for extended periods. In such cases, it becomes imperative to identify if specific locations have a higher risk and rank among alternate seating arrangements.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "III. PROBLEM DEFINITION"
        },
        {
            "text": "In this context, high fidelity fluid/aerosol simulation is a viable approach to evaluate various seating and operating scenarios, identify risk factors, and rank order mitigation strategies. We aim to democratize such simulations on cloudbased resources by integrating four sophisticated concepts to provide very detailed estimates of aerosol distribution in indoor environments: (a) a detailed flow physics simulation (called Large Eddy Simulations) that produces significantly more accurate results while taking reasonable compute time, (b) accounting for the thermal plumes created by heat released by humans and electronics (which changes the flow in rooms), (c) immersogeometric analysis that allows rapid exploration of a diverse array of configurations with complex geometries, (d) a passive scalar transport based model that tracks the spatial distribution of the aerosolized concentration. To our best knowledge, parametric simulations of such high-fidelity simulations have not been deployed on the cloud. The availability of such a cloud-based analysis approach will allow education administrators (K-12), federal/state/local government officials (courthouses, police stations), and hospital administrators to make informed decisions on seating arrangements and operating procedures.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "III. PROBLEM DEFINITION"
        },
        {
            "text": "In this work, we use DENDRO-KT for efficient and automatic mesh generation. DENDRO-KT is an extension of previous DENDRO versions to incomplete octrees. Tree-based grid generation (quadtrees in 2D and octrees in 3D) is common in computational sciences [4, [9] [10] [11] [12] [13] [14] [15] [16] largely due to its simplicity and parallel scalability. The ability to efficiently refine (and coarsen) regions of interest using tree-based data structures have made it possible to deploy them on large-scale multi-physics simulations [2] [3] [4] [17] [18] [19] [20] [21] . The use of incomplete octrees enables the handling of any arbitrary complex geometries, where the stated geometry is carved out from the domain (Fig. 1) . The framework's simplicity and robustness lie in the fact that complete mesh generation only needs a specification of IN or OUT (of the geometry) for any queried point. Furthermore, the efficient MATVEC computation is performed by traversing the trees rather than using any mesh-based data structure to prevent indirect memory access.",
            "cite_spans": [
                {
                    "start": 252,
                    "end": 255,
                    "text": "[4,",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 256,
                    "end": 259,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 260,
                    "end": 264,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 265,
                    "end": 269,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 270,
                    "end": 274,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 275,
                    "end": 279,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 280,
                    "end": 284,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 285,
                    "end": 289,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 290,
                    "end": 294,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 530,
                    "end": 533,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 534,
                    "end": 537,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 538,
                    "end": 541,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 542,
                    "end": 546,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 547,
                    "end": 551,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 552,
                    "end": 556,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 557,
                    "end": 561,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 562,
                    "end": 566,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [
                {
                    "start": 713,
                    "end": 721,
                    "text": "(Fig. 1)",
                    "ref_id": null
                }
            ],
            "section": "III. PROBLEM DEFINITION"
        },
        {
            "text": "Once the mesh is created, we model the time-dependent transmission of the viral load as a scalar transport equation that is advected by a statistically steady-state flow field obtained from the solution of coupled Navier-Stokes and Heat transfer solver. The well-established Variational Multiscale (VMS) FEM [22] is used for the discretization. DENDRO-KT Fig. 1 . Difference between the adaptive mesh for immersed and carved out for the sphere case. In immersed case, we retain the full octree and this gives to a significantly large number of elements and nodes compared to the carved out case. It must be noted the elements that are inside the object do not contribute to the accuracy of the solution. Eventually Dirichlet Boundary condition are imposed on all the INnodes.",
            "cite_spans": [
                {
                    "start": 308,
                    "end": 312,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [
                {
                    "start": 355,
                    "end": 361,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "III. PROBLEM DEFINITION"
        },
        {
            "text": "interfaces with PETSc for solving the system of equations. We have recently extensively validated and demonstrated the capabilities of this framework [3, 8] .",
            "cite_spans": [
                {
                    "start": 150,
                    "end": 153,
                    "text": "[3,",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 154,
                    "end": 156,
                    "text": "8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "III. PROBLEM DEFINITION"
        },
        {
            "text": "In this section, we detail and demonstrate the deployment of our framework on the cloud infrastructure.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "IV. WORKFLOW"
        },
        {
            "text": "Our target user for a cloud orchestrator is a researcher who has experience using an HPC cluster at a university or a national lab and has never used cloud computing. Ease-ofuse and flexibility of using public cloud computing resources are the two most important requirements. Specifically, a cloud orchestrator that provides a graphical user interface (GUI) to 1) deploy and manage CPU-and GPU-based HPC clusters pre-installed with MPI, BLAS/LAPACK, and PETSc libraries along with a Slurm scheduler to simplify job management, 2) access to different IDEs like Jupyter Lab, VSCode for coding, compiling, and debugging HPC software, and 3) access to visualization software like Paraview for in situ data visualization. We have explored several options available on Microsoft Azure and AWS marketplaces [23, 24] and concluded that they either lack in ease-of-use or flexibility necessary for a researcher who has no exposure to cloud computing to conduct large-scale HPC experiments. In Figure 2 , we show different components of RocketML's cloud orchestrator that has been purpose-built to address a researcher's needs to take complete advantage of HPC on a public cloud for scientific computing applications.",
            "cite_spans": [
                {
                    "start": 801,
                    "end": 805,
                    "text": "[23,",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 806,
                    "end": 809,
                    "text": "24]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 985,
                    "end": 993,
                    "text": "Figure 2",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "A. Cloud Abstraction"
        },
        {
            "text": "We first begin with mesh creation. As mentioned in Section II, DENDRO-KT framework requires the specification of IN and OUT for a given queried point. The IN-OUT test is performed using Ray-Tracing. The input geometries are provided in the form of a .stl file format. Several instances of the same geometry, translated by some distance, can be grouped. An example of a config file for such an operation is: .stl and refine_lvl is the refinement level of the octree near the .stl. The octree generation starts with a coarse mesh and is subsequently refined until the required resolution is satisfied. We can similarly add multiple geometries. This approach gives an automated way to generate mesh for different scenarios. In the future, we plan to interface it with a GUI, where an application scientist can use the drag-and-drop feature to add multiple objects or to select the refine regions. Fig. 3 shows the adaptive mesh generated for the classroom case.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 894,
                    "end": 900,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "B. Mesh Creation"
        },
        {
            "text": "We use PETSc as the linear solver for solving the system of equation AX=b. PETSc is a very well validated scalable linear algebra solver, which has a rich collection of preconditioners and solvers. Different PETSc options are configurable from the config file itself. An example is shown below: solver_options_ht = { ksp_max_it = 500 ksp_type = \"bcgs\" pc_type = \"asm\" ksp_atol = 1e-15 ksp_rtol = 1e-15 ksp_converged_reason = \"\" }",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C. Solver"
        },
        {
            "text": "We use a parallel .vtu file format to write the data into the file at the user-defined interval. .vtu is an XML file format which enable a communication free write. Each processor writes its share of data in a separate file. All these files are later joined by another single .pvtu file, which is written by 0 th rank processor.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D. File I/O"
        },
        {
            "text": "Machine failure is a common scenario when executing simulations on HPC servers. DENDRO-KT dumps the checkpoint file at user-defined intervals to keep a backup of the solutions. The checkpoint files are binary files that contain information about octree tree nodes and the solution vector. Similarly, to file I/O, each processor dumps its chunk of data in a communication -free fashion. If the code is killed for whatsoever reason, the user can restart the simulation by loading the checkpoint file. Additionally, the user has the option to increase the number of nodes once the checkpoint is loaded. DENDRO-KT will repartition the domain if the number of processors is increased. At this point, we have not implemented the ability to restart with a decreased number of processors.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "E. Checkpointing"
        },
        {
            "text": "We have deployed ParaView within the cloud framework for in-situ visualization and related data-analysis. ParaView comes with pvpython (serial version) and pvbatch (parallel version) which provide a seamless python interface.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "F. Visualization"
        },
        {
            "text": "As noted earlier, we rely on the config.txt file to pass input operation to the code. In future, we plan to replace it with a GUI interface hosted on the cloud platform for better interaction with the application user.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "F. Visualization"
        },
        {
            "text": "As the first step, we conducted a roofline analysis on Frontera using Intel advisor to check whether the framework is compute-bound or memory-bound. Identifying this is important to identify and specify the type of cloud machines for deploying the framework. Fig. 4 shows the single-core roofline plot for the elemental MATVEC computation using linear basis function on Frontera. We limit ourselves to using linear basis functions as this mimics our application problem. We can see that the code is memory-bound, which is along the lines of what we expect for any finite element code. Overall, we can achieve a performance of about 4 GFLOP/s with an Arithmetic Intensity of 0.072, which corresponds to a bandwidth of approximately 60 GB/s. Remark. We have not used any hand-coded explicit vectorization to ensure the portability of the code across various platforms and have relied on compiler directives for vectorization.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 259,
                    "end": 265,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "A. Roofline Analysis"
        },
        {
            "text": "Based on the roofline analysis discussed in the previous section, we chose Azure virtual machines that are suited for memory-bound computational problems. This is an additional benefit of using cloud, where we can opt for a virtual machine with specific hardware configuration based on computational complexity of the problem at hand (memory-bound vs. compute-bound). Specifically, we chose the Azure Da and HBv2 series virtual machines that are built for memory-bound codes and compared the time-to-solution with the state-ofthe-art HPC cluster Frontera. Tab. I provides the functional specifications of Frontera and virtual machines on cloud.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Performance on the Cloud"
        },
        {
            "text": "Scaling behavior comparison: To study the scaling behavior and time comparison of our solver on these machines, we consider the classroom case (shown in Fig. 3 ) and solve the Navier-Stokes equation coupled with Heat Transfer. In both the azure machines (Da series and HBV2 series), we only used 50% of the available CPU cores per node (48 for Da series and 60 for HBv2 series) mentioned in the Tab. I. We note that the specs take the hyper-threading into account for Da-series with 2 threads per core. Since our code is only MPI parallelized, we are able to use only half of the available cores. On Frontera we used all 56 cores available per node. The overall mesh for scaling analysis consisted of around 790 K elements with higher refinement near the body (mannequin/tables) and inlet regions. We compared the three main components of the solver: matrix assembly, vector assembly, and the total solve time. Fig. 5 shows the parallel cost (defined as total time multiplied by the number of nodes used) and time taken on these three different machines. A straight line parallel to Xaxis indicates ideal scaling. We can see that the cloud machines take significantly less time than Frontera, with the HBv2 series taking the least amount of time. In particular, 10 time steps of the solver took 432s on 1 node of Frontera, while it took 132s on 1 node of HBv2 series machine.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 153,
                    "end": 159,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 911,
                    "end": 917,
                    "text": "Fig. 5",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "B. Performance on the Cloud"
        },
        {
            "text": "Explanation of observed scaling behavior: The two main architectural factors responsible for the difference between Azure machines and Frontera are memory bandwidth and cache size. The total peak memory bandwidth on the HBv2 node is about 340GB/s and around 210GB/s on a Frontera CLX node. For memory-bound workloads like CFD simulations, the higher memory bandwidth on the HBv2 node would result in a better solve time. Each AMD EPYC 7742 CPU in HBv2 VMs has 256MB of L3 cache divided across 16 core complexes with four cores each (4MB L3 per core, 4.5MB L2+L3 per core). Conversely, the Intel 8280 has only 38.5MB of L3 cache (1.4MB L3 per core, 2.4MB L2+L3 per core). Codes that benefit from high cache reuse would enormously benefit from the AMD Zen2 architecture, resulting in a much higher \"effective\" memory bandwidth. This indicates that an educated choice of the architecture for the code can lead to a significant boost in the performance. Such flexibility is offered only by cloud, and not on traditional HPC based clusters.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Performance on the Cloud"
        },
        {
            "text": "Remark. We note that our code is general-purpose and does not contain any explicit vectorization cache blocking or streaming operation, ensuring code portability. This approach is common in most of the FEM / fluid dynamics code. Explicit optimization such as vectorization/cache blocking can significantly boost the time to solve but comes at the cost of portability on different machines. Comparing the performance of hardware-specific optimized codes on these machines is beyond the scope of the work.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Performance on the Cloud"
        },
        {
            "text": "Parallel efficiency: We also see a good parallel efficiency on all these machines. Overall Frontera provides the best parallel efficiency (0.88) with the solve time decreasing from 432s on 1 node to 122s on 4 nodes. The cloud machines have a relatively low parallel efficiency of about 0.65. The deviation from ideal scaling can be attributed to the increased iteration count for the preconditioned solve. Interested readers are referred to [3] for detailed discussion. Briefly, it is expected that bare-metal HPC servers will have better parallel efficiency than virtual-machine-based cloud HPC servers due to increased communication costs across nodes. Optimizing multinode VM-based HPC servers suggests the need to deploy new algorithms that minimizes communication at the cost of increased (and/or redundant) computations.",
            "cite_spans": [
                {
                    "start": 441,
                    "end": 444,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "B. Performance on the Cloud"
        },
        {
            "text": "Memory bandwidth effect: Memory bandwidth plays a pivotal role in overall solve time, especially for memory bound codes. Therefore, we compare the effect of memory bandwidth on our solver. The number of processors is kept constant at 120, whereas the number of nodes is varied from 1 to 4 with a varying number of processors per node. Note that 4 nodes have 30 processors per node, and 1 node has 120 processors. With the increase in the number of processors per node, the memory bandwidth per core decreases. For instance, on the HB120rs v2 (HBV series) machine, the memory bandwidth per core decreases from 11.50 GB/s when using 30 cores/node to 2.88 GB/s while using all 120 cores. [25] . Fig. 6 shows the effect of the memory bandwidth of our solver. We see a strong correlation between memory bandwidth and solve time. With the increase in the memory bandwidth, the solve time decreases from around 112 s with 120 cores/node to 80 s on 30 cores/node. However, we note that this reduction in time comes at an increased cost of utilizing more nodes.",
            "cite_spans": [
                {
                    "start": 685,
                    "end": 689,
                    "text": "[25]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [
                {
                    "start": 692,
                    "end": 698,
                    "text": "Fig. 6",
                    "ref_id": "FIGREF7"
                }
            ],
            "section": "B. Performance on the Cloud"
        },
        {
            "text": "In this section, we illustrate results of our application case. We consider a typical university classroom as illustrated in Fig. 3 . The room has a length of 9 m, a width of 9 m, and a height of 3.5 m with a ventilation system installed on the ceiling. The occupants are modeled using mannequins. A representative resolved mesh is shown as an inset in this figure. The Reynolds number based on the inlet air velocity and classroom height is estimated to be 10 5 . The spatial discretization was performed using linear basis function and the time discretization was performed using second order BDF2. A dimensionless timestep of 1E-3 was used to carry out the simulation. Each scenerio takes up to a final time of 2 dimensionless time units to reach the stationary steady state (2K timestep), which required about a day of compute time on HBV2 series machine. This resulted in the total cost of $ 340 for simulating each scenario. We evaluate the impact of one infected individual who coughs, releasing an aerosolized load of viral particles. Fig. 7 plots the time evolution of the viral load concentration of the air due to a simulated cough by a mannequin. Notice that the aerosolized concentration plume rises and is recirculated by the inlet air. The mixing with the inlet air dilutes the virus concentration, but the inlet air helps spread the concentration across the room, potentially impacting everyone in the classroom.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 125,
                    "end": 131,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1043,
                    "end": 1049,
                    "text": "Fig. 7",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "VI. APPLICATION RESULTS"
        },
        {
            "text": "Finally, Fig. 8 shows the isocontours of viral particles concentration (at one time-point) for different operating scenarios. We compare the different scenarios in the classroom with (Fig. 8a) and without (Fig. 8b ) monitors, increased occupancy (Fig. 8d ) and the situation where everyone wears a mask (Fig. 8c) . The mannequin colored in red is the infected person. The regions of contours with inhaled particles > 50 [26] are considered at a high risk of transmission. We can see different scenarios lead to significantly different regions of risk. Additionally, the wearing of masks significantly reduced the risk of transmission and should therefore be encouraged. We defer a detailed analysis and implication of these results to a companion publication.",
            "cite_spans": [
                {
                    "start": 420,
                    "end": 424,
                    "text": "[26]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [
                {
                    "start": 9,
                    "end": 15,
                    "text": "Fig. 8",
                    "ref_id": "FIGREF9"
                },
                {
                    "start": 183,
                    "end": 192,
                    "text": "(Fig. 8a)",
                    "ref_id": "FIGREF9"
                },
                {
                    "start": 205,
                    "end": 213,
                    "text": "(Fig. 8b",
                    "ref_id": "FIGREF9"
                },
                {
                    "start": 246,
                    "end": 254,
                    "text": "(Fig. 8d",
                    "ref_id": "FIGREF9"
                },
                {
                    "start": 303,
                    "end": 312,
                    "text": "(Fig. 8c)",
                    "ref_id": "FIGREF9"
                }
            ],
            "section": "VI. APPLICATION RESULTS"
        },
        {
            "text": "In this work, we deploy a scalable, adaptive framework on the cloud utilizing DENDRO-KT as a mesh generation tool and PETSc as a scalable linear algebra solver to analyze the risk of COVID-19 transmission in different classroom scenarios. The problem utilizes running different simulation instances, which are easily deployable in a cloud-based setting. Further, we analyzed the performance of the cloud-based resources to the state-of-the-art supercomputer, specifically Frontera. With the proper choice of cloud machines, we observe on par performance on the cloud, if not better, with the supercomputers. This suggests that cloud based VM HPC servers offer a viable approach to democratize and deploy complex simulation workflows. In the future, we would like to simplify the deployment of the use-cases with more GUIfriendly interfaces.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "VII. CONCLUSIONS"
        },
        {
            "text": "We acknowledge partial support from NSF 1855902.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "VIII. ACKNOWLEDGMENTS"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Isogeometric analysis: toward integration of CAD and FEA",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "A"
                    ],
                    "last": "Cottrell",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [
                        "J"
                    ],
                    "last": "Hughes",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Bazilevs",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "A fully-coupled framework for solving cahnhilliard navier-stokes equations: Second-order, energystable numerical methods on adaptive octree based meshes",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "A"
                    ],
                    "last": "Khanwale",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Saurabh",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [
                        "M"
                    ],
                    "last": "Calo",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "A"
                    ],
                    "last": "Rossmanith",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Ganapathysubramanian",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2009.06628"
                ]
            }
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Industrial scale large eddy simulations with adaptive octree meshes using immersogeometric analysis",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Saurabh",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Gao",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "A"
                    ],
                    "last": "Khanwale",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Khara",
                    "suffix": ""
                },
                {
                    "first": "M.-C",
                    "middle": [],
                    "last": "Hsu",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Krishnamurthy",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Ganapathysubramanian",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Computers & Mathematics with Applications",
            "volume": "97",
            "issn": "",
            "pages": "28--44",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Massively parallel simulations of binary black hole intermediate-mass-ratio inspirals",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Neilsen",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Lim",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Hirschmann",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "SIAM Journal on Scientific Computing",
            "volume": "41",
            "issn": "2",
            "pages": "97--138",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "An octreebased immersogeometric approach for modeling inertial migration of particles in channels",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Gao",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Lofquist",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "M.-C",
                    "middle": [],
                    "last": "Hsu",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Ganapathysubramanian",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Computers & Fluids",
            "volume": "214",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Massively parallel simulations of binary black hole intermediate-mass-ratio inspirals",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Neilsen",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Hirschmann",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Lim",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "2018",
            "issn": "",
            "pages": "14--19",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Dendro-gr: A scalable framework for adaptive computational general relativity on heterogeneous clusters",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Neilsen",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Hirschmann",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "APS April Meeting Abstracts",
            "volume": "2019",
            "issn": "",
            "pages": "11--14",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Scalable adaptive pde solvers in arbitrary domains",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Saurabh",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ishii",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Gao",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "M.-C",
                    "middle": [],
                    "last": "Hsu",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Krishnamurthy",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Ganapathysubramanian",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2108.03757"
                ]
            }
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Scalable parallel octree meshing for terascale applications",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Tu",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "R"
                    ],
                    "last": "O&apos;hallaron",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Ghattas",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "SC'05: Proceedings of the 2005 ACM/IEEE conference on Supercomputing",
            "volume": "",
            "issn": "",
            "pages": "4--4",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Solving pdes in spacetime: 4d tree-based adaptivity, mesh-free and matrix-free approaches",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ishii",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fernando",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Saurabh",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Khara",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Ganapathysubramanian",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis",
            "volume": "",
            "issn": "",
            "pages": "1--61",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Bottom-up construction and 2: 1 balance refinement of linear octrees in parallel",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Sundar",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "S"
                    ],
                    "last": "Sampath",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Biros",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "SIAM Journal on Scientific Computing",
            "volume": "30",
            "issn": "5",
            "pages": "2675--2708",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "A generic grid interface for parallel and adaptive scientific computing. part i: abstract framework",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Bastian",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Blatt",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Dedner",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Engwer",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Kl\u00f6fkorn",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ohlberger",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Sander",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Computing",
            "volume": "82",
            "issn": "2-3",
            "pages": "103--119",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Hierarchical treebased finite element mesh generation",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "M"
                    ],
                    "last": "Greaves",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Borthwick",
                    "suffix": ""
                }
            ],
            "year": 1999,
            "venue": "International Journal for Numerical Methods in Engineering",
            "volume": "45",
            "issn": "4",
            "pages": "447--471",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Space-filling curves: an introduction with applications in scientific computing",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Bader",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "",
            "volume": "9",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "p4est: Scalable algorithms for parallel adaptive mesh refinement on forests of octrees",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Burstedde",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "C"
                    ],
                    "last": "Wilcox",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Ghattas",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "SIAM Journal on Scientific Computing",
            "volume": "33",
            "issn": "3",
            "pages": "1103--1133",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Gerris: a tree-based adaptive solver for the incompressible euler equations in complex geometries",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Popinet",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Journal of Computational Physics",
            "volume": "190",
            "issn": "2",
            "pages": "572--600",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Boiling flow simulations on adaptive octree grids",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "W"
                    ],
                    "last": "Akhtar",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "J"
                    ],
                    "last": "Kleis",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "International journal of multiphase flow",
            "volume": "53",
            "issn": "",
            "pages": "88--99",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "An extreme-scale implicit solver for complex pdes: highly heterogeneous flow in earth's mantle",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Rudi",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "C I"
                    ],
                    "last": "Malossi",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Isaac",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Stadler",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Gurnis",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "W"
                    ],
                    "last": "Staar",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Ineichen",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Bekas",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Curioni",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Ghattas",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Proceedings of the international conference for high performance computing, networking, storage and analysis",
            "volume": "",
            "issn": "",
            "pages": "1--12",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Parallel octree-based finite element method for large-scale earthquake ground motion simulation",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Bielak",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Ghattas",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "Computer Modeling in Engineering and Sciences",
            "volume": "10",
            "issn": "2",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Simulating water and smoke with an octree data structure",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Losasso",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Gibou",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Fedkiw",
                    "suffix": ""
                }
            ],
            "year": 2004,
            "venue": "ACM SIGGRAPH",
            "volume": "",
            "issn": "",
            "pages": "457--462",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Large-scale northridge earthquake simluation using octree-based multiresolution mesh method",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Bielak",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Ghattas",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Proceedings of the 16th ASCE Engineering Mechanics Conference",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Variational multiscale residual-based turbulence modeling for large eddy simulation of incompressible flows",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Bazilevs",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Calo",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Cottrell",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Hughes",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Reali",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Scovazzi",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "Computer methods in applied mechanics and engineering",
            "volume": "197",
            "issn": "1-4",
            "pages": "173--201",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Amazon Web Services Marketplace",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Optimal mpi process placement for azure hb series vms",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Azure",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Superspreading events suggest aerosol transmission of sars-cov-2 by accumulation in enclosed spaces",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "M"
                    ],
                    "last": "Kolinski",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [
                        "M"
                    ],
                    "last": "Schneider",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Physical Review E",
            "volume": "103",
            "issn": "3",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF1": {
            "text": "displacements are the shift from original position of",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "RocketML cloud orchestrator for large-scale CFD simulations.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Computation domain and adaptive mesh generated from DENDRO-KT framework.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Figure showingroofline plot for the MATVEC for linear basis function for two different meshes on Frontera. The plot was generated using Intel Advisor.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Strong scaling for Navier Stokes + Heat Transfer: Figure showing the parallel cost (time \u00d7 nodes) variation with increase in the number of nodes. A straight line parallel to X-axis indicates ideal scaling.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "Effect of memory bandwidth Time comparison for different distribution of processor across nodes. Total number of processor was kept constant to 120, whereas the number of processor per node was varied.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "Time evolution of the viral load concentration of the air due to a simulated cough by a mannequin.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "Classroom scenario: Evaluation of inhaled particles in different classroom scenarios. The mannequin marked in the red is infected with COVID and transmits the virus. The isocontours represent the regions of different inhaled particle concentrations in space.",
            "latex": null,
            "type": "figure"
        },
        "TABREF2": {
            "text": "Tab. I. Functional specifications of CPUs on Microsoft Azure and Frontera.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}