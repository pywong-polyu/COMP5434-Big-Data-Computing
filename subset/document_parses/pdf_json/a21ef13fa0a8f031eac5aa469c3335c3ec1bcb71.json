{
    "paper_id": "a21ef13fa0a8f031eac5aa469c3335c3ec1bcb71",
    "metadata": {
        "title": "Automated Detection of Covid-19 from Chest X-ray scans using an optimized CNN architecture",
        "authors": [
            {
                "first": "Sameena",
                "middle": [],
                "last": "Pathan",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Manipal Academy of Higher Education",
                    "location": {
                        "region": "Manipal",
                        "country": "India"
                    }
                },
                "email": ""
            },
            {
                "first": "P",
                "middle": [
                    "C"
                ],
                "last": "Siddalingaswamy",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Manipal Academy of Higher Education",
                    "location": {
                        "region": "Manipal",
                        "country": "India"
                    }
                },
                "email": ""
            },
            {
                "first": "Tanweer",
                "middle": [],
                "last": "Ali",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "The novel coronavirus termed as covid-19 has taken the world by its crutches affecting innumerable lives with devastating impact on the global economy and public health. One of the major ways to control the spread of this disease is identification in the initial stage, so that isolation and treatment could be initiated. Due to the lack of automated auxiliary diagnostic medical tools, availability of lesser sensitivity testing kits, and limited availability of healthcare professionals, the pandemic has spread like wildfire across the world. Certain recent findings state that chest X-ray scans contain salient information regarding the onset of the virus, the information can be analyzed so that the diagnosis and treatment can be initiated at an earlier stage. This is where artificial intelligence meets the diagnostic capabilities of experienced clinicians. The objective of the proposed research is to contribute towards fighting the global pandemic by developing an automated image analysis module for identifying covid-19 affected chest X-ray scans by employing an optimized Convolution Neural Network (CNN) model. The aforementioned objective is achieved in the following manner by developing three classification models, (i) ensemble of ResNet 50-Error Correcting Output Code (ECOC) model, (ii) CNN optimized using Grey Wolf Optimizer (GWO) and, (iii) CNN optimized using Whale Optimization + BAT algorithm. The novelty of the proposed method lies in the automatic tuning of hyper parameters considering a hierarchy of MultiLayer Perceptron (MLP), feature extraction, and optimization ensemble. A 100% classification accuracy was obtained in classifying covid-19 images. Classification accuracy of 98.8% and 96% were obtained for dataset 1 and dataset 2 respectively for classification into covid-19, normal, and viral pneumonia cases. The proposed method can be adopted in a clinical setting for assisting radiologists and it can also be employed in remote areas to facilitate the faster screening of affected patients.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Covid-19, the most talked-about on-going pandemic that has resulted in a major global crisis, and has significantly impacted several lives around the globe. The first case of the lethal virus is reported to have originated from Wuhan, a province in China in December 2019 [1] . In a short period, the virus turned out to be a global pandemic affecting several countries in the world. One of the most common techniques that is currently used in the diagnosis of covid-19 is reverse transcription-polymerase (RT_PCR). Radiological imaging modalities such as Computed Tomography (CT) and X-ray have played vital roles in the early diagnosis of this disease [2] . Since the diagnosing sensitivity of PCR is 60%-70%, Xray scans have been adopted in the screening of covid-19 cases. * Corresponding author. Few recent studies have reported changes in X-ray and CT image scans in patients at the onset of covid-19 symptoms [4] . For instance, Zhao et al. [5] observed dilation and consolidation in addition to ground-glass opacities in covid affected patients. A rapid rise in the number of positive covid-19 cases has aggravated the need for researchers to integrate Artificial Intelligence (AI) along with expert opinion to ease the task of the clinicians. In this regard, deep learning models, have started garnering recognition. Due to the shortage in the number of radiologists in hospitals, AI-based diagnostic models can be helpful to provide timely assistance to the patients. Based on these techniques, numerous studies have been reported in the literature, however, only prominent studies are highlighted here. Seven Convolutional Neural Network (CNN) models, comprising of improved VGG19 and Google MobileNet to diagnose covid-19 form X-ray images was proposed by Hemdan et al. [6] . An accuracy of 92.4% was obtained by Wang et al. [7] in classifying covid-19 images from normal and viral pneumonia cases. Similarly, Ioannis et al. [8] used 224 covid-19 images and obtained a class accuracy of 93.48%. An optimized CNN termed as optconet was proposed in [9] using a total of 2700 images thereby yielding a precision score of 92.8%. A mobilenet CNN model was developed by Apostolopoulous et al. [10] using certain extricated features. Three distinctive CNN models namely inception v3, ResNet50, Inception-ResNet V2 were used for the same purpose of classification in [11] . A transfer learning-based approach using three models such as ResNet18, ResNet50, SqueezeNet, and DenseNet-121 was used in [12] for the classification of covid and non-covid chest X-ray images.",
            "cite_spans": [
                {
                    "start": 272,
                    "end": 275,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 654,
                    "end": 657,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 916,
                    "end": 919,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 948,
                    "end": 951,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 1782,
                    "end": 1785,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 1837,
                    "end": 1840,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 1937,
                    "end": 1940,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 2059,
                    "end": 2062,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 2199,
                    "end": 2203,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 2371,
                    "end": 2375,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 2501,
                    "end": 2505,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Although all the above-reported state of art techniques are designed using CNN, the methods do not take into account the spatial relationships between the image pixels for training the models. Thus, when the images are subjected to the rotation, certain resize operations, and data augmentation due to the availability of smaller dataset size, the developed CNN models fail to accurately identify the covid-19 cases, form viral pneumonia and normal chest X-ray scans. Although, a certain degree of misclassification in identifying viral pneumonia cases is acceptable, but misclassification of covid-19 cases as normal or viral pneumonia can mislead the treatment performed by clinicians. The proposed work aims to address the aforementioned limitations by developing an automated diagnostic tool for screening of covid-19 patients using chest X-ray scans. The proposed method employs an optimized robust CNN architecture for the classification of chest X-ray images into three classes.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "The novelty of the proposed work is two-fold. The methodology adopted for optimizing the CNN hyper parameters is unique. The major hyper parameters of CNN are tuned using (i) Multilayer perceptron (MLP) and Grey Wolf Optimizer (GWO), and (ii) MLP and Whale optimization + BAT algorithm. The hyper parameter tuning was performed using dataset 1 and the same parameters were used for training and testing of dataset 2. In both cases, good performance metrics were obtained.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Novelty and contributions"
        },
        {
            "text": "The main contributions of this paper are summarized as given below:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Novelty and contributions"
        },
        {
            "text": "a. An ensemble of ResNet and Error Correcting Output Code (ECOC) classifier is designed for the classification of X-ray images into three classes. b. Two optimization algorithms namely GWO and WOA-BAT were used for tuning the hyper parameters of CNN. In contrast to the method in [9] , the proposed method determines the values of the hyper parameters by optimizing an MLP trained on the features extracted from the ResNet-50. The best values obtained were used as hyper parameters (Initial Learning Rate, L2 regularization, gradient decay factor, and Maximum epochs). c. A thorough comparative analysis is performed between the optimized and un-optimized CNN to prove the efficacy of the proposed method. The optimization parameters are computed using dataset 1, and the same parameters are used for dataset 2. For both the datasets good performance is observed, thereby proving the suitability of the system to be adopted in a clinical setting for initial screening of covid-19 patients.",
            "cite_spans": [
                {
                    "start": 280,
                    "end": 283,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Novelty and contributions"
        },
        {
            "text": "The study is carried out using two datasets. The first dataset henceforth is referred to as dataset 1, consists of 2905 chest X-ray images. There are 3 classes of image data belonging to covid-19, normal and viral pneumonia images, of which 219 are covid-19 images, 1341 are normal images and 1345 belong to viral pneumonia. The covid-19 images were obtained from the Italian Society of medical and interventional radiology, Joseph Paul Cohen and Morrison Covid-19 dataset and, various publications [13] . The second dataset [3] , henceforth referred to as dataset 2, consists of 6432 images, of which 576 belong to covid-19, 4273 belong to viral pneumonia and 1583 belong to normal. All the images of dataset 2 are in jpeg format.",
            "cite_spans": [
                {
                    "start": 499,
                    "end": 503,
                    "text": "[13]",
                    "ref_id": null
                },
                {
                    "start": 525,
                    "end": 528,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "Dataset"
        },
        {
            "text": "The proposed classification and optimization methodology consist of three different design models as given below:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization and classification"
        },
        {
            "text": "1. The first model is designed using an ensemble of ResNet-50 and ECOC classifier. 2. The second classification model is built by optimizing CNN layer parameters using GWO optimization. 3. The third classification model is built by optimizing CNN layer parameters using WOA and BAT algorithm.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization and classification"
        },
        {
            "text": "The ResNet models developed by He et al. [14] are prominently known for good convergence with great classification performance. The proposed model-1 in this paper employs a pretrained ResNet-50 residual network architecture that has 177 layers in total. The dataset is divided into a 30:70 ratio with 30% of data used for training and 70% used for testing. The block diagram of the proposed ensemble of ResNet-50 and ECOC classifier The ECOC model consists of a coding and decoding scheme. The coding scheme determines the classes for which the SVM trains on, and the decoding scheme determines the aggregation of predictions determined by the SVM classifiers. Since the proposed model consists of three classes, there are three SVM learners used to build the design. The SVM 1 trains on the observations belonging to Class 1 (C1) and Class 2 (C2). SVM 2 trains on the observations belonging to C1 and Class 3 (C3). Similarly, SVM 3 trains on observations belonging to C2 and C3. During the testing stage, the majority voting scheme decides the class of the test image. The ResNet-50 architecture is applied to the testing data to extract the test features. Further, the extracted test features are classified using the ECOC model. The results of different kernels (polynomial, sigmoid, RBF (Gaussian)) was computed. However, the performance using linear SVM kernel with quadratic function as the binary loss was found to be maximum. The observation is assigned to the class that yields the smallest average binary loss. The procedure for the selection of design parameters is described in detail in [15] . The ECOC models have proved to improve the classification accuracy in multiclass mechanisms.",
            "cite_spans": [
                {
                    "start": 41,
                    "end": 45,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 1600,
                    "end": 1604,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Ensemble of ResNet-50 and ECOC classifier"
        },
        {
            "text": "The proposed architecture is divided into two parts. The first part consists of the extraction of features from 80% of the data, while the second part consists of optimizing CNN hyper parameters using the GWO optimizer. 80% of the training data is fed to the ResNet-50 architecture wherein the last three layers comprise of fully connected, softmax and classification layers. The features are extracted from the fully connected layer comprising of 1000 nodes. Rather, than optimizing the parameters of deep neural network architecture as in [9] , we propose a novel strategy by introducing a Multilayer Perceptron (MLP) based GWO optimization.",
            "cite_spans": [
                {
                    "start": 541,
                    "end": 544,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "One of the greatest milestones in the era of computational intelligence is the introduction of neural network with the capability to mimic the human nervous system. One among type of neural network is the Feed Forward Neural Network (FNN), which has a unidirectional connection between the neurons. One of the classes of FNN is a MLP. It consists of at least one hidden layer. The output of the MLPs for a given set of inputs mainly relies on the biases and weights. For instance, consider X i as ith input. The weighted sum of inputs is as given in (1).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "where W ij is the connection weight from the ith node to the jth node and \u03b8 j is the bias of the jth layer.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "The main goal of effectively training a MLP mainly relies on the exact choice of the weights and bias to achieve good performance for a particular set of input feature vectors. Thus, our goal is to optimize the parameters of MLP for tuning CNN hyper parameters. Many optimization algorithms based on swarm intelligence have been proposed in recent years [16] [17] [18] . One such optimization algorithm proposed by Mirajalili et al. [19] is the GWO. The GWO algorithm follows the hunting pattern of the Grey wolves. There are four groups of population termed as alpha, beta, delta and omega denoted as \u221d, \u03b2, \u03b4, \u03c9 respectively. Here \u221d, \u03b2 and \u03b4 are considered as the fittest wolves in the preceding order, and \u03c9 act as subordinates. The hunting nature of the wolves is described in a circular pattern as given in (2)-(3).",
            "cite_spans": [
                {
                    "start": 354,
                    "end": 358,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 359,
                    "end": 363,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 364,
                    "end": 368,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 433,
                    "end": 437,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "Here, D denotes the distance, A and C are the coefficients, and X p denotes the prey's position, t denotes the iteration, X denotes the wolf location. The A and C coefficients are computed as given in (4) .",
            "cite_spans": [
                {
                    "start": 201,
                    "end": 204,
                    "text": "(4)",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "r1 and r2 are random values between 0 and 1, whereas the value of 'a' changes from 2 to 0. The first three best solutions are saved as \u221d, \u03b2, and \u03b4, and the position of \u03c9 is updated similar to the hunting behavior of the wolves as given in (5)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "Here,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "\u2212 \u2192 X 3 are approximate distances as given in [19] .",
            "cite_spans": [
                {
                    "start": 46,
                    "end": 50,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "The position of the prey is estimated by \u221d, \u03b2, and \u03b4, whereas \u03c9 updates its position randomly around the prey. The search process initially starts with the generation of random candidate solutions which are further updated over the course of iterations based on the probable prey positions as estimated by \u221d, \u03b2, and \u03b4.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "The divergence and convergence of the candidate solution relies on \u2212 \u2192 A >1 and \u2212 \u2192 A <1 condition respectively. As the total number of iterations are completed, the solution obtained by GWO at the last iteration is considered the best solution. Algorithm I describes sequential steps followed for obtaining the best parameters. One of the challenges involved in hyper parameter tuning is the careful selection of the learning rate, since a smaller value increases the number of epochs, resulting in the delay of the process, and a larger value results in a suboptimal solution. In the proposed method, the step size wherein the weights are updated also known as the learning rate of CNN is taken as the value of the best solution obtained by GWO. The minimization of Mean Square Error (MSE) of the MLP is the objective function of the aforementioned optimizer. The convergence curve for iteration versus MSE is given in Fig. 3 . ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 921,
                    "end": 927,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Optimization process using Grey Wolf optimizer"
        },
        {
            "text": "The WOA algorithm was proposed by Mirajalili et al. [20] by simulating the hunting behavior of the humpback whales by initially chasing the prey and simulating the bubble net strategy. The WOA algorithm consists of two main phases, encircling the prey and spiral updating known as the exploitation phase, wherein the prey is randomly searched. In this research work, the WOA algorithm initially starts with a set of random solution for V = (W , B), weights and bias for the MLP. At each iteration, the search agents are updated based on the randomly chosen search agent or the best solution that is obtained at the current iteration. The following equations (9)-(10) describe the behavior of hunting the prey.",
            "cite_spans": [
                {
                    "start": 52,
                    "end": 56,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using WOA-BAT algorithm"
        },
        {
            "text": "\u20d7 X * (t) is the whales best earlier position and \u20d7 X (t + 1) is the current position of the whale. \u20d7 D is the distance vector and \u20d7 C and \u20d7 A are the co-efficient vectors computed as (11) .",
            "cite_spans": [
                {
                    "start": 184,
                    "end": 188,
                    "text": "(11)",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using WOA-BAT algorithm"
        },
        {
            "text": "To speed up the convergence, the spiral updating mechanism of the bats is incorporated with certain modifications. A random value of p is generated considering if there is a 50% probability to choose between either the simulating encircling mechanism or the spiral model to update the position [21, 22] . If p>0.5, then the current iteration is updated as given in (12) .",
            "cite_spans": [
                {
                    "start": 294,
                    "end": 298,
                    "text": "[21,",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 299,
                    "end": 302,
                    "text": "22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 365,
                    "end": 369,
                    "text": "(12)",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using WOA-BAT algorithm"
        },
        {
            "text": "We consider k = b = 1, hence (12) reduces to (13) .",
            "cite_spans": [
                {
                    "start": 45,
                    "end": 49,
                    "text": "(13)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using WOA-BAT algorithm"
        },
        {
            "text": "If p<0.5, then the current iteration is updated as given in (14)- (16) .",
            "cite_spans": [
                {
                    "start": 66,
                    "end": 70,
                    "text": "(16)",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Optimization process using WOA-BAT algorithm"
        },
        {
            "text": "Here, x i is the bat position and v i is the bat velocity. The frequency of the waves is the lower and upper bound taken as (\u2212100,100).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization process using WOA-BAT algorithm"
        },
        {
            "text": "The new position of the bats is updated depending upon the new velocity because when the bat finds the food/prey, the loudness rate is inversely proportional to the emission rate. The CNN hyper parameters such as the learning rate and gradient decay factor are chosen as the values of the best positions which minimizes the MSE objective function. Algorithm II describes sequential steps followed for obtaining the best parameters using WOA-BAT.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Optimization process using WOA-BAT algorithm"
        },
        {
            "text": "The CNN architecture is built using the input layer, Convolution Layer (CL), Max Pooling Layer (MPL), Batch Normalization Layer (BNL), Rectified Linear Unit (ReLu), fully connected layer, and the output layer. The structure of the CNN is illustrated in Fig. 4 . The convolution layer extracts features at every offset of the input image. The hyper parameters of the layers are optimized using the GWO and the WOA-BAT optimization techniques. Output feature maps are sensitive to the location of features in the input image. One solution to address this sensitivity and achieve local translation variance is to perform pooling. After the nonlinearity has been applied to the feature maps obtained from the convolutional layers, pooling is applied. The non-linear activation function used is ReLu, it maps the extracted features into the feature space. There are four types of pooling namely, (i) max pooling, (ii) average pooling, (iii) global max pooling, and, (iv) global average pooling. In our proposed study, max pooling is used, since it retains the most prominent features of the feature maps, thus retaining sharp features. The downsampling is performed using max-pooling of filter size 2 \u00d7 2, stride of [2 2] , and padding of [1 1 1 1] . At the end of the structure, a global average pooling is applied to convert each feature map into one value. The batch normalization layer is responsible for normalizing the gradients and activations through the network. The values generated are further fed to the soft-max activation function to predict the multinomial probability distribution. Table 2 describes the details regarding the convolutional layers and filter size used in building the CNN.",
            "cite_spans": [
                {
                    "start": 1211,
                    "end": 1216,
                    "text": "[2 2]",
                    "ref_id": null
                },
                {
                    "start": 1239,
                    "end": 1243,
                    "text": "1 1]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 253,
                    "end": 259,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 1593,
                    "end": 1600,
                    "text": "Table 2",
                    "ref_id": "TABREF1"
                }
            ],
            "section": "CNN architecture design"
        },
        {
            "text": "During training, the parameters of the convolutional kernels are adjusted based on the best values obtained during the optimization process. CNN usually use stochastic gradient or adam solver to tune the hyper parameters. The choice of the parameters is application dependent. However, appropriate choice of hyper parameters decide the convergence rate and accuracy of CNN in the classification task. If the initial learning rate is too low, then the training takes a longer time. The learning rate hyper parameter decides the change that is required each time, the model is updated depending on the error. Similarly, the L2 regularization parameter adds a regularization term to the cost function, to prevent the model from overfitting. The factor by which the learning rate changes every epoch is decided by the gradient decay factor. These hyper parameters are decided by the optimum best positions obtained by the two aforementioned optimization methodologies (GWO, WOA-BAT).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "CNN architecture design"
        },
        {
            "text": "The proposed set-up was implemented in MATLAB 2020a, on a 64-bit operating system. The data was divided into 80:20 ratio for training and testing respectively for optimization models. The training and testing image classes were randomly partitioned. For, the first ECOC model, from the fully connected layer, a set of 1000 features were obtained. The features were retained as it is and given as an input to the ECOC classifier to perform multiclass classification. The datasets consist of images of variable dimensions (R \u00d7 C). The minimum dimension of the image available in the dataset was 448 \u00d7 448, thus, to maintain uniformity and reduce the processing time, all the images have been resized to 448 \u00d7 448 \u00d7 1. For, the optimized set-ups, an eight convolution layer architecture is designed to classify images into three categories (covid-19, normal and viral pneumonia). The adam solver hyper parameters are chosen based on the two optimization algorithms, optimized based on the training features extracted from the ResNet-50 CNN architecture. The training hyper parameters obtained from the optimization algorithms are given in Table 3 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 1136,
                    "end": 1143,
                    "text": "Table 3",
                    "ref_id": "TABREF2"
                }
            ],
            "section": "Training and testing"
        },
        {
            "text": "The test images are initially resized to 448 \u00d7 448 \u00d7 1 and fed as input to the trained CNN models optimized using GWO and WOA-BAT. Fig. 5(a), and (b) , illustrates the training progress plot using WOA-BAT optimized CNN and un-optimized CNN. It can be observed that a decrease in the training performance is observed for the un-optimized CNN, in comparison to the WOA-BAT optimized CNN. Un-optimized CNN refers to training CNN using the default parameters used by the adam optimizer and then testing the performance using the test samples of the respective datasets. Since there are two datasets, optimization is performed using the first dataset and the same parameters are used for the second dataset. For both datasets, good performance is obtained.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 131,
                    "end": 149,
                    "text": "Fig. 5(a), and (b)",
                    "ref_id": null
                }
            ],
            "section": "Training and testing"
        },
        {
            "text": "The performance of the proposed classification set-up is computed using sensitivity, specificity, accuracy, precision, and F1 score for predicted and annotated results as given in (17) ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Training and testing"
        },
        {
            "text": "The accurate overall predictive ability of the classifier into the three classes is given by Accuracy (ACC). Sensitivity (SE) gives the rate of correctly classified positive instances into three classes. Specificity (SP) deals with the rate of correctly classified negative instances. Precision gives the rate of correctly classified true positives among the cumulative sum of true positives and false positives, it is an important evaluation parameter in multiclass problems. Similarly, the F1 score combines precision and recall, since, in contrast to precision, recall provides an indication of mixed positive predictions. For each class, the True Positives (TP), False Positives (FP), False Negatives (FN), and True Negatives (TN) are computed and summed up to determine the total TP, TN, FP, and FN obtained for all the three classes [23] . Further using the equations given in (17)-(21), the classifier performance is computed. The following subsections provide the confusion matrices and performance evaluation results.",
            "cite_spans": [
                {
                    "start": 839,
                    "end": 843,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [],
            "section": "Training and testing"
        },
        {
            "text": "Dataset 1 was divided into a 30:70 ratio, wherein out of 2905 images, the number of images used for testing was 2033, and 872 images were used for training. Similarly, dataset 2 was also divided randomly into a 30:70 ratio, wherein out of 6432, the number of images used for testing was 4502, and 1930 images were used for training. Table 4 gives the results of classification for the two datasets and the corresponding confusion matrices in Fig. 6(a) and (b) . In Fig. 6, c1, c2 , and c3 belong to covid-19, normal, and viral pneumonia classes respectively.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 333,
                    "end": 340,
                    "text": "Table 4",
                    "ref_id": "TABREF3"
                },
                {
                    "start": 442,
                    "end": 459,
                    "text": "Fig. 6(a) and (b)",
                    "ref_id": "FIGREF7"
                },
                {
                    "start": 465,
                    "end": 479,
                    "text": "Fig. 6, c1, c2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Results of classification using ensemble of ResNet-50 and ECOC classifier"
        },
        {
            "text": "The ResNet-50 and ECOC classification set-up is performed on 50:50 training and test ratio, for the purpose of comparison for both the datasets. Further, five-fold cross-validation is also performed to validate the performance of the model on multiple folds. For dataset 1, each subset consists of 581 images, consisting of images from all the three classes selected using stratified sampling. In the case of dataset 2, there are 6432 images, three subsets consist of 1286 images, and two subsets consist of 1287 images since 6432 is not divisible by 5. The corresponding results of classification are given in Tables 5 and 6 . Table 9 Results of classification using un-optimized CNN. The main advantages of the ECOC-ResNet50 model are as follows:",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 611,
                    "end": 625,
                    "text": "Tables 5 and 6",
                    "ref_id": "TABREF4"
                },
                {
                    "start": 628,
                    "end": 635,
                    "text": "Table 9",
                    "ref_id": null
                }
            ],
            "section": "Results of classification using ensemble of ResNet-50 and ECOC classifier"
        },
        {
            "text": "1. The proposed ResNet50-ECOC model is automated and performs well in the classification of covid-19 images from normal and viral pneumonia cases even under limited data conditions. 2. Simple and avoids complex image pre-processing operations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Results of classification using ensemble of ResNet-50 and ECOC classifier"
        },
        {
            "text": "The dataset 1 was divided into 80:20 ratio, wherein out of 2905, the number of images used for training was 2324, and 581 images were used for testing. Similarly, dataset 2 was also divided randomly into 80:20 ratio, wherein out of 6432, the number of images used for training were 4502, and 1930 samples were used for testing. The Tables 7 and 8 give the results of classification for the two datasets using the two optimization techniques followed by un-optimized CNN classification results in Table 9 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 332,
                    "end": 346,
                    "text": "Tables 7 and 8",
                    "ref_id": null
                },
                {
                    "start": 496,
                    "end": 503,
                    "text": "Table 9",
                    "ref_id": null
                }
            ],
            "section": "Results of classification using GWO and WOA optimized convolutional neural network"
        },
        {
            "text": "In Fig. 7 , the actual values in the bar graph refer to the number of actual samples in the respective classes plotted against each of the predicted sample values for the respective methods. The resultant values are plotted as predicted by the two optimized CNN architectures. In Fig. 7b , the x \u2212 axis corresponds to the frequency of one class samples belonging to the other class. The error rate on the y \u2212 axis is computed for all the designed models as illustrated in Figs. 7b&d, 8b&d, and 9b&d. For instance, a in error rate plot (Figs. 7b&d, 8b&d, and 9b&d ), indicates C 1\u03f5C 2, which correspondingly refers to the number of samples of C 1 incorrectly classified as C 2, similarly b indicates C 1\u03f5C 3, c indicates C 2\u03f5C 1, d indicates C 2\u03f5C 3, e indicates C 3\u03f5C 1, and f indicates C 3\u03f5C 2. The error rate is reported on y \u2212 axis, and it is computed as given in (22) .",
            "cite_spans": [
                {
                    "start": 867,
                    "end": 871,
                    "text": "(22)",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [
                {
                    "start": 3,
                    "end": 9,
                    "text": "Fig. 7",
                    "ref_id": "FIGREF8"
                },
                {
                    "start": 280,
                    "end": 287,
                    "text": "Fig. 7b",
                    "ref_id": "FIGREF8"
                },
                {
                    "start": 535,
                    "end": 562,
                    "text": "(Figs. 7b&d, 8b&d, and 9b&d",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "Results of classification using GWO and WOA optimized convolutional neural network"
        },
        {
            "text": "No.of C 1 samples incorrectly classified as C 2",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Error Rate ="
        },
        {
            "text": "Total no of C 1 samples",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Error Rate ="
        },
        {
            "text": "It can be observed from Figs. 8, and 9, that in comparison to un-optimized CNN architecture, the optimized CNN architectures Five-fold cross-validation is also performed to validate the performance of the model on multiple folds. For dataset 1, five Tables 10 and 11 . A slightly better performance was observed using GWO optimized design in comparison to the WOA optimized design for dataset 1. However, a 100% classification accuracy can be observed in identifying covid-19 images for 80:20 classification set-up since the number of actual samples and the number of predicted samples are equal using WOA-BAT optimization algorithm for datasets 1 and 2.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 250,
                    "end": 266,
                    "text": "Tables 10 and 11",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Error Rate ="
        },
        {
            "text": "A comparative analysis of the proposed CNN designs is performed by comparing with the state of art literature used for the classification of covid-19 chest X-ray images as illustrated in Table 12 . Since there is a difference in the datasets used in the literature, a thorough comparative analysis cannot be carried out. However, a similarity exists between the image type (Chest Xray). The purpose of the comparative study is not only to highlight the improvement in performance by the proposed design but also to provide an insight regarding the datasets used in the previous studies. The state of art methods reported in Table 12 is based on CNN. However, the choice of parameters is mainly standard. The optimization methodology adopted in [9] , is somewhat similar to the proposed design, however, the hyper parameter optimization methodology of our proposed design is unique. In contrast to the methodology reported in [9] , the proposed design has resulted in improved performance for both datasets. Further, in [9] , the optimization was limited to a single dataset, whereas the universal acceptability of optimized parameters is proved by our proposed methodology since the same optimization parameters hold true for dataset 2 resulting in good classification performance. Additionally, most of the state of art methods have used a limited number of images and have not reported the other classification performance parameters. A SqueezeNet architecture with fewer parameters is investigated by providing the Chest X-ray images as the input [24] . The results obtained for the respective datasets are also reported in Table 12 .",
            "cite_spans": [
                {
                    "start": 744,
                    "end": 747,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 925,
                    "end": 928,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 1019,
                    "end": 1022,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 1550,
                    "end": 1554,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                }
            ],
            "ref_spans": [
                {
                    "start": 187,
                    "end": 195,
                    "text": "Table 12",
                    "ref_id": "TABREF0"
                },
                {
                    "start": 624,
                    "end": 632,
                    "text": "Table 12",
                    "ref_id": "TABREF0"
                },
                {
                    "start": 1627,
                    "end": 1635,
                    "text": "Table 12",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Comparative analysis"
        },
        {
            "text": "In this study, an optimized deep learning-based model is proposed to detect and classify covid-19 cases from viral pneumonia and normal chest X-ray images. Since hyper parameters of CNN play an important role in classification accuracy, we have used GWO and ensemble of WOA-BAT techniques to optimize the parameters of CNN. One of the major challenges faced by researchers in developing a computer-aided automated diagnostic tool for detection of covid-19 using X-ray images is the limited availability of data. Creating a large database requires efforts from the radiologist, and also requires time to collect images from various parts of the globe. The proposed method aims to overcome such issues such as misclassification, poor classifier learning capability, and underfitting arising due to limited data. The classification results on the two datasets containing dataset 1 = 2905 images and dataset 2 = 6342 images are comparatively better than the state of art approaches. Although the number of covid-19 images is comparatively low (dataset 1 = 219), (dataset 2 = 576) in contrast to the normal and viral pneumonia cases, covid-19 classification accuracy is quite good, compared to the state of art approaches. The developed system hyper parameters were initially obtained using dataset 1 and the same parameters were kept constant for training and testing of dataset 2. Good classification accuracy of 98% and 96% was obtained for dataset 1 and dataset 2 respectively. Further, a 100% accuracy was achieved for classifying covid-19 images for both the optimization techniques. The proposed method can also be tested in big data situations (larger image database). In the future, we plan to build a robust dataset considering images from multiple diseases (viral pneumonia, bacterial pneumonia, other respiratory diseases, etc.,) and test the optimized CNN methodologies. Since, we plan to build a robust dataset considering images from various hospitals, and test the methodologies, the uncertainties in automatic detection could be handled by increasing the learning ability of the classifier to avoid misclassification of covid-19 cases. The proposed system can be used in covid-19 affected countries with a limited number of radiologists and can be deployed in remote areas to ease the task of covid-19 front line warriors.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion"
        },
        {
            "text": "Sameena Pathan: Idea generation, Literature analysis, Interpretation of results, Software Simulation Analysis, Optimization and validation, Preparation of the manuscript. P.C. Siddalingaswamy: Interpretation of results, Preparation of the manuscript. Tanweer Ali: Literature analysis, Interpretation of results, Optimization and validation, Preparation of the manuscript.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "CRediT authorship contribution statement"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Recommendations on the clinical management of the COVID-19 infection by the ''new coronavirus'' SARS-CoV2. Spanish Paediatric Association working group",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Calvo",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "G"
                    ],
                    "last": "L\u00f3pez-Hortelano",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "C"
                    ],
                    "last": "De Carlos Vicente",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "L V"
                    ],
                    "last": "Mart\u00ednez",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "De Trabajo De La Asociaci\u00f3n",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Anal. Pediatr. (Engl. Ed",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Coronavirus disease 2019 (COVID-19): a perspective from China",
            "authors": [
                {
                    "first": "Z",
                    "middle": [
                        "Y"
                    ],
                    "last": "Zu",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "D"
                    ],
                    "last": "Jiang",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "P"
                    ],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [
                        "Q"
                    ],
                    "last": "Ni",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "M"
                    ],
                    "last": "Lu",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "J"
                    ],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Chest X-ray (Covid-19 & Pneumonia)",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Patel",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "A familial cluster of pneumonia associated with the 2019 novel coronavirus indicating person-to-person transmission: a study of a family cluster",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "F W"
                    ],
                    "last": "Chan",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Yuan",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "H"
                    ],
                    "last": "Kok",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "K W"
                    ],
                    "last": "To",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Chu",
                    "suffix": ""
                },
                {
                    "first": ".",
                    "middle": [
                        "."
                    ],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [
                        "W"
                    ],
                    "last": "Tsoi",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Lancet",
            "volume": "395",
            "issn": "10223",
            "pages": "514--523",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Relation between chest CT findings and clinical conditions of coronavirus disease (COVID-19) pneumonia: a multicenter study",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Zhong",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Xie",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Yu",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Amer. J. Roentgenol",
            "volume": "214",
            "issn": "5",
            "pages": "1072--1077",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Covidx-net: A framework of deep learning classifiers to diagnose covid-19 in x-ray images",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "E D"
                    ],
                    "last": "Hemdan",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "A"
                    ],
                    "last": "Shouman",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "E"
                    ],
                    "last": "Karar",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2003.11055"
                ]
            }
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "COVID-Net: A Tailored deep convolutional neural network design for detection of COVID-19 cases from Chest X-ray images",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wong",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2003.09871"
                ]
            }
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Covid-19: automatic detection from xray images utilizing transfer learning with convolutional neural networks",
            "authors": [
                {
                    "first": "I",
                    "middle": [
                        "D"
                    ],
                    "last": "Apostolopoulos",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [
                        "A"
                    ],
                    "last": "Mpesiana",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Phys. Eng. Sci. Med",
            "volume": "1",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "OptCoNet: an optimized convolutional neural network for an automatic diagnosis of COVID-19",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Goel",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Murugan",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Mirjalili",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "K"
                    ],
                    "last": "Chakrabartty",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Appl. Intell",
            "volume": "",
            "issn": "",
            "pages": "1--16",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Extracting possibly representative COVID-19 biomarkers from X-ray images with deep learning approach and image data related to pulmonary diseases",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Apostolopoulos",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Aznaouridis",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Tzani",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "J. Med. Biol. Eng",
            "volume": "14",
            "issn": "",
            "pages": "1--8",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Automatic detection of coronavirus disease (covid-19) using x-ray images and deep convolutional neural networks",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Narin",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Kaya",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Pamuk",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2003.10849"
                ]
            }
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Deep-COVID: Predicting COVID-19 from chest X-ray images using deep transfer learning",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Shervin Minaee",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Med. Image Anal",
            "volume": "65",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/j.media.2020.101794"
                ]
            }
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Deep residual learning for image recognition",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ren",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition",
            "volume": "",
            "issn": "",
            "pages": "770--778",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Reducing multiclass to binary: A unifying approach for margin classifiers",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "L"
                    ],
                    "last": "Allwein",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "E"
                    ],
                    "last": "Schapire",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Singer",
                    "suffix": ""
                }
            ],
            "year": 2000,
            "venue": "J. Mach. Learn. Res",
            "volume": "1",
            "issn": "",
            "pages": "113--141",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "A new optimizer using particle swarm theory",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Eberhart",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Kennedy",
                    "suffix": ""
                }
            ],
            "year": 1995,
            "venue": "MHS'95. Proceedings of the Sixth International Symposium on Micro Machine and Human Science",
            "volume": "",
            "issn": "",
            "pages": "39--43",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Ant colony optimization",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Dorigo",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Birattari",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Stutzle",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "IEEE Comput. Intell. Mag",
            "volume": "1",
            "issn": "4",
            "pages": "28--39",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Optimization by simulated annealing: Quantitative studies",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Kirkpatrick",
                    "suffix": ""
                }
            ],
            "year": 1984,
            "venue": "J. Stat. Phys",
            "volume": "34",
            "issn": "5-6",
            "pages": "975--986",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "How effective is the Grey Wolf optimizer in training multi-layer perceptrons",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Mirjalili",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Appl. Intell",
            "volume": "43",
            "issn": "1",
            "pages": "150--161",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "The whale optimization algorithm",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Mirjalili",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Lewis",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Adv. Eng. Softw",
            "volume": "95",
            "issn": "",
            "pages": "51--67",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "A systematic and meta-analysis survey of whale optimization algorithm",
            "authors": [
                {
                    "first": "H",
                    "middle": [
                        "M"
                    ],
                    "last": "Mohammed",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "U"
                    ],
                    "last": "Umar",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [
                        "A"
                    ],
                    "last": "Rashid",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Comput. Intell. Neurosci",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Bat algorithm for multi-objective optimisation",
            "authors": [
                {
                    "first": "X",
                    "middle": [
                        "S"
                    ],
                    "last": "Yang",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Int. J. Bio-Inspired Comput",
            "volume": "3",
            "issn": "5",
            "pages": "267--274",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "A systematic analysis of performance measures for classification tasks",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Sokolova",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Lapalme",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "Inf. Process. Manage",
            "volume": "45",
            "issn": "4",
            "pages": "427--437",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "SqueezeNet: AlexNet-level accuracy with 50x fewer parameters and< 0.5 MB model size",
            "authors": [
                {
                    "first": "F",
                    "middle": [
                        "N"
                    ],
                    "last": "Iandola",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Han",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "W"
                    ],
                    "last": "Moskewicz",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Ashraf",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [
                        "J"
                    ],
                    "last": "Dally",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Keutzer",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1602.07360"
                ]
            }
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Detection of coronavirus disease (covid-19) based on deep features",
            "authors": [
                {
                    "first": "P",
                    "middle": [
                        "K"
                    ],
                    "last": "Sethy",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "K"
                    ],
                    "last": "Behera",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Automated detection of COVID-19 cases using deep neural networks with X-ray images",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Ozturk",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Talo",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [
                        "A"
                    ],
                    "last": "Yildirim",
                    "suffix": ""
                },
                {
                    "first": "U",
                    "middle": [
                        "B"
                    ],
                    "last": "Baloglu",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Yildirim",
                    "suffix": ""
                },
                {
                    "first": "U",
                    "middle": [
                        "R"
                    ],
                    "last": "Acharya",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Comput. Biol. Med",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Classification of COVID-19 in chest X-ray images using detrac deep convolutional neural network",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Abbas",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "M"
                    ],
                    "last": "Abdelsamea",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "M"
                    ],
                    "last": "Gaber",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2003.13815"
                ]
            }
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Deep learning covid-19 features on cxr using limited training data sets",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Oh",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Park",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "C"
                    ],
                    "last": "Ye",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Trans. Med. Imaging",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "A novel medical diagnosis model for COVID-19 infection detection based on deep features and Bayesian optimization",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Nour",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "C\u00f6mert",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Polat",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Appl. Soft Comput",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "E-mail address: tanweer.ali@manipal.edu (T. Ali).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "illustrates the three classes of chest x-ray scans namely, normal, viral pneumonia, and covid-19.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Illustration of chest X-ray images, (a) Normal, (b) Viral pneumonia (c) Covid-19[3].",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Overview of ensemble of ResNet-50 and ECOC model.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "The convergence curve for objective function versus iteration.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "The proposed classification set-up using optimization techniques.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "-(21).Accuracy = (TP + TN)/(TP + TN + FP + FN) (17) Sensitivity = TP/(TP + FN)(18)Specificity = TN/(TN + FP)(19)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "Confusion matrices for multiclass ECOC (a) Dataset 1 (b) Dataset 2.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "Illustration of performance for the optimized CNN architecture using GWO and WOA-BAT, (a) Accuracy of correct classification in terms of the number of samples for dataset 1, (b) Error rate computed for different class samples for dataset 1, (c) Accuracy of correct classification in terms of the number of samples for dataset 2, (d) Error rate computed for different class samples for dataset 2.(GWO and WOA-BAT) resulted in a good performance. However, when the two optimized architectures GWO and WOA-BAT are compared, GWO performs slightly better in contrast to WOA-BAT optimized CNN architecture as illustrated inFig. 7.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "Illustration of performance for the GWO optimized and unoptimized CNN architecture, (a) Accuracy of correct classification in terms of the number of samples for dataset 1, (b) Error rate computed for different class samples for dataset 1, (c) Accuracy of correct classification in terms of the number of samples for dataset 2, (d) Error rate computed for different class samples for dataset 2.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "Illustration of performance for the WOA-BAT optimized and unoptimized CNN architecture, (a) Accuracy of correct classification in terms of the number of samples for dataset 1, (b) Error rate computed for different class samples for dataset 1, (c) Accuracy of correct classification in terms of the number of samples for dataset 2, (d) Error rate computed for different class samples for dataset 2.",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "Coding scheme of ECOC.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "Details of CNN architecture.",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "Hyper parameters obtained from optimization.",
            "latex": null,
            "type": "table"
        },
        "TABREF3": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "Results of classification using ensemble of ECOC for 50:50 set-up.",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF7": {
            "text": "Results of five-fold cross-validation using GWO based CNN.",
            "latex": null,
            "type": "table"
        },
        "TABREF8": {
            "text": "Results of five-fold cross-validation using WOA-BAT based CNN. age is computed by determining, the performance of the classifier at each iteration. In the case of dataset 2, there are 6432 images, three subsets consist of 1286 images, and two subsets consist of 1287 images since 6432 is not divisible by 5. Similarly, for each iteration, four subsets are used for training, and one subset is used for testing. The average performance values obtained for the five iterations for the respective datasets using the two optimization techniques are given in",
            "latex": null,
            "type": "table"
        },
        "TABREF9": {
            "text": "Comparative analysis of the proposed method with state of art methods.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Declaration of competing interest"
        }
    ]
}