{
    "paper_id": "e3a9eed2f67a175bcd9be81d8c1fc980cafeabab",
    "metadata": {
        "title": "BinaryCoP: Binary Neural Network-based COVID-19 Face-Mask Wear and Positioning Predictor on Edge Devices",
        "authors": [
            {
                "first": "Nael",
                "middle": [],
                "last": "Fasfous",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Technical University of Munich",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Manoj-Rohit",
                "middle": [],
                "last": "Vemparala",
                "suffix": "",
                "affiliation": {
                    "laboratory": "BMW Group",
                    "institution": "",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Alexander",
                "middle": [],
                "last": "Frickenstein",
                "suffix": "",
                "affiliation": {
                    "laboratory": "BMW Group",
                    "institution": "",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Lukas",
                "middle": [],
                "last": "Frickenstein",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Technical University of Munich",
                    "location": {}
                },
                "email": ""
            },
            {
                "first": "Walter",
                "middle": [],
                "last": "Stechele",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Technical University of Munich",
                    "location": {}
                },
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Face masks have long been used in many areas of everyday life to protect against the inhalation of hazardous fumes and particles. They also offer an effective solution in healthcare for bi-directional protection against air-borne diseases. Wearing and positioning the mask correctly is essential for its function. Convolutional neural networks (CNNs) offer an excellent solution for face recognition and classification of correct mask wearing and positioning. In the context of the ongoing COVID-19 pandemic, such algorithms can be used at entrances to corporate buildings, airports, shopping areas, and other indoor locations, to mitigate the spread of the virus. These application scenarios impose major challenges to the underlying compute platform. The inference hardware must be cheap, small and energy efficient, while providing sufficient memory and compute power to execute accurate CNNs at a reasonably low latency. To maintain data privacy of the public, all processing must remain on the edge-device, without any communication with cloud servers. To address these challenges, we present BinaryCoP, a low-power binary neural network classifier for correct facial-mask wear and positioning. The classification task is implemented on an embedded FPGA accelerator, performing high-throughput binary operations. Classification can take place at up to \u223c6400 frames-per-second and 2W power consumption, easily enabling multi-camera and speed-gate settings. When deployed on a single entrance or gate, the idle power consumption is reduced to 1.65W, improving the battery-life of the device. We achieve an accuracy of up to 98% for four wearing positions of the MaskedFace-Net dataset. To maintain equivalent classification accuracy for all face structures, skin-tones, hair types, and mask types, the algorithms are tested for their ability to generalize the relevant features over a diverse set of examples using the Grad-CAM approach.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Convolutional neural networks (CNNs) have been applied to real-world problems since the early days of their conception [1] . In current times, the ongoing COVID-19 pandemic presents new challenges, which can be solved with the help of state-of-the-art computer vision algorithms [2] , [3] . One of the most simple ways of mitigating the spread of the COVID-19 disease is wearing a face-mask, which can protect the wearer from direct exposure to the virus through the mouth and nasal passages. A correctly worn mask can also protect other people, in case the wearer is already infected with the disease. This bi-directional protection makes masks highly effective in crowded and/or indoor areas. Although face-masks have become a mandatory requirement in many public areas, it is difficult to ensure the compliance of the * Equally contributed general public. More specifically, it is difficult to assert that the masks are worn correctly as intended, i.e. completely covering the nose, mouth and chin [4] .",
            "cite_spans": [
                {
                    "start": 119,
                    "end": 122,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 279,
                    "end": 282,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 285,
                    "end": 288,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 1001,
                    "end": 1004,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "CNNs are the current state-of-the-art in face detection applications. Compared to classical computer vision algorithms, CNNs can provide better accuracy on problems with diverse features without having to manually extract said features [5] . This holds true only when the training dataset has a fair distribution of samples. Correctly identifying a mask on a person's face is a relatively simple task for these powerful algorithms. However, a more precise classification of the exact positioning of the mask and identifying the exposed region of the face is more challenging. To maintain equivalent classification accuracy for all face structures, skintones, hair types, and mask types, the algorithms must be able to generalize the relevant features over all individuals.",
            "cite_spans": [
                {
                    "start": 236,
                    "end": 239,
                    "text": "[5]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "The deployment scenarios for the CNN should also be taken into consideration. A face-mask detector can be set at the entrance of corporate buildings, shopping areas, airport checkpoints, and speed gates. These distributed settings require cheap, battery-powered, edge devices which are limited in memory and compute power. To maintain security and data privacy of the public, all processing must remain on the edge-device without any communication with cloud servers.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "Minimizing power and resource utilization while maintaining a high classification accuracy is a design challenge which necessitates hardware-software co-design. In this context, we propose BinaryCoP (Binary COVID-mask Predictor), an efficient binary neural network (BNN) classifier for real-time classification of correct face-mask wear and positioning. The challenges of the described application are tackled through the following contributions:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "\u2022 Training BNNs on synthetically generated data [6] to cover a wide demographic and generalize relevant taskrelated features. A high accuracy of \u223c98% is achieved for a 4-class problem of mask wear and positioning on the MaskedFace-Net dataset. \u2022 Deploying BNNs on a low-power, real-time embedded FPGA accelerator based on the Xilinx FINN architecture [7] . The accelerator can idle at a low-power of 1.65W on single entrances and gates or operate at highperformance (\u223c6400 frames-per-second) in crowded multi-gate settings, requiring \u223c2W of power. \u2022 The BNNs are analyzed through Gradient-weighted Class Activation Mapping (Grad-CAM) to improve in-terpretability and study the features being learned.",
            "cite_spans": [
                {
                    "start": 48,
                    "end": 51,
                    "text": "[6]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 351,
                    "end": 354,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "Correctly worn masks play a pivotal role in mitigating the spread of the COVID-19 disease during the ongoing pandemic [8] . Members of the general public often underestimate the importance of this simple yet effective method of disease prevention and control. Researchers and data scientists in the field of computer vision have collected data to train and deploy algorithms which help in automatically regulating masks in public spaces and indoor locations [9] , [10] . Although large-scale natural face datasets exist, the number of real-world masked images is limited [9] . Wang et al. [10] extended their masked-face dataset with a Simulated Masked Face Recognition Dataset (SMFRD), which is synthetically generated by applying virtual masks to existing natural face datasets. Cabani et al. [6] improved the generation of synthetically masked-faces by applying a deformable mask-model onto natural face images with the help of automatically detected facial key-points. The keypoints of the deformable mask-model can be matched to the key-points of the face, allowing the application of the mask in a variety of ways. This allows the dataset generation process to further generate examples of incorrectly worn masks, such as chin exposed, nose exposed or nose and mouth exposed.",
            "cite_spans": [
                {
                    "start": 118,
                    "end": 121,
                    "text": "[8]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 458,
                    "end": 461,
                    "text": "[9]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 464,
                    "end": 468,
                    "text": "[10]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 571,
                    "end": 574,
                    "text": "[9]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 589,
                    "end": 593,
                    "text": "[10]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 795,
                    "end": 798,
                    "text": "[6]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "A. COVID-19 Face-Mask Wear and Positioning"
        },
        {
            "text": "The memory footprint of neural networks and the complexity of their arithmetic operations on inference hardware can be reduced through parameter quantization. In the most extreme case, binarizing neural networks constrains their weights and activations to {\u22121, 1}, such that their memory footprint is theoretically reduced by \u00d732 compared to a float-32 CNN [11] . Additionally, simple XNOR and popcount operations can be used to implement multiply-accumulate (MAC) operations on inference hardware [12] . Specialized training schemes have been proposed to mitigate the loss in information capacity introduced by the low-bitwidth representation of BNNs [11] , [13] , [14] , [12] . In some cases, the low information capacity due to binarization can have a regularization effect which improves feature generalization [13] . This is helpful in improving the classification performance on real-world data, particularly when training on synthetically generated data [15] . In [13] , Courbariaux et al. introduced a scheme to train neural networks with binary weights during forward propagation while maintaining latent full-precision values during back propagation. This ensures proper gradient flow and fine adjustments through the gradients. This approach is later extended by the binarization of activations [11] . Rastegari et al. [12] proposed XNOR-Net, where both weights and activations are binarized such that the convolutions of input feature maps and weights can be approximated by a combination of XNOR operations and popcounts, followed by a multiplication with scaling factors. The introduction of scaling factors improves the information capacity of the network at the cost of more trainable parameters for each layer. This adds to the computational complexity of XNOR-Net at deployment time. For the task of face-mask detection with a single subject in the frame (e.g. gates and entrance points), more efficient forms of BNNs [11] can be applied.",
            "cite_spans": [
                {
                    "start": 357,
                    "end": 361,
                    "text": "[11]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 498,
                    "end": 502,
                    "text": "[12]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 652,
                    "end": 656,
                    "text": "[11]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 659,
                    "end": 663,
                    "text": "[13]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 666,
                    "end": 670,
                    "text": "[14]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 673,
                    "end": 677,
                    "text": "[12]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 815,
                    "end": 819,
                    "text": "[13]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 961,
                    "end": 965,
                    "text": "[15]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 971,
                    "end": 975,
                    "text": "[13]",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 1306,
                    "end": 1310,
                    "text": "[11]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 1330,
                    "end": 1334,
                    "text": "[12]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 1936,
                    "end": 1940,
                    "text": "[11]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "B. Binary Neural Networks"
        },
        {
            "text": "Several accelerators have been designed to exploit the benefits of BNNs [16] , [17] , [7] , [18] . The Xilinx FINN [7] framework was developed to accelerate BNNs efficiently on FPGA platforms. The framework compiles high level synthesis (HLS) code from a BNN description to create a hardware design for the network. The generated streaming architecture consists of a pipeline of individual hardware components instantiated for each layer of the BNN. In this work, we deploy BinaryCoP on FINN-based hardware architectures to achieve an efficient acceleration of the maskedface inference on embedded FPGAs. We parameterize and synthesize accelerators with different hardware requirements, geared towards individual COVID-19 mask recognition (lowpower) or multi-camera (multi-gate) classification (highperformance).",
            "cite_spans": [
                {
                    "start": 72,
                    "end": 76,
                    "text": "[16]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 79,
                    "end": 83,
                    "text": "[17]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 86,
                    "end": 89,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 92,
                    "end": 96,
                    "text": "[18]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 115,
                    "end": 118,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "C. BNN Hardware Accelerators"
        },
        {
            "text": "The BNN method proposed by Courbariaux et al. [11] serves as our foundation to efficiently approximate weights and activations to single-bit precision at inference time, such that the neural network's arithmetic operations can be executed as simple logic operations. Smooth model training and convergence is ensured by relying on full-precision latent weights W during training time [19] . In detail, the activation tensor A l\u22121 \u2208 R Xi\u00d7Yi\u00d7Ci , with its dimensions of X i width, Y i height, and C i channels, serves as the input to the convolutional layer l \u2208 [1, ..., L]. Here, A 0 and A L represent the input image and the network's prediction, respectively. The trainable parameters of the 2D-convolutional layers are composed of the latent weight matrix W \u2208 R K\u00d7K\u00d7Ci\u00d7Co required for training, with kernel dimension K, input channels C i , and output channels C o . As previously stated, the latent weights are mapped to {\u22121, +1} during the forward pass for loss calculation or deployment, resulting in the binarized b \u2282 B \u2208 B K\u00d7K\u00d7Ci\u00d7Co . In the hardware implementation, \u22121 is expressed as a binary 0 to perform multiplications as XNOR logic operations. The sign() function in Eq. 1 is used to binarize the input feature maps and weights.",
            "cite_spans": [
                {
                    "start": 46,
                    "end": 50,
                    "text": "[11]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 383,
                    "end": 387,
                    "text": "[19]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [],
            "section": "III. METHOD A. Training and Inference of Binary Neural Networks"
        },
        {
            "text": "The derivative of the sign() function is almost always zero, resulting in insufficient gradient flow during training and back-propagation. This necessitates gradient flow approximation using a straight-through estimator (STE) [19] . Particularly for BNNs, it is of crucial importance to adjust the input elements a l\u22121 \u2282 A l\u22121 , before the approximation into the binary representation h l\u22121 \u2282 H l\u22121 \u2208 B Xi\u00d7Yi\u00d7Ci by means of batch normalization to zero mean and unit Fig. 1 : Schematic representation of the BinaryCoP accelerator. A camera captures images to be classified by the neural network. The BNN accelerator is tailored for the application scenario (single or multi-gate prediction). Binary tensors are processed in the PEs of the FPGA-based accelerator using efficient XNOR operations.",
            "cite_spans": [
                {
                    "start": 226,
                    "end": 230,
                    "text": "[19]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [
                {
                    "start": 466,
                    "end": 472,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "III. METHOD A. Training and Inference of Binary Neural Networks"
        },
        {
            "text": "variance. An advantage of BNNs is that the result of the batch-norm operation is followed by sign() (see Fig. 1 ). Since the result after applying both functions is simply {\u22121, 1}, the precise calculation of the batch-norm is wasteful on embedded hardware. Based on the batch-norm statistics collected at training time, a threshold point \u03c4 is defined, wherein an activation value a l\u22121 \u2265 \u03c4 results in 1, otherwise -1 [7] . This allows the implementation of the typically costly batch-norm operation as a simple magnitude comparison operation on hardware.",
            "cite_spans": [
                {
                    "start": 417,
                    "end": 420,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [
                {
                    "start": 105,
                    "end": 111,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "III. METHOD A. Training and Inference of Binary Neural Networks"
        },
        {
            "text": "Next, the binary convolution follows as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "III. METHOD A. Training and Inference of Binary Neural Networks"
        },
        {
            "text": "which results in the output feature map A l \u2208 R Xo\u00d7Yo\u00d7Co .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "III. METHOD A. Training and Inference of Binary Neural Networks"
        },
        {
            "text": "The trained BNNs are conditioned for deployment on the Xilinx FINN framework [7] . The pipelined architecture offers several advantages on embedded devices, most importantly, the reduction in on-chip to off-chip memory transfers of the BNN parameters B l and intermediate activations A l and H l . This is mainly feasible due to the binary format, which results in highly compact neural networks that can fit on the on-chip memory units of embedded devices. The number of processing elements (PEs), single-instruction-multiple-data (SIMD)-lanes, and other parameters can be optimized by the designer to suit the acceleration of the trained BNN. The final design is synthesized and implemented on an embedded FPGA.",
            "cite_spans": [
                {
                    "start": 77,
                    "end": 80,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "B. Hardware Architecture"
        },
        {
            "text": "For each convolutional or fully-connected layer in the BNN, a matrix-vector-threshold unit (MVTU) is instantiated, which executes the XNOR, popcount and threshold operations mentioned in Sec. III-A. Each MVTU in the pipeline can be dimensioned for the number of PEs and SIMD lanes, which have a significant impact on hardware resource utilization, latency and the effective throughput of the pipeline. Based on the compute complexity of each layer, the available hardware resources need to be distributed over the corresponding MVTUs, such that all parts of the pipeline have a matched-throughput. A single under-dimensioned MVTU could throttle the entire pipeline, resulting in sub-optimal throughput. A single MVTU of the pipeline is shown in Fig. 1 , and a corresponding PE is detailed.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 745,
                    "end": 751,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "B. Hardware Architecture"
        },
        {
            "text": "For convolutional layers, an additional sliding-window unit (SWU) reshapes the binarized activation maps to create a single, wide input feature map memory, which can efficiently be accessed by the corresponding MVTU. Max-pool layers are implemented as boolean OR operations, since a single binary \"1\" value suffices to make the entire pool window output equal to 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. Hardware Architecture"
        },
        {
            "text": "The output of the convolutional layers in a CNN contains localized information of the input image, without any prior bias on the location of objects and features during training. This information can be captured using Class Activation Mapping (CAM) [20] and Gradient-weighted Class Activation Mapping (Grad-CAM) [21] techniques. To apply CAM, the model must end with a global average pooling layer followed by a fully-connected layer, providing the logits of a particular input. The BNN models investigated in this work operate on a small input resolution of 32\u00d732, and achieve a high reduction of spatial information without incorporating a global average pooling layer. For this reason, the Grad-CAM approach is better-suited to obtain visual interpretations of BinaryCoP's attention and determine the important regions for its predictions of different inputs and classes.",
            "cite_spans": [
                {
                    "start": 249,
                    "end": 253,
                    "text": "[20]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 312,
                    "end": 316,
                    "text": "[21]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "C. BNN Interpretability with Grad-CAM"
        },
        {
            "text": "To obtain the class-discriminative localization map, we consider the activations and gradients for the output of the Conv2 2 layer (see Tab. I), which has spatial dimensions of 5\u00d75. We use average pooling for the corresponding gradients and reduce the channels by performing Einstein summation as specified in [21] . With this approach the base networks do not need any modifications or retraining. Due to the synthetically generated dataset used for training, we expect BinaryCoP models to generalize well against domain shifts.",
            "cite_spans": [
                {
                    "start": 310,
                    "end": 314,
                    "text": "[21]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "C. BNN Interpretability with Grad-CAM"
        },
        {
            "text": "BinaryCoP is able to detect the presence of a mask, as well as its position and correctness. This level of classification detail is possible through the more detailed split of the MaskedFace-Net dataset [6] test accuracy). We trained the BNN architectures shown in Tab. I according to the method described in Sec.III-A. Each convolutional (Conv) and fully-connected (FC) layer is followed by batch-norm and activation layers except for the final layer. Conv groups 1 and 2 are followed by a max-pool layer. The target System-on-Chip (SoC) platform for the experiments is the Xilinx XC7Z020 (Z7020) chip on the PYNQ-Z1 board. The \u00b5-CNV design can also be synthesized for the more constrained XC7Z010 (Z7010) chip, when XNOR operations are offloaded to the DSP blocks as described in [23] . Power and throughput measurements are taken directly on a running system. The power is measured at the power supply of the board (includes both the processing system and programmable logic). The throughput reported is the classification rate when the accelerator's pipeline is full, while latency is measured end-to-end for a single image entering and exiting the pipeline. It should be noted that due to the pipelined architecture, throughput is not simply the reciprocal of latency. When the pipeline is full, each MVTU (layer) ideally operates on a different image of the input batch, i.e. concurrently processing L images at different stages of the accelerator.",
            "cite_spans": [
                {
                    "start": 203,
                    "end": 206,
                    "text": "[6]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 782,
                    "end": 786,
                    "text": "[23]",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [],
            "section": "IV. RESULTS AND DESIGN SPACE EXPLORATION A. Experimental Setup"
        },
        {
            "text": "We evaluate three BinaryCoP prototypes, namely CNV, n-CNV and \u00b5-CNV. The CNV network is based on the architecture in [7] inspired by VGG-16 [24] and Bina-ryNet [11] . n-CNV is a downsized version for a smaller memory footprint, and \u00b5-CNV has fewer layers to reduce the size of the synthesized design. All designs are synthesized with a target clock frequency of 100MHz.",
            "cite_spans": [
                {
                    "start": 117,
                    "end": 120,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 140,
                    "end": 144,
                    "text": "[24]",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 160,
                    "end": 164,
                    "text": "[11]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "B. Design Space Exploration"
        },
        {
            "text": "Referring back to Tab. I, the PE counts and SIMD-lanes for each layer (MVTU) are shown in sequence. For BinaryCoPn-CNV, the most complex layer is Conv1 2 with 3.6M XNOR and popcount operations. In Fig. 2 , we mark this layer as the throughput setter, due to its heavy influence on the final throughput of the accelerator. Allocating more PEs for this layer's MVTU increases the overall throughput of the pipeline, so long as no other layer becomes the bottleneck. We allocate enough resources for Conv1 1 to roughly match Conv1 2's latency. The FINN architecture employs a weight-stationary dataflow, since each PE has its own pre-loaded weight memory. When the total number of parameters of a given layer increases, it becomes important to map these parameters to BRAM (Block RAM) units instead of logic. The deeper layers have several orders of magnitude fewer OPs, but more parameters. For these layers, increasing the number of PEs fragments the total weight memory, leading to worse BRAM utilization and no benefit in terms of throughput. Here, choosing fewer PEs, with larger unified weight memories, leads to improved memory allocation, while maintaining rate-matching with the shallow layers (see Fig. 2 ), leaving the throughput gains from the initial PEs unhindered. The CNV architecture in [7] follows the same reasoning for PE and SIMD allocation. For \u00b5-CNV, we choose fewer PEs for the throughput-setters, as this prototype is meant to fit on embedded FPGAs with less emphasis on high frame rates. In Tab. II, the hardware utilization for the BinaryCoP prototypes is provided. With \u00b5-CNV, a significant reduction in LUTs is achieved, which makes the design synthesizable on the heavily constrained Z7010 SoC. The trade-off is a slight increase in the memory footprint of the BNN, as the shallower network has a larger spatial dimension before the fully-connected layers, increasing the total number of parameters after the last convolutional layer. The choice of PE count and SIMD lanes for the n-CNV prototype allow it to reach a maximum throughput of \u223c6400 classifications per second when its pipeline is full. This high-performance can be used to classify images from multiple cameras in multi-gate settings. The inference power values reported in Tab. II show a total power requirement of around 2W for all prototypes. For single entrance/gate classifications, all prototypes have an idle power of around 1.65W. In this setting, a classification needs to be triggered only when a subject is attempting to pass through the entrance where BinaryCoP is deployed. The idle power is required mostly by the processor (ARM-Cortex A9) on the SoC and the board (PYNQ-Z1). This can be reduced further by choosing a smaller processor to pair with the proposed hardware accelerator. Although the PYNQ-Z1 board has no PMBus to isolate the power measurements of the FPGA from the rest of the components, we can infer that the hardware accelerator requires roughly 0.4W for the inference task from the two measured power values in Tab. II. The current design is still dependent on the processor for pre-and post-processing, therefore we report the joint power for fairness.",
            "cite_spans": [
                {
                    "start": 1301,
                    "end": 1304,
                    "text": "[7]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [
                {
                    "start": 197,
                    "end": 203,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 1205,
                    "end": 1211,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "B. Design Space Exploration"
        },
        {
            "text": "The confusion matrix in Fig. 3 shows the generalization of BinaryCoP-CNV on all classes after balancing the dataset. As expected, it is extremely rare to mistake nose+mouth exposed with a correctly worn mask. Less critically, nose and nose+mouth have a slight misclassification overlap, still at only 2% of the total samples given for each class. Finally, the chin exposed and the correct class have some sample misclassifications (\u22641%), which could be attributed to the chin area being small in some images and hard to detect at low-resolution. We further analyze the output heat maps generated by Grad-CAM to interpret the predictions of our BNNs with respect to the diverse attributes of the MaskedFace-Net dataset. In Fig. 4 and Fig. 5 -Fig. 7 , column 1 and 2 indicate the label and input image respectively. Columns 3, 4 and 5 highlight the heat maps obtained from the Grad-CAM output of BinaryCoP-CNV, BinaryCoP-n-CNV and a full-precision version of CNV with float-32 parameters (FP32). The heat maps are overlaid on the raw input images for better visualization. All raw images chosen have been classified correctly by all the networks, for fair interpretation of feature-to-prediction correlation.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 24,
                    "end": 30,
                    "text": "Fig. 3",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 722,
                    "end": 728,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 733,
                    "end": 747,
                    "text": "Fig. 5 -Fig. 7",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "C. Grad-CAM and Confusion Matrix Analysis"
        },
        {
            "text": "In Fig. 4 (a), we analyze the Region of Interest (RoI) for the correctly masked class. BinaryCoP's learning capacity allows it to focus on key facial lineaments of the human wearing the mask, rather than the mask itself. This potentially helps in generalizing on other mask types. For the child example shown in the first row, the focus of BinaryCoP lies on the nose area, asserting that it is fully covered to result in a correctly masked prediction. Similarly, for the adult in row 2, BinaryCoP-CNV focuses on the upper edge of the mask, to predict its coverage of the face. This also holds for our small version of BinaryCoP, with significantly reduced learning capacity. The RoI curves finely above the mask, tracing the exposed region of the face. In the third row example, BinaryCoP-CNV falls back to focusing on the mask, whereas BinaryCoP-n-CNV continues to focus on the exposed features. Both models achieve the same prediction by focusing on different parts of the raw image. In contrast to the BinaryCoP variants, the full-precision FP32 model seems to focus on a combination of several different features on all three examples. This can be attributed to its larger learning capacity and possible overfitting. In Fig. 4 (b), we analyze the Grad-CAM output of the uncovered nose class. BinaryCoP-CNV and BinaryCoP-n-CNV focus specifically on two regions, namely the nose and the straight upper edge of the mask. These clear characteristics cannot be observed with the oversized FP32 CNN. In Fig 4(c) , the results show the RoI for predicting the exposed mouth and nose class. All models seem to distribute their attention onto several exposed features of the face. Fig. 4(d) shows Grad-CAM results for chin exposed predictions. Although the top region of the mask points upwards, similar to the correctly worn mask, the BNNs pay less attention to this region and instead focus on the neck and chin. With the full-precision FP32 model, it is difficult to interpret the reason for the correct classification, as little to no focus is given to the chin region, again hinting at possible overfitting.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 3,
                    "end": 9,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1224,
                    "end": 1230,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1498,
                    "end": 1509,
                    "text": "In Fig 4(c)",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1675,
                    "end": 1684,
                    "text": "Fig. 4(d)",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "C. Grad-CAM and Confusion Matrix Analysis"
        },
        {
            "text": "Beyond studying the BNNs' behavior on different class predictions, we can use the attention heat maps to understand the generalization behavior of the classifier. In Fig. 5 -Fig. 7 , we test BinaryCoP's generalization over ages, hair colors and head gear, as well as complete face manipulation with double-masks, face paint and sunglasses. In Fig 5, we see that the smaller eyes of infants and elderly do not hinder BinaryCoP's ability to focus on the top region of the correctly worn masks. In Fig. 6 , BinaryCoP-CNV shows resilience to differently colored hair and head-gear, even when having a similar light-blue color as the face-masks (row 2 and 3). In contrast, the FP32 model's attention seems to shift towards the hair and head-gear for these cases. Finally, in Fig. 7 , both BinaryCoP variants focus on relevant features of the corresponding label, irrespective of the obscured or manipulated faces. This empirically shows that the complex training of BNNs, along with their lower information capacity, constrains them to focus on a smaller set of relevant features, thereby generalizing well for unprecedented cases.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 166,
                    "end": 180,
                    "text": "Fig. 5 -Fig. 7",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 343,
                    "end": 349,
                    "text": "Fig 5,",
                    "ref_id": null
                },
                {
                    "start": 495,
                    "end": 501,
                    "text": "Fig. 6",
                    "ref_id": "FIGREF4"
                },
                {
                    "start": 770,
                    "end": 776,
                    "text": "Fig. 7",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "C. Grad-CAM and Confusion Matrix Analysis"
        },
        {
            "text": "As mentioned in Sec II-A, detection of masks has piqued the interest of many researchers in the computer vision domain due to its relevance in the context of the ongoing COVID-19 pandemic. NVIDIA proposed mask recognition using object detection models [25] . These models require INT8 or Float-16 numerical precision, with ResNet-18 as a backbone for input images of 960\u00d7544. The complexity is orders of magnitude higher than the models we propose in this paper. A head-to-head comparison is difficult to make due to differences in the training approach, the CNN model, the datasets used and the application requirements. The networks are trained to predict only two classes (mask, no mask), which is a simpler problem compared to the exact positioning supported by BinaryCoP. However, the localization and higher resolution makes it a more complex task overall. With the NVIDIA Jetson Nano hardware, which typically requires \u223c10W of power on intensive workloads, a framerate of 21 FPS is achieved. The more powerful 25W Jetson AGX Xavier can achieve up to 508 FPS. Compared to the NVIDIA approach [25] , BinaryCoP is targeted at low-power, embedded applications with peak inference power of \u223c2W and high classification rates of up to \u223c6400 FPS on smaller resolution input images. It is worth noting that BinaryCoP can also classify high resolution images containing multiple individuals, by slicing the input into many 32\u00d732 frames and batch processing them. This application makes use of the high-throughput results presented in Tab. II. Another approach proposed by Agarwal et al. [26] achieves the task of detecting a range of personal protective equipment (PPE). Processing takes place on cloud servers, which could raise privacy and data safety concerns in public settings. Wang et al. [27] propose an in-browser server-less edge computing method, with object detection models. The browser-enabled device must support the WebAssembly instruction format. The authors benchmarked their approach on an iPad Pro (A9X), an iPhone 11 (A13) and a MacBook pro (Intel i7-9750H), achieving 5, 10 and 20 FPS respectively. Needless to say, these devices (or similar) are expensive and cannot be placed in abundance in public areas. Similarly, [28] offers an Android application solution, which is suitable for users selfchecking their masks. In this case, low-power, edge-hardware and continuous surveillance are not emphasized.",
            "cite_spans": [
                {
                    "start": 252,
                    "end": 256,
                    "text": "[25]",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 1098,
                    "end": 1102,
                    "text": "[25]",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 1584,
                    "end": 1588,
                    "text": "[26]",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 1792,
                    "end": 1796,
                    "text": "[27]",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 2237,
                    "end": 2241,
                    "text": "[28]",
                    "ref_id": "BIBREF31"
                }
            ],
            "ref_spans": [],
            "section": "D. Discussion and Comparison with Other Works"
        },
        {
            "text": "Our approach offers a unique, low-power, high-throughput solution, which is applicable to cheap, embedded FPGAs. Moreover, the BinaryCoP solution is not constrained to FPGA platforms. Software-based inference of BinaryCoP is also possible on other low-power microcontrollers, with binary instructions. Training on synthetic data allows us to generate more samples with different mask colors, shapes, and sizes [29] , further improving the generalizability of the BNNs, while keeping real-world data available for finetuning stages.",
            "cite_spans": [
                {
                    "start": 410,
                    "end": 414,
                    "text": "[29]",
                    "ref_id": "BIBREF32"
                }
            ],
            "ref_spans": [],
            "section": "D. Discussion and Comparison with Other Works"
        },
        {
            "text": "In this paper, we apply binary neural networks to the task of classifying the correctness of face-mask wear and positioning. In the context of the ongoing COVID-19 pandemic, such algorithms can be used at entrances to corporate buildings, airports, shopping areas, and other indoor locations to mitigate the spread of the virus. Applying BNNs to this application solves several challenges such as (1) maintaining data privacy of the public by processing data on the edgedevice, (2) deploying the classifier on an efficient XNORbased accelerator to achieve low-power computation, and (3) minimizing the neural network's memory footprint by representing all parameters in the binary domain, enabling deployment on low-cost, embedded hardware. The accelerator requires only \u223c1.65W of power when idling on single gates/entrances. Alternatively, high-performance is possible, providing fast batch classification on multiple gates and entrances with multiple cameras, at \u223c6400 frames-per-second and 2W of power. We achieve an accuracy of up to 98% for four wearing positions of the MaskedFace-Net dataset. The Grad-CAM approach is used to study the features learned by the proposed BinaryCoP classifier. The results show the classifier's high generalization ability, allowing it to perform well on different face structures, skin-tones, hair types, and age groups.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "V. CONCLUSION"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Gradient-based learning applied to document recognition",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Lecun",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Bottou",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Bengio",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Haffner",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "Proceedings of the IEEE",
            "volume": "86",
            "issn": "11",
            "pages": "2278--2324",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Covid-net: A tailored deep convolutional neural network design for detection of covid-19 cases from chest x-ray images",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [
                        "Q"
                    ],
                    "last": "Lin",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wong",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Scientific Reports",
            "volume": "10",
            "issn": "1",
            "pages": "1--12",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Coronet: A deep neural network for detection and diagnosis of covid-19 from chest x-ray images",
            "authors": [
                {
                    "first": "A",
                    "middle": [
                        "I"
                    ],
                    "last": "Khan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "L"
                    ],
                    "last": "Shah",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "M"
                    ],
                    "last": "Bhat",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Computer Methods and Programs in Biomedicine",
            "volume": "196",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/j.cmpb.2020.105581"
                ]
            }
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "When and how to use masks",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Deep learning vs. traditional computer vision",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "O&apos;mahony",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Campbell",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Carvalho",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Harapanahalli",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "V"
                    ],
                    "last": "Hernandez",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Krpalkova",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Riordan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Walsh",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Advances in Computer",
            "volume": "",
            "issn": "",
            "pages": "128--144",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Maskedface-net -a dataset of correctly/incorrectly masked face images in the context of covid-19",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Cabani",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Hammoudi",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Benhabiles",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Melkemi",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Smart Health",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Finn: A framework for fast, scalable binarized neural network inference",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Umuroglu",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [
                        "J"
                    ],
                    "last": "Fraser",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Gambardella",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Blott",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Leong",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Jahre",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Vissers",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "ACM/SIGDA International Symposium on Field-Programmable Gate Arrays, ser. FPGA '17",
            "authors": [],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "65--74",
            "other_ids": {
                "DOI": [
                    "http:/doi.acm.org/10.1145/3020078.3021744"
                ]
            }
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Face masks considerably reduce covid-19 cases in germany",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Mitze",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Kosfeld",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Rode",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "W\u00e4lde",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Proceedings of the National Academy of Sciences",
            "volume": "117",
            "issn": "51",
            "pages": "32--293",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Detecting masked faces in the wild with lle-cnns",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ge",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Ye",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Luo",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "2017 IEEE Conference on Computer Vision and Pattern Recognition",
            "volume": "",
            "issn": "",
            "pages": "426--434",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Masked Face Recognition Dataset and Application",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Xiong",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Hong",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Yi",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Jiang",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Pei",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Miao",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Liang",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2003.09093"
                ]
            }
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Binarized neural networks",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Hubara",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Courbariaux",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Soudry",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "El-Yaniv",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Bengio",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Advances in Neural Information Processing Systems 29",
            "volume": "",
            "issn": "",
            "pages": "4107--4115",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "XNOR-Net: ImageNet Classification Using Binary Convolutional Neural Networks",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Rastegari",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Ordonez",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Redmon",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Farhadi",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "The European Conference on Computer Vision (ECCV)",
            "volume": "",
            "issn": "",
            "pages": "525--542",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Binaryconnect: Training deep neural networks with binary weights during propagations",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Courbariaux",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Bengio",
                    "suffix": ""
                },
                {
                    "first": "J.-P",
                    "middle": [],
                    "last": "David",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "Advances in Neural Information Processing Systems (NeurIPS)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Towards accurate binary convolutional neural network",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Lin",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Pan",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Advances in Neural Information Processing Systems",
            "volume": "30",
            "issn": "",
            "pages": "345--353",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Binary DAD-Net: Binarized Driveable Area Detection Network for Autonomous Driving",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Frickenstein",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Vemparala",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Mayr",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Shankar Nagaraja",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Unger",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Tombari",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Stechele",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2006.08178"
                ]
            }
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Yodann: An architecture for ultralow power binary-weight cnn acceleration",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Andri",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Cavigelli",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Rossi",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Benini",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems",
            "volume": "37",
            "issn": "1",
            "pages": "48--60",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Brein memory: A single-chip binary/ternary reconfigurable in-memory deep neural network accelerator achieving 1.4 tops at 0.6 w",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Ando",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Ueyoshi",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Orimo",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Yonekawa",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Sato",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Nakahara",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Takamaeda-Yamazaki",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ikebe",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Asai",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Kuroda",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Motomura",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "IEEE Journal of Solid-State Circuits",
            "volume": "53",
            "issn": "4",
            "pages": "983--994",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Towards fast and energy-efficient binarized neural network inference on fpga",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Fu",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Zhu",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Su",
                    "suffix": ""
                },
                {
                    "first": "C.-E",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the 2019 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays, ser. FPGA '19",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Estimating or propagating gradients through stochastic neurons for conditional computation",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Bengio",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "L\u00e9onard",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "C"
                    ],
                    "last": "Courville",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "CoRR",
            "volume": "3432",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Learning deep features for discriminative localization",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Khosla",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Lapedriza",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Oliva",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Torralba",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)",
            "volume": "",
            "issn": "",
            "pages": "2921--2929",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Grad-cam: Visual explanations from deep networks via gradient-based localization",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "R"
                    ],
                    "last": "Selvaraju",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Cogswell",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Das",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Vedantam",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Parikh",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Batra",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Proceedings of the IEEE International Conference on Computer Vision (ICCV)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Learning multiple layers of features from tiny images",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Krizhevsky",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Orthruspe: Runtime reconfigurable processing elements for binary neural networks",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Fasfous",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "R"
                    ],
                    "last": "Vemparala",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Frickenstein",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Stechele",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "1662--1667",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Very deep convolutional networks for large-scale image recognition",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Simonyan",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Zisserman",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Implementing a real-time, ai-based, face mask detector application for covid-19",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Kulkarni",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Vishwanath",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Shah",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Automatically detecting personal protective equipment on persons in images using amazon rekognition",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Agrawal",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Imran",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Figus",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Kirkpatrick",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "Wear-Mask: Fast In-browser Face Mask Detection with Serverless Edge Computing for COVID-19",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "C"
                    ],
                    "last": "Louis",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [
                        "E"
                    ],
                    "last": "Wheless",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Huo",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2101.00784"
                ]
            }
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Validating the correct wearing of protection mask by taking a selfie: Design of a mobile application \"checkyourmask\" to limit the spread of covid-19",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Hammoudi",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Cabani",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Benhabiles",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Melkemi",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Computer Modeling in Engineering & Sciences",
            "volume": "124",
            "issn": "3",
            "pages": "1049--1059",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "Masked Face Recognition for Secure Authentication",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Anwar",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Raychowdhury",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2008.11104"
                ]
            }
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "from 2 classes, namely Correctly Masked Face Dataset (CMFD) and Incorrectly Masked Face Dataset (IMFD), to 4 classes of CMFD, IMFD Nose, IMFD Chin, and IMFD Nose and Mouth. The dataset suffers from high imbalance in the number of samples per class. From the total 133,783 samples, roughly 5% of the samples are IMFD Chin, and another 5% samples are IMFD Nose and Mouth. CMFD samples make up 51% of the total dataset while IMFD Nose makes up 39%. The dataset in its raw distribution would heavily bias the training towards the two dominant classes. To counter this, we randomly sample the larger classes CMFD and IMFD Nose to collect a comparable number of examples to the two remaining classes, IMFD Chin and IMFD Nose and Mouth. The evenly balanced dataset is then randomly augmented with a varying combination of contrast, brightness, gaussian noise, flip and rotate operations. The final size of the balanced dataset is 110K train and validation examples and 28K test samples. The images are resized to 32\u00d732 pixels, similar to the CIFAR-10 [22] dataset. The BNNs are trained up to 300 epochs, unless learning saturates earlier. The full-precision (FP32) variant used for the Grad-CAM comparison is trained for 175 epochs due to early learning saturation (98.6% final",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Binary operations and layer-wise latency estimates based on PE/SIMD choices for BinaryCoP-n-CNV.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Confusion matrix of BinaryCoP-CNV on the test set.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Grad-CAM output of two BinaryCoP variants and a float-32 (FP32) CNN. Results are collected for all four wearing positions on a diverse set of individuals. Binarized models show distinct regions of interest which are focused on the exposed part of the face rather than the mask. The FP32 model is difficult to interpret in some cases.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Grad-CAM results for hair/headgear generalization.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Grad-CAM results for face manipulation with doublemasks, face paint and sunglasses.",
            "latex": null,
            "type": "figure"
        },
        "TABREF1": {
            "text": "Network architectures and hardware dimensioning.",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "Hardware results of design space exploration. Required by the board and ARM-Cortex A9 processor. Accelerator is idle.",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "Fig. 5: Grad-CAM results for age generalization.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}