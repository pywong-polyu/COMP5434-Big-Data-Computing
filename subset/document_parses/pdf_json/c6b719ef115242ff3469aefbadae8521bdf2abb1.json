{
    "paper_id": "c6b719ef115242ff3469aefbadae8521bdf2abb1",
    "metadata": {
        "title": "LinearSampling: Linear-Time Stochastic Sampling of RNA Secondary Structure with Applications to SARS-CoV-2",
        "authors": [
            {
                "first": "He",
                "middle": [],
                "last": "Zhang",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Baidu Research",
                    "location": {
                        "settlement": "Sunnyvale",
                        "region": "CA"
                    }
                },
                "email": ""
            },
            {
                "first": "Liang",
                "middle": [],
                "last": "Zhang",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Sizhen",
                "middle": [],
                "last": "Li",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Baidu Research",
                    "location": {
                        "settlement": "Sunnyvale",
                        "region": "CA"
                    }
                },
                "email": ""
            },
            {
                "first": "David",
                "middle": [
                    "H"
                ],
                "last": "Mathews",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Baidu Research",
                    "location": {
                        "settlement": "Sunnyvale",
                        "region": "CA"
                    }
                },
                "email": ""
            },
            {
                "first": "Liang",
                "middle": [],
                "last": "Huang",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Baidu Research",
                    "location": {
                        "settlement": "Sunnyvale",
                        "region": "CA"
                    }
                },
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Many RNAs fold into multiple structures at equilibrium. The classical stochastic sampling algorithm can sample secondary structures according to their probabilities in the Boltzmann ensemble, and is widely used, e.g., for accessibility prediction. However, the current sampling algorithm, consisting of a bottom-up partition function phase followed by a top-down sampling phase, suffers from three limitations: (a) the formulation and implementation of the sampling phase are unnecessarily complicated; (b) much redundant work is repeatedly performed in the sampling phase; (c) the partition function runtime scales cubically with the sequence length. These issues prevent it from being used for full-length viral genomes such as SARS-CoV-2. To address these problems, we first present a hypergraph framework under which the sampling algorithm can be greatly simplified. We then present three sampling algorithms under this framework of which two eliminate redundant work in the sampling phase. Finally, we present Lin-earSampling, an end-to-end linear-time sampling algorithm that is orders of magnitude faster than the standard algorithm. For instance, LinearSampling is 111\u00d7 faster (48s vs. 1.5h) than Vienna RNAsubopt on the longest sequence in the RNAcentral dataset that RNAsubopt can run (15,780 nt). More importantly, LinearSampling is the first sampling algorithm to scale to the full genome of SARS-CoV-2, taking only 96 seconds on its reference sequence (29,903 nt). It finds 23 regions of 15 nt with high accessibilities, which can be potentially used for COVID-19 diagnostics and drug design.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "RNAs are involved in many cellular processes, including expressing genes, guiding RNA modification (Eddy, 2001) , catalyzing reactions (Doudna and Cech, 2002) and regulating diseases (Kung et al., 2013) . Many functions of RNAs are highly related to their secondary structures. However, determining the structures using experimental methods, such as X-ray crystallography (Zhang and Ferr\u00e9-D'Amar\u00e9, 2014) , Nuclear Magnetic Resonance (NMR) (Zhang and Keane, 2019) , or cryo-electron microscopy (Lyumkis, 2019) , are expensive, slow and difficult. Therefore, being able to rapidly and accurately predict RNA secondary structures is desired.",
            "cite_spans": [
                {
                    "start": 99,
                    "end": 111,
                    "text": "(Eddy, 2001)",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 135,
                    "end": 158,
                    "text": "(Doudna and Cech, 2002)",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 183,
                    "end": 202,
                    "text": "(Kung et al., 2013)",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 372,
                    "end": 403,
                    "text": "(Zhang and Ferr\u00e9-D'Amar\u00e9, 2014)",
                    "ref_id": "BIBREF37"
                },
                {
                    "start": 439,
                    "end": 462,
                    "text": "(Zhang and Keane, 2019)",
                    "ref_id": "BIBREF35"
                },
                {
                    "start": 493,
                    "end": 508,
                    "text": "(Lyumkis, 2019)",
                    "ref_id": "BIBREF20"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Commonly, the minimum free energy (MFE) structure is predicted (Nussinov and Jacobson, 1980, Zuker and Stiegler, 1981) , but these methods do not capture the fact that multiple conformations exist at equilibrium, especially for mRNAs (Lai et al., 2018 , Long et al., 2007 , Lu and Mathews, 2008 , Tafer et al., 2008 . To address this, McCaskill (1990) pioneered the partition functionbased methods, which account for the ensemble of all possible structures. The partition function can estimate the base pairing probabilities p i,j , the probability of nucleotides i and j are paired, and the unpaired probabilities q i = 1 \u2212 j p i,j , the probability of i being unpaired.",
            "cite_spans": [
                {
                    "start": 63,
                    "end": 76,
                    "text": "(Nussinov and",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 77,
                    "end": 102,
                    "text": "Jacobson, 1980, Zuker and",
                    "ref_id": null
                },
                {
                    "start": 103,
                    "end": 118,
                    "text": "Stiegler, 1981)",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 234,
                    "end": 251,
                    "text": "(Lai et al., 2018",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 252,
                    "end": 271,
                    "text": ", Long et al., 2007",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 272,
                    "end": 294,
                    "text": ", Lu and Mathews, 2008",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 295,
                    "end": 315,
                    "text": ", Tafer et al., 2008",
                    "ref_id": "BIBREF32"
                },
                {
                    "start": 335,
                    "end": 351,
                    "text": "McCaskill (1990)",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "However, the estimated base-pairing and unpaired probabilities p i,j 's and q i 's, being marginalized over all possible structures, only provide compact representations of the exponentially large ensemble, but can not provide direct and intuitive descriptions. First, in many situations, we prefer to see a sample of representative structures according to their Boltzmann probabilities, which is more intuitive than the marginal probabilities. And more importantly, we often want to predict the probability that a region is completely unpaired, known as the accessibility of that region, which plays an important role in the siRNA sequence design (Bohula et al., 2003 , Kretschmer-Kazemi Far and Sczakiel, 2003 , Petch et al., 2003 . Accessibility cannot be simply computed as the product of the unpaired probabilities for each base in the region because those probabilities are not independent.",
            "cite_spans": [
                {
                    "start": 648,
                    "end": 668,
                    "text": "(Bohula et al., 2003",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 669,
                    "end": 711,
                    "text": ", Kretschmer-Kazemi Far and Sczakiel, 2003",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 712,
                    "end": 732,
                    "text": ", Petch et al., 2003",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "To alleviate these issues, Ding and Lawrence (2003) pioneered the widely-used technique of stochastic sampling, which samples secondary structures according to their probabilities in the ensemble. Their algorithm consists of two phases: the first \"inside\" phase computes the partition function (but not those marginal probabilities) in a standard bottom-up fashion, and the second \"sampling\" phase generates structures in a top-down iterative refinement fashion. This algorithm can solve the accessibility prediction problem easily: just sample k structures and see how many of them have the region of interest completely unpaired. Two popular RNA folding packages, RNAstructure (Mathews and Turner, 2006) and Vienna RNAfold (Lorenz et al., 2011) , both implement this sampling algorithm.",
            "cite_spans": [
                {
                    "start": 27,
                    "end": 51,
                    "text": "Ding and Lawrence (2003)",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 679,
                    "end": 705,
                    "text": "(Mathews and Turner, 2006)",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 725,
                    "end": 746,
                    "text": "(Lorenz et al., 2011)",
                    "ref_id": "BIBREF18"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "However, widely-used as it is, the standard Ding and Lawrence sampling algorithm suffers from three limitations. First, its formulation and implementation are unnecessarily complicated. In their algorithm, each component, such as a base pair, hairpin loop, internal loop or multiloop, is sampled based on its conditional probability that represents its contribution to the partition function, and the corresponding probabilities are calculated using complicated equations. Secondly, in the sampling phase, much redundant work is repeatedly performed, wasting significant amount of time especially for large sample sizes. Finally, it relies on the standard partition function calculation that takes O(n 3 )-runtime, where n is the sequence length. This slowness prevents it from being used for long sequences including the whole-genome viral sequences such as SARS-CoV-2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "To alleviate these three issues, we present one solution to each of them. We adopt the hypergraph framework (Finkelstein and Roytberg, 1993, Gallo et al., 1993) , under which the sampling algorithm can be greatly simplified. The key observation is that all needed information for sampling is encoded in the forward process of the equilibrium partition function computation. The information can be represented by a hypergraph, and then sampling can be simplified as recursive stochastic backtracing a path in the hypergraph.",
            "cite_spans": [
                {
                    "start": 108,
                    "end": 124,
                    "text": "(Finkelstein and",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 125,
                    "end": 160,
                    "text": "Roytberg, 1993, Gallo et al., 1993)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Under this framework, we present three sampling algorithms, with the first (non-saving) being similar to but much simpler and cleaner than Ding and Lawrence's, and the other two (full-saving and lazy-saving) aiming to reduce the redundant work in the first.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Finally, we present LinearSampling, an end-to-end linear-time sampling algorithm that is orders of magnitude faster than the standard algorithm, to further overcome the slowness and scalability issues. We replace the classical cubic-runtime partition function computation with our recent proposed LinearPartition (Zhang et al., 2020) , a linear-time algorithm that approximates the partition function, whose efficiency and approximation quality have been demonstrated. Following the hypergraph framework, we modify LinearPartition by saving the backpointers to build up the hypergraph in linear time against the sequence length, and sample structures simply by choosing a path in the hypergraph, which also takes linear time. With such efforts, LinearSampling achieves 111\u00d7 speedup compared to RNAsubopt on the longest sequence of length 15,780 nt that RNAsubopt can run. 1 As the COVID-19 outbreak spreads, it is of great value to find the regions with high accessibilities in SARS-CoV-2, which can be potentially used for diagnostics and drug design. However, there was no tool that can sample structures and calculate the accessibilities on such long sequences and consider global, long-range base pairs. We show that LinearSampling can successfully scale up to the whole-genome SARS-CoV-2 sequence of length about 30,000 nt, and list regions with high accessibilities, using the free energy change as an indicator.",
            "cite_spans": [
                {
                    "start": 313,
                    "end": 333,
                    "text": "(Zhang et al., 2020)",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 872,
                    "end": 873,
                    "text": "1",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "We first formulate (in Sec. 2.2.1) the search space of RNA folding using the framework of (directed) hypergraphs (Finkelstein and Roytberg, 1993, Gallo et al., 1993) which have been used for both context-free parsing Chiang, 2005, Klein and Manning, 2001) , a problem closely related to RNA folding (Durbin et al., 1998) , and RNA folding itself (Finkelstein and Roytberg, 1993, Ponty and Saule, 2011) . This formulation makes it possible to present the various sampling algorithms succinctly, and simplifies complexity analysis.",
            "cite_spans": [
                {
                    "start": 113,
                    "end": 129,
                    "text": "(Finkelstein and",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 130,
                    "end": 165,
                    "text": "Roytberg, 1993, Gallo et al., 1993)",
                    "ref_id": null
                },
                {
                    "start": 217,
                    "end": 240,
                    "text": "Chiang, 2005, Klein and",
                    "ref_id": null
                },
                {
                    "start": 241,
                    "end": 255,
                    "text": "Manning, 2001)",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 299,
                    "end": 320,
                    "text": "(Durbin et al., 1998)",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 346,
                    "end": 362,
                    "text": "(Finkelstein and",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 363,
                    "end": 388,
                    "text": "Roytberg, 1993, Ponty and",
                    "ref_id": null
                },
                {
                    "start": 389,
                    "end": 401,
                    "text": "Saule, 2011)",
                    "ref_id": "BIBREF28"
                }
            ],
            "ref_spans": [],
            "section": "Sampling Algorithms"
        },
        {
            "text": "In this framework, we will see (in Sec. 2.2) that sampling can be done in a simple way similar to the bottomup inside phase for partition function, except that sampling is done in a top-down way; this formulation exploiting the symmetry is cleaner and simpler than the original algorithm of Ding and Lawrence (2003) . In particular, we present three versions: non-saving (which is closest to Ding and Lawrence, i.e., it does not save hyperedges during the inside phase, and repeatedly recovers hyperedges during sampling phase), full-saving (which saves all hyperedges during inside phase), and lazy-saving (which only recovers and saves hyperedges on demand).",
            "cite_spans": [
                {
                    "start": 291,
                    "end": 315,
                    "text": "Ding and Lawrence (2003)",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "Sampling Algorithms"
        },
        {
            "text": "Finally, we present (in Sec. 2.3) our LinearSampling algorithm whose inside phase is very similar to LinearPar-1 The other popular tool RNAstructure takes 3+ days on this sequence because it includes coaxial stacking of helices as an additional folding feature. tition in that both employ beam search to ensure linearity. The sampling phase of LinearSampling also benefits from beam search in the inside phase and also runs in linear time. Therefore, LinearSampling is the first algorithm to run in end-to-end linear-time without imposing constraints on base pair distance.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Sampling Algorithms"
        },
        {
            "text": "For an input RNA x = x 1 ... x n , we formalize its search space as a hypergraph V (x), E(x) . Each node v \u2208 V (x) corresponds to a subproblem in the search space, such as a span x i,j . Each hyperedge e \u2208 H(x) is a pair node(e), subs(e) which denotes a decomposition of node(e) into a list of children nodes subs(e) \u2208 V (x) * . For example, x i,j , [x i,k , x k+1,j ] divides one span into two smaller ones. For each node v, we define its incoming hyperedges to be all decompositions of v:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "We also define the arity of a hyperedge e, denoted |e|, to be the number of its children nodes (|e| \u2206 = |subs(e)|). Hyperedges with 0, 1, or 2 arities are called nullary, unary, or binary hyperedges, resp. In order to recursively assemble substructures to form the global structure, each hyperedge e = v, subs is associated with a combination function f (e) : S |e| \u2192 S that assembles substructures (in dot-bracket format) from subs into a structure for v. For example, a binary hyperedge might have f (e)(a, b) = ab. Each hyperedge e is also associated with an (extra) energy term w(e) \u2208 R. Here S and R are the sets of dot-bracket strings and reals, resp. Now let us take the classical Nussinov algorithm (Nussinov and Jacobson, 1980) as a concrete example. For input sequence x = x 1 ... x n , the nodes are",
            "cite_spans": [
                {
                    "start": 707,
                    "end": 736,
                    "text": "(Nussinov and Jacobson, 1980)",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "which can be decomposed, and empty spans x i,i\u22121 (i = 1...n) which are the terminal nodes. The Nussinov algorithm basically decomposes each nonempty span x i,j in two ways: either base x j is unpaired (unary) or paired with some x k (i \u2264 k < j) (binary). Therefore, for each node, the incoming hyperedges are",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "} contains a single unary hyperedge, and its associated unary combination function f 1 (\u00b7) is simply f 1 (a) = a. that appends an unpaired \".\" for x j to the substructure from x i,j\u22121 :",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "i j Its associated energy term is w = 0 (kcal/mol) meaning no energy change. And the set of binary hyperedges",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "contains all bifurcations with (x k , x j ) paired, dividing x i,j into two smaller spans x i,k\u22121 and x k+1,j\u22121 :",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "All these hyperedges share the same combination function f 2 (\u00b7, \u00b7) which combines the two substructures along with the new (x k , x j ) pair to form a structure for x i,j , i.e., f 2 (a, b) = a(b). They also share w = \u22121 (kcal/mol), the stabilizing free energy term for forming a base pair. At the end of the recursion, each empty span x i,i\u22121 has a special nullary hyperedge x i,i\u22121 , [ ] with no children, and the associated nullary function f 0 is f 0 ( ) = \"\".",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "Finally, a special goal node goal(V (x)) is identified as the root of the recursion, which in the Nussinov algorithm is just the whole sequence x 1,n .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "This framework can easily extend to other folding algorithms such as Zuker (Zuker and Stiegler, 1981) and LinearFold (Huang et al., 2019) , where nodes are \"labeled\" spans such as C i,j for substructures over x i,j with (x i , x j ) paired, M i,j for multiloops for x i,j , etc.",
            "cite_spans": [
                {
                    "start": 75,
                    "end": 101,
                    "text": "(Zuker and Stiegler, 1981)",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 117,
                    "end": 137,
                    "text": "(Huang et al., 2019)",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Hypergraph Framework"
        },
        {
            "text": "Under the hypergraph framework, we first describe the standard \"inside\" phase for partition function calculation, and then present three variants of sampling, i.e., non-saving, full-saving, and lazy-saving in a unified way. While non-saving is more or less similar to the standard sampling algorithm, the other two are novel. This version is similar to Ding and Lawrence (2003) but much simpler and cleaner due to the inside\u2194sampling symmetry.",
            "cite_spans": [
                {
                    "start": 353,
                    "end": 377,
                    "text": "Ding and Lawrence (2003)",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "Non-Saving, Full-Saving, and Lazy Versions"
        },
        {
            "text": "save all hyperedges 6: for i = 1...k do SAMPLESAVE(goal(V (x))) return f (e)(SAMPLELAZY(u, visited) for u in subs) phase. If we want to save all hyperedges (for the saving version) instead, we will need O(n 3 ) space; the time complexity remains O(n 3 ), but in practice the overhead for saving (line 8) is costly.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Non-Saving, Full-Saving, and Lazy Versions"
        },
        {
            "text": "In the sampling phase, the non-saving sampling algorithm (see Fig. 2 ) recursively backtraces from the goal node, in a way that is sym-metric to the bottom-up inside phase. When visiting a node v, it tries to sample a hyperedge e from v's incoming hyperedges INEDGES(v) according to the probability Z(e)/Z(v). This is done by first generating a random number p between 0 and Z(v), and then gradually recovering each incoming hyperedge e, accumulating its Z(e) to a running sum s, until s exceeds p, at which point that current hyperedge e is chosen as sampled. Note that this algorithm in general does not need to recover all incoming hyperedges of v, though in the worst case it would (when p ; Z(v)). It then backtraces recursively to the corresponding children node(s) of hyperedge e. Now let us analyze the time complexity to generate each sample. First of all, it visits O(n) nodes to generate one sample as there are O(n) nodes in each derivation (i.e., the recursion tree). On each node v = x i,j , it needs to recover O(|j \u2212 i|) hyperedges, so the total number of hypereges recovered depends on how balanced the derivation (i.e., the recursion tree) is, similar to quicksort. In the worst case (when the derivation is extremely unbalanced like a chain), it recovers O(n 2 ) hyperedges, and in the best case (when the derivation is mostly balanced, i.e., bifurcations near the middle), it only recovers O(n log n) hyperedges. So the time to generate k samples is O(kn 2 ) (worst-case) or O(kn log n) (best-case). 2 Our experiments in Sec. 3 ( Fig. SI 6) show that, again like in quick sort, the sampled derivations are mostly balanced as the depth of derivation scales O(log n) in practice, thus the average case behavior is essentially best case. 3 This version is closest to the original Ding and Lawrence (2003) algorithm, but simpler and cleaner. Our key idea is to exploit the structural symmetry between the inside and sampling phases, and unify them under the general hypergraph framework. By contrast, Ding and Lawrence do not exploit this symmetry, and instead rely on different recurrences in the sampling phase that iteratively samples the leftmost external pair in an external span and the rightmost pair in a multiloop (see Fig. 1 of their paper). This formulation results in unnecessarily complicated implementations (see Vienna RNAsubopt for an example). 4 Ponty (2008) analyzes the special case of sampling under the Nussinov model by exploiting the symmetry (though his work could have been generalized to other systems), but we are the first to formulate general sampling (Nussinov, Zuker, LinearFold, etc. ) under a unified framework that exploits symmetry, and unlike his work, our experiments are on the full Turner energy model rather than the simplified Nussinov-Jacobson one.",
            "cite_spans": [
                {
                    "start": 1755,
                    "end": 1756,
                    "text": "3",
                    "ref_id": null
                },
                {
                    "start": 1797,
                    "end": 1821,
                    "text": "Ding and Lawrence (2003)",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 2379,
                    "end": 2391,
                    "text": "Ponty (2008)",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 2597,
                    "end": 2631,
                    "text": "(Nussinov, Zuker, LinearFold, etc.",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 62,
                    "end": 68,
                    "text": "Fig. 2",
                    "ref_id": null
                },
                {
                    "start": 1550,
                    "end": 1560,
                    "text": "Fig. SI 6)",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 2244,
                    "end": 2250,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "Non-Saving Sampling."
        },
        {
            "text": "It is obvious that the nonsaving version wastes time recovering hyperedges during the sampling phase. First, due to the symmetry, all hyperedges recovered in the sampling phase have already been traversed during the inside phase. To make things worse, each hyperedge might be recovered multiple times across different samples, esp. when the sample size k is large. This begs the question: why don't we save all hyperedges during the inside phase, so that no hyperedge needs to be recovered during the sampling phase? To address this we present the second, full-saving version (see Figs. 2-3), which saves for each node v the contributions Z(e) of each hyperedge e to the local partition function Z(v), once and for all. Then the sampling phase is easier, only requiring sampling a hyperedge e according to its relative contribution (or \"weight\") to v, i.e., Z(e)/Z(v) (line 2 in Fig. 3) . Actually, modern programming languages such as C++ and Python provide tools for sampling from a weighted list, which is implemented via a binary search in the sorted array of cumulative weights (which is why line 8 in Fig. 1 saves the running sum rather than individual contribution Z(e)). This takes only O(log n) time for each v as |INEDGES(v)| = O(n) (consider all bifurcations). Therefore, the worst-case complexity for generating k samples is O(kn log n) and the best-case is O(kn). 5",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 879,
                    "end": 886,
                    "text": "Fig. 3)",
                    "ref_id": "FIGREF1"
                },
                {
                    "start": 1107,
                    "end": 1113,
                    "text": "Fig. 1",
                    "ref_id": null
                }
            ],
            "section": "Full-Saving Sampling."
        },
        {
            "text": "Though the full-saving version avoids all re-calculations, it costs too much more space (O(n 3 ) vs. O(n 2 )) and significantly more time in practice for saving the whole hypergraph. A key observation is that nodes are not backtraced with equal chance. Actually, the vast majority of nodes are never visited during the sampling phase even for large sample size (our experiments in Fig. 7 show that only < 0.5% nodes are visited for 20,000 samples of a 3,048 nt length sequence with Vienna RNAsubopt), so most of the saving is wasted. Based on this, we present our third version, lazy-saving, which is a hybrid between non-saving and full-saving versions (see Fig. 4 ). By \"lazy\" we mean only recovering and saving a node v's hyperedges when needed, i.e., the 1: function LINEARINSIDE (x, b, saving) b is the beam size 2: n \u2190 length of x 3: Z \u2190 hash() hash table: from xi,j to Z(xi,j) 4: Z(xj,j\u22121) \u2190 1 for all j in 1...n base cases (empty spans) 5: for j = 1...n do 6:",
            "cite_spans": [
                {
                    "start": 784,
                    "end": 798,
                    "text": "(x, b, saving)",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 381,
                    "end": 387,
                    "text": "Fig. 7",
                    "ref_id": "FIGREF7"
                },
                {
                    "start": 659,
                    "end": 665,
                    "text": "Fig. 4",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Lazy-Saving Sampling."
        },
        {
            "text": "for first time v is visited during sampling phase. In this way each hyperedge is recovered at most once, and most are not recovered at all. This version balances between space and time, and is the fastest among the three versions in most settings in practice. The complexity analysis of lazy-saving is more involved. It depends on how many unique nodes are visited (and need to have hyperedges recovered and saved) among k samples. Given such correlation, we denote",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lazy-Saving Sampling."
        },
        {
            "text": "to be the \"effective sample size\" (or \"effective k\"). In other words, g(k) characterizes the actual amount of hyperedge-recovering work for generating k samples (in non-saving, g(k) = k but in lazy-saving, g(k) < < k).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Lazy-Saving Sampling."
        },
        {
            "text": "Thus, for the lazy-saving, O(g(k)n) unique nodes are visited (as each sample is of size O(n)) and O(g(k)n 2 ) hyperedges are recovered in the worst-case, resulting in a total worst-case runtime of O(g(k)n 2 + kn log n), where the second term is the runtime of sampling saved hyperedges. Similarly, the best-case runtime, where the derivation tree is balanced, is O(g(k)n log n + kn), fol- Table 1 . Time and space complexities for exact and linear-time sampling with non-, full-and lazy-saving versions (n is the sequence length, k is sample size, g(k) and h(k) are \"effective sample sizes\", and b is beam size; see text for definitions).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 389,
                    "end": 396,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "Lazy-Saving Sampling."
        },
        {
            "text": "lowing full-saving's analysis. Regarding the samplingphase space complexity, no extra space is required for non-saving or full-saving, while O(g(k)n 2 ) is needed for lazy-saving in the worst-case (see Table 1 for a summary).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 202,
                    "end": 209,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "Lazy-Saving Sampling."
        },
        {
            "text": "The biggest bottleneck of the standard sampling algorithm is actually not redundant calculations, but the cubic runtime of the inside (partition-function) phase, which prevents it from scaling to full-length viral genomes such as SARS-CoV-2. To address this problem, we present LinearSampling, an end-to-end linear-time sampling algorithm, by replacing the O(n 3 ) inside phase with our linear-time approximate algorithm, LinearPartition (Zhang et al., 2020) , followed by one of the three versions (non-, full-, and lazy-saving) for the sampling phase. Fig. 5 describes a simplified LinearSampling using the Nussinov-Jacobson energy model. Inspired by LinearPartition, we employ beam search to prune out nodes with small partition function (line 11) during the inside phase. So at each position j, only the top b promising nodes \"survive\" (i.e., O(nb) nodes survive in total). Here the beam size b is a user-specified hyperparameter, and the default b = 100 is found to be more accurate for structure prediction than exact search (Zhang et al., 2020) . The inside runtime is reduced to O(nb 2 ) (there are only O(b) hyperedges per node) and the space complexity is reduced to O(nb), both of which are linear against sequence length n. The sampling time is also linear by the following analysis (see Tab 1). The binary search time to sample a saved hyperedge changes from O(log n) to O(log b) since at most b hyperedges are saved for each node. Therefore, the worst-case and best-case sampling runtimes become (details omitted due to space limit) O(h(k)nb + kn log b) and O(h(k)n log b + kn), resp., where h(k) is the \"effective sample size\" in LinearSampling (corresponding to g(k) in exact sampling). Note that g(k) and h(k) are both in the range of [1, min(k, n) ]. In Fig. 7 we plot g(k) and h(k) for sequences with different length, and we confirm that they are both much smaller than either k or n.",
            "cite_spans": [
                {
                    "start": 438,
                    "end": 458,
                    "text": "(Zhang et al., 2020)",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 1031,
                    "end": 1051,
                    "text": "(Zhang et al., 2020)",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 1752,
                    "end": 1765,
                    "text": "[1, min(k, n)",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 554,
                    "end": 560,
                    "text": "Fig. 5",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1772,
                    "end": 1778,
                    "text": "Fig. 7",
                    "ref_id": "FIGREF7"
                }
            ],
            "section": "The LinearSampling Algorithm"
        },
        {
            "text": "We benchmark the runtime and memory usage on a collected dataset, which consists of 34 sequences sampled from RNAcentral (RNAcentral Consortium et al., 2017) . We evenly split the range from 0 to 35,000 into 60 bins by log-scale. For each bin we randomly select at most one sequence (some bins are empty); within 100 nt only one sequence is chosen. We refer this dataset as the RNAcentral dataset in the paper. For benchmarks, We use a Linux machine (CentOS 7.7.1908) with 2.30 GHz Intel Xeon E5-2695 v3 CPU and 755 GB memory, and gcc 4.8.5.",
            "cite_spans": [
                {
                    "start": 133,
                    "end": 157,
                    "text": "Consortium et al., 2017)",
                    "ref_id": "BIBREF30"
                }
            ],
            "ref_spans": [],
            "section": "Efficiency and Scalability"
        },
        {
            "text": "Lazy-Saving Versions. First, we compare the three versions of the LinearSampling algorithm: non-saving, fullsaving and lazy-saving. Fig. 6A -C show the comparisons of runtime and memory usage against sequence length between the three versions. For end-to-end comparison (Fig. 6A) , lazysaving is the fastest, followed by full-saving, and then by non-saving. This confirms our analysis: (1) for a relatively large sample size (e.g., 10,000), saving the hyperedges leads to a speedup by avoiding unnecessary recovering; and (2) the lazy mechanism only saves the hyperedges on demand, and gets rid of the cost of saving \"less weighted\" hyperedges, which leads to another speedup. For sampling-only runtime (Fig. 6B) , it is clear that the non-saving version is the slowest, while the fullsaving and the lazy-saving versions are almost identical. Fig. 6C confirms that the full-saving requires the most memory, while non-saving reduces about 90% of the memory usage; the lazy-saving version is between the other two, but closer to the non-saving curve. Regarding the end-to-end comparison, non-saving is the fastest for small sample size (e.g., 1,000), but is the slowest when sample size exceeds around 9,000. The curve of nonsaving intersects with lazy-saving at around 1,500, and intersects with full-saving at around 9,000; between the two points of intersection, the lazy-saving version is the fastest. For the sampling-only comparison, lazy-saving is close to full-saving, and slightly faster with sample size larger than 8,000. If considering the memory usage, non-saving uses the least; lazy-saving doubles the usage; full-saving increases the number by about 9 times. In the sampling phase, though extra work occurs for recovering hyperedges, lazy-saving is in practice as fast as full-saving because only a small portion of the nodes are visited, which is confirmed in Fig. 7A . We can see that the percentage of visited nodes is always smaller than 0.3% and 3% for RNAsubopt and LinearSampling, respectively, when k \u2264 20, 000, and grows slower and slower against sample size. LinearSampling's percentage is larger due to the pruning of nodes with small Z(v). Fig. 7A clearly shows that it is a waste to save the majority of hyperedges that are barely recovered, which can be addressed by lazy-saving. On the other hand, lazy-saving is better than non-saving since it avoids a large number of recalculations during sampling phase. Fig. 7B shows g(k) , number of unique visited nodes divided by number of visited nodes for RNAsubopt (h(k) for LinearSampling), is much smaller than both k and n.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 132,
                    "end": 139,
                    "text": "Fig. 6A",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 270,
                    "end": 279,
                    "text": "(Fig. 6A)",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 703,
                    "end": 712,
                    "text": "(Fig. 6B)",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 843,
                    "end": 850,
                    "text": "Fig. 6C",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 1875,
                    "end": 1882,
                    "text": "Fig. 7A",
                    "ref_id": "FIGREF7"
                },
                {
                    "start": 2166,
                    "end": 2173,
                    "text": "Fig. 7A",
                    "ref_id": "FIGREF7"
                },
                {
                    "start": 2437,
                    "end": 2455,
                    "text": "Fig. 7B shows g(k)",
                    "ref_id": "FIGREF7"
                }
            ],
            "section": "Comparing the Non-Saving, Full-Saving and"
        },
        {
            "text": "From Fig. 6-7 , it is clear that the lazy-saving version is the fastest among three versions, so we use it as default in LinearSampling, and all the results in the rest of the paper are based on lazy-saving. 8A and B show the comparisons in two dimensions: the end-to-end runtime and the sampling-only runtime. In the former case (Fig. 8A) , LinearSampling scales almost linearly against sequence length, and is faster than RNAsubopt; in the latter case (Fig. 8B) , LinearSampling takes strictly linear runtime and is nearly twice as fast. We find that RNAsubopt overflows on a sequence of length 19,071 nt, while LinearSampling scales up to longer sequences, e.g., the longest sequence (33,461 nt) in the dataset. This suggests that LinearSampling is able to be applied to the full-length of SARS-CoV-2 genomes (about 30,000 nt). Compared to the longest sequence (15,780 nt) RNAsubopt can run in the RNAcentral dataset, LinearSampling is 111\u00d7 faster (48 seconds vs. 89 minutes). Fig. 8C confirms that the memory usage of LinearSampling is also linear, but RNAsubopt requires nearly quadratic memory size against sequence length. Lin-earSampling only uses 1.2 GB memory for the sequence of length 15,780 nt, while RNAsubopt uses 5.7 GB.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 5,
                    "end": 13,
                    "text": "Fig. 6-7",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 208,
                    "end": 210,
                    "text": "8A",
                    "ref_id": "FIGREF8"
                },
                {
                    "start": 330,
                    "end": 339,
                    "text": "(Fig. 8A)",
                    "ref_id": "FIGREF8"
                },
                {
                    "start": 454,
                    "end": 463,
                    "text": "(Fig. 8B)",
                    "ref_id": "FIGREF8"
                },
                {
                    "start": 980,
                    "end": 987,
                    "text": "Fig. 8C",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "Comparing the Non-Saving, Full-Saving and"
        },
        {
            "text": "In this subsection, we investigate the quality of the samples, using the ArchiveII dataset (Mathews et al., 1999, Sloma and Mathews, 2016) , which contains a set of sequences with well-determined structures. We follow the preprocessing steps of a previous study (Zhang et al., 2020) , which leads to a subset of 2,859 sequences with reliable structures distributed in 9 families.",
            "cite_spans": [
                {
                    "start": 91,
                    "end": 123,
                    "text": "(Mathews et al., 1999, Sloma and",
                    "ref_id": null
                },
                {
                    "start": 124,
                    "end": 138,
                    "text": "Mathews, 2016)",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 262,
                    "end": 282,
                    "text": "(Zhang et al., 2020)",
                    "ref_id": "BIBREF36"
                }
            ],
            "ref_spans": [],
            "section": "Quality of the Samples"
        },
        {
            "text": "ities. To evaluate the sampling quality, i.e., how well it approximates to the ensemble distribution, Ding and Lawrence (2003) investigated the frequency of the MFE structures appeared in the samples, and checked if it matches with the Boltzmann distribution. However, this only works for short sequences because the frequency of the MFE structures is extremely small for long sequences, e.g., 23S rRNA.",
            "cite_spans": [
                {
                    "start": 102,
                    "end": 126,
                    "text": "Ding and Lawrence (2003)",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "Approximation Quality to Base Pairing Probabil-"
        },
        {
            "text": "Alternatively, we investigate the root-mean-square deviation (RMSD) between the probability matrices p(S), which is derived from the sample set S, and p , which is generated by Vienna RNAfold or LinearPartition.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Approximation Quality to Base Pairing Probabil-"
        },
        {
            "text": "The RMSD is defined as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Approximation Quality to Base Pairing Probabil-"
        },
        {
            "text": "where pairings(x) is the set of all possible Watson-Crick and G-U pairs on a sequence x, and p i,j (S), the probabilities of i pairing with j, is calculated from S as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Approximation Quality to Base Pairing Probabil-"
        },
        {
            "text": "where pairs(y) is the set of base pairs in structure y. Fig. 9A shows three curves of average RMSD against sample size on the ArchiveII dataset. The green curve illustrates the RMSD of base pairing probabilities generated by LinearSampling and Vienna RNAfold. Even though LinearSampling approximates the partition function based on LinearPartition, which introduces a small change in the base pairing probabilities (Zhang et al., 2020) , the RMSD is only 0.015 with sample size 10, and drops down to around 0.005 quickly with sample size 5,000. We further investigate the RMSD between Lin-earSampling and LinearPartition (the blue curve), and RNAsubopt and RNAfold (the purple curve). We observe that the two curves are almost identical, suggesting LinearSampling can generate structures strictly matching with the ensemble distribution as RNAsubopt. It is clear that the RMSD shrinks when sample size increases. They both start at around 0.012 with a sample size 10, then go down and are far below 0.004 with 100 sampled structures, and further approximate to 0 slowly with a 20,000 Fig. 9 . LinearSampling matches with the ensemble distribution, and is better correlated to the ground truth structure. A: the root-mean-square deviation (RMSD) against sample size. The RMSD is between the base pairing probabilities directly generated by RNAfold (or LinearPartition) and by RNAsubopt (or LinearSampling) sampled structures. The RMSD is averaged on 9 families in the ArchiveII dataset. B: the ensemble defect difference of each family. The overall difference is averaged by families.",
            "cite_spans": [
                {
                    "start": 415,
                    "end": 435,
                    "text": "(Zhang et al., 2020)",
                    "ref_id": "BIBREF36"
                }
            ],
            "ref_spans": [
                {
                    "start": 56,
                    "end": 63,
                    "text": "Fig. 9A",
                    "ref_id": null
                },
                {
                    "start": 1084,
                    "end": 1090,
                    "text": "Fig. 9",
                    "ref_id": null
                }
            ],
            "section": "Approximation Quality to Base Pairing Probabil-"
        },
        {
            "text": "sample size. We notice that k = 10, 000 is a reasonable sample size since the RMSD (about 0.0004) is already close enough to 0.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Approximation Quality to Base Pairing Probabil-"
        },
        {
            "text": "Next, we investigate the sampled structure's correlation with the ground truth structure. We use ensemble defect (Zadeh et al., 2010) , the expected number of incorrectly predicted nucleotides over the ensemble, which can be formalized as:",
            "cite_spans": [
                {
                    "start": 113,
                    "end": 133,
                    "text": "(Zadeh et al., 2010)",
                    "ref_id": "BIBREF34"
                }
            ],
            "ref_spans": [],
            "section": "Correlation with the Ground Truth Structure."
        },
        {
            "text": "where y * is the ground truth structure, and d(y, y * ) is the distance between y and y * , defined as the number of incorrectly predicted nucleotides in y. And q j (S) is the probability of j being unpaired in the sample S, i.e., q j (S) = 1 \u2212 p i,j (S). Fig. 9B shows the ensemble defect difference between RNAsubopt and LinearSampling on each family and overall. Note that better correlation to the ground truth structures requires lower ensemble defect. The families are ordered in their average sequence length, from the shortest to the longest. For short families, the difference is either 0 or close to 0, indicating that the sampling qualities of RNAsubopt and LinearSampling are similar on these short families. But on 16S and 23S rRNAs, LinearSampling has lower ensemble defect, confirming it performs better on longer sequences. In Fig. SI 5 we also present the comparison of RNAsubopt local mode, with a base pair length limitation of 70. Note that RNAsubopt local mode does not have a default window size, and we choose 70 following the default setting in RNAplfold (Bernhart et al., 2006) . It is obvious that the local sampling has much higher (worse) ensemble defect on 23S rRNA, since it ignores all base pairs longer than 70 nt. Table 2 . Accessibility defect comparison on 23S rRNA family with sample size of 10,000.",
            "cite_spans": [
                {
                    "start": 1079,
                    "end": 1102,
                    "text": "(Bernhart et al., 2006)",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [
                {
                    "start": 256,
                    "end": 263,
                    "text": "Fig. 9B",
                    "ref_id": null
                },
                {
                    "start": 843,
                    "end": 852,
                    "text": "Fig. SI 5",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 1247,
                    "end": 1254,
                    "text": "Table 2",
                    "ref_id": null
                }
            ],
            "section": "Correlation with the Ground Truth Structure."
        },
        {
            "text": "An important application of sampling algorithm is to calculate region's accessibility. Therefore, we also evaluate the accessibilities of window size 4 (Ding and Lawrence, 2003) derived from the two systems based on the ground truth structures. We denote it as the accessibility defect, D(S, y * ), and define it as:",
            "cite_spans": [
                {
                    "start": 152,
                    "end": 177,
                    "text": "(Ding and Lawrence, 2003)",
                    "ref_id": "BIBREF3"
                }
            ],
            "ref_spans": [],
            "section": "Correlation with the Ground Truth Structure."
        },
        {
            "text": "where acc(S, i) is the accessibility of region [i, i + 3]. Table 2 shows the accessibility defect comparison on 23S rRNA family in the ArchiveII dataset. We observe that LinearSampling outperforms RNAsubopt on three sequences, and on the overall result. In Table SI 1, we also present the results of RNAsubopt local mode (window size 70 and 150), which are worse than LinearSampling on all 5 sequences.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 59,
                    "end": 66,
                    "text": "Table 2",
                    "ref_id": null
                },
                {
                    "start": 257,
                    "end": 265,
                    "text": "Table SI",
                    "ref_id": null
                }
            ],
            "section": "Correlation with the Ground Truth Structure."
        },
        {
            "text": "The COVID-19 pandemic has swept the world in 2020, and is likely to be a threaten of global health for a long time. Therefore, it is of great value to find the regions with high accessibilities in SARS-CoV-2, which can be potentially used for COVID-19 diagnostics and drug design. But since SARS-CoV-2 is as long as 30,000 nt, existing computational tools are unable to be applied to its full-length genome. Now with significant improvement on sampling efficiency and scalability, LinearSampling is (Madhugiri et al., 2016) . Note that the full sequence was used for the accessibility calculation, but we only illustrate the 5'-UTR region in the figure because its structure is well-established. A: accessibilities predicted by LinearSampling with window sizes from 1 to 15. Each prediction is presented with a solid circle, where the darkness correlates to the accessibility value. The accessible regions in the canonical structure are annotated in boxes, and the canonical structure is also shown in the dot-bracket format on the x-axis. B: SARS-CoV-2 5'-UTR conanical structure colored with unpaired probabilities generated from LinearSampling sampled structures. The total sample size is 10,000 for both A and B.",
            "cite_spans": [
                {
                    "start": 499,
                    "end": 523,
                    "text": "(Madhugiri et al., 2016)",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [],
            "section": "Applications to SARS-CoV-2"
        },
        {
            "text": "able to scale, for the first time, up to the whole-genome of SARS-CoV-2, and predict its accessible regions.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Applications to SARS-CoV-2"
        },
        {
            "text": "We run LinearSampling on NC_0405512.2 (Wu et al., 2020) , the reference sequence of SARS-CoV-2. First, we check if the accessibilities predicted by LinearSampling match with the well-established structures, e.g., the 5'-UTR region which has conserved structures and plays a critical role in viral genome replication (Madhugiri et al., 2016) . We sample 10,000 structures, calculate the accessibilities and compare them with the canonical structure. Fig. 10A shows the correlations of predicted accessibilities (solid circles) and the accessible regions in the canonical structure (hollow boxes), in window sizes of 1 to 15 nucleotides. For instance, the dark circle at position 50 and window size 5, representing a highly accessible region [50, 54] predicted by LinearSampling, is surrounded by a box, which indicates that the prediction is supported by the canonical structure. In general, the regions with high accessibilities derived from Lin-earSampling correlate well to the unpaired regions in the canonical structure. To better illustrate the correlation, we also color the accessibilities of window size 1 (i.e., the bottom row in Fig. 10A ) on the 5'-UTR structure.",
            "cite_spans": [
                {
                    "start": 38,
                    "end": 55,
                    "text": "(Wu et al., 2020)",
                    "ref_id": "BIBREF33"
                },
                {
                    "start": 316,
                    "end": 340,
                    "text": "(Madhugiri et al., 2016)",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 740,
                    "end": 744,
                    "text": "[50,",
                    "ref_id": null
                },
                {
                    "start": 745,
                    "end": 748,
                    "text": "54]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 449,
                    "end": 457,
                    "text": "Fig. 10A",
                    "ref_id": "FIGREF11"
                },
                {
                    "start": 1139,
                    "end": 1147,
                    "text": "Fig. 10A",
                    "ref_id": "FIGREF11"
                }
            ],
            "section": "Applications to SARS-CoV-2"
        },
        {
            "text": "Secondly, we aim to obtain potentially accessible regions. A previous study (Rangan et al., 2020) locates conserved unstructured regions of SARS-CoV-2 by scanning the reference sequence with windows of 120 nt, sliding by 40 nt, and then calculating base pairing probabilities using CONTRAfold (Do et al., 2006) for these fragments. In total, 75 accessible regions with 15 or more nucleotides are claimed, where each base has the average unpaired probability of at least 0.6. However, this method has two flaws: (1) it is not correct principally to evaluate accessibility based on unpaired probabilities due to their mutual dependency; and (2) it neglects long-range base pairs and has to approximate the accessibilities based on local structures.",
            "cite_spans": [
                {
                    "start": 76,
                    "end": 97,
                    "text": "(Rangan et al., 2020)",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 293,
                    "end": 310,
                    "text": "(Do et al., 2006)",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Applications to SARS-CoV-2"
        },
        {
            "text": "Instead, we measure the accessibilities based on samples generated by LinearSampling. We use the free energy change \u2206G, which is defined formally as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Applications to SARS-CoV-2"
        },
        {
            "text": "where k is the sample size, k 0 is the number of accessible samples for a given window size w (i.e., the nucleotides within the w are all unpaired), R is the universal gas constant and T is the thermodynamic temperature. We set the window size to be 15 following Rangan et al. (2020) . We only show the fragments whose free energy changes are negative, i.e., the corresponding accessibilities are larger than 0.5, meaning they are more likely to be opening than closing. We list all 23 regions found by LinearSampling in Table 3 . Some of the regions are overlapped, resulting in a total of 9 separate accessible regions. We illustrate them in Fig. 11 . Among the 9 regions, two are in ORF1ab, one in ORF3a, one in the M gene, three in the N gene, and two in the S (spike) gene, whose proteins can recognize and bind with receptor .",
            "cite_spans": [
                {
                    "start": 263,
                    "end": 283,
                    "text": "Rangan et al. (2020)",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [
                {
                    "start": 521,
                    "end": 528,
                    "text": "Table 3",
                    "ref_id": "TABREF2"
                },
                {
                    "start": 644,
                    "end": 651,
                    "text": "Fig. 11",
                    "ref_id": null
                }
            ],
            "section": "Applications to SARS-CoV-2"
        },
        {
            "text": "In this paper, we focus on simplifying and accelerating the stochastic sampling algorithm for a given RNA sequence. Algorithmically, we present a hypergraph frame- Fig. 11 . LinearSampling predicts 9 accessible regions in SARS-CoV-2 full genomes. Note that ORF1ab can be further divided into smaller genes, e.g., nsp4 and RdRp. work under which the classical sampling algorithm can be greatly simplified. We further elaborate this sampling framework in three versions: the non-saving that recovers the hyperedges in a top-down way, the full-saving that saves all hyperedges during the inside phase and avoids re-computing for sampling, and the lazy-saving that only recovers and saves hyperedges on demand. Then we propose LinearSampling, an end-to-end linear-time stochastic sampling algorithm, which employs beam search to ensure linearity. LinearSampling is the first algorithm to run in end-toend linear-time without imposing constraints on the base pair distance, and is orders of magnitude faster than the widely-used Vienna RNAsubopt. We confirmed: (1) Lin-earSampling takes linear runtime and can scale up to long RNA sequence; (2) it approximates well to the ensemble distribution; (3) it correlates better to the ground truth structures; and (4) it can be applied to SARS-CoV-2 for discovering regions with high accessibilities, which are the potential targets for diagnostics and drug design.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 164,
                    "end": 171,
                    "text": "Fig. 11",
                    "ref_id": null
                }
            ],
            "section": "Discussion"
        },
        {
            "text": ". CC-BY-NC-ND 4.0 International license available under a (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made for each i such that [i, j] in Z do 4:",
            "cite_spans": [
                {
                    "start": 226,
                    "end": 232,
                    "text": "[i, j]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "candidates \u2190 SELECTTOPB(candidates, b) select top-b states by score 6:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "for each i such that [i, j] in Z do 7:",
            "cite_spans": [
                {
                    "start": 21,
                    "end": 27,
                    "text": "[i, j]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "if key i not in candidates then 8:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "delete [i, j] from Z prune low-scoring states . CC-BY-NC-ND 4.0 International license available under a (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "The copyright holder for this preprint this version posted December 29, 2020. ; https://doi.org/10.1101/2020.12.29.424617 doi: bioRxiv preprint . CC-BY-NC-ND 4.0 International license available under a (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "The copyright holder for this preprint this version posted December 29, 2020. ; https://doi.org/10.1101/2020.12.29.424617 doi: bioRxiv preprint . CC-BY-NC-ND 4.0 International license available under a (which was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Discussion"
        },
        {
            "text": "The copyright holder for this preprint this version posted December 29, 2020. ; https://doi.org/10. 1101 ",
            "cite_spans": [
                {
                    "start": 100,
                    "end": 104,
                    "text": "1101",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Discussion"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Local RNA base pairing probabilities in large sequences",
            "authors": [
                {
                    "first": "S",
                    "middle": [
                        "H"
                    ],
                    "last": "Bernhart",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [
                        "L"
                    ],
                    "last": "Hofacker",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [
                        "F"
                    ],
                    "last": "Stadler",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Bioinformatics",
            "volume": "22",
            "issn": "5",
            "pages": "614--615",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "The efficacy of small interfering RNAs targeted to the type 1 insulin-like growth factor receptor (igf1r) is influenced by secondary structure in the igf1r transcript",
            "authors": [
                {
                    "first": "E",
                    "middle": [
                        "A"
                    ],
                    "last": "Bohula",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "J"
                    ],
                    "last": "Salisbury",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Sohail",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "P"
                    ],
                    "last": "Playford",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Riedemann",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [
                        "M"
                    ],
                    "last": "Southern",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [
                        "M"
                    ],
                    "last": "Macaulay",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Journal of Biological chemistry",
            "volume": "278",
            "issn": "18",
            "pages": "15991--15997",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Introduction to Algorithms, Third Edition",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Cormen",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "E"
                    ],
                    "last": "Leiserson",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "L"
                    ],
                    "last": "Rivest",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Stein",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "A statistical sampling algorithm for RNA secondary",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Ding",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "E"
                    ],
                    "last": "Lawrence",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Nucleic Acids Research",
            "volume": "31",
            "issn": "24",
            "pages": "7280--7301",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "CONTRAfold: RNA secondary structure prediction without physics-based models",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Do",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Woods",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Batzoglou",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Bioinformatics",
            "volume": "22",
            "issn": "14",
            "pages": "90--98",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "The chemical repertoire of natural ribozymes",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "A"
                    ],
                    "last": "Doudna",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [
                        "R"
                    ],
                    "last": "Cech",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "Nature",
            "volume": "418",
            "issn": "6894",
            "pages": "222--228",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Durbin",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Eddy",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Krogh",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Mitchison",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Non-coding RNA genes and the modern RNA world",
            "authors": [
                {
                    "first": "S",
                    "middle": [
                        "R"
                    ],
                    "last": "Eddy",
                    "suffix": ""
                }
            ],
            "year": 2001,
            "venue": "Nature Reviews Genetics",
            "volume": "2",
            "issn": "12",
            "pages": "919--929",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Computation of biopolymers: a general approach to different problems",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Finkelstein",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Roytberg",
                    "suffix": ""
                }
            ],
            "year": 1993,
            "venue": "BioSystems",
            "volume": "30",
            "issn": "1-3",
            "pages": "1--19",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Directed hypergraphs and applications",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Gallo",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Longo",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Pallottino",
                    "suffix": ""
                }
            ],
            "year": 1993,
            "venue": "Discrete Applied Mathematics",
            "volume": "42",
            "issn": "2",
            "pages": "177--201",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Better k-best parsing",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Chiang",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "Proceedings of the Ninth International Workshop on Parsing Technologies",
            "volume": "",
            "issn": "",
            "pages": "53--64",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "LinearFold: linear-time approximate RNA folding by 5'-to-3' dynamic programming and beam search",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Deng",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Hendrix",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Mathews",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Bioinformatics",
            "volume": "35",
            "issn": "14",
            "pages": "295--304",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Structural and functional properties of SARS-CoV-2 spike protein: potential antivirus drug development for covid-19",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "S.-W",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Acta Pharmacologica Sinica",
            "volume": "41",
            "issn": "9",
            "pages": "1141--1149",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Parsing and Hypergraphs",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Klein",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "D"
                    ],
                    "last": "Manning",
                    "suffix": ""
                }
            ],
            "year": 2001,
            "venue": "Proceedings of the Seventh International Workshop on Parsing Technologies (IWPT-2001)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "The activity of siRNA in mammalian cells is related to structural target accessibility: a comparison with antisense oligonucleotides",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Kretschmer-Kazemi Far",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Sczakiel",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Nucleic Acids Research",
            "volume": "31",
            "issn": "15",
            "pages": "4417--4424",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Long noncoding RNAs: Past, present, and future",
            "authors": [
                {
                    "first": "T",
                    "middle": [
                        "Y"
                    ],
                    "last": "Kung",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Colognori",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "T"
                    ],
                    "last": "Lee",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Genetics",
            "volume": "193",
            "issn": "3",
            "pages": "651--669",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "mRNAs and lncRNAs intrinsically form secondary structures with short end-to-end distances",
            "authors": [
                {
                    "first": "W.-J",
                    "middle": [],
                    "last": "Lai",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Nature Communications",
            "volume": "9",
            "issn": "1",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Potent effect of target structure on microRNA function",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Long",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "Nature Structural & Molecular Biology",
            "volume": "14",
            "issn": "4",
            "pages": "287--294",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "ViennaRNA package 2.0",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Lorenz",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Algorithms for Molecular Biology",
            "volume": "6",
            "issn": "1",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Efficient siRNA selection using hybridization thermodynamics",
            "authors": [
                {
                    "first": "Z",
                    "middle": [
                        "J"
                    ],
                    "last": "Lu",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "H"
                    ],
                    "last": "Mathews",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Nucleic Acids Research",
            "volume": "36",
            "issn": "",
            "pages": "640--647",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Challenges and opportunities in cryo-EM singleparticle analysis",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Lyumkis",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Journal of Biological Chemistry",
            "volume": "294",
            "issn": "13",
            "pages": "5181--5197",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Coronavirus cis-acting RNA elements",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Madhugiri",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Fricke",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Marz",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Ziebuhr",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Advances in Virus Research",
            "volume": "96",
            "issn": "",
            "pages": "127--163",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Prediction of RNA secondary structure by free energy minimization",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "H"
                    ],
                    "last": "Mathews",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "H"
                    ],
                    "last": "Turner",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "Current Opinion in Structural Biology",
            "volume": "16",
            "issn": "3",
            "pages": "270--278",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Expanded sequence dependence of thermodynamic parameters improves prediction of RNA secondary structure",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "H"
                    ],
                    "last": "Mathews",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Sabina",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Zuker",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "H"
                    ],
                    "last": "Turner",
                    "suffix": ""
                }
            ],
            "year": 1999,
            "venue": "Journal of Molecular Biology",
            "volume": "288",
            "issn": "5",
            "pages": "911--940",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "The equilibrium partition function and base pair probabilities for RNA secondary structure",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "S"
                    ],
                    "last": "Mccaskill",
                    "suffix": ""
                }
            ],
            "year": 1990,
            "venue": "Biopolymers",
            "volume": "29",
            "issn": "",
            "pages": "1105--1124",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Fast algorithm for predicting the secondary structure of single-stranded RNA. Proceedings of the National Academy of Sciences",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Nussinov",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "B"
                    ],
                    "last": "Jacobson",
                    "suffix": ""
                }
            ],
            "year": 1980,
            "venue": "",
            "volume": "77",
            "issn": "",
            "pages": "6309--6313",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Messenger RNA expression profiling of genes involved in epidermal growth factor receptor signalling in human cancer cells treated with scanning array-designed antisense oligonucleotides",
            "authors": [
                {
                    "first": "A",
                    "middle": [
                        "K"
                    ],
                    "last": "Petch",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Sohail",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "D"
                    ],
                    "last": "Hughes",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [],
                    "last": "Benter",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Darling",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [
                        "M"
                    ],
                    "last": "Southern",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Akhtar",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "Biochemical Pharmacology",
            "volume": "66",
            "issn": "5",
            "pages": "819--830",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Efficient sampling of RNA secondary structures from the boltzmann ensemble of low-energy",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Ponty",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Journal of Mathematical Biology",
            "volume": "56",
            "issn": "1-2",
            "pages": "107--127",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "A combinatorial framework for designing (pseudoknotted) rna algorithms",
            "authors": [
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Ponty",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Saule",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "International Workshop on Algorithms in Bioinformatics",
            "volume": "",
            "issn": "",
            "pages": "250--269",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "RNA genome conservation and secondary structure in SARS-CoV-2 and SARS-related viruses: a first look",
            "authors": [
                {
                    "first": "R",
                    "middle": [],
                    "last": "Rangan",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [
                        "N"
                    ],
                    "last": "Zheludev",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Hagey",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [
                        "A"
                    ],
                    "last": "Pham",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [
                        "K"
                    ],
                    "last": "Wayment-Steele",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "S"
                    ],
                    "last": "Glenn",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Das",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "RNA",
            "volume": "26",
            "issn": "8",
            "pages": "937--959",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "RNAcentral: a comprehensive database of non-coding RNA sequences",
            "authors": [
                {
                    "first": "Rnacentral",
                    "middle": [],
                    "last": "Consortium",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Nucleic Acids Research",
            "volume": "45",
            "issn": "D1",
            "pages": "128--134",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Exact calculation of loop formation probability identifies folding motifs in RNA secondary structures",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Sloma",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Mathews",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "RNA",
            "volume": "22",
            "issn": "12",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "The impact of target site accessibility on the design of effective siRNAs",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Tafer",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "L"
                    ],
                    "last": "Ameres",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Obernosterer",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [
                        "A"
                    ],
                    "last": "Gebeshuber",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Schroeder",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Martinez",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [
                        "L"
                    ],
                    "last": "Hofacker",
                    "suffix": ""
                }
            ],
            "year": 2008,
            "venue": "Nature Biotechnology",
            "volume": "26",
            "issn": "5",
            "pages": "578--583",
            "other_ids": {}
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "A new coronavirus associated with human respiratory disease in china",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Y.-M",
                    "middle": [],
                    "last": "Yu",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Z.-G",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Y",
                    "middle": [],
                    "last": "Song",
                    "suffix": ""
                },
                {
                    "first": "Z.-W",
                    "middle": [],
                    "last": "Hu",
                    "suffix": ""
                },
                {
                    "first": "J.-H",
                    "middle": [],
                    "last": "Tao",
                    "suffix": ""
                },
                {
                    "first": "Y.-Y",
                    "middle": [],
                    "last": "Tian",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Pei",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Nature",
            "volume": "579",
            "issn": "7798",
            "pages": "265--269",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "Nucleic acid sequence design via efficient ensemble defect optimization",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zadeh",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Wolfe",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Pierce",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "Journal of Computational Chemistry",
            "volume": "32",
            "issn": "3",
            "pages": "439--452",
            "other_ids": {}
        },
        "BIBREF35": {
            "ref_id": "b35",
            "title": "Advances that facilitate the study of large RNA structure and dynamics by nuclear magnetic resonance spectroscopy",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Keane",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Wiley Interdisciplinary Reviews: RNA",
            "volume": "10",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF36": {
            "ref_id": "b36",
            "title": "Linearpartition: linear-time approximation of RNA folding partition function and base-pairing probabilities",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "H"
                    ],
                    "last": "Mathews",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Bioinformatics",
            "volume": "36",
            "issn": "Supplement_1",
            "pages": "258--267",
            "other_ids": {}
        },
        "BIBREF37": {
            "ref_id": "b37",
            "title": "New molecular engineering approaches for crystallographic studies of large RNAs",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "R"
                    ],
                    "last": "Ferr\u00e9-D&apos;amar\u00e9",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Current Opinion in Structural Biology",
            "volume": "26",
            "issn": "",
            "pages": "9--15",
            "other_ids": {}
        },
        "BIBREF38": {
            "ref_id": "b38",
            "title": "Optimal computer folding of large RNA sequences using thermodynamics and auxiliary information",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Zuker",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Stiegler",
                    "suffix": ""
                }
            ],
            "year": 1981,
            "venue": "Nucleic Acids Research",
            "volume": "9",
            "issn": "1",
            "pages": "133--148",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "The Inside Phase. All sampling algorithms first calculate the partition function Z(v) of each node v in the bottom up order (see Fig. 1), summing up the contributions from each incoming hyperedge e (line 7), i.e., Z(v) = e\u2208INEDGES(v) Z(e). This part takes O(E) = O(n 3 ) time as each hyperedge is traversed once and O(V ) = O(n 2 ) space as we need to store Z(v) for each node v. Note that the hyperedges are by default not saved, and will be recalculated on demand during the sampling 1: function INSIDE(V, saving) calculate partition function 2: for each v in BOTTOMUPORDER(V ) do traverse each node 3: Z(v) \u2190 SUMEDGES(v, saving) partition function for v 4: function SUMEDGES(v, saving) traverse v's hyperedges 5: s \u2190 0 6: for each e = v, subs in INEDGES(v) do 7: s += exp(\u2212 w(e) RT ) \u00b7 u\u2208subs Z(u) accumulate Z(e) to Z(v) 8: if saving then S(v) \u2190 S(v) \u222a {(e, s)} save hyperedge 9: return s The inside phase to calculate the partition function. 1: function SAMPLE(v) recover just enough hyperedges 2: p \u2190 random(0, Z(v)); s \u2190 0 3: for each e = v, subs in INEDGES(v) do 4: s += exp(\u2212 w(e) RT ) \u00b7 u\u2208subs Z(u) 5: if s > p then return f (e)(SAMPLE(u) for u in subs) 6: function MAIN(x, k) 7: INSIDE(V (x), False) do not save hyperedges 8: for i = 1...k do SAMPLE(goal(V (x))) The non-saving version in the hypergraph framework.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "The full-saving version in the hypergraph framework.1: function SAMPLELAZY(v, visited) 2: if v / \u2208 visited then first visit to v in sampling phase 3: SUMEDGES(v, True) recover and save v's hyperedges 4: visited \u2190 visited \u222a {v} 5: else v's hyperedges already recovered 6: sample a hyperedge e = v, subs from S(v) 7:",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "The lazy version in the hypergraph framework.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "The pseudocode of a simplified version of the Lin-earSampling algorithm on the Nussinov-Jacobson energy model. The INEDGES function is used in the SUMEDGES function in the non-saving and lazy-saving versions. See Fig. SI 1 for the pseudocode of beam pruning (line 11). The actual algorithm using the Turner model is available on GitHub.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Runtime and memory usage comparisons against sequence length n (A-C) and against sample size k (D-F), between non-saving, full-saving, lazy-saving versions on the RNAcentral dataset. The sample size is 10,000. A and D: end-to-end runtime. B and E: sampling-only runtime. C and F: memory usage. Note that D-F are based on a 3,048 nt sequence from the RNAcentral dataset.Fig. SI 4shows sequences with different lengths, which have similar results.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "F compare the runtime and memory usage against sample size with a 3,048 nt sequence.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "In practice only a small portion of nodes are visited many times. The curves are based on a sequence of 3,048 nt. Please refer to Fig. SI 3 for the trend with sequence length. A: the percentage of visited nodes against k. B: the number of unique visited nodes divided by the number of visited nodes, i.e., \"effective k\" (g(k) in purple and h(k) in blue).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "Runtime and memory usage comparisons between RNAsubopt and LinearSampling on the RNAcentral dataset. The sample size is 10,000. A: end-to-end runtime, including the inside and the sampling phases. B: sampling-only runtime. C: memory usage of RNAsubopt and LinearSampling. Note that LinearSampling can scale to longer sequences.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "Fig. 8A and B show the comparisons in two dimensions: the end-to-end runtime and the sampling-only runtime. In the former case (Fig. 8A), LinearSampling scales almost linearly against sequence length, and is faster than RNAsubopt; in the latter case (Fig. 8B), LinearSampling takes strictly linear runtime and is nearly twice as fast. We find that RNAsubopt overflows on a sequence of length 19,071 nt, while LinearSampling scales up to longer sequences, e.g., the longest sequence (33,461 nt) in the dataset. This suggests that LinearSampling is able to be applied to the full-length of SARS-CoV-2 genomes (about 30,000 nt). Compared to the longest sequence (15,780 nt) RNAsubopt can run in the RNAcentral dataset, LinearSampling is 111\u00d7 faster (48 seconds vs. 89 minutes). Fig. 8C confirms that the memory usage of LinearSampling is also linear, but RNAsubopt requires nearly quadratic memory size against sequence length. Lin-earSampling only uses 1.2 GB memory for the sequence of length 15,780 nt, while RNAsubopt uses 5.7 GB.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF11": {
            "text": "The accessibilities derived from LinearSampling correlate well with the unpaired region in the canonical structure of SARS-CoV-2 5'-UTR",
            "latex": null,
            "type": "figure"
        },
        "FIGREF12": {
            "text": "The BEAMPRUNE function from the Pseudocode of our main algorithm (Fig. The tree depth of a derivation against sequence length. A: the tree depth of the structures sampled by Vienna RNAsubopt. B: the tree depth of the structures sampled by LinearSampling. Extension ofFig. 7with varying sequence lengths. The sample size is 1,000. A: the percentage of visited nodes against sequence length. B: g(k) and h(k) against sequence length. Note that RNAsubopt overflows on a sequence of length 19,071 nt, so we do not plot the data point above 19,071 nt for RNAsubopt.H. Zhang et al.| 13",
            "latex": null,
            "type": "figure"
        },
        "FIGREF13": {
            "text": ". SI 4. Runtime comparisons against sample size k, with different sequence lengths (ADG: 1,005 nt; BEH: 3,048 nt; CFI: 10,956 nt). A-C: end-to-end runtime. D-F: sampling-only runtime. G-I: memory usage.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF14": {
            "text": "The ensemble defect difference between LinearSampling and Vienna RNAsubopt, and between RNAsubopt local mode (maxBPspan=70) and RNAsubopt. The runtime of Vienna RNAsubopt (with or without the boustrophedon optimization(Ponty, 2008)) and LinearSampling, on the RNAcentral dataset up to 8,000 nt.H. Zhang et al.| 15",
            "latex": null,
            "type": "figure"
        },
        "TABREF2": {
            "text": "Regions of 15 nucleotides with negative log-odds of free energy change. They are found by LinearSampling running on the SARS-CoV-2 full genomes.",
            "latex": null,
            "type": "table"
        },
        "TABREF3": {
            "text": "The copyright holder for this preprint this version posted December 29, 2020. ; https://doi.org/10.1101/2020.12.29.424617 doi: bioRxiv preprintSupporting Information LinearSampling: Linear-Time Stochastic Sampling of RNA Secondary Structure with Applications to SARS-CoV-2 He Zhang, Liang Zhang, Sizhen Li, David H. Mathews, and Liang Huang",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "E. coli T. thermophilus S. aureus B. subtilis H. pylori overallTable SI1. Accessibility defect comparison between Vienna RNAsubopt, the local sampling and LinearSampling on 23S rRNA family. The sample size is 10,000.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "This work is supported in part by National Institutes of Health (R01 GM076485 to D.H.M.)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "ACKNOWLEDGMENTS."
        }
    ]
}