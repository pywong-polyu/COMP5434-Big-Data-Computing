{
    "paper_id": "afc3e33e4d3102b0fefcd513a312660c1b25142a",
    "metadata": {
        "title": "Task-Adaptive Neural Network Search with Meta-Contrastive Learning",
        "authors": [
            {
                "first": "Wonyong",
                "middle": [],
                "last": "Jeong",
                "suffix": "",
                "affiliation": {},
                "email": "wyjeong@kaist.ac.kr"
            },
            {
                "first": "Hayeon",
                "middle": [],
                "last": "Lee",
                "suffix": "",
                "affiliation": {},
                "email": "hayeon926@kaist.ac.kr"
            },
            {
                "first": "Geon",
                "middle": [],
                "last": "Park",
                "suffix": "",
                "affiliation": {},
                "email": "geon.park@kaist.ac.kr"
            },
            {
                "first": "Eunyoung",
                "middle": [],
                "last": "Hyung",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Jinheon",
                "middle": [],
                "last": "Baek",
                "suffix": "",
                "affiliation": {},
                "email": "jinheon.baek@kaist.ac.kr"
            },
            {
                "first": "Sung",
                "middle": [
                    "Ju"
                ],
                "last": "Hwang",
                "suffix": "",
                "affiliation": {},
                "email": "sjhwang82@kaist.ac.kr"
            },
            {
                "first": "",
                "middle": [],
                "last": "Kaist",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "",
                "middle": [],
                "last": "Aitrics",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "South",
                "middle": [],
                "last": "Seoul",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "",
                "middle": [],
                "last": "Korea",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Most conventional Neural Architecture Search (NAS) approaches are limited in that they only generate architectures without searching for the optimal parameters. While some NAS methods handle this issue by utilizing a supernet trained on a large-scale dataset such as ImageNet, they may be suboptimal if the target tasks are highly dissimilar from the dataset the supernet is trained on. To address such limitations, we introduce a novel problem of Neural Network Search (NNS), whose goal is to search for the optimal pretrained network for a novel dataset and constraints (e.g. number of parameters), from a model zoo. Then, we propose a novel framework to tackle the problem, namely Task-Adaptive Neural Network Search (TANS). Given a model-zoo that consists of network pretrained on diverse datasets, we use a novel amortized meta-learning framework to learn a cross-modal latent space with contrastive loss, to maximize the similarity between a dataset and a high-performing network on it, and minimize the similarity between irrelevant dataset-network pairs. We validate the effectiveness and efficiency of our method on ten real-world datasets, against existing NAS/AutoML baselines. The results show that our method instantly retrieves networks that outperform models obtained with the baselines with significantly fewer training steps to reach the target performance, thus minimizing the total cost of obtaining a task-optimal network. Our code and the model-zoo are available at https://github.com/wyjeong/TANS. Latency Accuracy FLOPs \u2026 Cross-Modal Latent Space \u2026 \u2026 Query In st an t Re tr ie va l",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Model-Zoo Construction with Optimal Pair Selection",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Best-fitted Trained Networks",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Em be dd in g To po lo gy & Le ar ne d Pa ra m et er s",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Rapid Fine-tuning",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Final Networks",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Real-world Architectures",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Real-world Datasets",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Figure 1: Comparison between conventional NAS and our method: Conventional supernet-based NAS approaches (Left) sample subnets from a fixed supernet trained on a single dataset. TANS (Right) can dynamically select the best-fitted neural networks that are trained on diverse datasets, adaptively for each query dataset.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "training. However, this approach may be suboptimal when we want to find the subnet for a dataset that is largely different from the source dataset the supernet is trained on (e.g. medical images or defect detection for semiconductors). This is a common limitation of existing NAS approaches, although the problem did not receive much attention due to the consideration of only a few datasets in the NAS benchmarks (See Figure 1, left) . However, in real-world scenarios, NAS approaches should search over diverse datasets with heterogeneous distributions, and thus it is important to task-adaptively search for the architecture and parameter values for a given dataset. Recently, MetaD2A [31] has utilized meta-learning to learn common knowledge for NAS across tasks, to rapidly adapt to unseen tasks. However it does not consider parameters for the searched architecture, and thus still requires additional training on unseen datasets. Given such limitations of NAS and meta-NAS methods, we introduce a novel problem of Neural Network Search (NNS), whose goal is to search for the optimal pretrained networks for a given dataset and conditions (e.g. number of parameters). To tackle the problem, we propose a novel and extremely efficient task-adaptive neural network retrieval framework that searches for the optimal neural network with both the architecture and the parameters for a given task, based on cross-modal retrieval. In other words, instead of searching for an optimal architecture from scratch or taking a sub-network from a single super-net, we retrieve the most optimal network for a given dataset in a task-adaptive manner (See Figure 1, right) , by searching through the model zoo that contains neural networks pretrained on diverse datasets. We first start with the construction of the model zoo, by pretraining state-of-the-art architectures on diverse real-world datasets.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 419,
                    "end": 434,
                    "text": "Figure 1, left)",
                    "ref_id": null
                },
                {
                    "start": 1645,
                    "end": 1661,
                    "text": "Figure 1, right)",
                    "ref_id": null
                }
            ],
            "section": "Abstract"
        },
        {
            "text": "We first define the Neural Network Search (NNS) problem and propose a meta-contrastive learning framework to learn a cross-modal retrieval space. We then describe the structural details of the query and model encoders, and an efficient model-zoo construction strategy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Our goal in NNS is to search for an optimal network (with both architectures and parameters) for a dataset and constraints, by learning a cross-modal latent space over the dataset-network pairs. We first describe the task-adaptive network retrieval with amortized meta-contrastive learning.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "We assume that we have a database of neural networks (model zoo) pretrained over a distribution of tasks p(\u03c4 ) with each task \u03c4 = {D \u03c4 , M \u03c4 , s \u03c4 }, where D \u03c4 denotes a dataset, M \u03c4 denotes a neural network (or model) trained on the dataset, and s \u03c4 denotes a set of auxiliary constraints for the network to be found (e.g. number of parameters or the inference latency). Then, our goal is to learn a cross-modal latent space for the dataset-network pairs (D \u03c4 , M \u03c4 ) while considering the constraints s \u03c4 over the task distribution p(\u03c4 ), as illustrated in Figure 1 . In this way, a meta-trained model from diverse (D \u03c4 , M \u03c4 ) pairs, will rapidly generalize on an unseen datasetD; D \u03c4 \u2229D = \u2205 by retrieving a well-fitted neural network on the dataset that satisfies the conditions s \u03c4 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 559,
                    "end": 567,
                    "text": "Figure 1",
                    "ref_id": null
                }
            ],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Neural Architecture Search (NAS) aims to automate the design process of network architectures by searching for high-performing architectures with RL [76, 77] , evolutionary algorithms [43, 11] , parameter sharing [6, 42] , or surrogate schemes [38] , to overcome the excessive cost of trial-and-error approaches with the manual design of neural architectures [47, 23, 27] . Despite their success, existing NAS methods suffer from several limitations, which hinder their applicability to practical scenarios. First of all, the search for the optimal architectures usually requires a large amount of computation, which can take multiple GPU hours or even days to finish. This excessive computation cost makes it difficult to efficiently obtain an optimal architecture for a novel dataset. Secondly, most NAS approaches only search for optimal architectures, without the consideration of their parameter values. Thus, they require extra computations and time for training on the new task, in addition to the architecture search cost, which is already excessively high. For this reason, supernet-based methods [8, 37] that search for a sub-network (subnet) from a network pretrained on large-scale data, are attracting more popularity as it eliminates the need for additional Then, we train our retrieval model via amortized meta-learning of a cross-modal latent space with a contrastive learning objective. Specifically, we encode each dataset with a set encoder and obtain functional and topological embeddings of a network, such that a dataset is embedded closer to the network that performs well on it while minimizing the similarity between irrelevant dataset-network pairs. The learning process is further guided by a performance predictor, which predicts the model's performance on a given dataset. The proposed Task-Adaptive Network Search (TANS) largely outperforms conventional NAS/AutoML methods (See Figure 2) , while significantly reducing the search time. This is because the retrieval of a trained network can be done instantly without any additional architecture search cost, and retrieving a task-relevant network will further reduce the fine-tuning cost. To evaluate the proposed TANS, we first demonstrate the sample-efficiency of our model zoo construction method, over construction with random sampling of dataset-network pairs. Then, we show that the TANS can adaptively retrieve the best-fitted models for an unseen dataset. Finally, we show that our method significantly outperforms baseline NAS/AutoML methods on real-world datasets (Figure 2) , with incomparably smaller computational cost to reach the target performance. In sum, our main contributions are as follows:",
            "cite_spans": [
                {
                    "start": 149,
                    "end": 153,
                    "text": "[76,",
                    "ref_id": "BIBREF74"
                },
                {
                    "start": 154,
                    "end": 157,
                    "text": "77]",
                    "ref_id": "BIBREF75"
                },
                {
                    "start": 184,
                    "end": 188,
                    "text": "[43,",
                    "ref_id": "BIBREF41"
                },
                {
                    "start": 189,
                    "end": 192,
                    "text": "11]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 213,
                    "end": 216,
                    "text": "[6,",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 217,
                    "end": 220,
                    "text": "42]",
                    "ref_id": "BIBREF40"
                },
                {
                    "start": 244,
                    "end": 248,
                    "text": "[38]",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 359,
                    "end": 363,
                    "text": "[47,",
                    "ref_id": "BIBREF45"
                },
                {
                    "start": 364,
                    "end": 367,
                    "text": "23,",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 368,
                    "end": 371,
                    "text": "27]",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 1106,
                    "end": 1109,
                    "text": "[8,",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 1110,
                    "end": 1113,
                    "text": "37]",
                    "ref_id": "BIBREF35"
                }
            ],
            "ref_spans": [
                {
                    "start": 1908,
                    "end": 1917,
                    "text": "Figure 2)",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 2554,
                    "end": 2564,
                    "text": "(Figure 2)",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "\u2022 We consider a novel problem of Neural Network Search, whose goal is to search for the optimal network for a given task, including both the architecture and the parameters. \u2022 We propose a novel cross-modal retrieval framework to retrieve a pretrained network from the model zoo for a given task via amortized meta-learning with constrastive objective. \u2022 We propose an efficient model-zoo construction method to construct an effective database of dataset-architecture pairs, considering both the model performance and task diversity. \u2022 We train and validate TANS on a newly collected large-scale database, on which our method outperforms all NAS/AutoML baselines with almost no architecture search cost and significantly fewer fine-tuning steps.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Neural Architecture Search Neural Architecture Search (NAS), which aims to automate the design of neural architectures, is an active topic of research nowadays. Earlier NAS methods use non-differentiable search techniques based on RL [76, 77] or evolutionary algorithms [43, 11] . However, their excessive computational requirements [44] in the search process limits their practical applicability to resource-limited settings. To tackle this challenge, one-shot methods share the parameters [42, 6, 35, 65] among architectures, which reduces the search cost by orders of magnitude. The surrogate scheme predicts the performance of architectures without directly training them [38, 75, 54] , which also cuts down the search cost. Latent space-based NAS methods [38, 54, 67] learn latent embeddings of the architectures to reconstruct them for a specific task. Recently, supernetbased approaches, such as OFA [8] , receive the most attention due to their high-performances. OFA generates the subnet with its parameters by splitting the trained supernet. While this eliminates the need for costly re-training of each searched architecture from scratch, but, it only trains a fixedsupernet on a single dataset (ImageNet-1K), which limits their effectiveness on diverse tasks that are largely different from the training set. Whereas our TANS task-adaptively retrieves a trained neural network from a database of networks with varying architectures trained on diverse datasets.",
            "cite_spans": [
                {
                    "start": 234,
                    "end": 238,
                    "text": "[76,",
                    "ref_id": "BIBREF74"
                },
                {
                    "start": 239,
                    "end": 242,
                    "text": "77]",
                    "ref_id": "BIBREF75"
                },
                {
                    "start": 270,
                    "end": 274,
                    "text": "[43,",
                    "ref_id": "BIBREF41"
                },
                {
                    "start": 275,
                    "end": 278,
                    "text": "11]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 333,
                    "end": 337,
                    "text": "[44]",
                    "ref_id": "BIBREF42"
                },
                {
                    "start": 491,
                    "end": 495,
                    "text": "[42,",
                    "ref_id": "BIBREF40"
                },
                {
                    "start": 496,
                    "end": 498,
                    "text": "6,",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 499,
                    "end": 502,
                    "text": "35,",
                    "ref_id": "BIBREF33"
                },
                {
                    "start": 503,
                    "end": 506,
                    "text": "65]",
                    "ref_id": "BIBREF63"
                },
                {
                    "start": 676,
                    "end": 680,
                    "text": "[38,",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 681,
                    "end": 684,
                    "text": "75,",
                    "ref_id": "BIBREF73"
                },
                {
                    "start": 685,
                    "end": 688,
                    "text": "54]",
                    "ref_id": "BIBREF52"
                },
                {
                    "start": 760,
                    "end": 764,
                    "text": "[38,",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 765,
                    "end": 768,
                    "text": "54,",
                    "ref_id": "BIBREF52"
                },
                {
                    "start": 769,
                    "end": 772,
                    "text": "67]",
                    "ref_id": "BIBREF65"
                },
                {
                    "start": 907,
                    "end": 910,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "The goal of meta-learning [55] is to learn a model to generalize over the distribution of tasks, instead of instances from a single task, such that a meta-learner trained across multiple tasks can rapidly adapt to a novel task. While most meta-learning methods consider few-shot classification with a fixed architecture [56, 20, 48, 40, 33, 30] , there are a few recent studies that couple NAS with meta-learning [46, 34, 17] to search for the well-fitted architecture for the given task. However, these NAS approaches are limited to small-scale tasks due to the cost of roll-out gradient steps. To tackle this issue, MetaD2A [31] proposes to generate task-dependent architectures with amortized meta-learning, but does not consider parameters for the searched architecture, and thus requires additional cost of training it on unseen datasets. To overcome these limitations, our method retrieves the best-fitted architecture with its parameters for the target task, by learning a cross-modal latent space for dataset-network pairs with amortized meta-learning.",
            "cite_spans": [
                {
                    "start": 26,
                    "end": 30,
                    "text": "[55]",
                    "ref_id": "BIBREF53"
                },
                {
                    "start": 320,
                    "end": 324,
                    "text": "[56,",
                    "ref_id": "BIBREF54"
                },
                {
                    "start": 325,
                    "end": 328,
                    "text": "20,",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 329,
                    "end": 332,
                    "text": "48,",
                    "ref_id": "BIBREF46"
                },
                {
                    "start": 333,
                    "end": 336,
                    "text": "40,",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 337,
                    "end": 340,
                    "text": "33,",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 341,
                    "end": 344,
                    "text": "30]",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 413,
                    "end": 417,
                    "text": "[46,",
                    "ref_id": "BIBREF44"
                },
                {
                    "start": 418,
                    "end": 421,
                    "text": "34,",
                    "ref_id": "BIBREF32"
                },
                {
                    "start": 422,
                    "end": 425,
                    "text": "17]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 626,
                    "end": 630,
                    "text": "[31]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "Neural Retrieval Neural retrieval aims to search for and return the best-fitted item for the given query, by learning to embed items in a latent space with a neural network. Such approaches can be broadly classified into models for image retrieval [21, 14, 66] and text retrieval [73, 9, 63] . Crossmodal retrieval approaches [32, 74, 58] handle retrieval across different modalities of data (e.g. image and text), by learning a common representation space to measure the similarity across the instances from different modalities. To our knowledge, none of the existing works is directly related to our approach that performs cross-modal retrieval of neural networks given datasets. We first construct our modelzoo with pareto-optimal pairs of dataset and network, rather than exhaustively train all possible pairs. We then embed a model and a dataset with a graph-functional model and a set encoder. After that, we meta-learn the cross-modal retrieval network over multiple model-query pairs, guided by our performance predictor.",
            "cite_spans": [
                {
                    "start": 248,
                    "end": 252,
                    "text": "[21,",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 253,
                    "end": 256,
                    "text": "14,",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 257,
                    "end": 260,
                    "text": "66]",
                    "ref_id": "BIBREF64"
                },
                {
                    "start": 280,
                    "end": 284,
                    "text": "[73,",
                    "ref_id": "BIBREF71"
                },
                {
                    "start": 285,
                    "end": 287,
                    "text": "9,",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 288,
                    "end": 291,
                    "text": "63]",
                    "ref_id": "BIBREF61"
                },
                {
                    "start": 326,
                    "end": 330,
                    "text": "[32,",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 331,
                    "end": 334,
                    "text": "74,",
                    "ref_id": "BIBREF72"
                },
                {
                    "start": 335,
                    "end": 338,
                    "text": "58]",
                    "ref_id": "BIBREF56"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "Task-Adaptive Neural Network Retrieval To learn a cross-modal latent space for dataset-network pairs over a task distribution, we first introduce a novel task-adaptive neural network retrieval problem. The goal of task-adaptive retrieval is to find an appropriate network M \u03c4 given the query dataset D \u03c4 for task \u03c4 . To this end, we need to calculate the similarity between the dataset-network pair (D \u03c4 , M \u03c4 ) \u2208 Q \u00d7 M, with a scoring function f that outputs the similarity between them as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "where E Q : Q \u2192 R d is a query (dataset) encoder, E M : M \u2192 R d is a model encoder, which are parameterized with the parameter \u03b8 and \u03c6 respectively, and f sim : R d \u00d7 R d \u2192 R is a scoring function for the query-model pair. In this way, we can construct the cross-modal latent space for dataset-network pairs over the task distribution with equation 1, and use this space to rapidly retrieve the well-fitted neural network in response to the unseen query dataset.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "We can learn such a cross-modal latent space of dataset-network pairs for rapid retrieval by directly solving for the above objective, with the assumption that we have the query and the model encoder: Q and M . However, we further propose a contrastive loss to maximize the similarity between a dataset and a network that obtains high performance on it in the learned latent space, and minimize the similarity between irrelevant dataset-network pairs, inspired by Faghri et al. [19] , Engilberge et al. [18] . While existing works such as Faghri et al. [19] , Engilberge et al. [18] target image-to-text retrieval, we tackle the problem of cross-modal retrieval across datasets and networks, which is a nontrivial problem as it requires task-level meta-learning.",
            "cite_spans": [
                {
                    "start": 478,
                    "end": 482,
                    "text": "[19]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 503,
                    "end": 507,
                    "text": "[18]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 553,
                    "end": 557,
                    "text": "[19]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 578,
                    "end": 582,
                    "text": "[18]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "Retrieval with Meta-Contrastive Learning Our meta-contrastive learning objective for each task \u03c4 \u2208 p(\u03c4 ) consisting of a dataset-model pair (D \u03c4 , M \u03c4 ) \u2208 Q \u00d7 M, aims to maximize the similarity between positive pairs: f sim (q, m + ), while minimizing the similarity between negative pairs: f sim (q, m \u2212 ), where m + is obtained from the sampled target task \u03c4 \u2208 p(\u03c4 ) and m \u2212 is obtained from other tasks \u03b3 \u2208 p(\u03c4 ); \u03b3 = \u03c4 , which is illustrated in Figure 3 . This meta-contrastive learning loss can be formally defined as follows:",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 449,
                    "end": 457,
                    "text": "Figure 3",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Meta-Learning"
        },
        {
            "text": "We then introduce L for the meta-contrastive learning:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "where \u03b1 \u2208 R is a margin hyper-parameter and the score function f sim is the cosine similarity. The contrastive loss promotes the positive (q, m + ) embedding pair to be close together, with at most margin \u03b1 closer than the negative (q, m \u2212 ) embedding pairs in the learned cross-modal metric space. Note that, similar to this, we also contrast the query with its corresponding model:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": ", which we describe in the supplementary material in detail.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "With the above ingredients, we minimize the meta-contrastive learning loss over a task distribution p(\u03c4 ), defined with the model L m and query L q contrastive losses, as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "Meta-Performance Surrogate Model We propose the meta-performance surrogate model to predict the performance on an unseen dataset without directly training on it, which is highly practical in real-world scenarios since it is expensive to iteratively train models for every dataset to measure the performance. Thus, we meta-train a performance surrogate model a = S(\u03c4 ; \u03c8) over a distribution of tasks p(\u03c4 ) on the model-zoo database. This model not only accurately predicts the performance a of a network M \u03c4 on an unseen dataset D \u03c4 , but also guides the learning of the cross-modal retrieval space, thus embedding a neural network closer to datasets that it performs well on.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "Specifically, the proposed surrogate model S takes a query embedding q \u03c4 and a model embedding m \u03c4 as an input for the given task \u03c4 , and then forwards them to predict the accuracy of the model for the query. We train this performance predictor S(\u03c4 ; \u03c8) to minimize the mean-square error loss L s (\u03c4 ; \u03c8) = (s \u03c4 acc \u2212 S(\u03c4 ; \u03c8)) 2 between the predicted accuracy S(\u03c4 ; \u03c8) and the true accuracy s \u03c4 acc for the model on each task \u03c4 , which is sampled from the task distribution p(\u03c4 ). Then, we combine this objective with retrieval objective in equation 4 to train the entire framework as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "where \u03bb is a hyper-parameter for weighting losses.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Learning"
        },
        {
            "text": "By leveraging the meta-learned cross-modal retrieval space, we can instantly retrieve the best-fitted pretrained network M \u2208 M, given an unseen query datasetD \u2208Q, which is disjoint from the meta-training dataset D \u2208 Q. Equipped with meta-training components described in the previous subsection, we now describe the details of our model at inference time, which includes the following: amortized inference, performance prediction, and task-and constraints-adaptive initialization.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Test"
        },
        {
            "text": "Amortized Inference Most existing NAS methods are slow as they require several GPU hours for training, to find the optimal architecture for a datasetD. Contrarily, the proposed Task-Adaptive Network Search (TANS) only requires a single forward pass per dataset, to obtain a query embedding q for the unseen dataset using the query encoder Q(D; \u03b8 * ) with the meta-trained parameters \u03b8 * , since we train our model with amortized meta-learning over a distribution of tasks p(\u03c4 ). After obtaining the query embedding, we retrieve the best-fitted network M * for the query based on the similarity:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Test"
        },
        {
            "text": "where a set of model embeddings {m \u03c4 | \u03c4 \u2208 p(\u03c4 )} is pre-computed by the meta-trained model encoder E M (M \u03c4 ; \u03c6 * ).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Meta-Test"
        },
        {
            "text": "Performance Prediction While we achieve the competitive performance on unseen dataset only with the previously defined model, we also use the meta-learned performance predictor S to select the best performing one among top K candidate networks {M i } K i=1 based on their predicted performances. Since this surrogate model with module to consider datasets is meta-learned over the distribution of tasks p(\u03c4 ), we predict the performance on an unseen datasetD without training on it. This is different from the conventional surrogate models [38, 75, 54] that additionally need to train on an unseen dataset from scratch, to predict the performance on it.",
            "cite_spans": [
                {
                    "start": 540,
                    "end": 544,
                    "text": "[38,",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 545,
                    "end": 548,
                    "text": "75,",
                    "ref_id": "BIBREF73"
                },
                {
                    "start": 549,
                    "end": 552,
                    "text": "54]",
                    "ref_id": "BIBREF52"
                }
            ],
            "ref_spans": [],
            "section": "Meta-Test"
        },
        {
            "text": "Task-adaptive Initialization Given an unseen dataset, the proposed TANS can retrieve the network trained on a training dataset that is highly similar to the unseen query dataset from the model zoo (See Figure 4) . Therefore, fine-tuning time of the trained network for the unseen target datasetD is effectively reduced since the retrieved network M has task-relevant initial parameters that are already trained on a similar dataset. If we need to further consider constraints s, such as parameters and FLOPs, then we can easily check if the retrieved models meet the specific constraints by sorting them in the descending order of their scores, and then selecting the constraint-fitted best accuracy model.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 202,
                    "end": 211,
                    "text": "Figure 4)",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Meta-Test"
        },
        {
            "text": "Query Encoder The goal of the proposed query encoder E Q (D; \u03b8) : Q \u2192 R d is to embed a dataset D as a single query vector q onto the cross-modal latent space. Since each dataset D consists of n data instances D = {X i } n i=1 \u2208 Q, we need to fulfill the permutation-invariance condition over the data instances X i , to output a consistent representation regardless of the order of its instances. To satisfy this condition, we first individually transform n randomly sampled instances for the dataset D with a continuous learnable function \u03c1, and then apply a pooling operation to obtain the query vector q = Xi\u2208D \u03c1(X i ), adopting Zaheer et al. [69] .",
            "cite_spans": [
                {
                    "start": 647,
                    "end": 651,
                    "text": "[69]",
                    "ref_id": "BIBREF67"
                }
            ],
            "ref_spans": [],
            "section": "Encoding Datasets and Networks"
        },
        {
            "text": "Model Encoder To encode a neural network M \u03c4 , we consider both its architecture and the model parameters trained on the dataset D \u03c4 for each task \u03c4 . Thus, we propose to generate a model embedding with two encoding functions: 1) topological encoding and 2) functional encoding.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Encoding Datasets and Networks"
        },
        {
            "text": "Following Cai et al. [8] , we first obtain a topological embedding v \u03c4 t with auxiliary information about the architecture topology, such as the numbers of layers, channel expansion ratios, and kernel sizes. Then, our next goal is to encode the trained model parameters for the given task, to further consider parameters on the neural architecture. However, a major problem here is that directly encoding millions of parameters into a vector is highly challenging and inefficient. To this end, we use functional embedding, which embeds a network solely based on its input-output pairs. This operation generates the embedding of trained networks, by feeding a fixed Gaussian random noise into each network M \u03c4 , and then obtaining an output v \u03c4 f of it. The intuition behind the functional embedding is straightforward: since networks with different architectures and parameters comprise different functions, we can produce different outputs for the same input.",
            "cite_spans": [
                {
                    "start": 21,
                    "end": 24,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "Encoding Datasets and Networks"
        },
        {
            "text": "With the two encoding functions, the proposed model encoder generates the model representation by concatenating the topology and function embeddings [v \u03c4 t , v \u03c4 f ], and then transforming the concatenated vector with a non-linear function \u03c3 as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Encoding Datasets and Networks"
        },
        {
            "text": ". Note that, the two encoding functions satisfy the injectiveness property under certain conditions, which helps with the accurate retrieval of the embedded elements in a condensed continuous latent space. We provide the proof of the injectiveness of the two encoding functions in Section C of the supplementary file.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Encoding Datasets and Networks"
        },
        {
            "text": "Given a set of datasets D = {D 1 , . . . , D K } and a set of architectures M = {M 1 , . . . , M N }, the most straightforward way to construct a model zoo Z, is by training all architectures on all datasets, which will yield a model zoo Z that contains N \u00d7 K pretrained networks. However, we may further reduce the construction cost by collecting P dataset-model pairs, {D, M } P i=1 , where P N \u00d7K, by randomly sampling an architecture M \u2208 M and then training it on D \u2208 D. Although this works well in practice (see Figure 8 (Bottom)), we further propose an efficient algorithm to construct it in a more sample-efficient manner, by skipping evaluation of dataset-model pairs that are certainly worse than others in all aspects (memory consumption, latency, and test accuracy). We start with an initial model zoo Z (0) that contains a small amount of randomly selected pairs and its test accuracies. Then, at each iteration t, among the set of candidates C (t) , we find a pair {D, M } that can expand the currently known set of all Pareto-optimal pairs w.r.t. all conditions (memory, latency, and test accuracy on the dataset D), based on the amount of the Pareto front expansion estimated by f zoo (\u00b7; Z (t) ):",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 517,
                    "end": 525,
                    "text": "Figure 8",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "Model-Zoo Construction"
        },
        {
            "text": "where",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Model-Zoo Construction"
        },
        {
            "text": "parameter \u03c8 zoo trained on Z, and the function g D measures the volume under the Pareto curve, also known as the Hypervolume Indicator [41] , for the dataset D. We then train M on D, and add it to the current model zoo Z (t) . For the full algorithm, please refer to Appendix A.",
            "cite_spans": [
                {
                    "start": 135,
                    "end": 139,
                    "text": "[41]",
                    "ref_id": "BIBREF39"
                }
            ],
            "ref_spans": [],
            "section": "Model-Zoo Construction"
        },
        {
            "text": "In this section, we conduct extensive experimental validation against conventional NAS methods and commercially available AutoML platforms, to demonstrate the effectiveness of our proposed method.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experiments"
        },
        {
            "text": "Datasets We collect 96 real-world image classification datasets from Kaggle * . Then we divide the datasets into two non-overlapping sets for 86 meta-training and 10 meta-test datasets. As some datasets contain relatively large number of classes than the other datasets, we adjust each dataset * https://www.kaggle.com/ to have up to 20 classes, yielding 140 and 10 datasets for meta-training and meta-test datasets, respectively (Please see Table 5 for detailed dataset configuration). For each dataset, we use randomly sampled 80/20% instances as a training and test set. To be specific, our 10 meta-test datasets include Colorectal Histology, Drawing, Dessert, Chinese Characters, Speed Limit Signs, Alien vs Predator, COVID-19, Gemstones, and Dog Breeds. We strictly verified that there is no dataset-, class-, and instance-level overlap between the meta-training and the meta-test datasets, while some datasets may contain semantically similar classes.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 442,
                    "end": 449,
                    "text": "Table 5",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "Experimental Setup"
        },
        {
            "text": "Baseline Models We consider MobileNetV3 [26] pretrained on ImageNet as our baseline neural network. We compare our method with conventional NAS methods, such as PC-DARTS [65] and DrNAS [10] , weight-sharing approaches, such as FBNet [60] and Once-For-All [8] , and datadriven meta-NAS approach, e.g. MetaD2A [31] . All these NAS baseline approaches are based on MobileNetV3 pretrained on ImageNet, except for the conventional NAS methods that are only able to generate architectures. As such conventional NAS methods start from the scratch, we train them for sufficient amount of training epochs (10 times more training steps) for fair comparison. Please see Appendix B for further detailed descriptions of the experimental setup.",
            "cite_spans": [
                {
                    "start": 40,
                    "end": 44,
                    "text": "[26]",
                    "ref_id": "BIBREF24"
                },
                {
                    "start": 170,
                    "end": 174,
                    "text": "[65]",
                    "ref_id": "BIBREF63"
                },
                {
                    "start": 185,
                    "end": 189,
                    "text": "[10]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 233,
                    "end": 237,
                    "text": "[60]",
                    "ref_id": "BIBREF58"
                },
                {
                    "start": 255,
                    "end": 258,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 308,
                    "end": 312,
                    "text": "[31]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "Experimental Setup"
        },
        {
            "text": "We follow the OFA search space [8] , which allows us to design resourceefficient architectures, and thus we obtain network candidates from the OFA space. We sample 100 networks condidates per meta-training dataset, and then train the network-dataset pairs, yielding 14,000 dataset-network pairs in our full model-zoo. We also construct smaller-sized efficient modelzoos from the full model-zoo (14,000) with our efficient algorithm described in Section 3.3. We use the full-sized model-zoo as our base model-zoo, unless otherwise we clearly mention the size of the used model-zoo. Detailed descriptions, e.g. training details and costs, are described in Appendix D.2. MetaD2A (data-driven meta-NAS), which provide the searched architectures as well as pretrained weights from ImageNet-1K, we fine-tune them on the meta-test query datasets for 50 epochs. As shown in Table 1 , we observe that TANS outperforms all baselines, with incomparably smaller search time and relatively smaller training time.",
            "cite_spans": [
                {
                    "start": 31,
                    "end": 34,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [
                {
                    "start": 866,
                    "end": 873,
                    "text": "Table 1",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Model-zoo Construction"
        },
        {
            "text": "Conventional NAS approaches such as PC-DARTS and DrNAS repeatedly require large search time for every dataset, and thus are inefficient for this practical setting with real-world datasets. FBNet, OFA, and MetaD2A are much more efficient than general NAS methods since they search for subnets within a given supernet, but obtain suboptimal performances on unseen real-world datasets as they may have largely different distributions from the dataset the supernet is trained on. In contrast, our method achieves almost zero cost in search time, and reduced training time as it fine-tunes a network pretrained on a relevant dataset. In Figure 5 , we show the test performance curves and observe that TANS often starts with a higher starting point, and converges faster to higher accuracy.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 632,
                    "end": 640,
                    "text": "Figure 5",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Meta-test Results"
        },
        {
            "text": "In Figure 4 , we show example images from the query and training datasets that the retrieved models are pretrained on. In most cases, our method matches semantically similar datasets to the query dataset. Even for the semantically-dissimilar cases (right column), for which our model-zoo does not contain models pretrained on datasets similar to the query, our models still outperform all other base NAS models. As such, our model effectively retrieves not only task-relevant models, but also potentially best-fitted models even trained with dissimilar datasets, for the given query datasets. We provide detailed descriptions for all query and retrieval pairs in Figure 9 of Appendix.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 3,
                    "end": 11,
                    "text": "Figure 4",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 663,
                    "end": 671,
                    "text": "Figure 9",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "Meta-test Results"
        },
        {
            "text": "We also compare with commercially available AutoML platforms, such as Microsoft Azure Custom Vision [1] and Google Vision Edge [2] . For this experiment, we evaluate on randomly chosen five datasets (out of ten), due to excessive training costs required on AutoML platforms. As shown in Figure 2 , our method outperforms all commercial NAS/AutoML methods, with a significantly smaller total time cost. We provide more details and additional experiments, such as including real-world architectures, in Appendix E.",
            "cite_spans": [
                {
                    "start": 100,
                    "end": 103,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 127,
                    "end": 130,
                    "text": "[2]",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 287,
                    "end": 295,
                    "text": "Figure 2",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Meta-test Results"
        },
        {
            "text": "To see that our method is effective in retrieving networks with both optimal architecture and relevant parameters, we conduct several ablation studies. We first report the results of base models that only search for the optimal architectures. Then we provide the results of the network retrieved using a variant of our method which does not use the topology (architecture) embedding, and only uses the functional embedding v \u03c4 f (Tans w/o Topol). As shown in Figure 6 (d), TANS w/o Topol outperforms base NAS methods (except for MetaD2A) without considering the architectures, which shows that the performance improvement mostly comes from the knowledge transfer from the weights of the most relevant pretrained networks. However, the full TANS obtains about 1% higher performance over TANS w/o Topol., which shows the importance of the architecture and the effectiveness of our architecture embedding. In Figure 6 (e), we further experiment with a version of our method that initializes the retrieved networks with both random weights and ImageNet pre-trained weights, using 1/20 sized model-zoo (700). We observe that they achieve lower accuracy over TANS on 10 datasets, which again shows the importance of retrieving relevant tasks' knowledge. We also construct the model-zoo by training on the architectures found by an existing NAS method (MetaD2A), and see that it further improves the performance of TANS.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 459,
                    "end": 467,
                    "text": "Figure 6",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 906,
                    "end": 914,
                    "text": "Figure 6",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Analysis of the Architecture & Parameters"
        },
        {
            "text": "Contraints-conditioned Retrieval TANS can retrieve models with a given dataset and additional constraints, such as the number of the parameters or the computations (in FLOP). This is practically important since we may need a network with less memory and computation overhead depending on the hardware device. This can be done by filtering networks that satisfy the given conditions among the candidate networks retrieved. For this experiment, we compare against OFA that performs the same constrained search, as other baselines do not straightforwardly handle this scenario. As shown in Figure 6 (a) and (b), we observe that the network retrieved with TANS consistently outperforms the network searched with OFA under varying parameters and computations constraints. Such constrained search is straightforward with our method since our retrieval-based method allows us to search from the database consisting of networks with varying architectures and sizes.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 587,
                    "end": 595,
                    "text": "Figure 6",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Analysis of the Architecture & Parameters"
        },
        {
            "text": "Analysis of the Cross-Modal Retrieval Space We further examine the learned cross-modal space. We first visualize the meta-learned latent space in Figure 6 (c) with randomly sampled 1,400 models among 14,000 models in the model-zoo. We observe that the network whose embeddings are the closest to the query dataset achieves higher performance on it, compared to networks embedded the farthest from it. For example, the accuracy of the closet network point for UCF-AI is 98.94% while the farthest network only achieves 91.53%. We also show Spearman correlation scores on 5 meta-test datasets in Table 2 . Measuring correlation with the distances is not directly compatible with our contrastive loss, since the negative examples (models that achieve low performance on the target dataset) are pushed away from the query point, without a meaningful ranking between the negative instances. To obtain a latent space where the negative examples are also well-ranked, we should replace the contrastive loss with a ranking loss instead, but this will not be very meaningful. Hence, to effectively validate our latent space with correlation metric, we rather select clusters, such that 50 models around the query point and another 50 models around the farthest points, thus using a total of 100 models to report the correlation scores. In the Table 2 , we show the correlation scores of these 100 models on the five unseen datasets. For Food dataset (reported as \"hard\" dataset in Table 1 ), the correlation scores are shown to be high. On the other hand, for Colorectal Histology dataset (reported as \"easy\" dataset), the correlation scores are low as any model can obtain good performance on it, which makes the performance gap across models small. In sum, as the task (dataset) becomes more difficult, we can observe a higher correlation in the latent space between the distance and the rank.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 146,
                    "end": 154,
                    "text": "Figure 6",
                    "ref_id": "FIGREF3"
                },
                {
                    "start": 593,
                    "end": 600,
                    "text": "Table 2",
                    "ref_id": "TABREF3"
                },
                {
                    "start": 1333,
                    "end": 1340,
                    "text": "Table 2",
                    "ref_id": "TABREF3"
                },
                {
                    "start": 1471,
                    "end": 1478,
                    "text": "Table 1",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "Analysis of the Architecture & Parameters"
        },
        {
            "text": "The role of the proposed performance predictor is not only guiding the model and query encoder to learn the better latent space but also selecting the best model among retrieval candidates. To verify its effectiveness, we measure the performance gap between the top-1 retrieved model w/o the predictor and the model with the highest scores selected using the predictor among retrieved candidates. As shown in Figure 7 (a), there are 1.5%p -8%p performance gains on the meta-test datasets. The top-1 retrieved model from the model zoo with TANS may not be always optimal for an unseen dataset, and our performance predictor remedies this issue by selecting the best-fitted model based on its estimation. We also examine ablation study for our performance predictor. Please note that we do not use ranking loss which does not rank the negative examples. Thus we use Mean Squared Error (MSE) scores. We retrieve the top 10 most relevant models for an unseen query datasets and then compute the MSE between the estimated scores and the actual ground truth accuracies. As shown in Figure 7 (c), we observe that removing either query or model embeddings degrades performance compared to the predictor taking both embeddings. It is natural that, with only model or query information, it is difficult to correctly estimate the accuracy since the predictor fails to recognize what or where to learn. Also, we report the MSE between the predicted performance using the predictor and the ground truth performance of each model for the entire set of pretrained models from a smaller model zoo in Figure 7 (d). Although the performance predictor achieves slightly higher MSE scores for this experiment compared to the MSE obtained on the top-10 retrieved models (which are the most important), the MSE scores are still meaningfully low, which implies that our performance model successfully works even toward the entire model-zoo.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 409,
                    "end": 417,
                    "text": "Figure 7",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 1076,
                    "end": 1084,
                    "text": "Figure 7",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 1584,
                    "end": 1592,
                    "text": "Figure 7",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "Meta-performance Predictor"
        },
        {
            "text": "We also verify whether our model successfully retrieves the same paired models when the correspondent meta-train datasets are given (we use unseen instances that are not used when training the encoders.) For the evaluation metric, we use recall at k (R@k) which indicates the percentage of the correct models retrieved among the top-k candidates for the unseen query instances, where k is set to 1, 5, and 10. Also, we report the mean and median ranking of the correct network among all networks for the unseen query. In Figure 7 (b), the largest parameter selection strategy shows poor performances on the retrieval problem, suggesting that simply selecting the largest network is not a suitable choice for real-world tasks. In addition, compared to cosine similarity learning, the proposed meta-contrastive learning allows the model to learn significantly improved discriminative latent space for cross-modal retrieval. Moreover, without our performance predictor, we observe that TANS achieves slightly lower performance, while it is significantly degenerated when training without functional embeddings. Analysis of Model-Zoo Construction Unlike most existing NAS methods, which repeatedly search the optimal architectures per dataset from their search spaces, TANS do not need to perform such repetitive search procedure, once the modelzoo is built beforehand. We are able to adaptively retrieve the relevant pretrained models for any number of datasets from our model-zoo, with almost zero search costs. Formally, TANS reduces the time complexities of both search cost and pre-training cost from O(N) to O(1), where N is the number of datasets, as shown in Figure 8 (Top) . Furthermore, a model zoo constructed using our efficient construction algorithm, introdcued in Section 3.3, yields models with higher performance on average, compared to the random sampling strategy when the size of the model-zoo is the same as shown in Figure 8 (Bottom).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 521,
                    "end": 529,
                    "text": "Figure 7",
                    "ref_id": "FIGREF5"
                },
                {
                    "start": 1663,
                    "end": 1677,
                    "text": "Figure 8 (Top)",
                    "ref_id": "FIGREF6"
                },
                {
                    "start": 1934,
                    "end": 1942,
                    "text": "Figure 8",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "Retrieval Performance"
        },
        {
            "text": "We propose a novel Task-Adaptive Neural Network Search framework (TANS), that instantly retrieves a relevant pre-trained network for an unseen dataset, based on the cross-modal retrieval of datasetnetwork pairs. We train this retrieval model via amortized meta-learning of the cross-modal latent space with contrastive learning, to maximize the similarity between the positive dataset-network pairs, and minimize the similarity between the negative pairs. We train our framework on a model zoo consisting of diverse pretrained networks, and validate its performance on ten unseen datastes.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion"
        },
        {
            "text": "The results show that the proposed TANS rapidly searches and trains a well-fitted network for unseen datasets with almost no architecture search cost and significantly fewer fine-tuning steps to reach the target performance, compared to other NAS methods. We discuss the limitation and the societal impact of our work in Appendix F. are 512 (except for the last classification layer), rather than using raw images, simply to reduce computation costs. We then use a linear layer with 512 dimensions, followed by M ean pooling and L2 normalization, which outputs encoded vectors with 128 dimensions. As we use Deep set [69] , we tried performing Sum pooling, instead of M ean pooling, however, we observe that taking the average on instances shows better R@k scores for the correct pair retrieval, and thus we use M ean pooling when encoding query samples.",
            "cite_spans": [
                {
                    "start": 617,
                    "end": 621,
                    "text": "[69]",
                    "ref_id": "BIBREF67"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion"
        },
        {
            "text": "Our model encoder takes both OFA flat topology [8] and functional embedding as an input. For the flat topology, it contains information such as kernel size, width expansion ratio, and depth, in a 45-dimensional vector. In addition, the functional embedding, which bypasses the need for direct parameter encoding, represents models' learned knowledge in a 1536-dimensional vector. We first concatenate both vectors and normalize the vector. Then, we learn a projection layer, which is a 1581-length fully-connected layer, followed by L2 norm operation, which outputs encoded vectors with 128 dimensions.",
            "cite_spans": [
                {
                    "start": 47,
                    "end": 50,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "A.3 Model Encoder"
        },
        {
            "text": "Our performance predictor takes both query and model embeddings simultaneously. Both embedding vectors are 128-dimensional vectors. We first concatenate the embeddings into 256-dimensional vectors and then forward them through a 256-length fully connected layer. We then produce a single continuous value for a predicted accuracy. We perform a sigmoid operation on the values to range the values into a scale from 0.0 to 1.0.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A.4 Meta-Surrogate Performance Predictor"
        },
        {
            "text": "There are two steps of training required for our Task-Adaptive Network Search (TANS): 1) training the crossmodal latent space and 2) fine-tuning the retrieved model on an unseen meta-test dataset.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B Training Details"
        },
        {
            "text": "For the model-zoo encoding, we set the batch size to 140 as we have 140 different datasets. Since, for each dataset, we randomly choose one model among 100 models from each dataset. Then we minimize the contrastive loss on the 140 samples. Although we train our encoders over a large number of dataset-network pairs (14,000 models), the entire training time takes less than two hours based on NVIDIA's RTX 2080 TI GPU. We initialize our model weights with the same value across all encoders and experiments, rather than differently initializing the encoders for every experimental trial. We use the Adam optimizer (We use the learning rate of 1e-2).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.1 Learning the Cross-modal Latent Space"
        },
        {
            "text": "For the fine-tuning phase, we set all settings, such as hyper-parameters, learning rate, optimizer, etc., exactly the same across all baseline models and our method, and the differences are clearly mentioned in this section otherwise. We use the SGD optimizer with an initial learning rate (1e-2), weight decay (4e-5), and momentum (0.9). Also, we use the Cosine Annealing learning rate scheduler. We train the models with 224 sized images (after resizing) and we set batch-size to 32, except PC-DARTS which has memory issues with 224 sized images (for PC-DARTS, we set to 12 as the batch-size), and DrNAS which we train with 32 sized images due to heavy training time costs. We train all models for 50 epochs and we show that our model converges faster than all baseline models.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.2 Fine-tuning on Meta-test Datasets"
        },
        {
            "text": "For the model-zoo consisting of 14,000 random pairs used in the main experiment, we fine-tune the ImageNet1K pretrained OFA models on the dataset for 625 epochs, following the progressive shrinking method described in [8] . We then choose 100 random OFA architectures for each dataset and evaluate their test accuracies on the test split.",
            "cite_spans": [
                {
                    "start": 218,
                    "end": 221,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "B.3 Constructing the Model-Zoo"
        },
        {
            "text": "For the efficiently constructed model zoo experiment, we use the algorithm described in Section 3.3 and further elaborated in Section A.1, using the 14,000-pair model zoo as the search space. For the initial samples, we use Ninit = 750, where 5-6 samples are taken from each dataset. The accuracy predictor is retrained from scratch every 64 iterations until the validation accuracy no longer improves for 5 epochs.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.3 Constructing the Model-Zoo"
        },
        {
            "text": "In this section, we show that the proposed query and model encoders can represent the injective function on the input query D \u2208 Q and model M \u2208 M, respectively.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Proposition 1 (Injectiveness on Query Encoding). Assume Q and D are finite sets. A query encoder EQ : Q \u2192 R d can injectively map two different queries D1, D2 into distinct embeddings q1, q2, where D \u2208 Q and q \u2208 R d .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Proof. A query encoder EQ maps a query dataset D \u2208 Q to a vector q \u2208 R d as follows: EQ : D \u2192 q, where Q is a set of queries, which contains a set of data instances X for constructing a dataset D = {X1, X2, ..., Xn}. Then, our goal here is to make a query encoder that uniquely maps two different queries D1, D2 into two distinct embeddings q1, q2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Each dataset D consists of n data instances: D = {X1, X2, ..., Xn}, where n is smaller than the number of elements in N. To encode each query dataset D into a vector space, as described in query encoder paragraph of section 3.2, we first transform each instance Xi into the representation space with a continuous function \u03c1, and then aggregate all set elements, which is adopted from Zaheer et al. [69] . In other words, a query encoder can be defined as follows: q = X i \u2208D \u03c1(Xi).",
            "cite_spans": [
                {
                    "start": 398,
                    "end": 402,
                    "text": "[69]",
                    "ref_id": "BIBREF67"
                }
            ],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "We assume that Q is a finite set, and each D = {X1, X2, ..., Xn} \u2208 Q is also a finite set with |D| = n elements. Therefore, a set of data instances X is countable, since the product of two nature numbers (i.e. |Q| \u00d7 n) is a natural number. For this reason, there can be a unique mapping Z from the element X to the nature number in N. If we let \u03c1(X) = 4 \u2212Z(X) , then the form of a query encoder X i \u2208D \u03c1(Xi) constitutes an unique mapping for every set D \u2208 Q (see Zaheer et al. [69] , Wagstaff et al. [57] for details). In other words, the output of the query encoder is unique for each input dataset D that consists of n data instances.",
            "cite_spans": [
                {
                    "start": 477,
                    "end": 481,
                    "text": "[69]",
                    "ref_id": "BIBREF67"
                },
                {
                    "start": 500,
                    "end": 504,
                    "text": "[57]",
                    "ref_id": "BIBREF55"
                }
            ],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Thanks to the universal approximation theorem [25, 24] , we can construct a mapping function \u03c1 using multi-layer perceptrons (MLPs). We first show that the topological encoding function EM T : M \u2192 vt can uniquely represent each architecture M in the embedding space. As described in the Model Encoder part of section A, we use a 45-dimensional vector that contains topological information, such as the number of layers, channel expansion ratios, and kernel sizes (See Cai et al. [8] for details), for the topological encoding. Also, each topological information uniquely defines each neural architecture. Therefore, the embedding vt from the topological encoding function EM T is unique on each neural network M .",
            "cite_spans": [
                {
                    "start": 46,
                    "end": 50,
                    "text": "[25,",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 51,
                    "end": 54,
                    "text": "24]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 479,
                    "end": 482,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "While we can obtain the distinct embedding of each neural network with the topological encoding function alone, we also consider the injectiveness of the functional encoding in the following. To consider the functional embedding, we first model a neural architecture as its computational graph, which can be further denoted as a directed acyclic graph (DAG). Using this computational graph scheme, a functional model encoder EM F maps an architecture (computational graph) M \u2208 M into a vector v f as follows: EM F : M \u2192 v f . Then, our goal here is to make the functional encoder EM F that uniquely maps two different neural architectures M1, M2 into two different embeddings v f 1 , v f 2 , with the computational graph represented as the DAG structure.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Assume that a computational graph for a neural network M has n nodes. Then, each node vi on the graph has its corresponding operation oi, which transforms incoming features for the node vi to an output representation Ci. In other words, Ci indicates the output of the composition of all operations along the path from v1 to vi.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Particularly, in our model encoder case, we have an arbitrary input signal x that is the fixed Gaussian noise, where we insert this fixed input into the starting node v1 (See Model Encoder paragraph of section 3.2 for details). Also, for the simplicity of the notation, we set C0 = x that is the output of the virtual node v0 and the incoming representation of the starting node of the computational graph. Then, the output representation for the node vi is formally defined as follows: Ci(x) = oi({Cj(x) : vj \u2192 vi}), where {Cj(x) : vj \u2192 vi} denotes a multiset for the output representation of vi's predecessors, and the operation oi transforms the incoming representations over the multiset into the output representation. Note that, to consider the multiplicity of the nodes on a graph, we use a multiset scheme, rather than a set [64] . Table 5 .",
            "cite_spans": [
                {
                    "start": 833,
                    "end": 837,
                    "text": "[64]",
                    "ref_id": "BIBREF62"
                }
            ],
            "ref_spans": [
                {
                    "start": 840,
                    "end": 847,
                    "text": "Table 5",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "graph for the network M with the fixed Gaussian input noise x is uniquely represented with the functional encoder EM F : M \u2192 v f , where v f = Cn with n nodes on the graph.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Note that we use a network M that is task-adaptively trained for a specific target dataset to not only obtain high performance on the target dataset but also reduce the fine-tuning cost on it. Thus, while we might further need to consider the parameters on the computational graph, we show the injectiveness on the functional encoding only with the computational graph structure and leave the consideration of parameters as a future work, since it is complicated to formally define the injectiveness with trainable parameters.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "To sum up, we show the injectiveness of the model representation with both topological encoding and functional encoding schemes, although only one encoding function can injectively represent the entire neural network. While we further concatenate and transform two output representations with a function g, to obtain the final model representation: m = g([vt, v f ]), the representation m is also unique on each neural network M with an injective function g.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Similar to the universal approximation theorem [25, 24] , we might construct an injective mapping function g and \u03c9 with learnable parameters on it.",
            "cite_spans": [
                {
                    "start": 47,
                    "end": 51,
                    "text": "[25,",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 52,
                    "end": 55,
                    "text": "24]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [],
            "section": "C Proof for Uniqueness of the Query and Model Encoding Functions"
        },
        {
            "text": "Before constructing a model zoo that contains a large number of dataset-architecture pairs, we first need to define an architecture search space on it to handle all architectures in a consistent manner. To easily obtain the task-adaptive parameters for the given task with consideration of various factors, such as a number of layers, kernel sizes, and width expansion ratios, we use the supernet-based OFA architecture space [8] , which the same as the well-known MobileNetV3 space [26] . Each neural architecture in the search space consists of a stack of 20 mobile-block convs (MBconvs), where the number of units is 5, and the number of layers on each unit ranges across {2, 3, 4}. Moreover, for each layer, we select the kernel size is from {3, 5, 7}, and the width-depth ratio from {3, 4, 6}. This strategy allows us to generate around 10 19 neural architecture candidates in theory.",
            "cite_spans": [
                {
                    "start": 426,
                    "end": 429,
                    "text": "[8]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 483,
                    "end": 487,
                    "text": "[26]",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [],
            "section": "D.1 Architecture Space"
        },
        {
            "text": "To construct a model zoo consisting of a large number of dataset-architecture pairs, we collect 89 real-world datasets for image classification from Kaggle * and obtain 100 random architectures per dataset from the OFA space. Specifically, we first divide the collected datasets into two non-overlapping sets for meta-training and meta-testing. If the dataset has more than 20 classes, then we randomly split it into multiple datasets such that a dataset can consist of up to 20 classes. For meta-testing, we randomly selected only one of the splits for each original dataset for diversity. This process yields 140 datasets for meta-training and 10 datasets for meta-testing.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D.2 Model Zoo"
        },
        {
            "text": "To generate a validation set for each dataset, we randomly sample 20% of data instances from each dataset and use the sampled instances for the validation, while using the remaining 80% as the training instances.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D.2 Model Zoo"
        },
        {
            "text": "For statistics, the number of classes ranges from 2 to 20 with a median of 16, and the number of instances for each dataset ranges from 8 to 158K with a mean of 2,847. We then construct the model-zoo by fine-tuning 100 random OFA architectures on training instances of each dataset and obtaining their performances on its respective validation instances, which yields 14K (dataset, architecture, accuracy) tuples in total. We use this database throughout this paper.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D.2 Model Zoo"
        },
        {
            "text": "In Table 5 for the detailed information for each dataset.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 3,
                    "end": 10,
                    "text": "Table 5",
                    "ref_id": "TABREF4"
                }
            ],
            "section": "D.3 Dataset Details"
        },
        {
            "text": "Here we describe the baselines we use in the experiments in the main document. We compare the performance of the models retrieved with our method against pretrained neural networks as well as the ones searched by several efficient NAS methods that are closely related to ours:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D.4 Baseline NAS Methods"
        },
        {
            "text": "MobileNetV3 is a representative resource-efficient neural architecture tuned considering mobile phone environments. In our experiments, MobileNetV3 is pretrained on ImageNet-1K, which is fine-tuned for 50 epochs on each meta-testing task.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D.4 Baseline NAS Methods"
        },
        {
            "text": "2) PC-DARTS [65] , a differentiable NAS method based on a weight sharing scheme that reduces search time efficiently and especially improves memory usage, search time, performance compared to DARTS [35] by designing partial channel sampling and edge normalization. We search for architectures for each meta-testing task by following the official code at https://github.com/yuhuixu1993/PC-DARTS.",
            "cite_spans": [
                {
                    "start": 12,
                    "end": 16,
                    "text": "[65]",
                    "ref_id": "BIBREF63"
                },
                {
                    "start": 198,
                    "end": 202,
                    "text": "[35]",
                    "ref_id": "BIBREF33"
                }
            ],
            "ref_spans": [],
            "section": "D.4 Baseline NAS Methods"
        },
        {
            "text": "3) DrNAS [10] , a differentiable NAS method that handles NAS as a distribution problem, modeled by Dirichlet distribution. We use the official code at https://github.com/xiangning-chen/DrNAS.",
            "cite_spans": [
                {
                    "start": 9,
                    "end": 13,
                    "text": "[10]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "D.4 Baseline NAS Methods"
        },
        {
            "text": ", a NAS method that provides a subnet sampled from a larger network (supernet) pretrained on ImageNet-1K, which alleviates the performance degeneration of prior supernet-based methods. We use the code at https://github.com/mit-han-lab/once-for-all.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "4) OFA [8]"
        },
        {
            "text": "[31], a meta-NAS model that rapidly generates data-dependent architecture for a given task that is meta-learned on subsets of ImageNet-1K. From the ImageNet-1K dataset and architectures of OFA search space, we randomly use 3296 and 14,000 meta-training tasks for the generator and predictor, respectively as a source database. [61] , a collection of convolutional models obtained via Differentiable Neural Architecture Search. We use FBNet-A pretrained on ImageNet-1K and fine-tune it on each meta-testing task for 50 epochs.",
            "cite_spans": [
                {
                    "start": 327,
                    "end": 331,
                    "text": "[61]",
                    "ref_id": "BIBREF59"
                }
            ],
            "ref_spans": [],
            "section": "5) MetaD2A"
        },
        {
            "text": "We use the same hyper-parameters for all baselines for a fair comparison. We fine-tune the architecture for 50 epochs on each meta-testing task. The SGD optimizer is used with a learning rate of 0.01, the momentum of 0.9, and 4e-5 weight decay. The image size is 224\u00d7224 and the batch size is 32. , and MetaD2A (about 0.5%p to 1.0%p higher). We observe that collecting more lightweight real-world neural network and dataset pairs (TANS w/ Real-world Model-Zoo) will allow our model to retrieve computationally efficient pretrained networks in a task-adaptive manner. Such data-driven nature is another advantage of our method since we can easily increase the performance of the model by collecting more pretrained networks that are readily available in many public databases. In the experiment introduced in the main document (Table 1) , we train DrNAS and PC-DARTS, which only generate architectures without pretrained weights, for 10 times more iterations (500 epochs) for a fair comparison (while the other methods, which share ImageNet pretrained knowledge, are trained for 50 epochs). In this experiment, rather than training for 500 epochs, we pretrain networks obtained by DrNAS and PC-DARTS on \"ImageNet\" and then fine-tune on two meta-test datasets (Colorectal Histology & Food Classification Datasets). As shown in Table 4 , although pretraining on ImageNet improves their results, our methods, including TANS with 1/10 sized model-zoo (1400), still outperforms all baselines, which shows that retrieving and utilizing pretrained weights of relevant tasks is more effective than using ImageNet pre-trained weights.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 826,
                    "end": 835,
                    "text": "(Table 1)",
                    "ref_id": "TABREF0"
                },
                {
                    "start": 1325,
                    "end": 1332,
                    "text": "Table 4",
                    "ref_id": "TABREF6"
                }
            ],
            "section": "6) FBNet"
        },
        {
            "text": "Not only the real-world architectures but also any existing NAS methods can be successfully integrated with our retrieval framework by simply adding searched networks into our model-zoo. We demonstrate such synergistic effect of TANS and NAS methods in Figure 6 (e) of the main document. Constructing the model-zoo with neural architectures generated by MetaD2A, which is a state-of-the-art NAS method, improves our performance compared to the previous model-zoo that are simply sampled from the OFA search space. Considering that NAS approaches have been actively studied [31, 52, 7, 51, 49, 15] and pretrained models are often shared via open-source, we believe that the TANS framework has powerful potential to continuously improve its performance by absorbing such new models into the model-zoo.",
            "cite_spans": [
                {
                    "start": 573,
                    "end": 577,
                    "text": "[31,",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 578,
                    "end": 581,
                    "text": "52,",
                    "ref_id": "BIBREF50"
                },
                {
                    "start": 582,
                    "end": 584,
                    "text": "7,",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 585,
                    "end": 588,
                    "text": "51,",
                    "ref_id": "BIBREF49"
                },
                {
                    "start": 589,
                    "end": 592,
                    "text": "49,",
                    "ref_id": "BIBREF47"
                },
                {
                    "start": 593,
                    "end": 596,
                    "text": "15]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [
                {
                    "start": 253,
                    "end": 261,
                    "text": "Figure 6",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "E.3 Synergistic Effect of TANS and State-of-the-Art NAS Methods"
        },
        {
            "text": "Our framework, TANS, has the following beneficial societal impacts: (1) enhanced accessibility, (2) preservation of data privacy, and (3) the reduction of reproducing efforts.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "F.1 Societal Impacts"
        },
        {
            "text": "Enhanced accessibility Since our Task-Adaptive Neural Network Search (TANS) framework allows anyone to instantly retrieve a full neural network that works well on the given task, by providing only a small set of data samples, it can greatly enhance the accessibility of AI to users with little knowledge and backgrounds. Moreover, it does not require large computational resources, unlike existing NAS or AutoML frameworks, which further helps with its accessibility. Finally, to allow everyone to benefit from our task-adaptive neural network search framework, we will publicly release our model-zoo, which currently contains more than 15K models, and open-source it. Then, anyone will be able to freely retrieve/update any models from our model-zoo.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "F.1 Societal Impacts"
        },
        {
            "text": "Preservation of data-privacy Our framework requires only a small set of sampled data instances to retrieve the task-adaptive neural network, unlike existing NAS/AutoML methods that require a large number of data instances to search optimal architectures for the target datasets. Thus, the data privacy is largely improved, and we can further allow the set encoding to take place on the client-side, rather than at the server. This will result in enhanced data privacy, as none of the raw data samples need to be submitted to the system.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "F.1 Societal Impacts"
        },
        {
            "text": "Reduction of reproducing efforts Many ML researchers and engineers are wasting their time and labors, as well as the computational and monetary resources in reproducing existing models and fine-tuning them. TANS, since it instantly retrieves a task-relevant model from a model zoo that contains a large number of state-of-the-art networks pretrained on diverse real-world datasets, the users need not redesign networks or retrain them at excessive costs. Since we plan to populate the model zoo with more pretrained networks, the coverage of the dataset and architectures will become even broader as time goes on. Since training deep learning models often requires extremely large computing cost, which is costly in terms of energy consumption, and results in high carbon emissions, our method is also environment-friendly.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "F.1 Societal Impacts"
        },
        {
            "text": "As a prerequisite condition, our method must have a model-zoo which contains pretrained models that can cover diverse tasks and perform well on each given task. There exists a chance that TANS could be affected by biased initialization if the meta-training pool contains biased pretrained models. To prevent this issue, we can use existing techniques that ensure fairness when constructing a model-zoo, which identify and discard inappropriate datasets or models. There have been various studies for alleviating unjustified bias in machine learning systems. Fairness can be classified into individual fairness, treating similar users similarly [16, 68] , and group fairness, measuring the statistical parity between subgroups, such as race or gender [70, 36, 22] . Optimizing fair metrics during training is achieved by regularizing the covariance between sensitive attributes and model predictions [59] and minimizing an adversarial ability to estimate sensitive attributes from model predictions [71] . At evaluation times, [3, 12] improves the generalizability for a fair classifier via two-player games. All these methods can be adopted when building our model-zoo. all datasets that we utilize are described (Due to the space limit, we provide hyperlinks to the webpage for the datasets, rather than printing the full website links.)",
            "cite_spans": [
                {
                    "start": 644,
                    "end": 648,
                    "text": "[16,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 649,
                    "end": 652,
                    "text": "68]",
                    "ref_id": "BIBREF66"
                },
                {
                    "start": 750,
                    "end": 754,
                    "text": "[70,",
                    "ref_id": "BIBREF68"
                },
                {
                    "start": 755,
                    "end": 758,
                    "text": "36,",
                    "ref_id": "BIBREF34"
                },
                {
                    "start": 759,
                    "end": 762,
                    "text": "22]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 899,
                    "end": 903,
                    "text": "[59]",
                    "ref_id": "BIBREF57"
                },
                {
                    "start": 998,
                    "end": 1002,
                    "text": "[71]",
                    "ref_id": "BIBREF69"
                },
                {
                    "start": 1026,
                    "end": 1029,
                    "text": "[3,",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 1030,
                    "end": 1033,
                    "text": "12]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "F.2 Limitations"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Microsoft azure custom vision",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "A reductions approach to fair classification",
            "authors": [
                {
                    "first": "Alekh",
                    "middle": [],
                    "last": "Agarwal",
                    "suffix": ""
                },
                {
                    "first": "Alina",
                    "middle": [],
                    "last": "Beygelzimer",
                    "suffix": ""
                },
                {
                    "first": "Miroslav",
                    "middle": [],
                    "last": "Dud\u00edk",
                    "suffix": ""
                },
                {
                    "first": "John",
                    "middle": [],
                    "last": "Langford",
                    "suffix": ""
                },
                {
                    "first": "Hanna",
                    "middle": [],
                    "last": "Wallach",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Lambdanetworks: Modeling long-range interactions without attention",
            "authors": [
                {
                    "first": "Irwan",
                    "middle": [],
                    "last": "Bello",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "A parallel global multiobjective framework for optimization: pagmo",
            "authors": [
                {
                    "first": "Francesco",
                    "middle": [],
                    "last": "Biscani",
                    "suffix": ""
                },
                {
                    "first": "Dario",
                    "middle": [],
                    "last": "Izzo",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Journal of Open Source Software",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "SMASH: one-shot model architecture search through hypernetworks",
            "authors": [
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Brock",
                    "suffix": ""
                },
                {
                    "first": "Theodore",
                    "middle": [],
                    "last": "Lim",
                    "suffix": ""
                },
                {
                    "first": "James",
                    "middle": [
                        "M"
                    ],
                    "last": "Ritchie",
                    "suffix": ""
                },
                {
                    "first": "Nick",
                    "middle": [],
                    "last": "Weston",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "6th International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "High-performance large-scale image recognition without normalization",
            "authors": [
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Brock",
                    "suffix": ""
                },
                {
                    "first": "Soham",
                    "middle": [],
                    "last": "De",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Samuel",
                    "suffix": ""
                },
                {
                    "first": "Karen",
                    "middle": [],
                    "last": "Smith",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Simonyan",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2102.06171"
                ]
            }
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Once for all: Train one network and specialize it for efficient deployment",
            "authors": [
                {
                    "first": "Han",
                    "middle": [],
                    "last": "Cai",
                    "suffix": ""
                },
                {
                    "first": "Chuang",
                    "middle": [],
                    "last": "Gan",
                    "suffix": ""
                },
                {
                    "first": "Tianzhe",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Zhekai",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Song",
                    "middle": [],
                    "last": "Han",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Pre-training tasks for embedding-based large-scale retrieval",
            "authors": [
                {
                    "first": "Wei-Cheng",
                    "middle": [],
                    "last": "Chang",
                    "suffix": ""
                },
                {
                    "first": "Felix",
                    "middle": [
                        "X"
                    ],
                    "last": "Yu",
                    "suffix": ""
                },
                {
                    "first": "Yin-Wen",
                    "middle": [],
                    "last": "Chang",
                    "suffix": ""
                },
                {
                    "first": "Yiming",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "Sanjiv",
                    "middle": [],
                    "last": "Kumar",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "8th International Conference on Learning Representations",
            "volume": "2020",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Dr{nas}: Dirichlet neural architecture search",
            "authors": [
                {
                    "first": "Xiangning",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Ruochen",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Minhao",
                    "middle": [],
                    "last": "Cheng",
                    "suffix": ""
                },
                {
                    "first": "Xiaocheng",
                    "middle": [],
                    "last": "Tang",
                    "suffix": ""
                },
                {
                    "first": "Cho-Jui",
                    "middle": [],
                    "last": "Hsieh",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "RENAS: reinforced evolutionary neural architecture search",
            "authors": [
                {
                    "first": "Yukang",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Gaofeng",
                    "middle": [],
                    "last": "Meng",
                    "suffix": ""
                },
                {
                    "first": "Qian",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Shiming",
                    "middle": [],
                    "last": "Xiang",
                    "suffix": ""
                },
                {
                    "first": "Chang",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "Lisen",
                    "middle": [],
                    "last": "Mu",
                    "suffix": ""
                },
                {
                    "first": "Xinggang",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2019",
            "volume": "",
            "issn": "",
            "pages": "4787--4796",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Training well-generalizing classifiers for fairness metrics and other datadependent constraints",
            "authors": [
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Cotter",
                    "suffix": ""
                },
                {
                    "first": "Maya",
                    "middle": [],
                    "last": "Gupta",
                    "suffix": ""
                },
                {
                    "first": "Heinrich",
                    "middle": [],
                    "last": "Jiang",
                    "suffix": ""
                },
                {
                    "first": "Nathan",
                    "middle": [],
                    "last": "Srebro",
                    "suffix": ""
                },
                {
                    "first": "Karthik",
                    "middle": [],
                    "last": "Sridharan",
                    "suffix": ""
                },
                {
                    "first": "Serena",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Blake",
                    "middle": [],
                    "last": "Woodworth",
                    "suffix": ""
                },
                {
                    "first": "Seungil",
                    "middle": [],
                    "last": "You",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Imagenet: A large-scale hierarchical image database",
            "authors": [
                {
                    "first": "Jia",
                    "middle": [],
                    "last": "Deng",
                    "suffix": ""
                },
                {
                    "first": "Wei",
                    "middle": [],
                    "last": "Dong",
                    "suffix": ""
                },
                {
                    "first": "Richard",
                    "middle": [],
                    "last": "Socher",
                    "suffix": ""
                },
                {
                    "first": "Li-Jia",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Kai",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Li",
                    "middle": [],
                    "last": "Fei-Fei",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "2009 IEEE conference on computer vision and pattern recognition",
            "volume": "",
            "issn": "",
            "pages": "248--255",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "An efficient framework for secure image archival and retrieval system using multiple secret share creation scheme",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Francis Saviour Devaraj",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Murugaboopathi",
                    "suffix": ""
                },
                {
                    "first": "Mohamed",
                    "middle": [],
                    "last": "Elhoseny",
                    "suffix": ""
                },
                {
                    "first": "Kyungbok",
                    "middle": [],
                    "last": "Shankar",
                    "suffix": ""
                },
                {
                    "first": "Hyeonjoon",
                    "middle": [],
                    "last": "Min",
                    "suffix": ""
                },
                {
                    "first": "Gyanendra Prasad",
                    "middle": [],
                    "last": "Moon",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Joshi",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Access",
            "volume": "8",
            "issn": "",
            "pages": "144310--144320",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "An image is worth 16x16 words: Transformers for image recognition at scale",
            "authors": [
                {
                    "first": "Alexey",
                    "middle": [],
                    "last": "Dosovitskiy",
                    "suffix": ""
                },
                {
                    "first": "Lucas",
                    "middle": [],
                    "last": "Beyer",
                    "suffix": ""
                },
                {
                    "first": "Alexander",
                    "middle": [],
                    "last": "Kolesnikov",
                    "suffix": ""
                },
                {
                    "first": "Dirk",
                    "middle": [],
                    "last": "Weissenborn",
                    "suffix": ""
                },
                {
                    "first": "Xiaohua",
                    "middle": [],
                    "last": "Zhai",
                    "suffix": ""
                },
                {
                    "first": "Thomas",
                    "middle": [],
                    "last": "Unterthiner",
                    "suffix": ""
                },
                {
                    "first": "Mostafa",
                    "middle": [],
                    "last": "Dehghani",
                    "suffix": ""
                },
                {
                    "first": "Matthias",
                    "middle": [],
                    "last": "Minderer",
                    "suffix": ""
                },
                {
                    "first": "Georg",
                    "middle": [],
                    "last": "Heigold",
                    "suffix": ""
                },
                {
                    "first": "Sylvain",
                    "middle": [],
                    "last": "Gelly",
                    "suffix": ""
                },
                {
                    "first": "Jakob",
                    "middle": [],
                    "last": "Uszkoreit",
                    "suffix": ""
                },
                {
                    "first": "Neil",
                    "middle": [],
                    "last": "Houlsby",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Fairness through awareness",
            "authors": [
                {
                    "first": "Cynthia",
                    "middle": [],
                    "last": "Dwork",
                    "suffix": ""
                },
                {
                    "first": "Moritz",
                    "middle": [],
                    "last": "Hardt",
                    "suffix": ""
                },
                {
                    "first": "Toniann",
                    "middle": [],
                    "last": "Pitassi",
                    "suffix": ""
                },
                {
                    "first": "Omer",
                    "middle": [],
                    "last": "Reingold",
                    "suffix": ""
                },
                {
                    "first": "Richard",
                    "middle": [],
                    "last": "Zemel",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Proceedings of the 3rd Innovations in Theoretical Computer Science Conference, ITCS '12",
            "volume": "",
            "issn": "",
            "pages": "214--226",
            "other_ids": {
                "DOI": [
                    "10.1145/2090236.2090255"
                ]
            }
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Meta-learning of neural architectures for few-shot learning",
            "authors": [
                {
                    "first": "Thomas",
                    "middle": [],
                    "last": "Elsken",
                    "suffix": ""
                },
                {
                    "first": "Benedikt",
                    "middle": [],
                    "last": "Staffler",
                    "suffix": ""
                },
                {
                    "first": "Jan",
                    "middle": [
                        "Hendrik"
                    ],
                    "last": "Metzen",
                    "suffix": ""
                },
                {
                    "first": "Frank",
                    "middle": [],
                    "last": "Hutter",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition",
            "volume": "2020",
            "issn": "",
            "pages": "12362--12372",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Finding beans in burgers: Deep semantic-visual embedding with localization",
            "authors": [
                {
                    "first": "Martin",
                    "middle": [],
                    "last": "Engilberge",
                    "suffix": ""
                },
                {
                    "first": "Louis",
                    "middle": [],
                    "last": "Chevallier",
                    "suffix": ""
                },
                {
                    "first": "Patrick",
                    "middle": [],
                    "last": "P\u00e9rez",
                    "suffix": ""
                },
                {
                    "first": "Matthieu",
                    "middle": [],
                    "last": "Cord",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "VSE++: improving visual-semantic embeddings with hard negatives",
            "authors": [
                {
                    "first": "Fartash",
                    "middle": [],
                    "last": "Faghri",
                    "suffix": ""
                },
                {
                    "first": "David",
                    "middle": [
                        "J"
                    ],
                    "last": "Fleet",
                    "suffix": ""
                },
                {
                    "first": "Jamie",
                    "middle": [],
                    "last": "Kiros",
                    "suffix": ""
                },
                {
                    "first": "Sanja",
                    "middle": [],
                    "last": "Fidler",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "British Machine Vision Conference",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Model-agnostic meta-learning for fast adaptation of deep networks",
            "authors": [
                {
                    "first": "Chelsea",
                    "middle": [],
                    "last": "Finn",
                    "suffix": ""
                },
                {
                    "first": "Pieter",
                    "middle": [],
                    "last": "Abbeel",
                    "suffix": ""
                },
                {
                    "first": "Sergey",
                    "middle": [],
                    "last": "Levine",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "International Conference on Machine Learning (ICML)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "End-to-end learning of deep visual representations for image retrieval",
            "authors": [
                {
                    "first": "Albert",
                    "middle": [],
                    "last": "Gordo",
                    "suffix": ""
                },
                {
                    "first": "Jon",
                    "middle": [],
                    "last": "Almaz\u00e1n",
                    "suffix": ""
                },
                {
                    "first": "Jerome",
                    "middle": [],
                    "last": "Revaud",
                    "suffix": ""
                },
                {
                    "first": "Diane",
                    "middle": [],
                    "last": "Larlus",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "International Journal of Computer Vision",
            "volume": "124",
            "issn": "2",
            "pages": "237--254",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Equality of opportunity in supervised learning",
            "authors": [
                {
                    "first": "Moritz",
                    "middle": [],
                    "last": "Hardt",
                    "suffix": ""
                },
                {
                    "first": "Eric",
                    "middle": [],
                    "last": "Price",
                    "suffix": ""
                },
                {
                    "first": "Nathan",
                    "middle": [],
                    "last": "Srebro",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "NIPS",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Deep residual learning for image recognition",
            "authors": [
                {
                    "first": "Kaiming",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "Xiangyu",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Shaoqing",
                    "middle": [],
                    "last": "Ren",
                    "suffix": ""
                },
                {
                    "first": "Jian",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "2016 IEEE Conference on Computer Vision and Pattern Recognition, CVPR",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Approximation capabilities of multilayer feedforward networks",
            "authors": [
                {
                    "first": "Kurt",
                    "middle": [],
                    "last": "Hornik",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "Neural Networks",
            "volume": "4",
            "issn": "2",
            "pages": "251--257",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Multilayer feedforward networks are universal approximators",
            "authors": [
                {
                    "first": "Kurt",
                    "middle": [],
                    "last": "Hornik",
                    "suffix": ""
                },
                {
                    "first": "Maxwell",
                    "middle": [
                        "B"
                    ],
                    "last": "Stinchcombe",
                    "suffix": ""
                },
                {
                    "first": "Halbert",
                    "middle": [],
                    "last": "White",
                    "suffix": ""
                }
            ],
            "year": 1989,
            "venue": "Neural Networks",
            "volume": "2",
            "issn": "5",
            "pages": "359--366",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Ruoming Pang, Vijay Vasudevan, et al. Searching for mobilenetv3",
            "authors": [
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Howard",
                    "suffix": ""
                },
                {
                    "first": "Mark",
                    "middle": [],
                    "last": "Sandler",
                    "suffix": ""
                },
                {
                    "first": "Grace",
                    "middle": [],
                    "last": "Chu",
                    "suffix": ""
                },
                {
                    "first": "Liang-Chieh",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Bo",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Mingxing",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "Weijun",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Yukun",
                    "middle": [],
                    "last": "Zhu",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the IEEE International Conference on Computer Vision",
            "volume": "",
            "issn": "",
            "pages": "1314--1324",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Mobilenets: Efficient convolutional neural networks for mobile vision applications",
            "authors": [
                {
                    "first": "Andrew",
                    "middle": [
                        "G"
                    ],
                    "last": "Howard",
                    "suffix": ""
                },
                {
                    "first": "Menglong",
                    "middle": [],
                    "last": "Zhu",
                    "suffix": ""
                },
                {
                    "first": "Bo",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Dmitry",
                    "middle": [],
                    "last": "Kalenichenko",
                    "suffix": ""
                },
                {
                    "first": "Weijun",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Tobias",
                    "middle": [],
                    "last": "Weyand",
                    "suffix": ""
                },
                {
                    "first": "Marco",
                    "middle": [],
                    "last": "Andreetto",
                    "suffix": ""
                },
                {
                    "first": "Hartwig",
                    "middle": [],
                    "last": "Adam",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1704.04861"
                ]
            }
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Squeezenet: Alexnet-level accuracy with 50x fewer parameters and< 0.5 mb model size",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Forrest",
                    "suffix": ""
                },
                {
                    "first": "Song",
                    "middle": [],
                    "last": "Iandola",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Han",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Matthew",
                    "suffix": ""
                },
                {
                    "first": "Khalid",
                    "middle": [],
                    "last": "Moskewicz",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Ashraf",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "William",
                    "suffix": ""
                },
                {
                    "first": "Kurt",
                    "middle": [],
                    "last": "Dally",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Keutzer",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1602.07360"
                ]
            }
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Imagenet classification with deep convolutional neural networks",
            "authors": [
                {
                    "first": "Alex",
                    "middle": [],
                    "last": "Krizhevsky",
                    "suffix": ""
                },
                {
                    "first": "Ilya",
                    "middle": [],
                    "last": "Sutskever",
                    "suffix": ""
                },
                {
                    "first": "Geoffrey",
                    "middle": [
                        "E"
                    ],
                    "last": "Hinton",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "Advances in neural information processing systems",
            "volume": "25",
            "issn": "",
            "pages": "1097--1105",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Learning to balance: Bayesian meta-learning for imbalanced and out-of-distribution tasks",
            "authors": [
                {
                    "first": "Hae",
                    "middle": [],
                    "last": "Beom Lee",
                    "suffix": ""
                },
                {
                    "first": "Hayeon",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "Donghyun",
                    "middle": [],
                    "last": "Na",
                    "suffix": ""
                },
                {
                    "first": "Saehoon",
                    "middle": [],
                    "last": "Kim",
                    "suffix": ""
                },
                {
                    "first": "Minseop",
                    "middle": [],
                    "last": "Park",
                    "suffix": ""
                },
                {
                    "first": "Eunho",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "Sung",
                    "middle": [
                        "Ju"
                    ],
                    "last": "Hwang",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "International Conference on Learning Representations (ICLR",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Rapid neural architecture search by learning to generate graphs from datasets",
            "authors": [
                {
                    "first": "Hayeon",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "Eunyoung",
                    "middle": [],
                    "last": "Hyung",
                    "suffix": ""
                },
                {
                    "first": "Sung",
                    "middle": [
                        "Ju"
                    ],
                    "last": "Hwang",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "Stacked cross attention for image-text matching",
            "authors": [
                {
                    "first": "Kuang-Huei",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "Xi",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Gang",
                    "middle": [],
                    "last": "Hua",
                    "suffix": ""
                },
                {
                    "first": "Houdong",
                    "middle": [],
                    "last": "Hu",
                    "suffix": ""
                },
                {
                    "first": "Xiaodong",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Computer Vision -ECCV 2018 -15th European Conference",
            "volume": "11208",
            "issn": "",
            "pages": "212--228",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Meta-learning with differentiable convex optimization",
            "authors": [
                {
                    "first": "Kwonjoon",
                    "middle": [],
                    "last": "Lee",
                    "suffix": ""
                },
                {
                    "first": "Subhransu",
                    "middle": [],
                    "last": "Maji",
                    "suffix": ""
                },
                {
                    "first": "Avinash",
                    "middle": [],
                    "last": "Ravichandran",
                    "suffix": ""
                },
                {
                    "first": "Stefano",
                    "middle": [],
                    "last": "Soatto",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "Towards fast adaptation of neural architectures with meta learning",
            "authors": [
                {
                    "first": "Dongze",
                    "middle": [],
                    "last": "Lian",
                    "suffix": ""
                },
                {
                    "first": "Yin",
                    "middle": [],
                    "last": "Zheng",
                    "suffix": ""
                },
                {
                    "first": "Yintao",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "Yanxiong",
                    "middle": [],
                    "last": "Lu",
                    "suffix": ""
                },
                {
                    "first": "Leyu",
                    "middle": [],
                    "last": "Lin",
                    "suffix": ""
                },
                {
                    "first": "Peilin",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Junzhou",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "Shenghua",
                    "middle": [],
                    "last": "Gao",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "8th International Conference on Learning Representations",
            "volume": "2020",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "Darts: Differentiable architecture search",
            "authors": [
                {
                    "first": "Hanxiao",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Karen",
                    "middle": [],
                    "last": "Simonyan",
                    "suffix": ""
                },
                {
                    "first": "Yiming",
                    "middle": [],
                    "last": "Yang",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "International Conference on Learning Representations (ICLR)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "The variational fair autoencoder",
            "authors": [
                {
                    "first": "Christos",
                    "middle": [],
                    "last": "Louizos",
                    "suffix": ""
                },
                {
                    "first": "Kevin",
                    "middle": [],
                    "last": "Swersky",
                    "suffix": ""
                },
                {
                    "first": "Yujia",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Max",
                    "middle": [],
                    "last": "Welling",
                    "suffix": ""
                },
                {
                    "first": "Richard",
                    "middle": [],
                    "last": "Zemel",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF35": {
            "ref_id": "b35",
            "title": "Nsganetv2: Evolutionary multi-objective surrogate-assisted neural architecture search",
            "authors": [
                {
                    "first": "Zhichao",
                    "middle": [],
                    "last": "Lu",
                    "suffix": ""
                },
                {
                    "first": "Kalyanmoy",
                    "middle": [],
                    "last": "Deb",
                    "suffix": ""
                },
                {
                    "first": "Erik",
                    "middle": [],
                    "last": "Goodman",
                    "suffix": ""
                },
                {
                    "first": "Wolfgang",
                    "middle": [],
                    "last": "Banzhaf",
                    "suffix": ""
                },
                {
                    "first": "Vishnu Naresh",
                    "middle": [],
                    "last": "Boddeti",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "European Conference on Computer Vision",
            "volume": "",
            "issn": "",
            "pages": "35--51",
            "other_ids": {}
        },
        "BIBREF36": {
            "ref_id": "b36",
            "title": "Neural architecture optimization",
            "authors": [
                {
                    "first": "Renqian",
                    "middle": [],
                    "last": "Luo",
                    "suffix": ""
                },
                {
                    "first": "Fei",
                    "middle": [],
                    "last": "Tian",
                    "suffix": ""
                },
                {
                    "first": "Tao",
                    "middle": [],
                    "last": "Qin",
                    "suffix": ""
                },
                {
                    "first": "Enhong",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Tie-Yan",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Advances in neural information processing systems",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF37": {
            "ref_id": "b37",
            "title": "Shufflenet v2: Practical guidelines for efficient cnn architecture design",
            "authors": [
                {
                    "first": "Ningning",
                    "middle": [],
                    "last": "Ma",
                    "suffix": ""
                },
                {
                    "first": "Xiangyu",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Hai-Tao",
                    "middle": [],
                    "last": "Zheng",
                    "suffix": ""
                },
                {
                    "first": "Jian",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Proceedings of the European conference on computer vision (ECCV)",
            "volume": "",
            "issn": "",
            "pages": "116--131",
            "other_ids": {}
        },
        "BIBREF38": {
            "ref_id": "b38",
            "title": "On first-order meta-learning algorithms",
            "authors": [
                {
                    "first": "Alex",
                    "middle": [],
                    "last": "Nichol",
                    "suffix": ""
                },
                {
                    "first": "Joshua",
                    "middle": [],
                    "last": "Achiam",
                    "suffix": ""
                },
                {
                    "first": "John",
                    "middle": [],
                    "last": "Schulman",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1803.02999"
                ]
            }
        },
        "BIBREF39": {
            "ref_id": "b39",
            "title": "Empirical Performance of the Approximation of the Least Hypervolume Contributor",
            "authors": [
                {
                    "first": "Krzysztof",
                    "middle": [],
                    "last": "Nowak",
                    "suffix": ""
                },
                {
                    "first": "Marcus",
                    "middle": [],
                    "last": "M\u00e4rtens",
                    "suffix": ""
                },
                {
                    "first": "Dario",
                    "middle": [],
                    "last": "Izzo",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Parallel Problem Solving from Nature -PPSN XIII",
            "volume": "",
            "issn": "",
            "pages": "662--671",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-319-10762-2_65"
                ]
            }
        },
        "BIBREF40": {
            "ref_id": "b40",
            "title": "Efficient neural architecture search via parameter sharing",
            "authors": [
                {
                    "first": "Hieu",
                    "middle": [],
                    "last": "Pham",
                    "suffix": ""
                },
                {
                    "first": "Melody",
                    "middle": [
                        "Y"
                    ],
                    "last": "Guan",
                    "suffix": ""
                },
                {
                    "first": "Barret",
                    "middle": [],
                    "last": "Zoph",
                    "suffix": ""
                },
                {
                    "first": "Quoc",
                    "middle": [
                        "V"
                    ],
                    "last": "Le",
                    "suffix": ""
                },
                {
                    "first": "Jeff",
                    "middle": [],
                    "last": "Dean",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Proceedings of the 35th International Conference on Machine Learning",
            "volume": "80",
            "issn": "",
            "pages": "4092--4101",
            "other_ids": {}
        },
        "BIBREF41": {
            "ref_id": "b41",
            "title": "Regularized evolution for image classifier architecture search",
            "authors": [
                {
                    "first": "Esteban",
                    "middle": [],
                    "last": "Real",
                    "suffix": ""
                },
                {
                    "first": "Alok",
                    "middle": [],
                    "last": "Aggarwal",
                    "suffix": ""
                },
                {
                    "first": "Yanping",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "Quoc V",
                    "middle": [],
                    "last": "Le",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the aaai conference on artificial intelligence",
            "volume": "33",
            "issn": "",
            "pages": "4780--4789",
            "other_ids": {}
        },
        "BIBREF42": {
            "ref_id": "b42",
            "title": "A comprehensive survey of neural architecture search: Challenges and solutions",
            "authors": [
                {
                    "first": "Pengzhen",
                    "middle": [],
                    "last": "Ren",
                    "suffix": ""
                },
                {
                    "first": "Yun",
                    "middle": [],
                    "last": "Xiao",
                    "suffix": ""
                },
                {
                    "first": "Xiaojun",
                    "middle": [],
                    "last": "Chang",
                    "suffix": ""
                },
                {
                    "first": "Po-Yao",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "Zhihui",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Xiaojiang",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Xin",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF43": {
            "ref_id": "b43",
            "title": "Mobilenetv2: Inverted residuals and linear bottlenecks",
            "authors": [
                {
                    "first": "Mark",
                    "middle": [],
                    "last": "Sandler",
                    "suffix": ""
                },
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Howard",
                    "suffix": ""
                },
                {
                    "first": "Menglong",
                    "middle": [],
                    "last": "Zhu",
                    "suffix": ""
                },
                {
                    "first": "Andrey",
                    "middle": [],
                    "last": "Zhmoginov",
                    "suffix": ""
                },
                {
                    "first": "Liang-Chieh",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Proceedings of the IEEE conference on computer vision and pattern recognition",
            "volume": "",
            "issn": "",
            "pages": "4510--4520",
            "other_ids": {}
        },
        "BIBREF44": {
            "ref_id": "b44",
            "title": "Meta architecture search",
            "authors": [
                {
                    "first": "Albert",
                    "middle": [],
                    "last": "Shaw",
                    "suffix": ""
                },
                {
                    "first": "Wei",
                    "middle": [],
                    "last": "Wei",
                    "suffix": ""
                },
                {
                    "first": "Weiyang",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Le",
                    "middle": [],
                    "last": "Song",
                    "suffix": ""
                },
                {
                    "first": "Bo",
                    "middle": [],
                    "last": "Dai",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Advances in Neural Information Processing Systems 32: Annual Conference on Neural Information Processing Systems",
            "volume": "",
            "issn": "",
            "pages": "11225--11235",
            "other_ids": {}
        },
        "BIBREF45": {
            "ref_id": "b45",
            "title": "Very deep convolutional networks for large-scale image recognition",
            "authors": [
                {
                    "first": "Karen",
                    "middle": [],
                    "last": "Simonyan",
                    "suffix": ""
                },
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Zisserman",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "3rd International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF46": {
            "ref_id": "b46",
            "title": "Prototypical networks for few-shot learning",
            "authors": [
                {
                    "first": "Jake",
                    "middle": [],
                    "last": "Snell",
                    "suffix": ""
                },
                {
                    "first": "Kevin",
                    "middle": [],
                    "last": "Swersky",
                    "suffix": ""
                },
                {
                    "first": "Richard",
                    "middle": [],
                    "last": "Zemel",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Advances in neural information processing systems (NIPS)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF47": {
            "ref_id": "b47",
            "title": "Jonathon Shlens, Pieter Abbeel, and Ashish Vaswani. Bottleneck transformers for visual recognition",
            "authors": [
                {
                    "first": "Aravind",
                    "middle": [],
                    "last": "Srinivas",
                    "suffix": ""
                },
                {
                    "first": "Tsung-Yi",
                    "middle": [],
                    "last": "Lin",
                    "suffix": ""
                },
                {
                    "first": "Niki",
                    "middle": [],
                    "last": "Parmar",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2101.11605"
                ]
            }
        },
        "BIBREF48": {
            "ref_id": "b48",
            "title": "Going deeper with convolutions",
            "authors": [
                {
                    "first": "Christian",
                    "middle": [],
                    "last": "Szegedy",
                    "suffix": ""
                },
                {
                    "first": "Wei",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Yangqing",
                    "middle": [],
                    "last": "Jia",
                    "suffix": ""
                },
                {
                    "first": "Pierre",
                    "middle": [],
                    "last": "Sermanet",
                    "suffix": ""
                },
                {
                    "first": "Scott",
                    "middle": [],
                    "last": "Reed",
                    "suffix": ""
                },
                {
                    "first": "Dragomir",
                    "middle": [],
                    "last": "Anguelov",
                    "suffix": ""
                },
                {
                    "first": "Dumitru",
                    "middle": [],
                    "last": "Erhan",
                    "suffix": ""
                },
                {
                    "first": "Vincent",
                    "middle": [],
                    "last": "Vanhoucke",
                    "suffix": ""
                },
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Rabinovich",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Proceedings of the IEEE conference on computer vision and pattern recognition",
            "volume": "",
            "issn": "",
            "pages": "1--9",
            "other_ids": {}
        },
        "BIBREF49": {
            "ref_id": "b49",
            "title": "Rethinking model scaling for convolutional neural networks",
            "authors": [
                {
                    "first": "Mingxing",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Quoc",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Le",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Efficientnet",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1905.11946"
                ]
            }
        },
        "BIBREF50": {
            "ref_id": "b50",
            "title": "Efficientnetv2: Smaller models and faster training",
            "authors": [
                {
                    "first": "Mingxing",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Quoc",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Le",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF51": {
            "ref_id": "b51",
            "title": "Mnasnet: Platform-aware neural architecture search for mobile",
            "authors": [
                {
                    "first": "Mingxing",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "Bo",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Ruoming",
                    "middle": [],
                    "last": "Pang",
                    "suffix": ""
                },
                {
                    "first": "Vijay",
                    "middle": [],
                    "last": "Vasudevan",
                    "suffix": ""
                },
                {
                    "first": "Mark",
                    "middle": [],
                    "last": "Sandler",
                    "suffix": ""
                },
                {
                    "first": "Andrew",
                    "middle": [],
                    "last": "Howard",
                    "suffix": ""
                },
                {
                    "first": "Quoc V",
                    "middle": [],
                    "last": "Le",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition",
            "volume": "",
            "issn": "",
            "pages": "2820--2828",
            "other_ids": {}
        },
        "BIBREF52": {
            "ref_id": "b52",
            "title": "A semi-supervised assessor of neural architectures",
            "authors": [
                {
                    "first": "Yehui",
                    "middle": [],
                    "last": "Tang",
                    "suffix": ""
                },
                {
                    "first": "Yunhe",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Yixing",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "Hanting",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Boxin",
                    "middle": [],
                    "last": "Shi",
                    "suffix": ""
                },
                {
                    "first": "Chao",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "Chunjing",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "Qi",
                    "middle": [],
                    "last": "Tian",
                    "suffix": ""
                },
                {
                    "first": "Chang",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition",
            "volume": "",
            "issn": "",
            "pages": "1810--1819",
            "other_ids": {}
        },
        "BIBREF53": {
            "ref_id": "b53",
            "title": "Learning to Learn",
            "authors": [
                {
                    "first": "Sebastian",
                    "middle": [],
                    "last": "Thrun",
                    "suffix": ""
                },
                {
                    "first": "Lorien",
                    "middle": [],
                    "last": "Pratt",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF54": {
            "ref_id": "b54",
            "title": "Matching networks for one shot learning",
            "authors": [
                {
                    "first": "Oriol",
                    "middle": [],
                    "last": "Vinyals",
                    "suffix": ""
                },
                {
                    "first": "Charles",
                    "middle": [],
                    "last": "Blundell",
                    "suffix": ""
                },
                {
                    "first": "Timothy",
                    "middle": [],
                    "last": "Lillicrap",
                    "suffix": ""
                },
                {
                    "first": "Daan",
                    "middle": [],
                    "last": "Wierstra",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Advances in neural information processing systems (NIPS)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF55": {
            "ref_id": "b55",
            "title": "On the limitations of representing functions on sets",
            "authors": [
                {
                    "first": "Edward",
                    "middle": [],
                    "last": "Wagstaff",
                    "suffix": ""
                },
                {
                    "first": "Fabian",
                    "middle": [],
                    "last": "Fuchs",
                    "suffix": ""
                },
                {
                    "first": "Martin",
                    "middle": [],
                    "last": "Engelcke",
                    "suffix": ""
                },
                {
                    "first": "Ingmar",
                    "middle": [],
                    "last": "Posner",
                    "suffix": ""
                },
                {
                    "first": "Michael",
                    "middle": [
                        "A"
                    ],
                    "last": "Osborne",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the 36th International Conference on Machine Learning, ICML 2019",
            "volume": "97",
            "issn": "",
            "pages": "6487--6494",
            "other_ids": {}
        },
        "BIBREF56": {
            "ref_id": "b56",
            "title": "Cross-modal scene graph matching for relationship-aware image-text retrieval",
            "authors": [
                {
                    "first": "Sijin",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Ruiping",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Ziwei",
                    "middle": [],
                    "last": "Yao",
                    "suffix": ""
                },
                {
                    "first": "Shiguang",
                    "middle": [],
                    "last": "Shan",
                    "suffix": ""
                },
                {
                    "first": "Xilin",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Winter Conference on Applications of Computer Vision",
            "volume": "2020",
            "issn": "",
            "pages": "1497--1506",
            "other_ids": {}
        },
        "BIBREF57": {
            "ref_id": "b57",
            "title": "Learning nondiscriminatory predictors",
            "authors": [
                {
                    "first": "Blake",
                    "middle": [],
                    "last": "Woodworth",
                    "suffix": ""
                },
                {
                    "first": "Suriya",
                    "middle": [],
                    "last": "Gunasekar",
                    "suffix": ""
                },
                {
                    "first": "Mesrob",
                    "middle": [
                        "I"
                    ],
                    "last": "Ohannessian",
                    "suffix": ""
                },
                {
                    "first": "Nathan",
                    "middle": [],
                    "last": "Srebro",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF58": {
            "ref_id": "b58",
            "title": "Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search",
            "authors": [
                {
                    "first": "Bichen",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "Xiaoliang",
                    "middle": [],
                    "last": "Dai",
                    "suffix": ""
                },
                {
                    "first": "Peizhao",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Yanghan",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Fei",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                },
                {
                    "first": "Yiming",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "Yuandong",
                    "middle": [],
                    "last": "Tian",
                    "suffix": ""
                },
                {
                    "first": "Peter",
                    "middle": [],
                    "last": "Vajda",
                    "suffix": ""
                },
                {
                    "first": "Yangqing",
                    "middle": [],
                    "last": "Jia",
                    "suffix": ""
                },
                {
                    "first": "Kurt",
                    "middle": [],
                    "last": "Keutzer",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition",
            "volume": "",
            "issn": "",
            "pages": "10734--10742",
            "other_ids": {}
        },
        "BIBREF59": {
            "ref_id": "b59",
            "title": "FBNet: Hardware-Aware Efficient ConvNet Design via Differentiable Neural Architecture Search",
            "authors": [
                {
                    "first": "Bichen",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "Xiaoliang",
                    "middle": [],
                    "last": "Dai",
                    "suffix": ""
                },
                {
                    "first": "Peizhao",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Yanghan",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Fei",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                },
                {
                    "first": "Yiming",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "Yuandong",
                    "middle": [],
                    "last": "Tian",
                    "suffix": ""
                },
                {
                    "first": "Peter",
                    "middle": [],
                    "last": "Vajda",
                    "suffix": ""
                },
                {
                    "first": "Yangqing",
                    "middle": [],
                    "last": "Jia",
                    "suffix": ""
                },
                {
                    "first": "Kurt",
                    "middle": [],
                    "last": "Keutzer",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:1812.03443"
                ]
            }
        },
        "BIBREF60": {
            "ref_id": "b60",
            "title": "Aggregated residual transformations for deep neural networks",
            "authors": [
                {
                    "first": "Saining",
                    "middle": [],
                    "last": "Xie",
                    "suffix": ""
                },
                {
                    "first": "Ross",
                    "middle": [],
                    "last": "Girshick",
                    "suffix": ""
                },
                {
                    "first": "Piotr",
                    "middle": [],
                    "last": "Doll\u00e1r",
                    "suffix": ""
                },
                {
                    "first": "Zhuowen",
                    "middle": [],
                    "last": "Tu",
                    "suffix": ""
                },
                {
                    "first": "Kaiming",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Proceedings of the IEEE conference on computer vision and pattern recognition",
            "volume": "",
            "issn": "",
            "pages": "1492--1500",
            "other_ids": {}
        },
        "BIBREF61": {
            "ref_id": "b61",
            "title": "Approximate nearest neighbor negative contrastive learning for dense text retrieval",
            "authors": [
                {
                    "first": "Lee",
                    "middle": [],
                    "last": "Xiong",
                    "suffix": ""
                },
                {
                    "first": "Chenyan",
                    "middle": [],
                    "last": "Xiong",
                    "suffix": ""
                },
                {
                    "first": "Ye",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Kwok-Fung",
                    "middle": [],
                    "last": "Tang",
                    "suffix": ""
                },
                {
                    "first": "Jialin",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Paul",
                    "middle": [
                        "N"
                    ],
                    "last": "Bennett",
                    "suffix": ""
                },
                {
                    "first": "Junaid",
                    "middle": [],
                    "last": "Ahmed",
                    "suffix": ""
                },
                {
                    "first": "Arnold",
                    "middle": [],
                    "last": "Overwikj",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF62": {
            "ref_id": "b62",
            "title": "How powerful are graph neural networks?",
            "authors": [
                {
                    "first": "Keyulu",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "Weihua",
                    "middle": [],
                    "last": "Hu",
                    "suffix": ""
                },
                {
                    "first": "Jure",
                    "middle": [],
                    "last": "Leskovec",
                    "suffix": ""
                },
                {
                    "first": "Stefanie",
                    "middle": [],
                    "last": "Jegelka",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF63": {
            "ref_id": "b63",
            "title": "Pc-darts: Partial channel connections for memory-efficient architecture search",
            "authors": [
                {
                    "first": "Yuhui",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "Lingxi",
                    "middle": [],
                    "last": "Xie",
                    "suffix": ""
                },
                {
                    "first": "Xiaopeng",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Xin",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Guo-Jun",
                    "middle": [],
                    "last": "Qi",
                    "suffix": ""
                },
                {
                    "first": "Qi",
                    "middle": [],
                    "last": "Tian",
                    "suffix": ""
                },
                {
                    "first": "Hongkai",
                    "middle": [],
                    "last": "Xiong",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "International Conference on Learning Representations (ICLR",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF64": {
            "ref_id": "b64",
            "title": "Deep multi-view enhancement hashing for image retrieval",
            "authors": [
                {
                    "first": "Chenggang",
                    "middle": [],
                    "last": "Yan",
                    "suffix": ""
                },
                {
                    "first": "Biao",
                    "middle": [],
                    "last": "Gong",
                    "suffix": ""
                },
                {
                    "first": "Yuxuan",
                    "middle": [],
                    "last": "Wei",
                    "suffix": ""
                },
                {
                    "first": "Yue",
                    "middle": [],
                    "last": "Gao",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF65": {
            "ref_id": "b65",
            "title": "Does unsupervised architecture representation learning help neural architecture search?",
            "authors": [
                {
                    "first": "Shen",
                    "middle": [],
                    "last": "Yan",
                    "suffix": ""
                },
                {
                    "first": "Yu",
                    "middle": [],
                    "last": "Zheng",
                    "suffix": ""
                },
                {
                    "first": "Wei",
                    "middle": [],
                    "last": "Ao",
                    "suffix": ""
                },
                {
                    "first": "Xiao",
                    "middle": [],
                    "last": "Zeng",
                    "suffix": ""
                },
                {
                    "first": "Mi",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Advances in Neural Information Processing Systems",
            "volume": "33",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF66": {
            "ref_id": "b66",
            "title": "Training individually fair ml models with sensitive subspace robustness",
            "authors": [
                {
                    "first": "Mikhail",
                    "middle": [],
                    "last": "Yurochkin",
                    "suffix": ""
                },
                {
                    "first": "Amanda",
                    "middle": [],
                    "last": "Bower",
                    "suffix": ""
                },
                {
                    "first": "Yuekai",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "International Conference on Learning Representations",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF67": {
            "ref_id": "b67",
            "title": "Deep sets",
            "authors": [
                {
                    "first": "Manzil",
                    "middle": [],
                    "last": "Zaheer",
                    "suffix": ""
                },
                {
                    "first": "Satwik",
                    "middle": [],
                    "last": "Kottur",
                    "suffix": ""
                },
                {
                    "first": "Siamak",
                    "middle": [],
                    "last": "Ravanbakhsh",
                    "suffix": ""
                },
                {
                    "first": "Barnabas",
                    "middle": [],
                    "last": "Poczos",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Ruslan",
                    "suffix": ""
                },
                {
                    "first": "Alexander",
                    "middle": [
                        "J"
                    ],
                    "last": "Salakhutdinov",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Smola",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "Advances in Neural Information Processing Systems (NIPS)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF68": {
            "ref_id": "b68",
            "title": "Learning fair representations",
            "authors": [
                {
                    "first": "Rich",
                    "middle": [],
                    "last": "Zemel",
                    "suffix": ""
                },
                {
                    "first": "Yu",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                },
                {
                    "first": "Kevin",
                    "middle": [],
                    "last": "Swersky",
                    "suffix": ""
                },
                {
                    "first": "Toni",
                    "middle": [],
                    "last": "Pitassi",
                    "suffix": ""
                },
                {
                    "first": "Cynthia",
                    "middle": [],
                    "last": "Dwork",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Proceedings of the 30th International Conference on Machine Learning",
            "volume": "28",
            "issn": "",
            "pages": "17--19",
            "other_ids": {}
        },
        "BIBREF69": {
            "ref_id": "b69",
            "title": "Mitigating unwanted biases with adversarial learning",
            "authors": [
                {
                    "first": "Brian",
                    "middle": [],
                    "last": "Hu Zhang",
                    "suffix": ""
                },
                {
                    "first": "Blake",
                    "middle": [],
                    "last": "Lemoine",
                    "suffix": ""
                },
                {
                    "first": "Margaret",
                    "middle": [],
                    "last": "Mitchell",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF70": {
            "ref_id": "b70",
            "title": "D-vae: A variational autoencoder for directed acyclic graphs",
            "authors": [
                {
                    "first": "Muhan",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Shali",
                    "middle": [],
                    "last": "Jiang",
                    "suffix": ""
                },
                {
                    "first": "Zhicheng",
                    "middle": [],
                    "last": "Cui",
                    "suffix": ""
                },
                {
                    "first": "Roman",
                    "middle": [],
                    "last": "Garnett",
                    "suffix": ""
                },
                {
                    "first": "Yixin",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "Advances in Neural Information Processing Systems (NeurIPS)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF71": {
            "ref_id": "b71",
            "title": "Deep reinforcement learning for information retrieval: Fundamentals and advances",
            "authors": [
                {
                    "first": "Weinan",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Xiangyu",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Li",
                    "middle": [],
                    "last": "Zhao",
                    "suffix": ""
                },
                {
                    "first": "Dawei",
                    "middle": [],
                    "last": "Yin",
                    "suffix": ""
                },
                {
                    "first": "Grace",
                    "middle": [
                        "Hui"
                    ],
                    "last": "Yang",
                    "suffix": ""
                },
                {
                    "first": "Alex",
                    "middle": [],
                    "last": "Beutel",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Proceedings of the 43rd International ACM SIGIR Conference on Research and Development in Information Retrieval",
            "volume": "",
            "issn": "",
            "pages": "2468--2471",
            "other_ids": {}
        },
        "BIBREF72": {
            "ref_id": "b72",
            "title": "Deep supervised cross-modal retrieval",
            "authors": [
                {
                    "first": "Liangli",
                    "middle": [],
                    "last": "Zhen",
                    "suffix": ""
                },
                {
                    "first": "Peng",
                    "middle": [],
                    "last": "Hu",
                    "suffix": ""
                },
                {
                    "first": "Xu",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Dezhong",
                    "middle": [],
                    "last": "Peng",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2019",
            "volume": "",
            "issn": "",
            "pages": "10394--10403",
            "other_ids": {}
        },
        "BIBREF73": {
            "ref_id": "b73",
            "title": "Econas: Finding proxies for economical neural architecture search",
            "authors": [
                {
                    "first": "Dongzhan",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "Xinchi",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "Wenwei",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Chen",
                    "middle": [
                        "Change"
                    ],
                    "last": "Loy",
                    "suffix": ""
                },
                {
                    "first": "Shuai",
                    "middle": [],
                    "last": "Yi",
                    "suffix": ""
                },
                {
                    "first": "Xuesen",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Wanli",
                    "middle": [],
                    "last": "Ouyang",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition",
            "volume": "",
            "issn": "",
            "pages": "11396--11404",
            "other_ids": {}
        },
        "BIBREF74": {
            "ref_id": "b74",
            "title": "Neural architecture search with reinforcement learning",
            "authors": [
                {
                    "first": "Barret",
                    "middle": [],
                    "last": "Zoph",
                    "suffix": ""
                },
                {
                    "first": "Quoc",
                    "middle": [
                        "V"
                    ],
                    "last": "Le",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "International Conference on Learning Representations (ICLR",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF75": {
            "ref_id": "b75",
            "title": "Learning transferable architectures for scalable image recognition",
            "authors": [
                {
                    "first": "Barret",
                    "middle": [],
                    "last": "Zoph",
                    "suffix": ""
                },
                {
                    "first": "Vijay",
                    "middle": [],
                    "last": "Vasudevan",
                    "suffix": ""
                },
                {
                    "first": "Jonathon",
                    "middle": [],
                    "last": "Shlens",
                    "suffix": ""
                },
                {
                    "first": "Quoc V",
                    "middle": [],
                    "last": "Le",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Proceedings of the IEEE conference on computer vision and pattern recognition",
            "volume": "",
            "issn": "",
            "pages": "8697--8710",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Comparison with NAS (orange) & AutoML (blue) baselines on 5 Real-world Datasets",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Illustration for overall framework of our proposed method (TANS):",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Retrieved examples for meta-test datasets. We visualize the dataset used for pretraining the retrieved model with the unseen query dataset. For more examples, seeFigure 9in Appendix.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "In-depth analysis of TANS: Performance comparison with constraints, such as (a) the number of parameters and (b) FLOPs. (c) Visualization for the cross-modal latent space using T-SNE and performance comparison depending on the distance (d) Ablation study on topology information. (e) Analysis on the architecture and pretrained knowledge.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Meta-test Accuracy Curves",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "In-depth analysis of TANS (2): (a) The effectiveness of meta-performance predictor. (b) Ablation study on retrieval performance. Additional (c) analysis and (d) the effectiveness of our performance predictor.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Search & Pretraining Costs (Top), Model-Zoo Analysis (Bottom)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "Injectiveness on Model Encoding). Assume M is a countable set. A model encoder EM : M \u2192 R d can injectively map two different architectures M1, M2 into distinct embeddings m1, m2, where M \u2208 M and m \u2208 R d . Proof. As described in the model encoder paragraph of Section 3.2, we represent each neural network M \u2208 M with both topological embedding vt and functional embedding v f . Thus, if one of two embeddings can uniquely represent each neural network, then the injectiveness on model encoding EM : M \u2192 R d is satisfied.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "the proof of Theorem 2 in Zhang et al. [72], we rewrite the Ci(x) = oi({Cj(x) : vj \u2192 vi}) as follows: Ci(x) = \u03c9(oi, {Cj(x) : vj \u2192 vi}), where \u03c9 is an injective function over two inputs oi and {Cj(x) : vj \u2192 vi}. Then, Ci can uniquely embed the output representation of node vi, and this is an injective (Please refer to the proof of Theorem 2 in Zhang et al. [72] for details). Thus, the output of the Retrieved Examples from 10 Meta-test Real-world Datasets. We present all query-retrieval pairs on meta-test datasets. Each row includes two pairs of query dataset (left) and the retrieved dataset (right). Please see detailed explanations of the pairs in Section D.3 and",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "Performance of the searched networks on 10 unseen real-world datasets. We report the averaged accuracy on ten unseen meta-test datasets over 3 different runs with 95% confidence intervals.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "We compare 50-epoch accuracy between TANS and the existing NAS methods on 10 novel real-world datasets. For a fair comparison, we train PC-DARTS[65] and DrNAS[10] for 10 times more epochs (500), as they only generate architectures without pretrained weights, so we train them for a sufficient amount of iterations. For FBNet and OFA (weight-sharing methods) and The Cross-Modal Latent Space (d) Effectiveness of Topology (e) Analysis on Arch. & Parameters",
            "latex": null,
            "type": "table"
        },
        "TABREF3": {
            "text": "Latent Distance and Performance",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF5": {
            "text": "Performance Comparison on 5 Unseen Real-world Datasets All reported results are average performances over 3 different runs with 95% confidence intervals.While the proposed TANS shows outstanding performances in a number of neural network search tasks with the manicured architecture search space described in Section D.1, it could be more beneficial if we search the best-fitted model on a given query dataset from the pretrained networks with real-world neural architectures (e.g. ResNet) trained on various datasets. For this even more realistic scenario for Neural Network Search (NNS), we construct our model-zoo including ten real-world architectures, such as ResNet18[23], ShuffleNet V2[39], MobileNet v2[45], SqueezeNet[28], GoogLeNet[50], ResNeXt[62], AlexNet[29], MNASNet[53], EfficientNet-B0[51], and LambdaResNet[4].Experimental Setup To construct the new real-world model-zoo, we first meta-train the real-world architectures and merge the new dataset-network pairs (1,400 pairs) with the random subset of the previous model-zoo (about 5,000 OFA-based models), yielding about 6,500 models in the new model-zoo. The way of training is the same as the experiment introduced in the main document (Section 4.1) except that we only use functional embeddings, while topology information is not used when learning the cross-modal latent space (we exclude the topology information since encoding the topologies of real networks across various search spaces into a single uniform format is too complicated.) Including the real-world architectures, we first verify the retrieval performance of our model on the meta-train datasets, and our TANS achieves 90 for the R@1, 100 for the R@5 scores. The way of evaluating on the meta-test dataset is also the same as the experiments that we conducted in the main document (10 real-world meta-test datasets), except that we conduct experiments only on five datasets out of the ten datasets used in the experiments of the main document, due to the heavy training costs required for meta-testing. The selected datasets are Speed Limit Signs, Honey-bee Pollen, Alien-vs-Predator, Chinese Characters, and COVID-19 datasets (for detailed information for each dataset, please seeTable D.3.)Experimental Results InTable 3, our methods, both with OFA and the real-world architectures, outperform all baseline models, including MobileNetV3 (about 1.0%p to 1.5%p higher), PC-DARTS (about 17.5%p to 18.0%p higher), DrNAS (about 14.5%p to 15.0%p higher), FBNet (about 1.5%p to 2.0%p higher), OFA (about 1.5%p to 2.0%p higher)",
            "latex": null,
            "type": "table"
        },
        "TABREF6": {
            "text": "Comparison with NAS methods",
            "latex": null,
            "type": "table"
        },
        "TABREF7": {
            "text": "Dataset Details Detailed information, such as dataset name, description, and download link, about",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "Organization In Appendix, we provide detailed descriptions of the materials that are not fully covered in the main paper, and provide additional experimental results, which are organized as follows:\u2022 Section A -We describe the implementation details of our model-zoo construction, query and model encoders, and meta-surrogate performance predictor.\u2022 Section B -We provide the details of the model training, such as the learning rate and hyper-parameters, of meta-train/test and constructing model-zoo.\u2022 Section C -We provide the proof of injectiveness with the proposed query and model encoding functions over the cross-modal latent space.\u2022 Section D -We elaborate on the detailed experimental setups, such as architecture space, baselines, and datasets, corresponding to the experiments introduced in the main document.\u2022 Section E -We provide additional analysis of the experiments introduced in the main document and present the experiment with different model-zoo settings.\u2022 Section F -We discuss the societal impact and the limitation of our work.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Appendix"
        },
        {
            "text": "A.1 Efficient Model Zoo Construction",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A Implementation Details"
        },
        {
            "text": "Input : D, M: collection of datasets and models, respectively, 1] : set of Ninit initial tuples of (dataset, model, test accuracy) t \u2190 0; while termination condition is not met do if t is divisible by Ntrain then Train accuracy predictor parameters \u03c8zoo on data Z (t) ;; \u03b1 * \u2190 Evaluate the actual accuracy of (D, M ) by training M on D;The algorithm that is used to efficiently construct the model-zoo is described in Algorithm 1. where S indicates the accuracy predictor, and gD is the normalized volume under the pareto-dominated pairs for dataset D:wheres latency (M ) andsparameters(M ) indicates the normalized latency and the normalized number of parameters of the model M , respectively. The latency and parameters are normalized so that the maximum value across all models becomes 1.0 and the minimum value becomes 0.0. The hypervolume can be computed efficiently with the PyGMO library [5] .The accuracy predictor used in the model-zoo construction is very similar to the structure of the performance predictor described in Section A.4, but we used a functional embedding obtained from the model pretrained on Imagenet-1K, instead of a functional embedding obtained from a model already trained on the target dataset, since training the model on the target dataset just to obtain the functional embedding would defeat the purpose of this algorithm. Also, to incorporate uncertainty about the accuracy predictions, we use 10 samples from the accuracy predictor with MC dropout to evaluate the expectation in (8) . The dropout probability is set to 0.5.",
            "cite_spans": [
                {
                    "start": 63,
                    "end": 65,
                    "text": "1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 895,
                    "end": 898,
                    "text": "[5]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 1516,
                    "end": 1519,
                    "text": "(8)",
                    "ref_id": "BIBREF6"
                }
            ],
            "ref_spans": [],
            "section": "Algorithm 1: Model Zoo Construction"
        },
        {
            "text": "Our query encoder takes sampled instances (e.g. 10 unseen random images per class) as an input from the query dataset. We use image embeddings from ResNet18 [23] pretrained on ImageNet 1K [13] , whose dimensions ",
            "cite_spans": [
                {
                    "start": 157,
                    "end": 161,
                    "text": "[23]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 188,
                    "end": 192,
                    "text": "[13]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "A.2 Query Encoder"
        }
    ]
}