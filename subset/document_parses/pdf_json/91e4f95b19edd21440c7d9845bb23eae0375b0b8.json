{"paper_id": "91e4f95b19edd21440c7d9845bb23eae0375b0b8", "metadata": {"title": "A Human Support Robot for the Cleaning and Maintenance of Door Handles Using a Deep-Learning Framework", "authors": [{"first": "Balakrishnan", "middle": [], "last": "Ramalingam", "suffix": "", "affiliation": {"laboratory": "", "institution": "Singapore University of Technology and Design (SUTD)", "location": {"postCode": "487372", "country": "Singapore, Singapore"}}, "email": "balakrishnan@sutd.edu.sgb.r."}, {"first": "Jia", "middle": [], "last": "Yin", "suffix": "", "affiliation": {"laboratory": "", "institution": "Singapore University of Technology and Design (SUTD)", "location": {"postCode": "487372", "country": "Singapore, Singapore"}}, "email": "yin_jia@mymail.sutd.edu.sgj.y."}, {"first": "Mohan", "middle": [], "last": "Rajesh Elara", "suffix": "", "affiliation": {"laboratory": "", "institution": "Singapore University of Technology and Design (SUTD)", "location": {"postCode": "487372", "country": "Singapore, Singapore"}}, "email": "rajeshelara@sutd.edu.sgm.r.e."}, {"first": "Yokhesh", "middle": [], "last": "Krishnasamy Tamilselvam", "suffix": "", "affiliation": {"laboratory": "", "institution": "University of Western Ontario", "location": {"postCode": "N6A 3K7", "settlement": "London", "region": "ON", "country": "Canada"}}, "email": ""}, {"first": "Madan", "middle": ["Mohan"], "last": "Rayguru", "suffix": "", "affiliation": {"laboratory": "", "institution": "Singapore University of Technology and Design (SUTD)", "location": {"postCode": "487372", "country": "Singapore, Singapore"}}, "email": "madan_rayguru@sutd.edu.sgm.m.r."}, {"first": "M", "middle": ["A"], "last": "Viraj", "suffix": "", "affiliation": {}, "email": ""}, {"first": "J", "middle": [], "last": "Muthugala", "suffix": "", "affiliation": {"laboratory": "", "institution": "Singapore University of Technology and Design (SUTD)", "location": {"postCode": "487372", "country": "Singapore, Singapore"}}, "email": ""}, {"first": "Braulio", "middle": [], "last": "F\u00e9lix G\u00f3mez", "suffix": "", "affiliation": {"laboratory": "", "institution": "Singapore University of Technology and Design (SUTD)", "location": {"postCode": "487372", "country": "Singapore, Singapore"}}, "email": "brauliofenixgomez@hotmail.comb.f.g."}]}, "abstract": [{"text": "The role of mobile robots for cleaning and sanitation purposes is increasing worldwide. Disinfection and hygiene are two integral parts of any safe indoor environment, and these factors become more critical in COVID-19-like pandemic situations. Door handles are highly sensitive contact points that are prone to be contamination. Automation of the door-handle cleaning task is not only important for ensuring safety, but also to improve efficiency. This work proposes an AI-enabled framework for automating cleaning tasks through a Human Support Robot (HSR). The overall cleaning process involves mobile base motion, door-handle detection, and control of the HSR manipulator for the completion of the cleaning tasks. The detection part exploits a deep-learning technique to classify the image space, and provides a set of coordinates for the robot. The cooperative control between the spraying and wiping is developed in the Robotic Operating System. The control module uses the information obtained from the detection module to generate a task/operational space for the robot, along with evaluating the desired position to actuate the manipulators. The complete strategy is validated through numerical simulations, and experiments on a Toyota HSR platform.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}, {"text": "UV-light-installed mobile robot was introduced by Danish-based company UVD Robot [5] for efficiently disinfecting hospital rooms, which could slow the disease spread through viruses. These robots can disinfect anything much better than other techniques, using a mobile array of powerful short-wavelength ultraviolet-C (UVC) lights that emit enough energy to shred the DNA or RNA of any microorganisms exposed to them. In [6], author proposed an autonomous robot to performs bed baths in the pursuit of patient hygiene. In addition to this core functionality, the robot is equipped with a fall-detection system consisting of a video camera and a 3D LiDAR to identify patients who have fallen to the ground. The robot can notify the medical staff for the assistance in an emergency condition of a person detected by the fall detection module and remote condition monitoring module. GeckoH13 [7] has been developed as an automated solution for the cleaning of walls in health sectors.This robot can climb on walls with the aid of vacuum adhesion. The task is carried out by spraying different liquid mixers apart from steam. GeckoH13 is effective in sterilizing uniform wall surfaces to a great extent. In [8] [9] [10] [11] [12] [13] [14] mobile robot platform had demonstrated for indoor and outdoor cleaning application such as floor cleaning [8, 9] , lawn mowing [10], wall cleaning [15], window cleaning [16], pool cleaning [12], pavement [11] and external facade cleaning [14]. Similarly, the service robots are utilized for cleaning the table in food courts [13] and collecting the used plates from the customer.", "cite_spans": [{"start": 889, "end": 892, "text": "[7]", "ref_id": "BIBREF6"}, {"start": 1203, "end": 1206, "text": "[8]", "ref_id": "BIBREF7"}, {"start": 1207, "end": 1210, "text": "[9]", "ref_id": "BIBREF8"}, {"start": 1211, "end": 1215, "text": "[10]", "ref_id": "BIBREF9"}, {"start": 1216, "end": 1220, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 1221, "end": 1225, "text": "[12]", "ref_id": "BIBREF11"}, {"start": 1226, "end": 1230, "text": "[13]", "ref_id": "BIBREF12"}, {"start": 1231, "end": 1235, "text": "[14]", "ref_id": "BIBREF13"}, {"start": 1342, "end": 1345, "text": "[8,", "ref_id": "BIBREF7"}, {"start": 1346, "end": 1348, "text": "9]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Abstract"}, {"text": "However, the cleaning of sensitive contact points such as door handles is highly challenging for service robots. To carry out this task, the service robot needs an optimal vision system to identify the target object and the surrounding environment, and generate a trajectory planning scheme corresponding to arm-manipulation function to safely perform the proper cleaning tasks. In the literature, various techniques have been developed for mobile robots to recognize a door and door handle, such as laser scanner technique, ultrasonic sensors, and image-processing schemes. Here, laser scanning and ultrasonic sensors schemes have lot of limitations. They work mostly on a known model of a door and accuracy is not good [17] . Image-processing-based schemes are widely studied for mobile robot object-recognition tasks. These are also widely studied for door and door-handle detection tasks. A door-frame detection model was proposed using Hough Transform to detect edges, and a fuzzy logic-based algorithm was used to find the relationship between them [18] . However, the model was unable to differentiate doors from large objects typically indoors. In another work, a computer vision-based door-detection algorithm was reported for blind people conducting indoor activity [19] . Here, the author used the generic geometric of a door model and the edges and corner information for detecting doors. In another study [20] , Huy-Hieu Pham used Kinect sensor-generated point cloud data and a 3D-image-processing scheme to detect a door and other indoor objects. In this work, the author uses a Voxel Grid Filter to downsample the point cloud data, and Euclidean Cluster Extraction is used to determine the type of the object. The author reported that the model detected the door with 90% precision, and took 0.41 seconds. Yimin et al.", "cite_spans": [{"start": 721, "end": 725, "text": "[17]", "ref_id": "BIBREF16"}, {"start": 1055, "end": 1059, "text": "[18]", "ref_id": "BIBREF17"}, {"start": 1276, "end": 1280, "text": "[19]", "ref_id": "BIBREF18"}, {"start": 1418, "end": 1422, "text": "[20]", "ref_id": "BIBREF19"}], "ref_spans": [], "section": "Abstract"}, {"text": "[21] developed a door-detection algorithm for an indoor mobile robot pioneer using Kinect sensor data. Here, the author used histogram-based edge detection to identify the door and used bilateral filtering to remove the depth image noise. Furthermore, the author used waypoints to indicate the route of the robot. Fern\u00e1ndez-Caram\u00e9s developed a real-time door-detection system for domestic robot navigation where the author uses haar-like features and integral images to detect the door. The experiment was tested with MoRLaCo mobile robot and detected a door with 4% false positives. Furthermore, the author reports that the false detection ration varies according to distance between the door and the robot [22] .", "cite_spans": [{"start": 708, "end": 712, "text": "[22]", "ref_id": "BIBREF21"}], "ref_spans": [], "section": "Abstract"}, {"text": "Deep Learning is an emerging technique. It has been widely used for image classification and object detection. Generally, DL has different definition. In zhang et.al [23] clearly described definition of DL. The authors stated that DL is a class of machine learning algorithms that learns the structure between inputs and outputs, besides learning the relationship between two or multiple variables but also the knowledge that manages the relationship as well as the insights that makes sense of the relation. Recently, DL based object detection algorithms are widely used for various automation applications. To pick and place the objects [24], monitoring construction sites [25] , recognized trash for cleaning robots [9, 26] , etc. These were also used for door and door-handle detection.", "cite_spans": [{"start": 166, "end": 170, "text": "[23]", "ref_id": "BIBREF22"}, {"start": 675, "end": 679, "text": "[25]", "ref_id": "BIBREF24"}, {"start": 719, "end": 722, "text": "[9,", "ref_id": "BIBREF8"}, {"start": 723, "end": 726, "text": "26]", "ref_id": "BIBREF25"}], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Cleaning and disinfecting are very important steps in preventing the acquisition and spread of infectious diseases inside closed environments such as apartments, community centers, shopping malls, hospitals, etc. In particular, high-contact-point areas such as doors, lifts, handrails, etc. are major sources of contamination. In [1] , the authors reveal that the door handle and its connected areas are highly sensitive contact points that are prone to be contaminated, and a key medium for spreading the germs. Therefore, the frequent cleaning or disinfection of doors handles is essential for preventing the acquisition and spread of infection. However, due to a shortage of manpower, the frequent cleaning of indoor areas has become a key challenge [2] . In addition to that, involving manpower carries a high risk of infection while working for long time in such areas. Mobile robots can be used as a viable solution to the problems associated with conventional cleaning and disinfecting methods due to their proven ability to assist humans in diverse application areas such as hospitals, elderly homes, and industries.", "cite_spans": [{"start": 330, "end": 333, "text": "[1]", "ref_id": "BIBREF0"}, {"start": 753, "end": 756, "text": "[2]", "ref_id": "BIBREF1"}], "ref_spans": [], "section": "Introduction"}, {"text": "Many robotic solutions have been designed and developed, targeting routine tasks in healthcare facilitie. The works [3, 4] demonstrate that service robots are used to deliver food and medicine.", "cite_spans": [{"start": 116, "end": 119, "text": "[3,", "ref_id": "BIBREF2"}, {"start": 120, "end": 122, "text": "4]", "ref_id": "BIBREF3"}], "ref_spans": [], "section": "Introduction"}, {"text": "In [27] , Benjamin and Zhang proposed the door-handle detection method for the Stanford AI Robot (STAIR), where the AdaBoost technique and direct feature selection-based cascaded approach was used for door detection. Alejandra et al. used a machine-learning algorithm and contour detection algorithm with spatial filtering technique to detect the door. The experiment was developed for the TurtleBot indoor robot and the detection algorithm obtained 78.0% detection accuracy with a miss-classification rate of 21.93%. Wei et al. [28] proposed a door and door poses detection method for the SIAT robot using a deep-learning framework. The CNN model was trained with 20,500 test images and its detection error was 2.82%. Elen et al. used computer vision and machine-learning technique to identify the door handle and its types where the author used a 2D sliding-window object-detection algorithm and k-means clustering technique for detecting and localizing a door. The experiment was tested with the Star robot, and the model obtained 94.5% recognition and 93.2% localization accuracy, respectively. In another case study, a door and cabinet recognition system was proposed by Maurin et al. for a mobile robot. The author used a 7 \u00d77 darknet deep-learning model to recognize the door and k-means color clustering for segmentation of the handle point [29] .", "cite_spans": [{"start": 3, "end": 7, "text": "[27]", "ref_id": "BIBREF26"}, {"start": 529, "end": 533, "text": "[28]", "ref_id": "BIBREF27"}, {"start": 1349, "end": 1353, "text": "[29]", "ref_id": "BIBREF28"}], "ref_spans": [], "section": "Introduction"}, {"text": "Another important aspect of the indoor cleaning environment is motion-planning and arm manipulation. Once the vision module can detect and localize the cleaning subject (doors, walls etc.), the information should be exploited by the robot platform such that it will move to the desired location and perform the cleaning task. The authors of [30] proposed a motion-planning strategy for the opening of doors, using the concept of action primitives. In a similar line of work, a motion-planning and arm-manipulation technique was proposed for grasping books from any table, and returning them to a predetermined position [31] . The motion-planning and manipulation for an HSR is discussed in [32, 33] .", "cite_spans": [{"start": 341, "end": 345, "text": "[30]", "ref_id": "BIBREF29"}, {"start": 619, "end": 623, "text": "[31]", "ref_id": "BIBREF30"}, {"start": 690, "end": 694, "text": "[32,", "ref_id": "BIBREF31"}, {"start": 695, "end": 698, "text": "33]", "ref_id": "BIBREF32"}], "ref_spans": [], "section": "Introduction"}, {"text": "However, the above-mentioned ML and DL studies were focused on door and door-handle detection for a mobile service robot in different applications that were not related to cleaning services. Moreover, very few studies have discussed integrating the vision module data for motion-planning and manipulation. The objective of this case study is to develop a fully autonomous robotic cleaner to conduct cleaning and wiping of door handles to avoid direct contact with germs or viruses, especially in case of virus outbreak. To implement this case study, a lightweight deep-learning framework is developed for a human support robot to detect a door handle. The detection module's output is exploited by the motion-planning and arm-manipulation algorithms to complete the cleaning task. The experiment was tested in Toyota HSR and its arm part is customized to accomplish the cleaning task. Using a cleaning tool, the robot can spray the disinfecting liquids then clean the sprayed region with a cleaning brush to prevent infections. Furthermore, the indoor path-planning scheme was adopted for a robot to navigate indoors and clean multiple doors. The arm-manipulation function was added to control both the arm and cleaning tool to successfully accomplish the cleaning task.", "cite_spans": [], "ref_spans": [], "section": "Introduction"}, {"text": "The paper is organized as follows. Section 2 reviews the proposed system and explains the deep-learning methods used to recognize door handles. This section also describes the cleaning strategy and the arm manipulation. Section 3 presents the validated results in a real scenario. Section 4 presents conclusions and describes future work for this project. Figure 1 shows the Human Support Robot (HSR) with the customized cleaning module. The system architecture for implementing the door-handle cleaning function in the HSR platform is shown in Figure 2 . The details of the HSR platform, functionality of the system architecture and the integration of the functional module in the HSR platform are described as follows.", "cite_spans": [], "ref_spans": [{"start": 356, "end": 364, "text": "Figure 1", "ref_id": "FIGREF0"}, {"start": 545, "end": 553, "text": "Figure 2", "ref_id": "FIGREF1"}], "section": "Introduction"}, {"text": "The Human Support Robot (HSR) described in this paper is a product from Toyota Ltd. Co. There is a wide range of sensors installed on the HSR platform. In our work, the HSR ASUS Xtion RGBD camera with RGB and depth perception is used to capture the images in front of the robot.", "cite_spans": [], "ref_spans": [], "section": "Overview of HSR"}, {"text": "The camera has 1280 \u00d7 1024 resolution and run on 30 frames per second. In addition, the wide-angle camera installed on the manipulator is used to help locate the position of the door handle. IMU and Hokuyo URG-04LX 2D LiDAR are provided in the HSR base for localization and mapping. The HSR is also provided with pneumatic bumpers to prevent any possible collision. ", "cite_spans": [], "ref_spans": [], "section": "Overview of HSR"}, {"text": "The HSR system architecture block ( Figure 2 ) comprises three computing units-a central control unit, functional execution unit, and lower-level control unit. The ROS API is used in all the layers, which offers the infrastructure and control mechanism that helps hardware components to work easily together. The HSR computing unit comprises of Intel Core i7 CPU (16GB RAM, 256GB SSD) and NVIDIA Jetson TK1 embedded GPU board. The primary control unit uses Linux (Ubuntu) OS and contains the ROS master to control and plan the motion of the robot arms. Furthermore, local connection or data networks are used to establish the communication between ROS nodes and transmit the ROS topic into the ROS network. The ROS transformation frame service function is used to control the vision system of the robot. The functional execution unit carries out the door-handle detection task. NVIDIA Jetson GPU is used in the functional layer to execute the task, connected as a ROS slave and uses TCP/IP to share all the ROS topics.", "cite_spans": [], "ref_spans": [{"start": 36, "end": 44, "text": "Figure 2", "ref_id": "FIGREF1"}], "section": "System Architecture"}, {"text": "The last layer is the lower-level controller which executes the cleaning task. It is made from the Arduino control system and is connected as the ROS slave. The layer uses the ROS serial communication package to share all the ROS topics. ", "cite_spans": [], "ref_spans": [], "section": "System Architecture"}, {"text": "The execution flow of the door handle detection and cleaning process is described in Algorithm 1. In this work, the head RGBD sensor output is used for door-handle detection tasks. Initially, the known objects and their bounding boxes are detected using a customized CNN network trained using RGB images. After detecting the images, the corresponding bounding boxes are used to collect the matching depth images and to project the pixels in 3D space. A point cloud is formed using the projected depth pixels. A ROS object-recognition package is used to remove the pixels belonging to the ground surface or other objects. After removing the points in the detection plane, the point closest to the robot is further moved. By the end, the center point of the current point cloud is assigned as the position of object.", "cite_spans": [], "ref_spans": [], "section": "Door-Handle Detection"}, {"text": "Algorithm 1: Algorithm for door handle detection and cleaning 1: Input: 2: Image capture from RGBD module 3: Output: 4: enable signal to cleaning module 5: Initialize: 6: F is an Image frame 7: detection_result : is an variable hold the object detection results 8: D: is an variable 9: Initialize End 10: Begin: 11: while (1) do 12: search: 13: F = capture Image (C) 14: detection_result= CNN_Object_ detection(F) 15: if (detection_result == doorhandle|door) then 16: D=distance_function(door_robot base) ; compute the distance between door and robot base 17: Move_base(MoveIt(D)) ; move towards door using distance data 18: goto alignment_check 19: else 20: goto: search 21: end if 22: alignment_check : 23: if (detection_result == doorhandle) then 24: arm_manipulation (MoveIt) ; enable the arm manipulation to initiate the door handle cleaning 25: goto: cleaning _enable 26: else 27: base_align( base_movement ) ; adjust the robot base for searching the door handle if door is detect on first frame 28: F = capture Image (C) 29: D = CNN_Object_ detection(F) 30: goto: alignment_check 31: end if 32: cleaning_enable : 33: if (ARM_synchronize && door_handle_detected) then 34: enable_cleaning module (1) ; enable the cleaning module if ARM position is synchronize with door handle 35: wait (cleaning_ done) 36: else 37: ARM_synchronize( enable_arm manipulation(MoveIt)) ; enable the arm manipulation function for synchronize arm position with door handle 38: F = capture Image (C) 39: goto: cleaning e nable 40: end if 41: end while", "cite_spans": [{"start": 168, "end": 170, "text": "6:", "ref_id": null}, {"start": 312, "end": 315, "text": "11:", "ref_id": null}, {"start": 329, "end": 332, "text": "12:", "ref_id": null}, {"start": 341, "end": 344, "text": "13:", "ref_id": null}, {"start": 367, "end": 370, "text": "14:", "ref_id": null}, {"start": 414, "end": 417, "text": "15:", "ref_id": null}, {"start": 464, "end": 467, "text": "16:", "ref_id": null}, {"start": 556, "end": 559, "text": "17:", "ref_id": null}, {"start": 621, "end": 624, "text": "18:", "ref_id": null}, {"start": 646, "end": 649, "text": "19:", "ref_id": null}, {"start": 655, "end": 658, "text": "20:", "ref_id": null}, {"start": 672, "end": 675, "text": "21:", "ref_id": null}, {"start": 683, "end": 686, "text": "22:", "ref_id": null}, {"start": 705, "end": 708, "text": "23:", "ref_id": null}, {"start": 750, "end": 753, "text": "24:", "ref_id": null}, {"start": 847, "end": 850, "text": "25:", "ref_id": null}, {"start": 874, "end": 877, "text": "26:", "ref_id": null}, {"start": 883, "end": 886, "text": "27:", "ref_id": null}, {"start": 1002, "end": 1005, "text": "28:", "ref_id": null}, {"start": 1028, "end": 1031, "text": "29:", "ref_id": null}, {"start": 1061, "end": 1064, "text": "30:", "ref_id": null}, {"start": 1087, "end": 1090, "text": "31:", "ref_id": null}, {"start": 1098, "end": 1101, "text": "32:", "ref_id": null}, {"start": 1120, "end": 1123, "text": "33:", "ref_id": null}, {"start": 1174, "end": 1177, "text": "34:", "ref_id": null}, {"start": 1282, "end": 1285, "text": "35:", "ref_id": null}, {"start": 1308, "end": 1311, "text": "36:", "ref_id": null}, {"start": 1317, "end": 1320, "text": "37:", "ref_id": null}, {"start": 1456, "end": 1459, "text": "38:", "ref_id": null}, {"start": 1482, "end": 1485, "text": "39:", "ref_id": null}, {"start": 1509, "end": 1512, "text": "40:", "ref_id": null}], "ref_spans": [], "section": "Door-Handle Detection"}, {"text": "A deep-learning-based object-detection framework is used in the HSR platform to recognize the door handle. The framework proposed in this paper is built to essentially identify and classify types of door handles. The base framework used in this paper is YOLO V3 built using Dark Flow in Python.", "cite_spans": [], "ref_spans": [], "section": "Deep-Learning Framework"}, {"text": "The key advantage is that unlike other object-detection algorithms such as R-CNN, Faster R-CNN, or SSD mobile net, YOLO splits the images into grids. These grids are then visited to spot any objects that resemble the object of interest and a probability value is issued for each grid cell. If the probability value exceeds a specified threshold, then the algorithm detects that as a region containing the desired object. This grid cell is further separated to localize the desired object within that specific grid cell, draw a bounding box, and classify the object. In many other alternative algorithms, the entire image is searched to localize and spot the desired object. This makes the performance of the YOLO much better than its counterparts regarding swiftness and accuracy.", "cite_spans": [], "ref_spans": [], "section": "Deep-Learning Framework"}, {"text": "The object-detection network is trained on the training data and its performance is checked using the validation data. In this paper, we have used the loss function as a performance check for the model. If the performance is good, i.e., if the stopping criteria is attained, the trained model would be saved. If not, the training is resumed until the stopping criteria is met. The final step represents implementing the trained model for the real-time scenario in the robot. The trained model is used to process real-time video from the robot's camera to detect and classify door handles. Figure 3 shows the architecture for the proposed network. It consists of 10 convolutional layers and 6 pooling layers. It is a general rule of thumb to have a pooling layer after a convolutional layer and therefore the convolutional and pooling layers are placed alternately. The reason for this is to enhance the feature extraction process and to downsample to the spatial dimensions of the image matrix. ", "cite_spans": [], "ref_spans": [{"start": 589, "end": 597, "text": "Figure 3", "ref_id": "FIGREF2"}], "section": "Deep-Learning Framework"}, {"text": "Convolution is a widely used method in signal processing, image processing, and other engineering application [34, 35] . As the name suggests, this operation convolutes two different functions and calculates the amount of overlap between the functions. In our case, this operation is used to calculate the overlap between a pre-defined filter and the input data. In continuous-time signals, the process of convolution is explained as an integration of two functions that are multiplied together after one of the functions is reversed and shifted by a factor of -\u03c4. Convolutional layers are used to extract higher-level features from images, which would be useful in performing complex object detection functions [36] . This is achieved by systematically applying the user-defined filter throughout an entire image matrix. This lets the filter to detect and extract any features that might be useful in training the model. This is done by performing the convolution operation on each subset of image matrix using the user-defined filter. Equation (1), indicating the convolution operation, is shown below.", "cite_spans": [{"start": 110, "end": 114, "text": "[34,", "ref_id": "BIBREF33"}, {"start": 115, "end": 118, "text": "35]", "ref_id": "BIBREF34"}, {"start": 712, "end": 716, "text": "[36]", "ref_id": "BIBREF35"}], "ref_spans": [], "section": "Convolutional Layers"}, {"text": "where f and g are two variables that are involved in convolution. f is the input and g is the filter function. Equation (2) explains the convolution operation for discrete time signals [37] .", "cite_spans": [{"start": 185, "end": 189, "text": "[37]", "ref_id": "BIBREF36"}], "ref_spans": [], "section": "Convolutional Layers"}, {"text": "where x and h are two discrete time signals involved in convolution. In discrete-time signals, the convolutions are explained as the sum of element-wise multiplication of two signals when one is reversed and shifted by a factor of \u2212k. The factor of k can be customized in the convolution, and this factor is called as stride length. The filter is basically to detect edges in the images which can be extracted as features while updating the weights. The trained model containing the filter with updated weights is used in the testing process, which would detect similar features in the testing images and assist with the classification.", "cite_spans": [], "ref_spans": [], "section": "Convolutional Layers"}, {"text": "Pooling layers are used to reduce the spatial dimension of the input image. More importantly, the pooling layer applied non-linear downsampling and thereby avoided the overfitting of the trained model. In this paper, we have used the max-pooling layer in which the maximum value in the image subset that is overlapped by the filter is taken as the output.", "cite_spans": [], "ref_spans": [], "section": "Pooling Layer"}, {"text": "In this paper, we would be using the trained model to detect the door handles in the image. The location of the bounding box is defined by four elements they are interpreted as shown in in (3).", "cite_spans": [], "ref_spans": [], "section": "Object Localization"}, {"text": "The bounding box representation for each image is stored in an .XML file, and when these labels are inputted into the network for training, they are interpreted as shown in Equation (3).", "cite_spans": [], "ref_spans": [], "section": "Object Localization"}, {"text": "where P is a binary value which determines if there is an object of interest in the image, X min is the upper-left x bounding box coordinate, Y min is the upper-left Y bounding box coordinate, X max is the lower-right x bounding box coordinate, Y max is the lower-right y bounding box coordinate, C 1 is 1 if the object belongs to class 1, else zero, C 2 is if the object belongs to class 2, else zero.", "cite_spans": [], "ref_spans": [], "section": "Object Localization"}, {"text": "The detected bounding box coordinate of the door handle is converted into the 3D word coordinate, which is essential for the robot to manipulate the arm. The bounding box coordinate, i.e., top-right, top-left, bottom-left, and center are the 3D coordinates in the word frame in meters from the base frame of the robot. Here, the projective geometry function is adopted to carry out the image plane to 3D point in the real world coordinate [38] . The translation matrix, such as T = [t 1 t 2 t 3 ] is presumed from the vision module after performing the calibration from the source of world coordinates and the orientation matrix R = [roll, pitch, yawn]. The intrinsic parameter of the camera lies in the focal length f x , f y , distortion coefficient parameter \u03c3, principle point (x c , y c ), and size of pixel (sx, sy); any pixel on the image plane p = [p x p y ] with 3D coordinate W = [X Y d] world plane and W can be calculated by p = H * W, where H = K * [R T] is the homogeneous matrix. After predicting the point in the 3D world coordinates frame and setting it aside to the distinct object frame, the ROS transformation frame service package will manage the respective location between this point to the HSR coordinate frame.", "cite_spans": [{"start": 439, "end": 443, "text": "[38]", "ref_id": "BIBREF37"}], "ref_spans": [], "section": "Object Localization"}, {"text": "As the focus of the paper is detection and classification, motion-planning is described for the sake of completeness. Motion/path-planning for a cleaning task can be divided to two decoupled motions of base platform and manipulator. To decouple the motion spaces, the orientation of the manipulator is kept constant while the base platform motion and base platform position is kept constant while performing the cleaning task. Numerous path-planning and arm-manipulation approaches are available in the literature. A technique similar to [30] is proposed for motion-planning and arm manipulation. The notations and symbols are similar to [33] . For that purpose, we represent the base platform pose as (x b , y b , \u03c8 b ) . The arm height with respect to the base is represented by z arm . The roll, pitch, and yaw of the end-effector/gripper is defined as (\u03c8 g , \u03b8 g , \u03c6 g ). The orientation of the link connecting the base and gripper is denoted as (\u03b8 1 , \u03b8 2 ). It should be noted that the arm cannot roll independently along the horizontal direction, so \u03c8 g = \u03c8 b . The cleaning task is done by manipulating the gripper pitch \u03b8 g and gripper yaw \u03c6 g .", "cite_spans": [{"start": 538, "end": 542, "text": "[30]", "ref_id": "BIBREF29"}, {"start": 638, "end": 642, "text": "[33]", "ref_id": "BIBREF32"}], "ref_spans": [{"start": 699, "end": 720, "text": "as (x b , y b , \u03c8 b )", "ref_id": null}], "section": "Motion-Planning and Arm Manipulation"}, {"text": "The middle position of the boundary box can be decided from the boundary box data, defined as", "cite_spans": [], "ref_spans": [], "section": "Platform Movement"}, {"text": "The goal of the robot platform is to reach a small neighborhood around the detected door handle mid-position (X mid , Y mid ). The control objective is to decide the desired velocities for the robot platform. By keeping the arms at rest, the platform motion can be moved by a differential drive methodology, i.e.,", "cite_spans": [], "ref_spans": [], "section": "Platform Movement"}, {"text": "The robot can reach near (X mid , Y mid ) by setting the desired positions as (X mid \u00b1 , Y mid \u00b1 ), where is a positive number to be tuned according to arm length and interior geometry. The desired velocities (v b , \u03c9 b ) are the output of a dynamic feedback linearizing controller. The input velocity is decided through the integrator defined as:\u03b6", "cite_spans": [], "ref_spans": [], "section": "Platform Movement"}, {"text": "The forward kinematics can be rewritten as:", "cite_spans": [], "ref_spans": [], "section": "Platform Movement"}, {"text": "The overall control law can be decided as:", "cite_spans": [], "ref_spans": [], "section": "Platform Movement"}, {"text": "where k 1 , k 2 \u2208 R + . With the control law (7), the closed-loop system can be described as:", "cite_spans": [], "ref_spans": [], "section": "Platform Movement"}, {"text": "The differential Equation (8) describes a stable error dynamic, and hence the robot platform reaches an neighborhood of the door handle, i.e.,:", "cite_spans": [], "ref_spans": [], "section": "Platform Movement"}, {"text": "The motion-planning for the manipulator should be programmed by keeping in mind the workspace of the arm. Hence, before the cleaning task starts, the base platform should reach the neighborhood of the door handle. This can be evaluated by using the arm camera on the HSR. If the robot has reached the door handle, the arm camera can properly capture its image. Once this step is verified, the cleaning task can be done. There can be various shapes of the door handles, but the cleaning is carried out using data from the bounding box. The arm manipulation for the cleaning is done using the following two steps.", "cite_spans": [], "ref_spans": [], "section": "Arm Manipulation"}, {"text": "(1) Define the door-handle position as (x mid , y mid , z mid ). Once the arm camera detects the handle, this means the ||x b \u2212 x mid || \u2264 and ||y b \u2212 y mid || \u2264 . The error between the door-handle position and arm gripper's position can be given by", "cite_spans": [], "ref_spans": [], "section": "Arm Manipulation"}, {"text": "where d z represents the error between the height of the gripper and z mid . These errors can be transformed into joint space by \uf8ee", "cite_spans": [], "ref_spans": [], "section": "Arm Manipulation"}, {"text": "where J is the Jacobean of the robot arm. The error in joint space is fed back through a PID to actuate the robot arm. After this stage, the arm camera should be able to detect the door handle, and the image of the door handle should be on the center pixels of the image matrix. This step should be repeated until a desirable distance between the door handle and arm gripper is reached.", "cite_spans": [], "ref_spans": [], "section": "Arm Manipulation"}, {"text": "(2) After Step 1, one should get", "cite_spans": [], "ref_spans": [], "section": "Arm Manipulation"}, {"text": "where x d , y d , z d are desired distances from the door. The cleaning should be performed only by actuating the gripper, without moving the base. The following actions should be repeated a fixed number of times depending on cleaning requirements. (I) At this position, give an error signal (0, 0, z mid + l h /2) (l h is the approximate length of the door handle), and solve the inverse kinematics (9) to transform this error into joint space. Feed the error into a PID controller, and exploit the output to actuate the gripper.", "cite_spans": [{"start": 400, "end": 403, "text": "(9)", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "Arm Manipulation"}, {"text": "(II) Give an error signal (0, 0, z mid \u2212 l h /2), and follow Step 2 (I).", "cite_spans": [], "ref_spans": [], "section": "Arm Manipulation"}, {"text": "A two-dimensional map of the environment is generated by ROS hector-slam using the data from 2D LiDAR and IMU sensors from HSR. To localize itself at every time-step in the environment, an Adaptive Monte Carlo Localization (AMCL) algorithm is used. Both a static and dynamic obstacle map is needed to generate a combined obstacle map (costmap) for the proper navigation of HSR in the environment. A static obstacle map is the 2D map already generated using hector-slam. LIDAR and RGBD sensors update the dynamic obstacle map. Once the target is fixed, the path is generated using the move_base algorithm on the combined obstacle map. As the robot has a global path to follow and a costmap, the local planar generates the command velocities, (vx,vy and v\u03b8) based on the global plan and costmaps, to navigate the HSR to the target position along the planned path.The following ROS packages are used to accomplish the navigation tasks, amcl, base_local_planner, base_local_planner, clear_costmap_recovery, costmap_2d, dwa_local_planner, fake_localization, global_planner, map_server, move_base, move_base_msgs, move_slow_and_clear, navfn, nav_core, robot_pose_ekf, rotate_recovery, voxel_grid.", "cite_spans": [], "ref_spans": [], "section": "Navigation"}, {"text": "The cleaning module comprises a disinfectant liquid spraying unit and a spindle-type cleaning brush; both units were attached to the HSR manipulator as shown in Figure 1 . The spraying unit is constructed with two spraying guns and a separate disinfection liquid tank. To spray the disinfectant, the disinfectant was drained by a small sucking unit from a tank and forwarded to an electric resistance boiler circuit to convert into steam. Then, the generated steam is sprayed onto the door handle through two spray-gun nozzles (Figure 4 ) at different angles. After spraying the disinfectant liquid on the door handle, the cleaning brush is enabled for wiping the sprayed area. A horizontal and vertical zigzag cleaning pattern is adopted to spray the disinfectant and wipe function. To wipe the entire sprayed region, the cleaning brush was rotated 360 degrees through a 12-volt DC motor. The function of the spraying unit and cleaning brush is controlled by an Arduino Mega micro-controller and HSR task-scheduler module. Here, the task scheduler selects the module to be enabled to perform the disinfection task and the Arduino Mega micro-controller executes the task by generating the relay control signal for the spraying unit and PWM generation signals for enabling the DC motor. The tanks can be easily removed for maintenance and changing the cleaning substance, as required by the cleaning cycle. ", "cite_spans": [], "ref_spans": [{"start": 161, "end": 169, "text": "Figure 1", "ref_id": "FIGREF0"}, {"start": 527, "end": 536, "text": "(Figure 4", "ref_id": "FIGREF3"}], "section": "Cleaning Module"}, {"text": "This section describes the experimental results of door detection and the cleaning mechanism. Figure 5 shows the block diagram of of experimental procedure. The experiment has three phases, which are training the deep-learning framework, mapping the indoor environment, and configuring and configuring and testing with HSR robot platform. Here, the dataset preparation process involves collecting the different door images at high resolution. The dataset contains about 4500 images collected online through Bing image search, the Miguel et al. [39] door dataset and also our institution's different door handles. The data set images are collected in the robot perspective with Intel real-sense depth camera at different angles and different lighting conditions. Furthermore, the collected door datasets are sorted into three classes, such as circle type, lever type, and bar type handles. To balance the images, 1200 images are used for each class in the training, and 300 images are used for validation. Image resolution of 640 \u00d7 480 was used in the experiments for both training and testing the CNN model. Furthermore, data expansion techniques are used to enhance the CNN learning rate and controlling overfitting on training phase. In the data enhancement process, rotation, scaling, and flipping are applied on the collected image. K-fold (here K = 10) cross-validation process is involved for assessing the model. In this assessment process, the dataset is divided into 10 sections; 9 of these sets are used for training the model, and the remaining one is used for testing the model. This process is repeated 10 times to eliminate any biasing conditions due to particular training or testing datasets. The results from the performance metrics are repeated 10 times and the means of the results are provided. The resulting images from the highest-accuracy models are provided here. The deep-learning models were developed in Tensor-flow 1.9 Ubuntu 18.04 version and trained using the following hardware configuration: Intel core i7-8700k, 64 GB RAM, and Nvidia GeForce GTX 1080 Ti Graphics Cards.", "cite_spans": [{"start": 544, "end": 548, "text": "[39]", "ref_id": "BIBREF38"}], "ref_spans": [{"start": 94, "end": 102, "text": "Figure 5", "ref_id": "FIGREF4"}], "section": "Experimental Results"}, {"text": "Standard statistical measures are used to assess the performance of the proposed scheme. These include accuracy, precision, recall, and F measure , which are computed using the equations below:", "cite_spans": [], "ref_spans": [], "section": "Experimental Results"}, {"text": "Precision(Prec) = tp tp + f p (11) Recall(Rec) = tp tp + f n (12)", "cite_spans": [{"start": 30, "end": 34, "text": "(11)", "ref_id": "BIBREF10"}], "ref_spans": [], "section": "Experimental Results"}, {"text": "Here, tp, f p, tn, f n represent the true positives, false positives, true negatives, and false negatives, respectively, as per the standard confusion matrix.", "cite_spans": [], "ref_spans": [], "section": "Experimental Results"}, {"text": "After successfully training the model, the detection accuracy of the trained model was tested offline and in real time with the HSR robot. To perform the offline test, the model inference graph was configured into the HSR GPU and tested with 120 test images. The detection results of the offline tested images are shown in Figure 6 . Here, lever-type door-handle detection is marked by a green rectangle box, circle-type door-handle detection is marked by a red rectangle box, and bar type is marked by a blue rectangle box. In this analysis, the trained CNN model detected most of door handles accurately with above 95% higher confidence level. For real-time door-handle disinfection trail, two indoor environments were chosen as test bed; those environments were first mapped manually by mapping algorithm, with HSR and door location information stored as wave-point data. Our first test bed has four doors fixed with a lever-type door handle and another test bed has three doors, all fixed with a circle-type door handle, the localization result was shown in Figure 7 . Figure 8 shows the real-time door-handle cleaning task (test bed1) accomplished by HSR, where Figure 8a ,b shows the HSR navigation and door-handle detection and Figure 8c ,d demonstrates the spraying of disinfection liquid and cleaning of the door handle. In this trial, the HSR RGBD vision system was used to capture the door runs at 10 fps, and image resolution was set to 640 \u00d7 480. The robot was operated in autonomous mode and door-handle detection and navigation was recorded from remote console. The experiment was tested with different lighting conditions and its detection results are shown in Figure 9 . The experiment was trailed with different lighting conditions and it was observed that the detection model detects door handles with a confidence level of 88 to 92%. The statistical measures indicate that the trained CNN model has detected the door handle with an average of 94.56% accuracy for the offline test and 91.2% average accuracy for the online test. The study ensures that the proposed system was not heavily affected by environmental factors such as varying lighting conditions, but slightly affected by the mirror effect. However, the mirror issue has been resolved by fusing depth information with the detection results.", "cite_spans": [], "ref_spans": [{"start": 323, "end": 331, "text": "Figure 6", "ref_id": null}, {"start": 1062, "end": 1070, "text": "Figure 7", "ref_id": null}, {"start": 1073, "end": 1081, "text": "Figure 8", "ref_id": "FIGREF7"}, {"start": 1167, "end": 1176, "text": "Figure 8a", "ref_id": "FIGREF7"}, {"start": 1235, "end": 1244, "text": "Figure 8c", "ref_id": "FIGREF7"}, {"start": 1677, "end": 1685, "text": "Figure 9", "ref_id": "FIGREF8"}], "section": "Validation of Door-Detection Model"}, {"text": "Furthermore, statistical measures have been performed for estimating the robustness of the detection model for both the online and offline experiments. Table 1 shows the statistical measure results for online and offline experiments. Table 2 show the processing time of the detection model and cleaning execution time of the HSR robot. The cleaning execution time was computed based on the time taken by the HSR to perform a disinfection task on test bed 1 doors and test bed 2 doors. Here, the workspace configuration time, object-detection time, and cleaning time is considered to estimate the cleaning-time computation. The table results indicate that the proposed CNN framework took an average of 11.07 s to detect the door handle in 180 test images, and took 18 and 10 min to clean the test bed 1 and test bed 2 door handles, respectively. Table 3 shows the comparative analysis of the proposed object detection framework with other object detection frameworks includes SSD Mobile Net, SSD Inception. The detection and classification accuracy of two networks has been trained using the same data-set for a constant amount of time. Standard metrics were used for the performance estimation of these methods, as shown in Table 3 . SSD-MobilNet and proposed object detection framework had almost the same accuracy. However, the execution time and detection accuracy of SSD-Inception is higher than the proposed framework.", "cite_spans": [], "ref_spans": [{"start": 152, "end": 159, "text": "Table 1", "ref_id": "TABREF0"}, {"start": 234, "end": 241, "text": "Table 2", "ref_id": "TABREF1"}, {"start": 845, "end": 852, "text": "Table 3", "ref_id": "TABREF2"}, {"start": 1224, "end": 1231, "text": "Table 3", "ref_id": "TABREF2"}], "section": "Validation of Door-Detection Model"}, {"text": "Our proposed system has achieved better trade-off between accuracy and computational cost with reduced execution time.", "cite_spans": [], "ref_spans": [], "section": "Comparison with Other Object Detection Framework and Existing Schemes"}, {"text": "To the best of our knowledge, there is no similar work for comparing our proposed system performance metrics. Hence we consider the similar door handle detection schemes for comparative analysis. In this contest, we took a learning-based door handle scheme for comparison analysis, and models' detection accuracy was considered for evaluation metrics. The detection result of various door handle detection schemes is shown in Table 4 . From the above table it is evident that our model has shown better performance metrics compared to other models. In our work, the darkflow framework was used to build the CNN model. To improve the detection accuracy, we fixed the low learning rate of existing works and also used a reduced number of hidden layers after the convolution and pooling layer.", "cite_spans": [], "ref_spans": [{"start": 426, "end": 433, "text": "Table 4", "ref_id": "TABREF3"}], "section": "Comparison with Other Object Detection Framework and Existing Schemes"}, {"text": "The critical aspects of a system that determine the overall performance are reliability, robustness, and resilience [43] . The robustness of the proposed method might be affected due to occultation. This shortcoming could be eliminated by designating different approaching direction for a single door. For example, if the door handle is not detected from a defined designated position, the robot could move to the next location to detect the door. The continuous navigation of the robot for a long time may increase the risk of the localization error. In the proposed method, the navigation functionality of the robot is used only for navigating near a door. The vision system could detect a door when the robot moves near to the door. After detecting the door, the position information of the door is perceived as a 3D coordinates through the vision system. Then the robot manipulation and navigation required for cleaning based on the perceived 3D coordinates. Therefore, the navigation error would not affect the reliability of the door cleaning process. Navigation toward a door on an already defined navigation path would be failed due to a blockage caused by an unmapped obstacle. In such a situation, HSR can detect the unmapped obstacle through lidar information to avoid the collision and subsequently reroute the navigation toward the door. This behavior ascertains the resilience of the robot in case of unmapped obstacles. As future work, we plan to conduct a detailed analysis of the proposed system in terms of reliability, robustness, and resilience, and ways to improve the performance in those aspects.", "cite_spans": [{"start": 116, "end": 120, "text": "[43]", "ref_id": "BIBREF42"}], "ref_spans": [], "section": "Reliability, Robustness, and Resilience Analysis"}, {"text": "This work proposed a novel technique for door-handle cleaning automation using the Toyota HSR platform. The detection and classification algorithm used a CNN based deep learning methodology, which generates a set of coordinates surrounding the door handles. These coordinates are exploited, to generate the operational space of the robot using ROS, and to develop manipulator motion planning. The veracity of the technique is tested offline and online through a series of simulations and experiments. The accuracy of the detection is calculated to be more than 90% in both cases. The real-time experiments are performed on two different testbeds successfully, which confirmed the efficiency of the proposed framework. It can be concluded that the proposed system has the potential for cleaning door handles in the indoor and public places, which in turn helps to overcome the shortage of manpower in the cleaning industry. Future aspects of this work involve obstacle avoidance, human interaction and safe navigation. ", "cite_spans": [], "ref_spans": [], "section": "Conclusions"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "Stop Touching Your Face! Available online", "authors": [], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "An invisible workforce: The neglected role of cleaners in patient safety on maternity units", "authors": [{"first": "S", "middle": [], "last": "Cross", "suffix": ""}, {"first": "G", "middle": [], "last": "Gon", "suffix": ""}, {"first": "E", "middle": [], "last": "Morrison", "suffix": ""}, {"first": "K", "middle": [], "last": "Afsana", "suffix": ""}, {"first": "S", "middle": [], "last": "Ali", "suffix": ""}, {"first": "T", "middle": [], "last": "Manjang", "suffix": ""}, {"first": "L", "middle": [], "last": "Manneh", "suffix": ""}, {"first": "A", "middle": [], "last": "Rahman", "suffix": ""}, {"first": "D", "middle": [], "last": "Saxena", "suffix": ""}, {"first": "V", "middle": [], "last": "Kranti", "suffix": ""}], "year": 2019, "venue": "Glob. Health Action", "volume": "12", "issn": "", "pages": "", "other_ids": {"DOI": ["10.1080/16549716.2018.1480085"]}}, "BIBREF2": {"ref_id": "b2", "title": "Medical Supplies Delivery Robots", "authors": [], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "Food Delivery Robots", "authors": [], "year": 2020, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF5": {"ref_id": "b5", "title": "Towards an assistive robot that autonomously performs bed baths for patient hygiene", "authors": [{"first": "C", "middle": ["H"], "last": "King", "suffix": ""}, {"first": "T", "middle": ["L"], "last": "Chen", "suffix": ""}, {"first": "A", "middle": [], "last": "Jain", "suffix": ""}, {"first": "C", "middle": ["C"], "last": "Kemp", "suffix": ""}], "year": 2010, "venue": "Proceedings of the 2010 IEEE/RSJ International Conference on Intelligent Robots and Systems", "volume": "", "issn": "", "pages": "319--324", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Design of a robot for hygienization of walls in hospital environments", "authors": [{"first": "F", "middle": ["E"], "last": "Cepolina", "suffix": ""}, {"first": "G", "middle": ["G"], "last": "Muscolo", "suffix": ""}], "year": 2014, "venue": "41st International Symposium on Robotics", "volume": "", "issn": "", "pages": "1--7", "other_ids": {}}, "BIBREF7": {"ref_id": "b7", "title": "Floor cleaning robot with reconfigurable mechanism", "authors": [{"first": "V", "middle": [], "last": "Prabakaran", "suffix": ""}, {"first": "M", "middle": ["R"], "last": "Elara", "suffix": ""}, {"first": "T", "middle": [], "last": "Pathmakumar", "suffix": ""}, {"first": "S", "middle": [], "last": "Nansai", "suffix": ""}], "year": 2018, "venue": "Autom. Constr", "volume": "91", "issn": "", "pages": "155--165", "other_ids": {"DOI": ["10.1016/j.autcon.2018.03.015"]}}, "BIBREF8": {"ref_id": "b8", "title": "Vision-Based Dirt Detection and Adaptive Tiling Scheme for Selective Area Coverage", "authors": [{"first": "B", "middle": [], "last": "Ramalingam", "suffix": ""}, {"first": "V", "middle": [], "last": "Prabakaran", "suffix": ""}, {"first": "M", "middle": [], "last": "Ilyas", "suffix": ""}, {"first": "R", "middle": ["E"], "last": "Mohan", "suffix": ""}, {"first": "M", "middle": [], "last": "Arunmozhi", "suffix": ""}], "year": 2018, "venue": "J. Sens", "volume": "", "issn": "", "pages": "1--13", "other_ids": {"DOI": ["10.1155/2018/3035128"]}}, "BIBREF9": {"ref_id": "b9", "title": "Intelligent Robotic Lawn Mower Design", "authors": [{"first": "K", "middle": [], "last": "Wang", "suffix": ""}, {"first": "C", "middle": [], "last": "Huang", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 International Conference on System Science and Engineering (ICSSE)", "volume": "", "issn": "", "pages": "1--5", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Design of a reconfigurable pavement sweeping robot", "authors": [{"first": "A", "middle": ["A"], "last": "Hayat", "suffix": ""}, {"first": "R", "middle": [], "last": "Parween", "suffix": ""}, {"first": "M", "middle": ["R"], "last": "Elara", "suffix": ""}, {"first": "K", "middle": [], "last": "Parsuraman", "suffix": ""}, {"first": "P", "middle": ["S"], "last": "Kandasamy", "suffix": ""}, {"first": "", "middle": [], "last": "Panthera", "suffix": ""}], "year": 2019, "venue": "Proceedings of the 2019 International Conference on Robotics and Automation (ICRA)", "volume": "", "issn": "", "pages": "7346--7352", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Design of cleaning robot for swimming pools", "authors": [{"first": "Y", "middle": [], "last": "Fu-Cai", "suffix": ""}, {"first": "H", "middle": [], "last": "Shi-Jian", "suffix": ""}, {"first": "S", "middle": [], "last": "Hai-Liang", "suffix": ""}, {"first": "W", "middle": [], "last": "Li-Zhu", "suffix": ""}], "year": 2011, "venue": "Proceedings of the MSIE 2011", "volume": "", "issn": "", "pages": "1175--1178", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "Table Cleaning Task by Human Support Robot Using Deep Learning Technique", "authors": [{"first": "J", "middle": [], "last": "Yin", "suffix": ""}, {"first": "K", "middle": ["G S"], "last": "Apuroop", "suffix": ""}, {"first": "Y", "middle": ["K"], "last": "Tamilselvam", "suffix": ""}, {"first": "R", "middle": ["E"], "last": "Mohan", "suffix": ""}, {"first": "B", "middle": [], "last": "Ramalingam", "suffix": ""}, {"first": "A", "middle": ["V"], "last": "Le", "suffix": ""}], "year": null, "venue": "Sensors", "volume": "20", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/s20061698"]}}, "BIBREF13": {"ref_id": "b13", "title": "Self-reconfigurable fa\u00e7ade-cleaning robot equipped with deep-learning-based crack detection based on convolutional neural networks", "authors": [{"first": "M", "middle": [], "last": "Kouzehgar", "suffix": ""}, {"first": "Y", "middle": ["K"], "last": "Tamilselvam", "suffix": ""}, {"first": "M", "middle": ["V"], "last": "Heredia", "suffix": ""}, {"first": "M", "middle": ["R"], "last": "Elara", "suffix": ""}], "year": 2019, "venue": "Autom. Constr", "volume": "108", "issn": "", "pages": "", "other_ids": {"DOI": ["10.1016/j.autcon.2019.102959"]}}, "BIBREF14": {"ref_id": "b14", "title": "Design and Control of a Wall Cleaning Robot with Adhesion-Awareness", "authors": [{"first": "M", "middle": ["A V J"], "last": "Muthugala", "suffix": ""}, {"first": "M", "middle": [], "last": "Vega-Heredia", "suffix": ""}, {"first": "R", "middle": ["E"], "last": "Mohan", "suffix": ""}, {"first": "S", "middle": ["R"], "last": "Vishaal", "suffix": ""}], "year": null, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/sym12010122"]}}, "BIBREF15": {"ref_id": "b15", "title": "Design and modelling of a modular window cleaning robot", "authors": [{"first": "M", "middle": [], "last": "Vega-Heredia", "suffix": ""}, {"first": "R", "middle": ["E"], "last": "Mohan", "suffix": ""}, {"first": "T", "middle": ["Y"], "last": "Wen", "suffix": ""}, {"first": "J", "middle": ["S"], "last": "Aisyah", "suffix": ""}, {"first": "A", "middle": [], "last": "Vengadesh", "suffix": ""}, {"first": "S", "middle": [], "last": "Ghanta", "suffix": ""}, {"first": "S", "middle": [], "last": "Vinu", "suffix": ""}], "year": 2019, "venue": "Autom. Constr", "volume": "103", "issn": "", "pages": "268--278", "other_ids": {"DOI": ["10.1016/j.autcon.2019.01.025"]}}, "BIBREF16": {"ref_id": "b16", "title": "Planning for autonomous door opening with a mobile manipulator", "authors": [{"first": "S", "middle": [], "last": "Chitta", "suffix": ""}, {"first": "B", "middle": [], "last": "Cohen", "suffix": ""}, {"first": "M", "middle": [], "last": "Likhachev", "suffix": ""}], "year": 2012, "venue": "Proceedings of the 2010 IEEE International Conference on Robotics and Automation", "volume": "", "issn": "", "pages": "1799--1806", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Door-Detection Using Computer Vision and Fuzzy Logic", "authors": [{"first": "R", "middle": [], "last": "Mu", "suffix": ""}, {"first": "A", "middle": [], "last": "Miguel", "suffix": ""}], "year": 2004, "venue": "WSEAS Trans. Syst", "volume": "91", "issn": "", "pages": "3047--3052", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Computer Vision-Based Door Detection for Accessibility of Unfamiliar Environments to Blind Persons", "authors": [{"first": "Y", "middle": [], "last": "Tian", "suffix": ""}, {"first": "X", "middle": [], "last": "Yang", "suffix": ""}, {"first": "A", "middle": [], "last": "Arditi", "suffix": ""}, {"first": "K", "middle": [], "last": "Miesenberger", "suffix": ""}, {"first": "J", "middle": [], "last": "Klaus", "suffix": ""}, {"first": "W", "middle": [], "last": "Zagler", "suffix": ""}], "year": 2010, "venue": "In Computers Helping People with Special Needs", "volume": "", "issn": "", "pages": "263--270", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Real-Time Obstacle Detection System in Indoor Environment for the Visually Impaired Using Microsoft Kinect Sensor", "authors": [{"first": "H", "middle": ["H"], "last": "Pham", "suffix": ""}, {"first": "T", "middle": [], "last": "Le", "suffix": ""}, {"first": "N", "middle": [], "last": "Vuillerme", "suffix": ""}], "year": 2016, "venue": "J. Sens", "volume": "", "issn": "", "pages": "1--13", "other_ids": {"DOI": ["10.1155/2016/3754918"]}}, "BIBREF20": {"ref_id": "b20", "title": "Kinect depth image based door detection for autonomous indoor navigation", "authors": [{"first": "Y", "middle": [], "last": "Zhou", "suffix": ""}, {"first": "G", "middle": [], "last": "Jiang", "suffix": ""}, {"first": "G", "middle": [], "last": "Xu", "suffix": ""}, {"first": "X", "middle": [], "last": "Wu", "suffix": ""}, {"first": "L", "middle": [], "last": "Krundel", "suffix": ""}], "year": 2014, "venue": "Proceedings of the 23rd IEEE International Symposium on Robot and Human Interactive Communication", "volume": "2014", "issn": "", "pages": "147--152", "other_ids": {"DOI": ["10.1109/ROMAN.2014.6926245"]}}, "BIBREF21": {"ref_id": "b21", "title": "A Real-time Door Detection System for Domestic Robotic Navigation", "authors": [{"first": "C", "middle": [], "last": "Fern\u00e1ndez-Caram\u00e9s", "suffix": ""}, {"first": "V", "middle": [], "last": "Moreno", "suffix": ""}, {"first": "B", "middle": [], "last": "Curto", "suffix": ""}, {"first": "J", "middle": [], "last": "Rodr\u00edguez-Arag\u00f3n", "suffix": ""}, {"first": "F", "middle": [], "last": "Rodr\u00edguez", "suffix": ""}], "year": 2014, "venue": "J. Intell. Robot. Syst", "volume": "76", "issn": "", "pages": "119--136", "other_ids": {"DOI": ["10.1007/s10846-013-9984-6"]}}, "BIBREF22": {"ref_id": "b22", "title": "On Definition of Deep Learning", "authors": [{"first": "W", "middle": ["J"], "last": "Zhang", "suffix": ""}, {"first": "G", "middle": [], "last": "Yang", "suffix": ""}, {"first": "Y", "middle": [], "last": "Lin", "suffix": ""}, {"first": "C", "middle": [], "last": "Ji", "suffix": ""}, {"first": "M", "middle": ["M"], "last": "Gupta", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 World Automation Congress (WAC)", "volume": "", "issn": "", "pages": "1--5", "other_ids": {}}, "BIBREF24": {"ref_id": "b24", "title": "Advances in Computer Vision-Based Civil Infrastructure Inspection and Monitoring. Engineering", "authors": [{"first": "B", "middle": ["F"], "last": "Spencer", "suffix": ""}, {"first": "V", "middle": [], "last": "Hoskere", "suffix": ""}, {"first": "Y", "middle": [], "last": "Narazaki", "suffix": ""}], "year": 2019, "venue": "", "volume": "5", "issn": "", "pages": "199--222", "other_ids": {"DOI": ["10.1016/j.eng.2018.11.030"]}}, "BIBREF25": {"ref_id": "b25", "title": "Cascaded Machine-Learning Technique for Debris Classification in Floor-Cleaning Robot Application", "authors": [{"first": "B", "middle": [], "last": "Ramalingam", "suffix": ""}, {"first": "A", "middle": ["K"], "last": "Lakshmanan", "suffix": ""}, {"first": "M", "middle": [], "last": "Ilyas", "suffix": ""}, {"first": "A", "middle": ["V"], "last": "Le", "suffix": ""}, {"first": "M", "middle": ["R"], "last": "Elara", "suffix": ""}], "year": 2018, "venue": "Appl. Sci", "volume": "", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/app8122649"]}}, "BIBREF26": {"ref_id": "b26", "title": "Door Handle Detection for the Stanford AI Robot (STAIR)", "authors": [{"first": "B", "middle": [], "last": "Sapp", "suffix": ""}, {"first": "J", "middle": ["J"], "last": "Zhang", "suffix": ""}], "year": 2005, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF27": {"ref_id": "b27", "title": "Door recognition and deep learning algorithm for visual based robot navigation", "authors": [{"first": "W", "middle": [], "last": "Chen", "suffix": ""}, {"first": "T", "middle": [], "last": "Qu", "suffix": ""}, {"first": "Y", "middle": [], "last": "Zhou", "suffix": ""}, {"first": "K", "middle": [], "last": "Weng", "suffix": ""}, {"first": "G", "middle": [], "last": "Wang", "suffix": ""}, {"first": "G", "middle": [], "last": "Fu", "suffix": ""}], "year": 2014, "venue": "Proceedings of the 2014 IEEE International Conference on Robotics and Biomimetics (ROBIO 2014)", "volume": "", "issn": "", "pages": "1793--1798", "other_ids": {}}, "BIBREF28": {"ref_id": "b28", "title": "Door and cabinet recognition using Convolutional Neural Nets and real-time method fusion for handle detection and grasping", "authors": [{"first": "A", "middle": [], "last": "Llopart", "suffix": ""}, {"first": "O", "middle": [], "last": "Ravn", "suffix": ""}, {"first": "N", "middle": ["A"], "last": "Andersen", "suffix": ""}], "year": 2017, "venue": "Proceedings of the 2017 3rd International Conference on Control, Automation and Robotics (ICCAR)", "volume": "", "issn": "", "pages": "144--149", "other_ids": {}}, "BIBREF29": {"ref_id": "b29", "title": "Designing strategy and implementation of mobile manipulator control system for opening door", "authors": [{"first": "K", "middle": [], "last": "Nagatani", "suffix": ""}, {"first": "S", "middle": [], "last": "Yuta", "suffix": ""}], "year": 1996, "venue": "Proceedings of the IEEE International Conference on Robotics and Automation", "volume": "3", "issn": "", "pages": "2828--2834", "other_ids": {}}, "BIBREF30": {"ref_id": "b30", "title": "Motion planning for dual-arm mobile manipulator-realization of \"tidying a room motion", "authors": [{"first": "T", "middle": [], "last": "Takahama", "suffix": ""}, {"first": "K", "middle": [], "last": "Nagatani", "suffix": ""}, {"first": "Y", "middle": [], "last": "Tanaka", "suffix": ""}], "year": 2004, "venue": "Proceedings of the IEEE International Conference on Robotics and Automation, ICRA'04", "volume": "5", "issn": "", "pages": "4338--4343", "other_ids": {}}, "BIBREF31": {"ref_id": "b31", "title": "Mobile Manipulation for the HSR Intelligent Home Service Robot", "authors": [{"first": "J", "middle": ["B"], "last": "Yi", "suffix": ""}, {"first": "S", "middle": ["J"], "last": "Yi", "suffix": ""}], "year": 2019, "venue": "Proceedings of the 2019 16th International Conference on Ubiquitous Robots (UR)", "volume": "", "issn": "", "pages": "169--173", "other_ids": {}}, "BIBREF32": {"ref_id": "b32", "title": "Robustly adjusting indoor drip irrigation emitters with the toyota hsr robot", "authors": [{"first": "R", "middle": [], "last": "Berenstein", "suffix": ""}, {"first": "R", "middle": [], "last": "Fox", "suffix": ""}, {"first": "S", "middle": [], "last": "Mckinley", "suffix": ""}, {"first": "S", "middle": [], "last": "Carpin", "suffix": ""}, {"first": "K", "middle": [], "last": "Goldberg", "suffix": ""}], "year": 2018, "venue": "Proceedings of the 2018 IEEE International Conference on Robotics and Automation (ICRA)", "volume": "", "issn": "", "pages": "2236--2243", "other_ids": {}}, "BIBREF33": {"ref_id": "b33", "title": "A Review of Convolutional Neural Network Applied to Fruit Image Processing", "authors": [{"first": "J", "middle": [], "last": "Naranjo-Torres", "suffix": ""}, {"first": "M", "middle": [], "last": "Mora", "suffix": ""}, {"first": "R", "middle": [], "last": "Hern\u00e1ndez-Garc\u00eda", "suffix": ""}, {"first": "R", "middle": ["J"], "last": "Barrientos", "suffix": ""}, {"first": "C", "middle": [], "last": "Fredes", "suffix": ""}, {"first": "A", "middle": [], "last": "Valenzuela", "suffix": ""}], "year": null, "venue": "Appl. Sci", "volume": "2020", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/app10103443"]}}, "BIBREF34": {"ref_id": "b34", "title": "Deep Convolutional Neural Network-Based Approaches for Face Recognition", "authors": [{"first": "S", "middle": [], "last": "Almabdy", "suffix": ""}, {"first": "L", "middle": [], "last": "Elrefaei", "suffix": ""}], "year": 2019, "venue": "Appl. Sci", "volume": "9", "issn": "", "pages": "", "other_ids": {"DOI": ["10.3390/app9204397"]}}, "BIBREF35": {"ref_id": "b35", "title": "Trends in deep convolutional neural Networks architectures: A review", "authors": [{"first": "A", "middle": [], "last": "Elhassouny", "suffix": ""}, {"first": "F", "middle": [], "last": "Smarandache", "suffix": ""}], "year": 2019, "venue": "Proceedings of the 2019 International Conference of Computer Science and Renewable Energies (ICCSRE)", "volume": "", "issn": "", "pages": "1--8", "other_ids": {"DOI": ["10.1109/ICCSRE.2019.8807741"]}}, "BIBREF36": {"ref_id": "b36", "title": "VLSI implementation of fast convolution", "authors": [{"first": "P", "middle": [], "last": "Katkar", "suffix": ""}, {"first": "T", "middle": ["N"], "last": "Sridhar", "suffix": ""}, {"first": "G", "middle": ["M"], "last": "Sharath", "suffix": ""}, {"first": "S", "middle": [], "last": "Sivanantham", "suffix": ""}, {"first": "K", "middle": [], "last": "Sivasankaran", "suffix": ""}], "year": 2015, "venue": "Proceedings of the 2015 Online International Conference on Green Engineering and Technologies (IC-GET)", "volume": "", "issn": "", "pages": "1--5", "other_ids": {"DOI": ["10.1109/GET.2015.7453771"]}}, "BIBREF37": {"ref_id": "b37", "title": "Reconfigurable Pavement Sweeping Robot and Pedestrian Cohabitant Framework by Vision Techniques", "authors": [{"first": "A", "middle": ["V"], "last": "Le", "suffix": ""}, {"first": "A", "middle": ["A"], "last": "Hayat", "suffix": ""}, {"first": "M", "middle": ["R"], "last": "Elara", "suffix": ""}, {"first": "N", "middle": ["H K"], "last": "Nhan", "suffix": ""}, {"first": "K", "middle": [], "last": "Prathap", "suffix": ""}], "year": 2019, "venue": "IEEE Access", "volume": "7", "issn": "", "pages": "159402--159414", "other_ids": {"DOI": ["10.1109/ACCESS.2019.2950675"]}}, "BIBREF38": {"ref_id": "b38", "title": "Robust and Adaptive Door Operation with a Mobile Manipulator Robot", "authors": [{"first": "M", "middle": [], "last": "Arduengo", "suffix": ""}, {"first": "C", "middle": [], "last": "Torras", "suffix": ""}, {"first": "L", "middle": [], "last": "Sentis", "suffix": ""}], "year": 2019, "venue": "", "volume": "", "issn": "", "pages": "", "other_ids": {}}, "BIBREF39": {"ref_id": "b39", "title": "Door handle identification: A three-stage approach", "authors": [{"first": "E", "middle": [], "last": "Jauregi", "suffix": ""}, {"first": "J", "middle": ["M"], "last": "Martinez-Otzeta", "suffix": ""}, {"first": "B", "middle": [], "last": "Sierra", "suffix": ""}, {"first": "E", "middle": [], "last": "Lazkano", "suffix": ""}], "year": 2007, "venue": "IFAC Proc", "volume": "40", "issn": "", "pages": "517--522", "other_ids": {"DOI": ["10.3182/20070903-3-FR-2921.00088"]}}, "BIBREF40": {"ref_id": "b40", "title": "A Wearable Assistive Technology for the Visually Impaired with Door Knob Detection and Real-Time Feedback for Hand-to-Handle Manipulation", "authors": [{"first": "L", "middle": [], "last": "Niu", "suffix": ""}, {"first": "C", "middle": [], "last": "Qian", "suffix": ""}, {"first": "J", "middle": [], "last": "Rizzo", "suffix": ""}, {"first": "T", "middle": [], "last": "Hudson", "suffix": ""}, {"first": "Z", "middle": [], "last": "Li", "suffix": ""}, {"first": "S", "middle": [], "last": "Enright", "suffix": ""}, {"first": "E", "middle": [], "last": "Sperling", "suffix": ""}, {"first": "K", "middle": [], "last": "Conti", "suffix": ""}, {"first": "E", "middle": [], "last": "Wong", "suffix": ""}, {"first": "Y", "middle": [], "last": "Fang", "suffix": ""}], "year": 2017, "venue": "Proceedings of the 2017 IEEE International Conference on Computer Vision Workshops (ICCVW)", "volume": "", "issn": "", "pages": "1500--1508", "other_ids": {}}, "BIBREF41": {"ref_id": "b41", "title": "Learning to open new doors", "authors": [{"first": "E", "middle": [], "last": "Klingbeil", "suffix": ""}, {"first": "A", "middle": [], "last": "Saxena", "suffix": ""}, {"first": "A", "middle": ["Y"], "last": "Ng", "suffix": ""}], "year": 2010, "venue": "Proceedings of the 2010 IEEE/RSJ International Conference on Intelligent Robots and Systems", "volume": "", "issn": "", "pages": "18--22", "other_ids": {}}, "BIBREF42": {"ref_id": "b42", "title": "Toward a resilient manufacturing system", "authors": [{"first": "W", "middle": [], "last": "Zhang", "suffix": ""}, {"first": "C", "middle": [], "last": "Van Luttervelt", "suffix": ""}], "year": 2011, "venue": "CIRP Ann", "volume": "60", "issn": "", "pages": "469--472", "other_ids": {}}, "BIBREF43": {"ref_id": "b43", "title": "This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license", "authors": [], "year": null, "venue": "Licensee MDPI", "volume": "", "issn": "", "pages": "", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "HSR platform with cleaning module.", "latex": null, "type": "figure"}, "FIGREF1": {"text": "System architecture.", "latex": null, "type": "figure"}, "FIGREF2": {"text": "CNN architecture.", "latex": null, "type": "figure"}, "FIGREF3": {"text": "Disinfectant liquid spraying unit.", "latex": null, "type": "figure"}, "FIGREF4": {"text": "Block diagram of experimental procedures.", "latex": null, "type": "figure"}, "FIGREF5": {"text": "offline Localization result for test bed1 and test bed2 ensures that the proposed system was not profoundly affected by environmental factors like varying Offline test results.", "latex": null, "type": "figure"}, "FIGREF6": {"text": "offline Localization result for test bed1 and test bed2 ensures that the proposed system was not profoundly affected by environmental factors like varying Localization result for test bed1 and test bed2.", "latex": null, "type": "figure"}, "FIGREF7": {"text": "Real-time door-handle cleaning demonstration.", "latex": null, "type": "figure"}, "FIGREF8": {"text": "Real-time door-handle detection-(1, 2 Test bed1), (3, 4 Test bed2).", "latex": null, "type": "figure"}, "FIGREF9": {"text": "Contributions: Conceptualization, B.R. and M.R.E.; methodology, M.R.E., B.R.; software, B.F.G., M.M.R., J.Y., Y.K.T.; validation, Y.K.T., M.A.V.J.M., M.M.R., B.R.; formal analysis, M.R.E., M.M.R., M.A.V.J.M.; investigation, M.R.E.; resources, M.R.E.; data, B.R., B.F., Y.K.T., J.Y.; writing-original draft preparation, B.R., M.M.R., M.A.V.J.M., Y.K.T.; writing-review and editing, M.R.E., J.Y., M.M.R., M.A.V.J.M.; visualization, B.F.G., M.R.E.; supervision, M.R.E.; project administration, M.R.E.; funding acquisition, M.R.E. All authors have read and agreed to the published version of the manuscript.", "latex": null, "type": "figure"}, "FIGREF10": {"text": "This research is supported by the National Robotics Programme under its Robotics Enabling Capabilities and Technologies (Funding Agency Project No. 192 25 00051), National Robotics Programme under its Robot Domain Specific (Funding Agency Project No. 192 22 00058) and administered by the Agency for Science, Technology and Research.", "latex": null, "type": "figure"}, "TABREF0": {"text": "Statistical measures for door-handle detection.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>\u00a0</td><td>\u00a0</td><td>Lever Type Handle </td><td>\u00a0</td><td>Circle Type </td><td>\u00a0</td><td>Bar Type Handle\n</td></tr><tr><td>Test\n</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td><td>\u00a0</td></tr><tr><td>Prec. </td><td>Recall </td><td>F1 </td><td>Accuracy </td><td>Prec. </td><td>Recall </td><td>F1 </td><td>Accuracy </td><td>Prec. </td><td>Recall </td><td>F1 </td><td>Accuracy\n</td></tr><tr><td>offline </td><td>97.2 </td><td>95.8 </td><td>95.1 </td><td>95.5 </td><td>95.5 </td><td>93.8 </td><td>93.5 </td><td>94.3 </td><td>96.5 </td><td>94.4 </td><td>93.9 </td><td>93.9\n</td></tr><tr><td>Real time </td><td>91.2 </td><td>90.6 </td><td>89.7 </td><td>90.4 </td><td>92.9 </td><td>91.7 </td><td>91.3 </td><td>92.0 </td><td>NA </td><td>NA </td><td>NA </td><td>NA\n</td></tr></table></body></html>"}, "TABREF1": {"text": "Execution time analysis.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Task </td><td>Execution Time\n</td></tr><tr><td>Inference time (offline-180 images) </td><td>11.07 (s)\n</td></tr><tr><td>Test bed1 (4 doors) </td><td>18 (min)\n</td></tr><tr><td>Test bed2 (3doors) </td><td>10 (min)\n</td></tr></table></body></html>"}, "TABREF2": {"text": "Comparison with other object detection framework.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Object Detection Framework </td><td>Precision </td><td>Recall </td><td>F1 </td><td>Accuracy </td><td>Computation Time (s)\n</td></tr><tr><td>SSD MobileNet </td><td>96.05 </td><td>95.80 </td><td>95.49 </td><td>95.22 </td><td>15.88\n</td></tr><tr><td>SSD Inception </td><td>97.55 </td><td>97.13 </td><td>97.07 </td><td>97.00 </td><td>26.03\n</td></tr><tr><td>Proposed (180 images) </td><td>97.20 </td><td>95.8 </td><td>95.1 </td><td>95.5 </td><td>11.07\n</td></tr></table></body></html>"}, "TABREF3": {"text": "Comparison with existing door-handle detection schemes.Maurin et al.[29] door-handle open task, iRobot-ATR V-Jr 7 \u00d7 7 \u00d7 12 multi-layer CNN + k-means clustering 92.00", "latex": null, "type": "table"}, "TABREF4": {"text": "Table 4.\nTable 4. Comparison with existing door-handle detection schemes.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Case Study </td><td>Application </td><td>Algorithm </td><td>Detection Accuracy\n</td></tr><tr><td>Jauregi [40] </td><td>Tartlo robot, door open task </td><td>circle hough transform + Oblique Classifier-1 </td><td>85\n</td></tr><tr><td>Liang et al. [41] </td><td>Visually Impaired door-handle open task, iRobot-ATR V-Jr </td><td>Yolo V2 </td><td>80.00\n</td></tr><tr><td>Maurin et al. [29] </td><td>\u00a0</td><td>7 \u00d7 7 \u00d7 12 multi-layer CNN + k-means clustering </td><td>92.00\n</td></tr><tr><td>Ellen et al. [42] </td><td>Door open case study (stair robot) door handle cleaning </td><td>2d-sliding window </td><td>93.20\n</td></tr><tr><td>Proposed system </td><td>\u00a0</td><td>16-layer CNN </td><td>94.56\n</td></tr></table></body></html>"}}, "back_matter": [{"text": "The authors would like to thank, the National Robotics Programme, the Agency for Science, Technology and Research, Rithu Varman internship student from Ngee Ann Polytechnic for spray module design assistance and SUTD for their support.", "cite_spans": [], "ref_spans": [], "section": "Acknowledgments:"}, {"text": "The authors declar no conflict of interest.", "cite_spans": [], "ref_spans": [], "section": "Conflicts of Interest:"}]}