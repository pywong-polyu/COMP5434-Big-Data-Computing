{
    "paper_id": "08ff745d05580a5d0283fafc5eff6b959e916068",
    "metadata": {
        "title": "Few-Shot Induction of Generalized Logical Concepts via Human Guidance",
        "authors": [
            {
                "first": "Amy",
                "middle": [],
                "last": "Loutfi",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Nicos",
                "middle": [],
                "last": "Angelopoulos",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Leonardo",
                "middle": [],
                "last": "Trujillo",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Mayukh",
                "middle": [],
                "last": "Das",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Samsung R&D Institute India -Bangalore",
                    "location": {
                        "settlement": "Bangalore",
                        "country": "India"
                    }
                },
                "email": "mayukh.das@samsung.com"
            },
            {
                "first": "Nandini",
                "middle": [],
                "last": "Ramanan",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "The University of Texas at Dallas, ECS",
                    "location": {
                        "region": "Dallas, TX",
                        "country": "United States"
                    }
                },
                "email": ""
            },
            {
                "first": "Janardhan",
                "middle": [
                    "Rao"
                ],
                "last": "Doppa",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "EECS",
                    "location": {
                        "settlement": "Pullman",
                        "region": "WA",
                        "country": "United States"
                    }
                },
                "email": ""
            },
            {
                "first": "Sriraam",
                "middle": [],
                "last": "Natarajan",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "The University of Texas at Dallas, ECS",
                    "location": {
                        "region": "Dallas, TX",
                        "country": "United States"
                    }
                },
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "We consider the problem of learning generalized first-order representations of concepts from a small number of examples. We augment an inductive logic programming learner with 2 novel contributions. First, we define a distance measure between candidate concept representations that improves the efficiency of search for target concept and generalization. Second, we leverage richer human inputs in the form of advice to improve the sample efficiency of learning. We prove that the proposed distance measure is semantically valid and use that to derive a PAC bound. Our experiments on diverse learning tasks demonstrate both the effectiveness and efficiency of our approach.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "We study the case of learning from few examples, of which one-shot learning is a special case (Lake et al., 2015) . We consider a challenging setting-that of learning explainable, decomposable, and generalizable (first-order) concepts from few examples. Plan induction becomes a special case where a generalizable plan is induced from a single (noise-free) demonstration. As an example, consider building a tower that requires learning L-shapes as a primitive. In our formulation, the goal is to learn a L-shape from a single demonstration. Subsequently, using this concept, the agent can learn to build a rectangular base (with 2 L-shapes) from another single demonstration and so on till the tower is fully built. Concept learning has been considered as problem solving by reflection (Stroulia and Goel, 1994) , mechanical compositional concepts (Wilson and Latombe, 1994) , learning probabilistic programs (Lake et al., 2015) , etc. While successful, they are not considered in one-shot learning except with SVM (Tax, 2001) , or with a neural network (Kozerawski and Turk, 2018) .",
            "cite_spans": [
                {
                    "start": 94,
                    "end": 113,
                    "text": "(Lake et al., 2015)",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 786,
                    "end": 811,
                    "text": "(Stroulia and Goel, 1994)",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 848,
                    "end": 874,
                    "text": "(Wilson and Latombe, 1994)",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 909,
                    "end": 928,
                    "text": "(Lake et al., 2015)",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 1015,
                    "end": 1026,
                    "text": "(Tax, 2001)",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 1054,
                    "end": 1081,
                    "text": "(Kozerawski and Turk, 2018)",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "Our work has two key differences. First, we aim to learn an \"easily interpretable, \" \"explainable, \" \"decomposable, \" and \"generalizable\" concepts as first-order Horn clauses (Horn, 1951) (which are akin to If-Then rules). Second, and perhaps most important, we \"do not assume the existence of a simulator (for plans) or employ a closed-world assumption\" to generate negative examples. Inspired by Mitchell's (1997) observation of futility of bias-free learning, we employ domain expertise as inductive bias. The principle of structural risk minimization (Vapnik, 1999) shows how optimal generalization from extremely sparse observations is quite difficult. The problem is difficult in structured domains since most relations are false. Thus, few-shot induction of generalized logical concepts is challenging. We employ iterative revision of first-order horn clause theories using a novel scoring metric and guidance from a human. We emulate a \"student\" who learns a generalized concept from an example provided by the \"teacher, \" by both reflecting as well as asking relevant questions.",
            "cite_spans": [
                {
                    "start": 175,
                    "end": 187,
                    "text": "(Horn, 1951)",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 398,
                    "end": 415,
                    "text": "Mitchell's (1997)",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 555,
                    "end": 569,
                    "text": "(Vapnik, 1999)",
                    "ref_id": "BIBREF32"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "We propose Guided One-shot Concept Induction (GOCI) for learning in relational domains 1 . GOCI builds upon an inductive logic program (ILP) learner (Muggleton, 1991) with two key extensions. First, a modified scoring function that explicitly computes distances between concept representations. We show the relation to Normalized Compression Distance (NCD) for plan induction settings. Consequently, we demonstrate that NCD is a valid distance metric. Second, we use domain knowledge from human expert as inductive bias. Unlike many advice taking systems that employ domain knowledge before training, GOCI identifies the relevant regions of the concept representation space and actively solicits guidance from the human expert to find the target concept in a sample-efficient manner. Overall, these two modifications allow for more effective and efficient learning using GOCI that we demonstrate both theoretically and empirically.",
            "cite_spans": [
                {
                    "start": 149,
                    "end": 166,
                    "text": "(Muggleton, 1991)",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "We make the following key contributions:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "1. We derive a new distance-penalized scoring function that computes definitional distances between concepts, henceforth termed as \"conceptual distance.\" 2. We treat the human advice as an inductive bias to accelerate learning. Our ILP learner actively solicits richer information from the human experts than mere labels. 3. Our theoretical analyses of GOCI prove that (a) our metric is indeed a valid distance, and (b) NCD between plans is a special case of our metric. 4. We show a PAC analysis of the learning algorithm based on Kolmogorov complexity. 5. We demonstrate the exponential gains in both sample efficiency and effectiveness of GOCI on diverse concept induction tasks with one or a few examples.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "INTRODUCTION"
        },
        {
            "text": "Our approach to Concept Learning is closely related to Stroulia and Goel (1994) 's work, which learns logical problem-solving concepts by reflection. GOCI's scoring metric is more general and applicable to both concepts and plans and can be used for learning from a few examples. While we use discrete spatial structures as motivating examples, GOCI is not limited to discrete spaces, similar to Wilson and Latombe (1994) 's work. GOCI is also related in spirit to probabilistic (Bayesian) program induction for learning decomposable visual concepts (Lake et al., 2015) , which illustrates how exploiting decomposability is more effective. Our approach leverages not only decomposability but also implicit relational structure.",
            "cite_spans": [
                {
                    "start": 55,
                    "end": 79,
                    "text": "Stroulia and Goel (1994)",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 396,
                    "end": 421,
                    "text": "Wilson and Latombe (1994)",
                    "ref_id": "BIBREF38"
                },
                {
                    "start": 550,
                    "end": 569,
                    "text": "(Lake et al., 2015)",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "BACKGROUND AND RELATED WORK"
        },
        {
            "text": "Our problem setting differs from the above in that it requires learning from sparse examples (possibly one). Lake et al. (2015) propose a one-shot version of Bayesian program induction of visual concepts. There is also substantial work on one/few-shot learning (both deep and shallow) in a traditional classification setting (Bart and Ullman, 2005; Vinyals et al., 2016; Wang et al., 2018) , most of which either pre-train with gold-standard support example set or sample synthetic observations. We make no such assumptions about synthetic examples. ILP (Muggleton, 1991) inductively learns a logical program (first-order theory) that covers most of the positive examples and few of the negative examples by effectively employing background knowledge as search bias. In concept learning, generalization is typically performed as a search through space of candidate inductive hypotheses by (1) structuring, (2) searching, and (3) constraining the space of theories. FOIL (Quinlan, 1990 ) is an early noninteractive learner with the disadvantage that it occasionally prunes some uncovered hypotheses. This is alleviated in systems like FOCL by introducing language bias in the form of userdefined constraints (Pazzani, 1992) . With Interactive ILP, learner could pose questions and elicit expert advice that allows pruning large parts of search space (Sammut and Banerji, 1986; Rouveirol, 1992) . To incorporate new incoming information, ILP systems with theory revision incrementally refine and correct the induced theory (Sammut and Banerji, 1986; Muggleton, 1988) . While GOCI is conceptually similar to ALEPH (Srinivasan, 2007) , it learns from a few examples and actively acquires domain knowledge by interacting with human expert incrementally.",
            "cite_spans": [
                {
                    "start": 109,
                    "end": 127,
                    "text": "Lake et al. (2015)",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 325,
                    "end": 348,
                    "text": "(Bart and Ullman, 2005;",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 349,
                    "end": 370,
                    "text": "Vinyals et al., 2016;",
                    "ref_id": "BIBREF33"
                },
                {
                    "start": 371,
                    "end": 389,
                    "text": "Wang et al., 2018)",
                    "ref_id": "BIBREF36"
                },
                {
                    "start": 554,
                    "end": 571,
                    "text": "(Muggleton, 1991)",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 970,
                    "end": 984,
                    "text": "(Quinlan, 1990",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 1207,
                    "end": 1222,
                    "text": "(Pazzani, 1992)",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 1349,
                    "end": 1375,
                    "text": "(Sammut and Banerji, 1986;",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 1376,
                    "end": 1392,
                    "text": "Rouveirol, 1992)",
                    "ref_id": "BIBREF26"
                },
                {
                    "start": 1521,
                    "end": 1547,
                    "text": "(Sammut and Banerji, 1986;",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 1548,
                    "end": 1564,
                    "text": "Muggleton, 1988)",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 1611,
                    "end": 1629,
                    "text": "(Srinivasan, 2007)",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "One/Few-Shot Learning and Theory Induction"
        },
        {
            "text": "Background knowledge in ILP is primarily used as search bias.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Knowledge-Guided Learning"
        },
        {
            "text": "Although the earliest form of knowledge injection can be found in explanation-based approaches (Shavlik and Towell, 1989) , our work relates to preference-elicitation framework (Braziunas and Boutilier, 2006) , which guides learning via human preferences as an inductive bias. Augmented learning with domain knowledge as an inductive bias has long been explored across various modeling formalisms, including traditional machine learning (Fung et al., 2003) , probabilistic logic (Odom et al., 2015) , and planning (Das et al., 2018) . Our human-guided GOCI learner aims to extend these directions in the context of learning generalizable complex concepts from a few examples(including plans). Similar problem setting of concept learning from incomplete/sparse observations has also been explored in the cognitive science paradigm via explanation-based inductive program synthesis (Flener, 1997; Kitzelmann and Schmid, 2006) . The idea of augmented learning with human guidance/knowledge has also been extensively studied in the context of evolutionary computation. Interactive evolutionary systems (Eiben and Smith, 2015) use expert guidance to emulate a holistic fitness function that would otherwise depend on a very restricted pre-defined fitness model. The potential richness of such knowledge can be leveraged in not just evolutionary parent selection but can also optimize other parameters that leads to faster convergence, especially in mutations (Wendt et al., 2010) . ILP has been shown to be conceptually similar to mutative EA in the context of program induction (Wong and Leung, 1997) and hence knowledge-guided mutations are related to knowledge augmented search in ILP. Thus, in our problem setting, the interaction module that seeks human guidance to select the most useful constraints (detailed in section 3.2.3) is similar in spirit to interactive (knowledge guided) evolutionary mutation process. However, our underlying search strategy and optimization is based on ILP.",
            "cite_spans": [
                {
                    "start": 95,
                    "end": 121,
                    "text": "(Shavlik and Towell, 1989)",
                    "ref_id": "BIBREF28"
                },
                {
                    "start": 177,
                    "end": 208,
                    "text": "(Braziunas and Boutilier, 2006)",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 437,
                    "end": 456,
                    "text": "(Fung et al., 2003)",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 479,
                    "end": 498,
                    "text": "(Odom et al., 2015)",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 514,
                    "end": 532,
                    "text": "(Das et al., 2018)",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 880,
                    "end": 894,
                    "text": "(Flener, 1997;",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 895,
                    "end": 923,
                    "text": "Kitzelmann and Schmid, 2006)",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 1098,
                    "end": 1121,
                    "text": "(Eiben and Smith, 2015)",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 1454,
                    "end": 1474,
                    "text": "(Wendt et al., 2010)",
                    "ref_id": "BIBREF37"
                },
                {
                    "start": 1574,
                    "end": 1596,
                    "text": "(Wong and Leung, 1997)",
                    "ref_id": "BIBREF39"
                }
            ],
            "ref_spans": [],
            "section": "Knowledge-Guided Learning"
        },
        {
            "text": "We are inspired by a teacher (human) and student (machine) setting in which a small number of demonstrations are used to learn generalized concepts (Chick, 2007) . Intuitively, the description provided by a human teacher tends to be modular (can have distinct logical partitions), structured (entities and relations between them), and in terms of known concepts. Hence, a vectorized representation of examples is insufficient. We choose a logical representation, specifically a \"function-free restricted form of first-order logic (FOL)\" that models structured spaces faithfully.",
            "cite_spans": [
                {
                    "start": 148,
                    "end": 161,
                    "text": "(Chick, 2007)",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "GUIDED ONE-SHOT CONCEPT INDUCTION"
        },
        {
            "text": "Given: A set of \"facts\" or assertions, that is, a set of ground literals (or trajectories) describing 1 (or few) instance(s) of an unknown concept, availability of an expert to provide guidance and a knowledge-base of known concepts. To Do: Learning a representation, by inducing a firstorder logic program, of the given concept that optimally generalizes the given instance(s) effectively.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "GUIDED ONE-SHOT CONCEPT INDUCTION"
        },
        {
            "text": "The input to GOCI is the description of the instances(s) of a concept that the human teacher provides. An example is, thus, conjunction of a set of ground literals (assertions). The output of GOCI is a least general generalization (LGG) horn clause from the input example(s).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "GUIDED ONE-SHOT CONCEPT INDUCTION"
        },
        {
            "text": "Consider the following example input to the GOCI framework. The input here is an instance of the structural concept L (illustrated in Figure 1 ). Example 1. An instance in a minecraft domain can be a L with dimensions height = 5, base = 4 (Figure 1 ). L(S), Height(S, 5), Base(S, 4), s is the concept identifier and which denotes L as composition of a \"Row\" of w = 4 and a \"Tower\" of h = 4 with appropriate literals describing the scenario (Figure 1, left) . As a special case, under partial or total ordering assumptions among the ground literals, an input instance can represent a plan demonstration.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 134,
                    "end": 142,
                    "text": "Figure 1",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 239,
                    "end": 248,
                    "text": "(Figure 1",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 440,
                    "end": 456,
                    "text": "(Figure 1, left)",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Concept Representation"
        },
        {
            "text": "We aim to learn the optimally generalized (decomposable) representation of the concept (L in the context of the aforementioned example) referred by the one/few instances that were passed to GOCI as input. Before further discussion on the learning such a generalized (decomposable) representation let us first define formally what a concept representation signifies in our setting.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Definition 1. Concepts in GOCI are represented as horn clause theories. A theory T is defined as,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "is a conjunction of literals indicating known concepts or relationships among them, such that any t j \u2208 V \u222a {s k } \u222a C where V is the set of all logical variables in the clause, C is the set of constants in the domain of any logical variable. The head C(s k . . .) identifies a target concept, and the terms {s k } are logical variables that denote the parameters of the concept assuming there are k = {1, . . . , K} parameters including the identifier to the given instance of the concept. Since a concept can be described in multiple ways (Figure 1) , the final theory will be a disjunction over clause bodies with the same head. A (partial) instantiation of a theory T is denoted as T/\u03b8 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 541,
                    "end": 551,
                    "text": "(Figure 1)",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Concept Representation"
        },
        {
            "text": "Note that these definitions allow for the reuse of concepts, potentially in a hierarchical fashion. We believe that this is crucial in achieving human-agent collaboration.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Example 2. Figure 1 illustrates an instance of the concept L that can be described in multiple ways. A possible one is, The generalization must be noted. The last argument of the SpRel() is a constant, as only this particular spatial alignment is appropriate for the concept of the L structure. Although the input is a single instance (Example 1), GOCI should learn a generalized representation such as Example 2. Another interesting aspect is the additional constraints: Equal(X,Y) and Sub(X,Y,N). While such predicates are a part of the language, they are not typically described directly in the input examples. However, they are key to generalization, since they express complex interactions between numerical (or nonnumerical) parameters. Also note that the head predicate of the clause could have been designed differently as per Definition 1. For instance, in case of Example 2, the head predicate could have folded in the dimensional parameters-L(s, h s , w s ). However, the number of such dimensional parameters can vary across different concepts. Hence to maintain generality of representation format during implementation, we push the dimensional parameters of the learnable concept into the body of the clause.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 11,
                    "end": 19,
                    "text": "Figure 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Concept Representation"
        },
        {
            "text": "A specific case of our concept learning (horn clause induction) framework could be plan induction from sparse demonstrations. This can be achieved by specifying time as the last argument of both the state and action predicates. Following this definition, we can allow for plan induction as shown in our experiments. Our novel conceptual distance is clearer and more intuitive in the case of plans as can be seen later.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Definition 2 (Decomposable:). A concept C is decomposable if it is expressed as a conjunction of other concepts, and one or more additional literals to model the interactions.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Here C \u2032 i are literals that represent other concepts that are already present in the knowledge base of the learner and B j are literals that either describe the attributes of C \u2032 i or interactions between them.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Decomposable allows for an unknown concept to be constructed as a composition of other known concepts. GOCI learns the class of decomposable concepts since it is intuitive for the \"human teacher\" to describe. Decomposable concepts faithfully capture the modular and structured aspect of how humans would understand and describe instances. It also allows for a hierarchical construction of plans.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Example 3. Following the Minecraft structure described in 2, note how L is described with already known concepts C \u2032 1 = Row() and C \u2032 2 = Tower() and the other literals such as Height(b, h b ), SpRel(b, a, \"NWTop\"), . . . \u2208 {B j }, that is, they describe the parameters of the known concepts or interactions between them. Note that known concepts in the knowledge base could have been manually coded in by experts or learned previously and are essentially represented in the same way. For instance, Row() can be encoded as recursive the clause program representing a composition of one block and one unit shorter row,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Tower() could also be defined in the knowledge base in the same way. When the optimally general representation of the concept L is learned that is persisted in the knowledge base as well, such that more complex concepts can be represented by decomposing into L and other known concepts.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "An obvious question that arises here is why {B j } {C \u2032 }? that is, why can the other literals not be treated similarly as a part of the knowledge base of known concepts? Ideally, that would be correct. However, that will also cause infinite levels of concept definitions, which cannot be implemented in practice. Additionally, following the paradigm of a studentteacher scenario, it can always be assumed that the student has prior understanding of many concepts from outside the current system. Thus, we can safely assume, without loss of generality, that set of literals {B j } are implicitly understood and defined as a part of the framework itself. This argument applies to the semantics of the \"constraint predicates\" (described later) as well.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Finally, before we discuss the details of the learning methodology, let us briefly look into a motivating, and presently relevant, real-world scenario that represents our problem setting.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "Example 4. Consider a decision support AI system for resource planning and management in hospitals as illustrated in Figure 2 . The AI agent forecasts the need for increased resources in the FIGURE 2 | A motivating real-world scenario for concept induction. The concept learnt by the AI agent is \"Divert()\" .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 117,
                    "end": 125,
                    "text": "Figure 2",
                    "ref_id": null
                }
            ],
            "section": "Concept Representation"
        },
        {
            "text": "Frontiers in Robotics and AI | www.frontiersin.org infectious diseases (ID) ward, given the early signs of an outbreak of some disease such as Covid-19 or Ebola, and a potential spike in ID ward admissions. However, as noted by the administrators and/or physicians there is not enough budget to procure additional resources for ID ward. But the problem is quite critical and needs to be solved. So the human teacher (administrators in this case) teaches the AI agent the concept of \"Divert\" -ing resources from Cancer ward since cancer ward admissions are usually stable and does not have spikes. The AI agent is hence expected to learn a generalized representation of the concept of divert such that it may be applied later for other wards or for other tasks and furthermore in a \"decomposable\" fashion. For instance, \"Divert\" may be learned as a clause program such as,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "source , qty 1 , ), AcquireFrom(R, Loc 2 source , qty 2 ), AssignTo(R, Loc dest , qty dest ), sum(qty 1 , qty 2 , qty dest ) Obviously, the above representation assumes that concepts such as \"AcquireFrom()\" are known concepts, either implicitly defined inside the learning framework or its explicit representation has been learned and persisted inside the knowledge base in the past.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "The above example is solely to motivate the potential impact of our problem setting and the proposed solution. For an explanation of different components and aspects of GOCI, we refer to the much simpler and unambiguous structural example outlines earlier (L).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Concept Representation"
        },
        {
            "text": "ILP systems perform a greedy search through the space of possible theories. Space is typically defined, declaratively, by a set of mode definitions (Muggleton, 1995) that guide the search. We start with the most specific clause (known as a bottom clause) (Srinivasan, 2007) from the ground assertions and successively add/modify literals that might improve a rule that best explains the domain. Typically, the best theory is the one that covers the most positive and least negative examples. Thus, it optimizes the likelihood of a theory T based on the data. We start with a bottom clause and variablize the statements via antisubstitution. Variabilization of T is denoted by",
            "cite_spans": [
                {
                    "start": 148,
                    "end": 165,
                    "text": "(Muggleton, 1995)",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 255,
                    "end": 273,
                    "text": "(Srinivasan, 2007)",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "Search"
        },
        {
            "text": "That is, anti-substitution \u03b8 \u22121 is a mapping from occurrences of ground terms in T to new or existing logical variables. Evaluation Score: We redesign the ILP scoring (e.g., ALEPH's compression heuristics) as:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Search"
        },
        {
            "text": "\u2022 The user-provided advice forces the learner to learn longer theory, hence the search space can be exponentially large. Thus, modes alone are not sufficient as the search bias. \u2022 There is only one (a few) positive training example(s) to learn from and many possible rules can accurately match the training example. Coverage-based scores fail.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Search"
        },
        {
            "text": "Most learners optimize some form of likelihood. For a candidate theory T, likelihood given data D is LL(T) = log P(D|T) (i.e., coverage). To elaborate further, in most classification tasks in discrete domains (with categorical/ordinal feature and target variables), goodness of fit of candidate models is achieved via the measure of how well the candidate models explain (or cover) the given data, that is, a good model is the one that will predict positive class for maximum possible positive examples and for minimum possible negative examples. This measure is expressed as likelihood of the data given a candidate model. In GOCI, we have one (at most few) positive example(s). Coverage will not suffice. Hence, we define a modified objective as follows.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Search"
        },
        {
            "text": "where T * is the optimal theory, \u03c4 is the set of all candidate theories, and D is the conceptual distance between the instantiated candidate theory T/\u03b8 X and the original example X.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Search"
        },
        {
            "text": "Recall that a theory T is a disjunction of horn clause bodies (or conjunction of clauses).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Search"
        },
        {
            "text": "Conceptual distance, D(T/\u03b8 X , X), is a penalty in our objective.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Distance Metric"
        },
        {
            "text": "The key idea is that any learned first-order horn clause theory must recover the given instance by equivalent substitution. However, syntactic measures, such as edit distance, are not sufficient since changing even a single literal, especially, literals that indicate interconcept relations, could potentially result in a completely different concept. For instance, in blocks-world, the difference between a block being in the middle of a row and one at the end of the row can be encoded by changing one literal. Hence, a more sophisticated semantic distance such as conceptual distance is necessary (Friend et al., 2018) . However, such distances require deeper understanding of the domain and its structure. Our solution is to employ interplan distances. Recall that the concepts GOCI can induce are decomposable and, hence, are equivalent to parameterized planning tasks. One of our key contributions is to exploit this equivalence by using a domainindependent planner to find grounded plans for both the theory learned at a particular iteration i, T i and the instance given as input, X. We then compute the normalized compression distance (NCD) between the plans. NCD: Goldman and Kuter (2015) proved that NCD is arguably the most robust interplan distance metric. NCD is a reasonable approximation of Normalized Information Distance, which is not computable (Vit\u00e1nyi et al., 2009) . Let the plans for T i /\u03b8 X and X be \u03c0 T and \u03c0 X . To obtain NCD, we execute string compression (lossy or lossless) on each of the plans as well as the concatenation of the two plans to recover the compressed strings C T , C X , and C T,X , respectively. NCD between the plans can be computed as,",
            "cite_spans": [
                {
                    "start": 600,
                    "end": 621,
                    "text": "(Friend et al., 2018)",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 1174,
                    "end": 1198,
                    "text": "Goldman and Kuter (2015)",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 1364,
                    "end": 1386,
                    "text": "(Vit\u00e1nyi et al., 2009)",
                    "ref_id": "BIBREF35"
                }
            ],
            "ref_spans": [],
            "section": "Distance Metric"
        },
        {
            "text": "The conceptual distance between a theory T and X is the NCD between the respective plans, D(T/\u03b8 X , X) = NCD(\u03c0 T , \u03c0 X ). This entire computation is performed by the conceptual distance calculator as shown in Figure 3 . Observations: (1) Conceptual distance as a penalty term in the LL score ensures that the learned theory will correctly recover the given example/demonstration. (2) D(T/\u03b8 X , X) generalizes to the Kolmogorov-Smirnov statistic between two target distributions if we induce probabilistic logic theories. We prove these insights theoretically.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 209,
                    "end": 217,
                    "text": "Figure 3",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Distance Metric"
        },
        {
            "text": "The search space in ILP is provably infinite. Typically, language bias (modes) and model assumptions (closed world) are used to prune the search space. However, it is still intractable with one (or few) examples. So, we employ human expert guidance as constraints that can directly refine an induced theory, acting as a strong inductive bias. Also, we are learning decomposable concepts (see Definition 2). This allows us to exploit another interesting property. Constraints can now be applied over the attributes of the known concepts that compose the target concept, or over the relations between them. Thus, GOCI directly includes such constraints in the clauses as literals (see Example 2). Though such constraint literals come from the pre-declared language, they are not directly observed in the input example(s). So an ILP learner will fail to include such literals.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Human Guidance"
        },
        {
            "text": "If the human inputs (constraints) are provided upfront before learning, it can be wasteful/irrelevant. More importantly, it places an additional burden on the human. To alleviate this, our framework explicitly queries for human advice on the relevant constraint literals, which are most useful. Let U be a predefined library of constraint predicates in the language, and let U() \u2208 U be a relevant constraint literal. Human advice A can be viewed as a preference over the set of relevant constraints {U()}. If U A denotes the preferred set of constraints, then we denote the theory having a preferred constraint literal in the body of a clause as \u03c4 A . (For instance, as per Example 2 GOCI queries \"which of the two sampled constraints Sub(h b , h s , 1) & Greater(h b , h s ) is more useful.\" Human could prefer Sub(h b , h s , 1), since it subsumes the other.) The scoring function now becomes: ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Human Guidance"
        },
        {
            "text": "Thus, we are optimizing the constrained form of the same objective as Equation (1), which aims to prune the search space. This is inspired by advice elicitation approaches (Odom et al., 2015) . While our framework can incorporate different forms of advice, we focus on preference over constraints on the logical variables. The formal algorithm, described next, illustrates how we achieve this via an iterative greedy refinement (Figure 3 , query-advice loop shown in left).",
            "cite_spans": [
                {
                    "start": 172,
                    "end": 191,
                    "text": "(Odom et al., 2015)",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [
                {
                    "start": 428,
                    "end": 437,
                    "text": "(Figure 3",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Human Guidance"
        },
        {
            "text": "Algorithm 1 outlines the GOCI framework. It initializes a theory T 0 by variablizing the \"bottom clause\" obtained from X and background knowledge [lines 3 and 5]. Then it performs a standard ILP search (described earlier) to propose a candidate theory [line 6]. This is followed by the guided refinement steps, where constraint literals are sampled (parameter tying guides the sampling) and the human teacher is queried for preference over them, such that the candidate theory can be modified using preferred constraints [lines 7-9]. The function NCD() performs the computation of the conceptual distance by first grounding the current modified candidate theory T \u2032 with the same parameter values as the input example X, then generating grounded plans and finally calculating the normalized compression distance between the plan strings (as shown in Figure 3 and Equation 2) [line 10]. The distance-penalized negative log-likelihood score is estimated and minimized to find the best theory at the current iteration [lines 11-14], which is then used as the initial model in the next iteration. This process is repeated either until convergence (no change in induced theory) or maximum iteration bound (L). Connection to plan induction: Evaluation, both in traditional ML and ILP, generally predicts the value of\u0177 X for a test instance X represented as a fixed (ML) or arbitrary (ILP) length feature vector. In GOCI, however, the notion of evaluation of an instance X depends on successful construction of a valid/correct",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 850,
                    "end": 858,
                    "text": "Figure 3",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "The GOCI Algorithm"
        },
        {
            "text": "Algorithm 1: Guided one-shot concept induction.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "The GOCI Algorithm"
        },
        {
            "text": "1: procedure GOCI(Instance X)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "The GOCI Algorithm"
        },
        {
            "text": "Initialize: Set Iteration \u2113 \u2190 1 3:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "2:"
        },
        {
            "text": "Initialize: Bootstrap theory T 0 \u2190 X/\u03b8 \u22121 4:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "2:"
        },
        {
            "text": "repeat 5:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "2:"
        },
        {
            "text": "Use T \u2113\u22121 as initial model 6:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "2:"
        },
        {
            "text": "Candidate theory T \u2113 \u2190 SEARCH(T \u2208 \u03c4 |T \u2113\u22121 )",
            "cite_spans": [],
            "ref_spans": [],
            "section": "2:"
        },
        {
            "text": "Sample applicable constraints U \u2208 U 8:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "7:"
        },
        {
            "text": "11:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "7:"
        },
        {
            "text": "Score S \u2113 \u2190 \u2212LL(T \u2032 ) + D(T \u2032 /\u03b8 X , X)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "7:"
        },
        {
            "text": "if S \u2113 < S \u2113\u22121 then \u22b2 minimize 13:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "12:"
        },
        {
            "text": "Retain T \u2032 : Update T \u2113 = T \u2032 14:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "12:"
        },
        {
            "text": "until \u2113 \u2264 L OR T \u2113 = T \u2113\u22121 16: end procedure plan \u03c0 X (Figure 4) . Thus, while learning, most research aim to maximize coverage of positive instances E + (max P(\u0177 x = true|y x \u2208 E + )) and minimize coverage of negatives E \u2212 , [i.e., min P(\u0177 x = true|y x \u2208 E \u2212 )]. GOCI evaluates a candidate concept representation by allowing the agent to realize that conceptby computing a valid plan for the goal/task implied by the instance x. This is akin to plan induction, since we are learning parameterized plan for realizing the concept as a surrogate for the concept itself. Additionally, planning has long been shown to be conceptually same as logic programming (Preiss and Shai, 1989) and hence induction of logic programs (theories) is the same as plan induction where the examples are trajectories (plan traces) in this case.",
            "cite_spans": [
                {
                    "start": 656,
                    "end": 679,
                    "text": "(Preiss and Shai, 1989)",
                    "ref_id": "BIBREF24"
                }
            ],
            "ref_spans": [
                {
                    "start": 54,
                    "end": 64,
                    "text": "(Figure 4)",
                    "ref_id": null
                }
            ],
            "section": "15:"
        },
        {
            "text": "NCD \u03b4(x, y) between two strings x and y is provably a valid distance metric (Vit\u00e1nyi et al., 2009) ",
            "cite_spans": [
                {
                    "start": 76,
                    "end": 98,
                    "text": "(Vit\u00e1nyi et al., 2009)",
                    "ref_id": "BIBREF35"
                }
            ],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "is the Kolmogorov complexity of a string x and K(x|y) is the conditional Kolmogorov complexity of x given another string y. NCD is a computable approximation of the same [D(x, y) \u2248 \u03b4(x, y)]. Thus, we just verify if \u03b4 is a correct conceptual distance measure. Let T Y and T Z be two theories, with same parameterizations (i.e., same heads). Let T Y /\u03b8 and T Z /\u03b8 be their groundings with identical parameter values \u03b8 . Our learned theories are equivalent to planning tasks. Assuming access to a planner () which returns Y = (T Y /\u03b8 ) and Z = (T Z /\u03b8 ), the two plan strings with respect to the instantiations of concepts are represented by T Y and T Z , respectively.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Proposition 1 (Valid Conceptual Distance). Normalized information distance \u03b4(Y, Z) is a valid and sound conceptual distance measure between T Y and T Z , that is, \u03b4(Y, Z) = 0 iff the concepts represented by T Y and T Z are equivalent.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Proof Sketch for Proposition 1: Let T Y and T Z be 2 induced consistent first-order Horn clause theories, which may or may not represent the same concept. Let \u03b8 be some substitution. Now let T Y /\u03b8 and T Z /\u03b8 be the grounded theories under the same substitution. This is valid since we are learning horn clause theories with the same head, which indicates the target concept being learned. As explained in the paper, a theory is equivalent to a planning task. We assume access to a planner (), and we get plan strings Y = (T Y /\u03b8 ) and Z = (T Z /\u03b8 ) with respect to the planing tasks T Y /\u03b8 and T Z /\u03b8 . Friend et al. (2018) proved that Conceptual Distance is the step distance between two consistent theories in a cluster network (T, \u21c4, \u223c), where T is the class of consistent theories, \u21c4 is the definitional equivalence relation (equivalence over bidirectional concept extensions) and \u223c implies symmetry relation. We have shown in the paper that, given the class of concepts we focus on, a concept is a planning task.",
            "cite_spans": [
                {
                    "start": 604,
                    "end": 624,
                    "text": "Friend et al. (2018)",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Let there be a theory T * , which represents the optimal generalization of a concept C. If step distance T Y , T * = 0 in a cluster network and T Z , T * = 0, then T Y , T Z = 0, that is, they represent the same concept C and they are definitionally equivalent T Y \u21c4 T Z . Thus, both T Y /\u03b8 and T Z /\u03b8 will generate the same set of plans as T * , since they will denote the same planning tasks (by structural induction). Thus,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "up to equivalence of partial ordering in planning. Let \u03c0 * () be a minimum length plan in a set of plans (). Let y and z be strings indicating plans \u03c0 * (Y) and \u03c0 * (z) ignoring partial order. If (Y) = (Z), then \u03c0 * (Y) = \u03c0 * (z). Hence, the conditional Kolmogorov complexities K(y|z) and K(z|y) will both be set to 0, if the strings x and y are equivalent (ignoring partial ordering). This is based on the principle that if they are equivalent, then a Universal prefix-Turing machine will recover one string given the other in 0 steps.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Proposition 2 (Generalization to Kolmogorov-Smirnov). In generalized probabilistic logic, following Vit\u00e1nyi (2013) , \u03b4(Y, Z) corresponds to 2-sample Kolmogorov-Smirnov statistic between two random variables T Y /\u03b8 and T Z /\u03b8 with distributions P T Y and P T Z , respectively,",
            "cite_spans": [
                {
                    "start": 100,
                    "end": 114,
                    "text": "Vit\u00e1nyi (2013)",
                    "ref_id": "BIBREF34"
                }
            ],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "where F T () is the cumulative distribution function for P T and sup \u03b8 \u2208F is the supremum operator. In a deterministic setting, \u03b4 is a special case of the Kolmogorov-Smirnov",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Proof Sketch for Proposition 2: This can be proved by considering the connection between NID and the distributions FIGURE 4 | Difference in evaluation of a concept instance across different learning paradigms.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Frontiers in Robotics and AI | www.frontiersin.org induced by the concept classes we are learning. NID is defined as \u03b4(x, y) = max K(x|y),K(y|x) max K(x),K(y) , where, K(a|b) is the conditional Kolmogorov complexity of a string a, given b. There is no provable equivalence between Kolmogorov complexity and traditional notions of probability distributions.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "However, if we consider a reference universal semicomputable semi-probability mass function m(x), then there is a provable equivalence \u2212 log m(x) = K(x) \u00b1 O(1). Similarly for conditional Kolmogorov complexity, by Conditional Coding Theorem, \u2212 log m(y|x) = K(y|x) \u00b1 O(1) (Vit\u00e1nyi, 2013) . By definition,",
            "cite_spans": [
                {
                    "start": 270,
                    "end": 285,
                    "text": "(Vit\u00e1nyi, 2013)",
                    "ref_id": "BIBREF34"
                }
            ],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "where c j > 0 are constants and P j (y|x) is the lower semi-computable conditional. A lower semi-computable semiprobability conditional mass function is based on the string generating complexity of a Universal prefix-Turing machine. Thus, m(y|x) is greater than all the lower semi-computable. Note that our compressed plans are equivalent to a string generated by Universal prefix-Turing machines. The conditional case implies, if a compressed plan string x is given as an auxiliary prefix tape, how complex it is to generate compressed string y = \u03b8 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Given two grounded theories T Y /\u03b8 and T Z /\u03b8 , let P T Y /\u03b8 , P T X /\u03b8 be the respective distributions when learning probabilistic logic rules. Now let us define the semantics of a distribution P T/\u03b8 in our case: P T/\u03b8 = P(\u03c0(T/\u03b8 )), that is, distribution over the plan strings, which can be considered as lower semi-computable probability based on coding theory. We know,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "where F(y) is the cumulative distribution. So, NID \u03b4(Y, Z) now becomes, \u03b4(Y, Z) = max(K(y|z),K(z|y)) max(K(y),K(z)) We know that max K(y), K(z) is a normalizer. Thus, \u03b4(Y, Z) < max K(y|z), K(z|y) max K(y|z), K(z|y) = max \u2212logm(y|z), \u2212logm(z|y)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Under partial ordering max yields supremum",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "Significance of Propositions 1 and 2: Proposition 1 outlines how our proposed NCD-based metric is a valid conceptual distance. It is well understood that the true measure of conceptual distance is not straightforward and is subject to the semantic interpretation of the domain itself. But designing a unique distance metric based on the semantics of every domain limits the generality of any learning system. So NCD acts as a surrogate \"conceptual distance.\" It is based on the notion that \"if two concepts are fundamentally same the complexity of optimal action plans to realize the concepts should also be fundamentally same.\" NCD (or NID) essentially measures the difference in generative complexities of two plans. Also note that other types of distances that are limited to a syntactic level such as edit distance (or literal distance) will fail to capture the similarity or diversity between concept representations since the same concept can be represented with more than one theories that may vary in one or more literals. Proposition 2, on the other hand, proves that our proposed metric is not limited to our specific scenario. It positions our work in the context of known statistical distance metrics and establishes its credibility as a valid solution. It proves how in a nondeterministic setting, that is, probabilistic logic formulation, our proposed metric generalizes to Kolmogorov-Smirnov statistic.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Validity of Distance Metric"
        },
        {
            "text": "PAC analysis of GOCI follows from GOLEM for function-free horn clause induction (Muggleton and Feng, 1990) . Let initial hypothesis space be H 0 and the final be H * (s.t.T * \u2208 H * ). (1984) and Mooney (1994) , with probability (1\u2212\u03b4), the sample complexity of inducing the optimal theory T * is:",
            "cite_spans": [
                {
                    "start": 80,
                    "end": 106,
                    "text": "(Muggleton and Feng, 1990)",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 195,
                    "end": 208,
                    "text": "Mooney (1994)",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "PAC Learnability"
        },
        {
            "text": "where \u01eb is the regret, n * -sample complexity of H * , i is the maximum depth of a variable in a clause and & j is the maximum arity. m -number of distinct predicates, t is the number of terms, p is the place and d is the distance of the current revision from the last known consistent theory, and L is the upper bound on the number of refinement steps (iterations).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "Proof Sketch for Proposition 3: In our learning setting, the learned theory will always have nonzero uncertainty. To understand the properties, we build upon the PAC analysis for recursive rlgg (Relative Least General Generalization) approach for function-free Horn clause learning shown by Muggleton and Feng (1990) in GOELM. With some restrictions, it applies here as well. Let n: denote the sample size and H: the hypothesis space. Our approach can be considered as an rlgg approach with refinement steps. Note that constraint predicates that refine the clauses are not part of K.",
            "cite_spans": [
                {
                    "start": 291,
                    "end": 316,
                    "text": "Muggleton and Feng (1990)",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "To begin with, we are interested in regret bounds for the initially learned hypothesis by the ILP learner H 0 , before refinement. We know from Valiant (1984) , that with probability (1 \u2212 \u03b4) the sample complexity n for H 0 is,",
            "cite_spans": [
                {
                    "start": 144,
                    "end": 158,
                    "text": "Valiant (1984)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "where \u01eb is the regret. Now, our ILP learner induces ij-determinate clauses (Muggleton and Feng, 1990) , where i is the maximum depth of the clause and j is the maximum arity. In our problem setting, it can be proven that |H 0 | = O((tpm) j i ), where m is the number of distinct predicates in the language. t is the number of terms, and p is the place (for details about place, refer Muggleton and Feng, 1990) . Also note that if j & i is bounded, then j i \u2264 c). Mooney (1994) shows that for theory refinement/revision, sample complexity is expressed as,",
            "cite_spans": [
                {
                    "start": 75,
                    "end": 101,
                    "text": "(Muggleton and Feng, 1990)",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 384,
                    "end": 409,
                    "text": "Muggleton and Feng, 1990)",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 463,
                    "end": 476,
                    "text": "Mooney (1994)",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "where distance d to be the number of single literal changes in a single refinement step and k is the number of refinement/revision iterations. In Algorithm 1, we observe that at each iteration \u2113 \u2264 L, updates are with respect to the preferred constraint predicates U A \u2208 U. Thus, we know that k = L. Substituting |H 0 | = (tfm) j i and j i = c constant)in Equation (8) and ignoring the additive terms d + m since (tfm) j i >> d + m, we get,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "Proposition 4 (Refinement Distance). d is upper bounded by the expected number of literals that can be constructed out of the library of constraint predicates with human advice E \u223cA [|U|] and lower bounded by the conceptual distance between theory learned at two consecutive iterations since we adopt a greedy approach. If Pr A (U) denotes the probability of a constraint predicate being",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "Pr A (U i ) where 2 (|U|\u22121) \u00d7 t P q is the maximum possible number of constraint literals and q is the maximum arity of the constraints. In case of only pairwise constraints, q =2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "Proof Sketch for Proposition 4: The proof is straightforward and hence we present it in brief. In our setting to show that,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "(where 2 (|U|\u22121) \u00d7 t P q is the maximum number of constraint literals possible, since U is the library of constraint predicates) consider that the number of constraint predicates that can be picked up at any iteration is 2 (|U|\u22121) . To form constraint literals, we need to tie arguments to existing logical variables in the current theory. We have defined t to be the number of terms in the existing theory. Let q be the max arity of a constraint, thus total possible number of constraint literals are 2 (|U|\u22121) \u00d7 t P q . So if the distribution induced on the constraint literals by human advice A be P A , then 2 (|U|\u22121) \u00d7 t P q i=1 P A (U i ) is the expected number of literals added given the advice. Now this is the upper bound of d. Again d should at least be the conceptual distance between the new theory after constraint addition and the last consistent theory. Note d and conceptual distance D is not the same. Thus, it is the difference between the NCD of last theory to original example and current updated theory to the original example |D \u2113 \u2212 D \u2113\u22121 |.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "Observe that if at each layer \u2113 \u2264 L we add constraint predicates U \u2113 , then at layer \u2113, d = {U} \u2113 \u2264 2 mt P q (assuming q is maximum arity of the constraint predicates). Also, as per our greedy refinement framework, at each layer \u2113, distance new theory T \u2113 should at least be the change in conceptual distance.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 3 (Sample Complexity). Following Valiant"
        },
        {
            "text": "to illustrate what the general sample complexity would be for a theory refinement-based RLGG clause learner such as GOCI and how the conceptual distance controls the complexity by establishing bounds on the refinement distance. Furthermore, the complexity is also subject to the maximum refinement iterations, which in turn is affected by human guidance. Thus, we establish the theoretical connection between the two dimensions of the contribution of this work. (6) and (8), at convergence \u2113 = L, we get n * \u2212|X| L examples, on an average, for a concept C to be PAC learnable using GOCI.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Significance of Propositions 3 and 4: Propositions 3 and 4 aim"
        },
        {
            "text": "The proof is quite straightforward and hence we just discuss the brief idea behind it. Our input is sparse (one or few instances). GOCI elicits advice over constraints to acquire additional information. Let |X| be the number of input examples. We query the human once at each layer and hence the maximum query budget is L. Given that the sample size is |X|, each query to the human must acquire information about at least n * \u2212|X| L examples, on an average, for our a concept C to be PAC learnable using our approach.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proposition 5 (Advice Complexity). From Equations"
        },
        {
            "text": "We next aim to answer the following questions explicitly:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "EVALUATION"
        },
        {
            "text": "(Q1) Is GOCI effective in \"one-shot\" concept induction? (Q2) How sample efficient is GOCI compared to baselines? (Q3) What is the relative contribution of the novel scoring function versus human guidance toward performance?",
            "cite_spans": [],
            "ref_spans": [],
            "section": "EVALUATION"
        },
        {
            "text": "Our framework extends a Java version of Aleph (Srinivasan, 2007) . We modified the scoring function with NCD penalty computed via a customized SHOP2 planner (Nau et al., 2003) . We added constraint sampling and human guidance elicitation iteratively (Algorithm 1).",
            "cite_spans": [
                {
                    "start": 46,
                    "end": 64,
                    "text": "(Srinivasan, 2007)",
                    "ref_id": "BIBREF29"
                },
                {
                    "start": 157,
                    "end": 175,
                    "text": "(Nau et al., 2003)",
                    "ref_id": "BIBREF21"
                }
            ],
            "ref_spans": [],
            "section": "EVALUATION"
        },
        {
            "text": "We compare GOCI with Aleph with no enhancements. We focus on the specific task of \"one-shot concept induction, \" with a single input example for each of the several types of concepts and report aggregated precision. We consider precision because preference queries are meant to eliminate false positives in our case. To demonstrate general robustness of GOCI, beyond one-shot case, we experimented with varying sample sizes for each concept type and show learning curves for the same. We perform an ablation study to show the relative contribution of two important components of GOCI: (a) novel scoring metric and (b) human guidance, that is, we compare against two more baselines (ILP+Score and ILP+Guidance). For every domain, we consider 10 different types of concepts (10 targets) and aggregate results over 5 runs.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "Note that human guidance was obtained from distinct human experts for every run. The expertise level of all the advice providers was reasonably at par since they were chosen from the same pool of candidates with zero visibility and knowledge of our proposed framework. However, for all the human advice providers we assumed a basic level of knowledge in geometry or fundamentals of logic and reasoning. Additionally, we also explained each of the experimental domains to the human participants to create a similar level of awareness about the domains among all of them.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Experimental Design"
        },
        {
            "text": "We employ four domains with varying complexity. Note that we have selected the below domains based on multiple considerations. The domain encoding need to be such that target concepts can be learned in a modular fashion (i.e., decomposable). Thus, the first two domains are structure construction domains either spatial (Minecraft) or chemical/molecular (CheBI). Spatial structures are implicitly modular (such as the L-structure in Figure 1 ). Chemical entities, molecules/compounds/complexes, are similarly modular as well. The last two domains are fundamentally planning domains. However, they are also compositional in nature, that is, any planning goal is a composition task. For instance, machine structure in \"Assembly\" domain and cocktails, etc., in \"Barman\" domain. So these two domains do not just demonstrate learning modular/decomposable concepts but they also illustrate the plan induction feature of GOCI.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 433,
                    "end": 441,
                    "text": "Figure 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Domains"
        },
        {
            "text": "The goal is to learn discrete spatial concepts in a customized (Narayan-Chen et al., 2019) Project Malmo platform for Minecraft. Dialogue data in Malmo are available online, and we converted them into a logical representation. All structures are in terms of discrete atomic unit blocks (cubes). Figure 5 shows examples of some spatial structures that GOCI was able to learn.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 295,
                    "end": 303,
                    "text": "Figure 5",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Minecraft (spatial structures):"
        },
        {
            "text": "ChEBI (Degtyarenko et al., 2007) is a compound database containing important structural features and activity-based information, for classification of chemicals, such as (1) molecular structure and (2) ",
            "cite_spans": [
                {
                    "start": 6,
                    "end": 32,
                    "text": "(Degtyarenko et al., 2007)",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Chemical Entities of Biological Interest (ChEBI):"
        },
        {
            "text": "[Effective One-shot (Q1)] Table 1 shows the performance of GOCI on one-shot concept learning tasks as compared to standard ILP. GOCI significantly outperforms ILP across all domains answering (Q1) affirmatively. Also, note that GOCI is very \"query\" efficient as observed from the small average Frontiers in Robotics and AI | www.frontiersin.org number of queries posed in the case of each domain. Note that in the case of CheBI, the number of queries is the highest among all the domains. This can be attributed to that fact that CheBI is a domain, which requires a certain degree of understanding of fundamental chemistry (chemical bonds and their types, molecules, atoms, etc.). Thus, some of the human participants required more iterations (consequently more queries) to converge to the most relevant set of constraint literals, given the difference of their prior understanding of school chemistry. Query efficiency is an important consideration in any learning paradigm that leverages human guidance, since controlling the cognitive load on the human expert is critical. So, in general, the observed average query numbers being reasonably low across all domains corroborates our theoretical advice complexity (section 3.4.2).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 26,
                    "end": 33,
                    "text": "Table 1",
                    "ref_id": "TABREF1"
                }
            ],
            "section": "Experimental Results"
        },
        {
            "text": "[Sample Efficiency (Q2)] In Figure 6 , we observe that GOCI converges within significantly smaller sample size across all domains, thus, supporting our theoretical claims in section 3.4. In ChEBI, though, quality of planner encoding might explain mildly lower precision yet GOCI does perform significantly better than vanilla ILP learner. In ChEBI, we see that the sample efficiency is not vastly distinct. One of the possible reasons could be the sub-optimal encoding of the planning domain language, which is necessary for NCD computation, for this task. If we can improve the planner setup for this domain, then we will likely be able to observe enhanced performance.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 28,
                    "end": 36,
                    "text": "Figure 6",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "Experimental Results"
        },
        {
            "text": "[Relative contribution (Q3)] Figure 7 validates our intuition that both components (scoring function and human-guidance) together make GOCI a robust one-shot (sample-efficient) concept induction framework. Though human guidance, alone, is able to enhance the performance of a vanilla ILP learner in sparse samples, yet it is not sufficient for optimal performance. In contrast, although the advantage of our novel distance-penalized scoring metric is marginal in sparse samples, it is essential for optimal performance at convergence.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 29,
                    "end": 37,
                    "text": "Figure 7",
                    "ref_id": null
                }
            ],
            "section": "Experimental Results"
        },
        {
            "text": "The most important conclusion from the experiments is that when available, the guidance along with the novel score leads to a jump-start, better slope and in some cases, asymptotically sample FIGURE 7 | Results of ablation study on Minecraft domain. Relative contribution of our distance-penalized score vs. human guidance. efficient with a fraction of the number of instances needed than merely learning from data.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DISCUSSION"
        },
        {
            "text": "Another important aspect to note here is that our experimental setup did not attempt to ensure in any way that the quality of guidance provided by the human participants is optimal. The formulation of the objective function, itself, in GOCI is designed to handle sub-optimal human advice implicitly in a seamless manner. The two primary features in the design that make GOCI robust to advice quality are as follows:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DISCUSSION"
        },
        {
            "text": "1. As explained earlier and shown in Equation (3), human advice and conceptual distance deal with two distinct aspects of the search process. Human advice controls the size and nature of the search space while conceptual distance ensures the quality of the candidates. Advice and distance have a balancing effect on each other, and thus, it is our novel conceptual distance that makes GOCI robust to bad advice. 2. Also, the nature of human advice in our setting is of choosing the most useful set of \"constraint predicates\" among the set of candidate constraints. Now the candidates are generated by GOCI in a conservative fashion selecting only the ones that are logically valid for the theory learned at the current iteration of revision. Thus, human experts have very little option of choosing an invalid or extremely unlikely constraint predicate.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DISCUSSION"
        },
        {
            "text": "Our ablation study in Figure 7 also supports our analysis. On closer inspection, we see that it is due to our novel distance penalized scoring function (ILP+Score) that ensures convergence to an optimal solution. Human advice (ILP+Guidance) contributes to sample efficiency.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 22,
                    "end": 30,
                    "text": "Figure 7",
                    "ref_id": null
                }
            ],
            "section": "DISCUSSION"
        },
        {
            "text": "We developed a human-in-the-loop one-shot concept learning framework in which the agent learns a generalized representation of a concept as FOL rules, from a single (few) positive example(s). We make two specific contributions: deriving a new distance measure between concepts and allowing for richer human inputs than mere labels, solicited actively by the agent. Our theoretical and experimental analyses show the promise of GOCI method. An exhaustive evaluation involving richer human inputs including varying levels of expertise and analyzing our claim that learning performance of GOCI is robust to expertise levels (which should only affect query efficiency) is an immediate future research objective. Integration with hierarchy learning also remains an interesting direction for future research.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "CONCLUSIONS"
        },
        {
            "text": "All datasets generated for this study are included in the article/supplementary material.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "DATA AVAILABILITY STATEMENT"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Single-example learning of novel classes using representation by similarity",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Bart",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ullman",
                    "suffix": ""
                }
            ],
            "year": 2005,
            "venue": "BMVC",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Preference elicitation and generalized additive utility",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Braziunas",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Boutilier",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "AAAI",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Teaching and learning by example",
            "authors": [
                {
                    "first": "H",
                    "middle": [
                        "L"
                    ],
                    "last": "Chick",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "Mathematics: Essential Research, Essential Practice",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Preference-guided planning: an active elicitation approach",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Das",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Odom",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "R"
                    ],
                    "last": "Islam",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "R"
                    ],
                    "last": "Doppa",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Roth",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Natarajan",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "AAMAS",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "One-shot induction of generalized logical concepts via human guidance",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Das",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Ramanan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "R"
                    ],
                    "last": "Doppa",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Natarajan",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "StarAI-20 Workshop",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Chebi: a database and ontology for chemical entities of biological interest",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Degtyarenko",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "De Matos",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Ennis",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Hastings",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Zbinden",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Mcnaught",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "Nucleic Acids Res",
            "volume": "36",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1093/nar/gkm791"
                ]
            }
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Interactive Evolutionary Algorithms",
            "authors": [
                {
                    "first": "A",
                    "middle": [
                        "E"
                    ],
                    "last": "Eiben",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "E"
                    ],
                    "last": "Smith",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "215--222",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Inductive logic program synthesis with dialogs",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Flener",
                    "suffix": ""
                }
            ],
            "year": 1997,
            "venue": "ILP",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Knowledge-based support vector machine classifiers",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Friend",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Khaled",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Lefever",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Sz\u00e9kely",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "M"
                    ],
                    "last": "Fung",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [
                        "L"
                    ],
                    "last": "Mangasarian",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "W"
                    ],
                    "last": "Shavlik",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "NIPS",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Measuring plan diversity: pathologies in existing approaches and a new plan distance metric",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "P"
                    ],
                    "last": "Goldman",
                    "suffix": ""
                },
                {
                    "first": "U",
                    "middle": [],
                    "last": "Kuter",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "AAAI",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "On sentences which are true of direct unions of algebras",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Horn",
                    "suffix": ""
                }
            ],
            "year": 1951,
            "venue": "J. Symbol. Logic",
            "volume": "16",
            "issn": "",
            "pages": "14--21",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Inductive synthesis of functional programs: an explanation based generalization approach",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Kitzelmann",
                    "suffix": ""
                },
                {
                    "first": "U",
                    "middle": [],
                    "last": "Schmid",
                    "suffix": ""
                }
            ],
            "year": 2006,
            "venue": "J. Mach. Learn. Res",
            "volume": "7",
            "issn": "",
            "pages": "429--454",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Clear: cumulative learning for one-shot one-class image recognition",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Kozerawski",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Turk",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "CVPR",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Human-level concept learning through probabilistic program induction",
            "authors": [
                {
                    "first": "B",
                    "middle": [
                        "M"
                    ],
                    "last": "Lake",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Salakhutdinov",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "B"
                    ],
                    "last": "Tenenbaum",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Science",
            "volume": "350",
            "issn": "",
            "pages": "1332--1338",
            "other_ids": {
                "DOI": [
                    "10.1126/science.aab3050"
                ]
            }
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Machine Learning",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Mitchell",
                    "suffix": ""
                }
            ],
            "year": 1997,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "A preliminary PAC analysis of theory revision",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "J"
                    ],
                    "last": "Mooney",
                    "suffix": ""
                }
            ],
            "year": 1994,
            "venue": "Comput. Learn. Theory Nat. Learn. Syst",
            "volume": "3",
            "issn": "",
            "pages": "43--53",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "Machine invention of first-order predicates by inverting resolution",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Muggleton",
                    "suffix": ""
                }
            ],
            "year": 1988,
            "venue": "Proc. of 5th Machine Learning Conference",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Inductive Logic Programming",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Muggleton",
                    "suffix": ""
                }
            ],
            "year": 1991,
            "venue": "N. Gen. Comput",
            "volume": "8",
            "issn": "",
            "pages": "295--318",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Inverse Entailment and Progol",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Muggleton",
                    "suffix": ""
                }
            ],
            "year": 1995,
            "venue": "N. Gen. Comput",
            "volume": "13",
            "issn": "",
            "pages": "245--286",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Efficient induction of logic programs",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Muggleton",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Feng",
                    "suffix": ""
                }
            ],
            "year": 1990,
            "venue": "ALT (Tokyo)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "Collaborative dialogue in Minecraft",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Narayan-Chen",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Jayannavar",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Hockenmaier",
                    "suffix": ""
                }
            ],
            "year": 2019,
            "venue": "ACL",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Shop2: An HTN planning system",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Nau",
                    "suffix": ""
                },
                {
                    "first": "T.-C",
                    "middle": [],
                    "last": "Au",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Ilghami",
                    "suffix": ""
                },
                {
                    "first": "U",
                    "middle": [],
                    "last": "Kuter",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [
                        "W"
                    ],
                    "last": "Murdock",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Wu",
                    "suffix": ""
                }
            ],
            "year": 2003,
            "venue": "J. Artif. Intell. Res",
            "volume": "20",
            "issn": "",
            "pages": "379--404",
            "other_ids": {
                "DOI": [
                    "10.1613/jair.1141"
                ]
            }
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Knowledge-based probabilistic logic learning",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Odom",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Khot",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Porter",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Natarajan",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "AAAI",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "An Information-Based Approach to Integrating Empirical and Explanation-Based Learning",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "J"
                    ],
                    "last": "Pazzani",
                    "suffix": ""
                }
            ],
            "year": 1992,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Process planning by logic programming",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Preiss",
                    "suffix": ""
                },
                {
                    "first": "O",
                    "middle": [],
                    "last": "Shai",
                    "suffix": ""
                }
            ],
            "year": 1989,
            "venue": "Robot. Comput. Integr. Manufact",
            "volume": "5",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1016/0736-5845(89)90025-2"
                ]
            }
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Learning logical definitions from relations",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "R"
                    ],
                    "last": "Quinlan",
                    "suffix": ""
                }
            ],
            "year": 1990,
            "venue": "Mach. Learn",
            "volume": "5",
            "issn": "",
            "pages": "239--266",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Extensions of Inversion of Resolution Applied to Theory Completion",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Rouveirol",
                    "suffix": ""
                }
            ],
            "year": 1992,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Learning concepts by asking questions",
            "authors": [
                {
                    "first": "C",
                    "middle": [],
                    "last": "Sammut",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "B"
                    ],
                    "last": "Banerji",
                    "suffix": ""
                }
            ],
            "year": 1986,
            "venue": "Machine Learning: An Artificial Intelligence Approach",
            "volume": "2",
            "issn": "",
            "pages": "167--192",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "Combining explanation-based learning and artificial neural networks",
            "authors": [
                {
                    "first": "J",
                    "middle": [
                        "W"
                    ],
                    "last": "Shavlik",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "G"
                    ],
                    "last": "Towell",
                    "suffix": ""
                }
            ],
            "year": 1989,
            "venue": "ICML",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "Aleph: A Learning Engine for Proposing Hypotheses",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Srinivasan",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "Learning problem-solving concepts by reflecting on problem solving",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Stroulia",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [
                        "K"
                    ],
                    "last": "Goel",
                    "suffix": ""
                }
            ],
            "year": 1994,
            "venue": "ECML (Catania)",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "One-class classification: concept learning in the absence of counter-examples",
            "authors": [
                {
                    "first": "D",
                    "middle": [
                        "M J"
                    ],
                    "last": "Tax",
                    "suffix": ""
                }
            ],
            "year": 1984,
            "venue": "Commun. ACM",
            "volume": "27",
            "issn": "",
            "pages": "1134--1142",
            "other_ids": {}
        },
        "BIBREF32": {
            "ref_id": "b32",
            "title": "An overview of statistical learning theory",
            "authors": [
                {
                    "first": "V",
                    "middle": [
                        "N"
                    ],
                    "last": "Vapnik",
                    "suffix": ""
                }
            ],
            "year": 1999,
            "venue": "IEEE Trans. Neural Netw",
            "volume": "10",
            "issn": "",
            "pages": "988--999",
            "other_ids": {}
        },
        "BIBREF33": {
            "ref_id": "b33",
            "title": "Matching networks for one shot learning",
            "authors": [
                {
                    "first": "O",
                    "middle": [],
                    "last": "Vinyals",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Blundell",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Lillicrap",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Wierstra",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "NIPS",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF34": {
            "ref_id": "b34",
            "title": "Conditional kolmogorov complexity and universal probability",
            "authors": [
                {
                    "first": "P",
                    "middle": [
                        "M"
                    ],
                    "last": "Vit\u00e1nyi",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "Theor. Comput. Sci",
            "volume": "501",
            "issn": "",
            "pages": "93--100",
            "other_ids": {
                "DOI": [
                    "10.1016/j.tcs.2013.07.009"
                ]
            }
        },
        "BIBREF35": {
            "ref_id": "b35",
            "title": "Normalized information distance",
            "authors": [
                {
                    "first": "P",
                    "middle": [
                        "M"
                    ],
                    "last": "Vit\u00e1nyi",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [
                        "J"
                    ],
                    "last": "Balbach",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "L"
                    ],
                    "last": "Cilibrasi",
                    "suffix": ""
                },
                {
                    "first": "Li",
                    "middle": [],
                    "last": "",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "Information Theory and Statistical Learning",
            "volume": "",
            "issn": "",
            "pages": "45--82",
            "other_ids": {}
        },
        "BIBREF36": {
            "ref_id": "b36",
            "title": "Low-shot learning from imaginary data",
            "authors": [
                {
                    "first": "Y.-X",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Girshick",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Hebert",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Hariharan",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "CVPR",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF37": {
            "ref_id": "b37",
            "title": "Knowledge-guided genetic algorithm for input parameter optimisation in environmental modelling",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Wendt",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Cort\u00e9s",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Margalef",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "Proc. Comput. Sci",
            "volume": "1",
            "issn": "",
            "pages": "1367--1375",
            "other_ids": {
                "DOI": [
                    "10.1016/j.procs.2010.04.152"
                ]
            }
        },
        "BIBREF38": {
            "ref_id": "b38",
            "title": "Geometric reasoning about mechanical assembly",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "H"
                    ],
                    "last": "Wilson",
                    "suffix": ""
                },
                {
                    "first": "J.-C",
                    "middle": [],
                    "last": "Latombe",
                    "suffix": ""
                }
            ],
            "year": 1994,
            "venue": "Artif. Intell",
            "volume": "71",
            "issn": "",
            "pages": "371--396",
            "other_ids": {
                "DOI": [
                    "10.1016/0004-3702(94)90048-5"
                ]
            }
        },
        "BIBREF39": {
            "ref_id": "b39",
            "title": "Evolutionary program induction directed by logic grammars",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "L"
                    ],
                    "last": "Wong",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Leung",
                    "suffix": ""
                }
            ],
            "year": 1997,
            "venue": "Evol. Comput",
            "volume": "5",
            "issn": "",
            "pages": "143--180",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Concept L (base = 4, height = 5), described as composition of a Tower and a Row.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "(s) : \u2212[Height(s, h s ), Base(s, w s ), Contains(s, a), Contains(s, b), Row(a), Tower(b), Width(a, w a ), Height(b, h b ), Equal(w s , w a ), Sub(h b , h s , 1), SpRel(b, a, \u2032\u2032 NWTop \u2032\u2032 )] [Height(s, h s ), Base(s, w s ), Contains(s, a), Contains(s, b), Row(a), Tower(b), Width(a, w a ), Height(b, h b ), Equal(h s , h b ), Sub(w a , w s , 1), SpRel(b, s, \u2032\u2032 W \u2032\u2032 )]",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Highlevel overview of our Guided One-shot Concept Induction (GOCI) framework.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Instances of spatial concepts in Minecraft. (Left) Upright Tee, (Middle) Upright L, (Right) Orthogonal overlapping Ls.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "Learning curves for varying sample size to compare the sample efficiency of Guided One-shot Concept Induction (GOCI) and inductive logic program (ILP). Top two plots are with respect to structural composition domains-Minecraft & ChEBI and the bottom two are for planning domains: Assembly and Barman (best viewed in color).",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "biological role. We model the Benzene molecule prediction task as molecular-compositional concepts. The data have predicates such as SingleBond, DoubleBond, and HasAtom. 3. Assembly (planning domain): Assembly is a planning domain, where different mechanical structure concepts are compositions of different parts and resources. Input is a conjunction of ground literals indicating ground plan demonstration (assuming total ordering). 4. Barman (planning domain): A standard planning domain where a bartender is supposed to follow certain recipes and sequence of techniques to create cocktails. The different cocktails are decomposable concepts in this setting.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "Results for one-shot concept learning.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "MD and SN contributed equally to the ideation. MD and NR led the empirical evaluation. MD, NR, SN, and JD contributed nearly equally to the manuscript preparation. All authors contributed to the article and approved the submitted version. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "AUTHOR CONTRIBUTIONS"
        },
        {
            "text": "The authors acknowledge the support of members of STARLING lab for the discussions.This article was released as a preprint to arXiv as part of the StarAI 2020 workshop (Das et al., 2020) .",
            "cite_spans": [
                {
                    "start": 168,
                    "end": 186,
                    "text": "(Das et al., 2020)",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "ACKNOWLEDGMENTS"
        },
        {
            "text": "MD was employed by the company Samsung R&D Institute India -Bangalore.The remaining authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.Copyright \u00a9 2020 Das, Ramanan, Doppa and Natarajan. This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conflict of Interest:"
        }
    ]
}