{
    "paper_id": "82ad9268bdfd2c3f65a2961a6ee01411f440b383",
    "metadata": {
        "title": "Phase Portraits of Bi-dimensional Zeta Values",
        "authors": [
            {
                "first": "Olivier",
                "middle": [],
                "last": "Bouillot",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Gustave Eiffel University",
                    "location": {
                        "addrLine": "Marne-la-Vall\u00e9e",
                        "country": "France"
                    }
                },
                "email": "olivier.bouillot@u-pem.fr"
            }
        ]
    },
    "abstract": [
        {
            "text": "In this extended abstract, we present how to compute and visualize phase portraits of bi-dimensional Zeta Values. Such technology is useful to explore bi-dimensional Zeta Values and in long-term quest to discover a 2D-Riemann hypothesis.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "To reach this goal, we need two preliminary steps:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "\u2022 the notion of phase portraits and a general tool to visualize phase portrait based on interactive Jupyter widgets. \u2022 the ability to compute numerical approximations of bi-dimensional Zeta values, using mpmath, a Python library for arbitrary-precision floating-point arithmetic. To this end, we develop a theory to numerically compute double sums and produce the first algorithm to compute bi-dimensional Zeta Values with complex parameters.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "The Riemann Zeta function \u03b6 and the bi-dimensional Zeta Values, also called 2D-Zeta Value, bizetas or double Zeta Values, are respectively defined by: \u03b6(s) = k>0 1 k s , for all s \u2208 C , e s > 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "(1)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Ze s1,s2 = k>l>0 1 k s1 l s2 , for all s 1 , s 2 \u2208 C , e s 1 > 1. e (s 1 + s 2 ) > 2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "(",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "It is well-known that these functions can be respectively meromorphically extended to C and C 2 (see [9] ). It is also conjectured that the zeros of the Riemann Zeta function be complex numbers with real part 1 2 : this is the Riemann hypothesis, stated by Riemann himself in 1859 in [10] . A nice long term quest is to discover the location of zeros of bi-dimensional Zeta Values.",
            "cite_spans": [
                {
                    "start": 101,
                    "end": 104,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 284,
                    "end": 288,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "This quest needs first a tool to visualize a representation of a function f defined over (a part of) C and valued in C, such that looking for zeros of f becomes easy.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Constructing a graphical representation of a function f : R \u2212\u2192 R is quite easy, we just need a 2-dimensional space. However, constructing the graph of a function f : C \u2212\u2192 C is not so simple because we need a 4-dimensional space. In particular, this implies that most of us have difficulties visualizing such a graph. The first objective of this note is to review how to read and construct phase portraits, which are heat maps where colors encode simultaneously phase and modulus (see Sect. 2).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Let us notice that there already exists a tool, developed by Elias Wegert in Matlab (see [12] ), to represent phase portraits of complex functions. In particular, it has been used to explore many functions and illustrate a first course on complex analysis (see [13] ). Unfortunately, this tool computes a lot of values to produce the desired representation and does not save them. So, research the localization of the zeros of a function with it is necessarily time-consuming. In other words, it is not an efficient tool for our purpose.",
            "cite_spans": [
                {
                    "start": 89,
                    "end": 93,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 261,
                    "end": 265,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Nevertheless, Jupyter widgets (see [14] ) are wonderful tools that easily enable us to construct a general phase portrait visualization tool, where the input is just a complex function. The author has implemented such a widget (see [1] ) where, with interactivity, the user can change the visualization window, the number of pixels used in a unit square, reuse already computed values or store new ones in a database, save pictures or see information on how the computations progress.",
            "cite_spans": [
                {
                    "start": 35,
                    "end": 39,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 232,
                    "end": 235,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "This widget can be extended to visualize phase portraits of functions with two complex variables. Visualizing such a function is nothing else than drawing a representation of the partial functions and move inside them. According to this, the author has implemented a second interactive Jupyter widget to realize this walk.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "To benefit from the power of the second widget, we need to have an efficient algorithm to numerically compute bi-dimensional Zeta Value. This is the second preliminary step to look for a 2D-Riemann hypothesis.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Nowadays, researchers can compute multiple zeta values (and in particular bizetas), with integer parameters, with as many digits as we wanted (see [3] ). But, to the best of the author's knowledge, nothing is known to compute these numbers with complex parameters in any length. Therefore, the last objective of this note is to present how a double sum can be numerically computed, and apply the developed method to bizetas. This method is based on a generalization of a poorly known Lindel\u00f6f formula explaining how to compute the sum of the values at integers of a class of holomorphic functions. Section 3 contains a presentation of Lindel\u00f6f formula, as well as a comparison between three methods to compute evaluations of the Riemann Zeta function.",
            "cite_spans": [
                {
                    "start": 147,
                    "end": 150,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Lindel\u00f6f formula generalization to double sum, and therefore to bizetas, is discussed in Sect. 4. One could notice that Lindel\u00f6f formula can be written as an integral. Therefore, we generalize the process to compute double sums using double integrals and, then, expansions of these integrals. Of course, this technic is still valid for multiple sums and gives, in theory, an algorithm to compute multiple Zeta Value in any length, with complex parameters! Finally, once the Jupyter visualization widget of a two complex variables function is available and the computational machinery is developed, we can explore phase portraits of convergent 2D-Zeta Values, or linear combinations of these numbers, to find out some zeros. Therefore, the last necessary point is to be able to numerically compute the analytic extension of bizetas. Only then, using our Jupyter widget, a Riemann hypothesis for bizetas could be conjectured.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In this section, we review how to construct and read phase portraits. We will see how to find zeros and poles of a function, but also points (called color saddle) where the derivative becomes null. References for this section are [11] and [13] .",
            "cite_spans": [
                {
                    "start": 230,
                    "end": 234,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 239,
                    "end": 243,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Drawing Function from C to C: Phase Portraits"
        },
        {
            "text": "Drawing a function R 2 \u2212\u2192 R is typically achieved through 2D heat maps (see [15] ) or 3D plots. For a function f : C \u2212\u2192 C, these approaches may be used to visualize the modulus; that is analytic landscapes. We could also use such plots to visualize the phase of f . However, many applications like ours require to visualize the modulus and the phase at the same time to visualize poles and zeroes. In addition, such visualization should highlight simultaneously very small modulus (near zeroes) and huge modulus (near poles).",
            "cite_spans": [
                {
                    "start": 76,
                    "end": 80,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Analytic Landscapes vs Phase Portraits"
        },
        {
            "text": "Here come into play phase portraits: heat maps where the color of a pixel z encodes simultaneously the phase of f (z) (by giving color to its values) and the (logarithm of the) modulus (by using different brightness). Eventually, the modulus can then be emphasized by adding contours. The HSL-representation of colors is an alternative representation of the RGB color model and can be seen as a cylindrical geometry (see Fig. 1 ). Its angular dimension, the hue, starts at the red color at 0 \u2022 , passing through the green color at 120 \u2022 and the blue one at 240 \u2022 to finally come back to red at 360 \u2022 . The lightness, i.e. the central vertical axis, describes the gray colors, ranging from black at the bottom of the cylinder with lightness or value 0 to white at the top of the cylinder with lightness or value 1.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 421,
                    "end": 427,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Analytic Landscapes vs Phase Portraits"
        },
        {
            "text": "A pixel of coordinates (x, y) is associated with a complex number z. Then, we find a color c related to the value f (z) = \u03c1e i\u03b8 using the HLS representation of colors. Therefore, the pixel (x, y) is colored by the color c. (See Fig. 2 ).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 228,
                    "end": 234,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Principle of Phase Portraits"
        },
        {
            "text": "Let us mention that zeros and poles play an important role when visualizing a phase portrait. Using the logarithm of the modulus, instead of the modulus itself, allows us to have a smoother graphic representation and also to have symmetrical behavior between zeros and poles, as well as symmetric visualization of small and big values.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Principle of Phase Portraits"
        },
        {
            "text": "Moreover, to encounter all the possible values of the modulus, we compactify the extended real number line [\u2212\u221e; +\u221e] to [\u22121; 1], using Consequently, a pixel of coordinates (x, y), via its associated complex number z, is associated with the color obtained in the HSL model by:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Principle of Phase Portraits"
        },
        {
            "text": "In particular, positive real numbers appear reddish in a phase portrait when negative real numbers appear cyan. Moreover, a zero is a black point while a pole is a white point.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Principle of Phase Portraits"
        },
        {
            "text": "Let us notice that the color map can be, in principle, adapted to colorblind people provided that the inherent periodicity of color be fulfilled.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Principle of Phase Portraits"
        },
        {
            "text": "The phase portraits not only show the location of zeros and poles of a function but also reveal their multiplicity. As an example, Fig. 3a shows a zero with multiplicity three. It is easily recognizable: z 3 travels 3 times around 0 when z moves once around 0 along a small circle. We emphasize that the colors met are in the reverse order for zeros and poles (compare the pole 0 to the three zeros located in cube root of \u22122 in Fig. 3b ). Moreover, it can be shown that the points where f (z) = 0, with f (z) = 0, are where the isochromatic lines meet. Such points are called color saddles. See Fig. 3b where the color saddles are located at cube roots of \u22122. See also Fig. 3c. ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 131,
                    "end": 138,
                    "text": "Fig. 3a",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 429,
                    "end": 436,
                    "text": "Fig. 3b",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 596,
                    "end": 603,
                    "text": "Fig. 3b",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 670,
                    "end": 678,
                    "text": "Fig. 3c.",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Easy Properties to Read on Phase Portraits"
        },
        {
            "text": "In most cases, only a few significant digits (typically five), need to be known to plot phase portraits of a function f : C \u2212\u2192 C. In particular, we do not assume that the underlying system can do arbitrary precision computations.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Necessary Precision to Choose Exact Color"
        },
        {
            "text": "We review here how to assess the required precision and how to achieve that precision.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Necessary Precision to Choose Exact Color"
        },
        {
            "text": "If \u03b5 L and \u03b5 H denote the absolute error of L and H, the RGB components of the associated color are fixed as soon as we have:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Necessary Precision to Choose Exact Color"
        },
        {
            "text": ". More precisely, we seek to have: \u03b5 L \u2264 2040 \u22121 and \u03b5 H \u2264 20 \u22121 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Necessary Precision to Choose Exact Color"
        },
        {
            "text": "If we assume that Re f (z) and Im f (z) are known up to \u03b5 > 0, then, |f (z)| is known up to 2\u03b5. If |f (z)| \u2265 1, then we can prove that \u03b5 L \u2264 2\u03b5. If |f (z)| < 1, Consequently, if f (z) is computed up to \u03b5 = 10 \u22124 and satisfied |f (z)| \u2265 0.01, we have \u03b5 L \u2264 2040 \u22121 for all cases and the parameter L is well-approximated.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Necessary Precision to Choose Exact Color"
        },
        {
            "text": "On the H-side, if we assume that R = Re f (z) and I = Im f (z) are known up to \u03b5 > 0 and satisfied |R|, |I| \u2265 \u03b1 for a positive real number \u03b1, then, we can show that \u03b5 H \u2264 \u03b5 \u03b1 \u22121 + (\u03b1 \u2212 \u03b5) \u22121 . In particular, for \u03b1 = 5 \u00b7 10 \u22123 and \u03b5 = 10 \u22124 , we thus have \u03b5 H \u2264 20 \u22121 and the parameter H is well-approximated.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Necessary Precision to Choose Exact Color"
        },
        {
            "text": "Consequently, in most cases, we compute the function f : C \u2212\u2192 C up to 10 \u22124 . However, in the other cases, i.e. when |f (z)| < 0.01, or |Re f (z)| < 5 \u00b7 10 \u22123 or |Im f (z)| < 5 \u00b7 10 \u22123 , then we will compute again f (z) up to a smaller precision, e.g. \u03b5 = 10 \u22125 or 10 \u22126 , in order to finaly have \u03b5 L \u2264 2040 \u22121 and \u03b5 H \u2264 20 \u22121 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Necessary Precision to Choose Exact Color"
        },
        {
            "text": "The next step is to create a tool to visualize phase portraits of a given complex function C \u2212\u2192 C.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "Let us remind such a tool was already available in Matlab (see [12] ). However, for our long-term quest of a 2D Riemann hypothesis, we need a tool where the visualization window of our phase portraits can be easily modified.",
            "cite_spans": [
                {
                    "start": 63,
                    "end": 67,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "According to the official website, a \"Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text\" (see also [7] about Jupyter). Moreover, interactive widgets like Sliders, Buttons or Images are now available in Jupyter (see [14] ).",
            "cite_spans": [
                {
                    "start": 215,
                    "end": 218,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 331,
                    "end": 335,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "Consequently, the author has implemented an interactive Jupyter widget for general visualization of phase portraits (see [1] ). Figure 4 is a graphic representation of its usage. For examples of outputs, let us note that all the phase portraits shown in this paper have been constructed from this widget.",
            "cite_spans": [
                {
                    "start": 121,
                    "end": 124,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [
                {
                    "start": 128,
                    "end": 136,
                    "text": "Figure 4",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "The code of this interactive widget is already freely available in the following GitHub repository: https://github.com/tolliob/PhasePortrait. In particular, the interested reader will find in this repository an online usable Jupyter notebook. The widget can also be installed using the pip Unix command.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "The input of this widget is a complex function f : C \u2212\u2192 C. Interactivity allows the user to fix a visualization window by setting the left below and right upper corners. Once these corners fixed, the user can:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "launch the needed evaluations of the function f , or retrieve them; show the phase portrait of f in the desired window; save the produced image Then, the user can change the visualization window by going back to these steps.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "Another interactive Jupyter widget has also been implemented by the author. It aims to visualize phase portraits of two variables complex functions from its partial functions phase portraits. The input is a function f : C 2 \u2212\u2192 C, outputs are again phase portraits, alternatively of f (s 0 , \u00b7) and f (\u00b7, s 0 ). Interactivity allows the user to move a partial function to another one by moving the point s 0 to a close complex point, or to switch from a partial function to the other one. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Interactive Visualization of Phase Portraits for Jupyter Notebook"
        },
        {
            "text": "In this section, we present a poorly known formula due to Lindel\u00f6f (see [8] , chapter 3) which explains how to compute the sum of the values at integers of holomorphic functions. Then, we apply it to the Riemann Zeta Function and compare its performances to the Euler-Mac Laurin summation.",
            "cite_spans": [
                {
                    "start": 72,
                    "end": 75,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "Computation of the 1D-Zeta Value"
        },
        {
            "text": "However, we warn the reader that Lindel\u00f6f formula application to the Zeta function could not compete computation technics dedicated to the Zeta function, such that the Riemann-Siegel formula or the Odlyzko-Sch\u00f6nhage algorithm (see [5] for example). However, Eqs. (7) and (9) will prove that Lindel\u00f6f formula can be extended to the numerical computation of double sums, and so to the numerical computation of 2D-Zeta Values, while it seems nowadays impossible to adapt specific \u03b6 computational technics to 2D-Zeta Values.",
            "cite_spans": [
                {
                    "start": 231,
                    "end": 234,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Computation of the 1D-Zeta Value"
        },
        {
            "text": "Before giving the Lindel\u00f6f formula, we first emphasize a technical definition from Chapter 3, p. 54, of [8] . ",
            "cite_spans": [
                {
                    "start": 104,
                    "end": 107,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "On Lindel\u00f6f Formula"
        },
        {
            "text": "Now, exploring Chapter 3 of [8] , one can reconstruct the following theorem which gives an integral representation of sums of values of holomorphic functions. The proof is based on a clever use of the residuum principle. Nevertheless, the result is quite unknown. Theorem 1. (Lindel\u00f6f, 1905) Let m 0 > 1 2 be a real number, m a positive integer such that m \u2265 m 0 and f : \u03a9 m0\u2212 1 2 \u2212\u2192 C be an holomorphic function over \u03a9 m0\u2212 1 2 satisfying \u2022 the 1D-Lindel\u00f6f hypothesis ;",
            "cite_spans": [
                {
                    "start": 28,
                    "end": 31,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 275,
                    "end": 291,
                    "text": "(Lindel\u00f6f, 1905)",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "On Lindel\u00f6f Formula"
        },
        {
            "text": "\u2022 \u03bd\u2265m f (\u03bd) is a convergent series.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "On Lindel\u00f6f Formula"
        },
        {
            "text": "The Lindel\u00f6f formula (5) can be used to numerically compute sums, expanding its second integral using Taylor expansion with integral remainder: this gives us a Lindel\u00f6f's Euler-Maclaurin like formula.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "On Lindel\u00f6f Formula"
        },
        {
            "text": "To produce a phase portrait of the Riemann Zeta function \u03b6, we will compute the values \u03b6(s) for s in a grid up to 10 \u22124 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Application to the Riemann Zeta Function"
        },
        {
            "text": "First, the Euler-Maclaurin summation process applies (see [2] ).",
            "cite_spans": [
                {
                    "start": 58,
                    "end": 61,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Application to the Riemann Zeta Function"
        },
        {
            "text": "Moreover, the functions f s : z \u2212\u2192 e i\u03c0z z \u2212s satisfy the 1D-Lindel\u00f6f hypothesis for all complex numbers s such that es > 0. So, Eq. (5) can be used, its second integral being numerically computed with the mpmath Python library.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Application to the Riemann Zeta Function"
        },
        {
            "text": "Equation (6) can also be used. We just have to find the best choice of triplet (m 0 , m, K). Note that the bigger K is, the longest the computation, due to the computation of the successive derivative which concentrates most of the multiplications. However, the size of m also intervenes.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Application to the Riemann Zeta Function"
        },
        {
            "text": "This allows us to compute \u03b7(s) = n>0 (\u22121) n n \u2212s and \u03b6(s), for all s \u2208 \u03a9 1 2 . Now, classical tools can be used to compute \u03b6 on the whole punctured complex plane C \u2212 {1} (reflection formula, analytic continuation process; see [4] ). Using the Jupyter widget [1] , this generates the phase portraits available in Figs. 5a-5c.",
            "cite_spans": [
                {
                    "start": 226,
                    "end": 229,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 258,
                    "end": 261,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Application to the Riemann Zeta Function"
        },
        {
            "text": "Figures 6a to 6d show some comparisons between the three previous methods (i.e. the Euler-Maclaurin summation process, the Lindel\u00f6f formula (5) and the Lindel\u00f6f Euler-Maclaurin like formula given by Eq. (6)).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Comparaison of the Three Methods"
        },
        {
            "text": "First, we can see that the integral Lindel\u00f6f method is the most stable method, even if there are some discontinuities (see Fig. 6c and 6d ). This is explained by the different numerical integration methods used by the mpmath Python library.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 123,
                    "end": 137,
                    "text": "Fig. 6c and 6d",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "Comparaison of the Three Methods"
        },
        {
            "text": "According to these Figures, we see that to have numerous exact digits, the bigger |s| is, the more efficient the Lindel\u00f6f Euler-Maclaurin-like method is.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Comparaison of the Three Methods"
        },
        {
            "text": "Finally, for the three methods, we observe that the computation gets longer as we want more exact digits. This increase is correlated to the modulus of |s|. It turns out that Lindel\u00f6f Euler-Maclaurin-like formula is the method with the slower computation time increase relatively to the required number of digits in the computation of \u03b6(s). ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Comparaison of the Three Methods"
        },
        {
            "text": "To the best of the author's knowledge, no one was able to numerically compute a convergent Multiple Zeta Values (MZV) with complex exponents so far. The only known algorithm was dedicated to MZV with integers parameters: it uses binomial expansions where exponents are related to the MZV parameters (see [3] ).",
            "cite_spans": [
                {
                    "start": 304,
                    "end": 307,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "Computation of Convergent Two Dimentional Multiple Zeta Values by a 2D-Lindel\u00f6f Formula"
        },
        {
            "text": "To produce and explore phase portraits of 2D-Zeta Values, we nevertheless need, first, to be able to compute these numbers, then to compute them efficently because producing phase portraits of 2D-Zeta Values could easily require millions of different evaluations. This difficulty is, of course, the cornerstone of our quest for a 2D-Riemann hypothesis.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Computation of Convergent Two Dimentional Multiple Zeta Values by a 2D-Lindel\u00f6f Formula"
        },
        {
            "text": "Hopefully, one of the most important advantages of Lindel\u00f6f formulas (5) and (6) over Euler-Maclaurin formula is that it could be extended to higher dimensions. Consequently, in this section, we will present the first general method to compute double sums and then apply it to produce the first bi-dimensional Zeta Values with complex exponents computing algorithm.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Computation of Convergent Two Dimentional Multiple Zeta Values by a 2D-Lindel\u00f6f Formula"
        },
        {
            "text": "Efficientness will not be discussed here for technical reasons, as well as the upper bound of the error term in the computation of a double sum. f s1,s2 satisfies the 2D Lindel\u00f6f hypothesis, while its partial functions satisfy the 1D-Lindel\u00f6f hypothesis. Therefore, we can use the decomposition (11) to compute the double Zeta Value (see Fig. 8a and 8b) .",
            "cite_spans": [
                {
                    "start": 295,
                    "end": 299,
                    "text": "(11)",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [
                {
                    "start": 338,
                    "end": 353,
                    "text": "Fig. 8a and 8b)",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "Computation of Convergent Two Dimentional Multiple Zeta Values by a 2D-Lindel\u00f6f Formula"
        },
        {
            "text": "According to Fig. 8a , we could conjecture that there is a pole near (s 1 , s 2 ) = (1, 0). According to [9] , we know exactly the localization of the poles of double Zeta values and (1, 0) is actualy a pole. Up to long computations, we now are able to find out zeros of convergent double Zeta Values. ",
            "cite_spans": [
                {
                    "start": 105,
                    "end": 108,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [
                {
                    "start": 13,
                    "end": 20,
                    "text": "Fig. 8a",
                    "ref_id": "FIGREF8"
                }
            ],
            "section": "Computation of Convergent Two Dimentional Multiple Zeta Values by a 2D-Lindel\u00f6f Formula"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Phaseportrait, a github repository",
            "authors": [
                {
                    "first": "O",
                    "middle": [],
                    "last": "Bouillot",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Calcul des valeurs de la fonction z\u00eata de riemann en multipr\u00e9cision",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Cohen",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Olivier",
                    "suffix": ""
                }
            ],
            "year": 1992,
            "venue": "C.R. Acad. Sci. Paris S\u00e9r I Math",
            "volume": "314",
            "issn": "",
            "pages": "427--430",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Fast evaluation of multiple zeta sums",
            "authors": [
                {
                    "first": "R",
                    "middle": [
                        "E"
                    ],
                    "last": "Crandall",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "Math. Comp",
            "volume": "67",
            "issn": "223",
            "pages": "1163--1172",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Riemann's Zeta Function",
            "authors": [
                {
                    "first": "H",
                    "middle": [
                        "E"
                    ],
                    "last": "Edwards",
                    "suffix": ""
                }
            ],
            "year": 1974,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Numerical evaluation of the riemann \u03b6-function",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Gourdon",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Sebah",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "mpmath: a Python library for arbitrary-precision floatingpoint arithmetic (version 0.18)",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Johansson",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Jupyter notebooks -a publishing format for reproducible computational workflows",
            "authors": [
                {
                    "first": "T",
                    "middle": [],
                    "last": "Kluyver",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Positioning and Power in Academic Publishing: Players, Agents and Agendas",
            "volume": "",
            "issn": "",
            "pages": "87--90",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "calcul des r\u00e9sidus et ses applications\u00e0 la th\u00e9orie des fonctions. Gauthier-Villars",
            "authors": [
                {
                    "first": "Le",
                    "middle": [],
                    "last": "Lindel\u00f6f",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [
                        "L"
                    ],
                    "last": "",
                    "suffix": ""
                }
            ],
            "year": 1905,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Analytic properties of multiple zeta functions and certain weighted variants, an elementary approach",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Mehta",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Saha",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [
                        "K"
                    ],
                    "last": "Viswanadham",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "J. Number Theor",
            "volume": "168",
            "issn": "",
            "pages": "487--508",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "\u00dcber die anzahl der primzahlen unter einer gegebenen gr\u00f6sse",
            "authors": [
                {
                    "first": "B",
                    "middle": [],
                    "last": "Riemann",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "Mon. Not. Berlin Akad",
            "volume": "2",
            "issn": "",
            "pages": "671--680",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Phase plots of complex functions: a journey in illustration",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Semmler",
                    "suffix": ""
                },
                {
                    "first": "E",
                    "middle": [],
                    "last": "Wegert",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Notices Am. Math. Soc",
            "volume": "58",
            "issn": "",
            "pages": "768--780",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Complex function explorer",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Wegert",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Visual Complex Functions. An Introduction with Phase Portraits",
            "authors": [
                {
                    "first": "E",
                    "middle": [],
                    "last": "Wegert",
                    "suffix": ""
                }
            ],
            "year": 2012,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-0348-0180-5"
                ]
            }
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Jupyter widgets community: ipywidgets, a github repository",
            "authors": [],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "The history of the cluster heat map",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Wilkinson",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Friendly",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "Am. Stat",
            "volume": "63",
            "issn": "",
            "pages": "179--184",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "The HSL cylinder Source:Wikipedia, \"HSL and HSV\" (Colorfigure online)",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Color coding of pixels to draw phase portraits of a complex function f",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Examples of easy properties seen on phase portraits",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Interactive Jupyter widget to construct phase portraits",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Let m 0 > 1 2 be a real number. Let also \u03a9 s be the set defined for all real number s by \u03a9 s = {z \u2208 C , Re z \u2265 s}. A holomorphic function f : \u03a9 m0\u2212 1 2 \u2212\u2192 C satisfies the 1D-Lindel\u00f6f hypothesis if:",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "[\u221240; 20] + i[\u221240; 40] (b) On [\u221218; 14] + i[\u221210; 10] (c) Near the first non trivial zero z1 \u2248 0.5 + 14.Three phase portraits of the Rieman Zeta function \u03b6 (a) \u03b6(n) for n \u2208 [[2; 50]] up to 10 \u22124 (b) \u03b6(2 + i im) up to 10 \u221250",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Comparaison between three methods to compute Zeta Values",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "the 2D-Lindel\u00f6f Euler-Maclaurin-like formula.Let us consider the function f s1,s2 : (z 1 , z 2 ) \u2212\u2192 (z 1 + 1) \u2212s2 (z 1 + z 2 + 2) \u2212s1 . Decomposition of N 2 onto 6 parts to compute a double sum",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "= \u221210 k = \u22129 k = \u22128 k = \u22127 k = \u22126 k = \u22125 k = \u22124 k = \u22123 k = \u22122 k = \u22121Expansion of phase portrait of partial functions of double Zeta values",
            "latex": null,
            "type": "figure"
        }
    },
    "back_matter": [
        {
            "text": "The author would like to warmly thank the reviewers for their time and effort devoted to improving the quality of this work.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Acknowledgment."
        },
        {
            "text": "Theorem 2. (Lindel\u00f6f, 1905) Let m 0 , m and f be like in Theorem 1. Then:Coefficients in (6) are nothing else than the Taylor coefficients of z \u2212\u2192 x 2 sinh z 2. So, in a certain sens, Eq. (6) means that:While in Lindel\u00f6f's days, it was not necessary to have a precise estimate of the approximation error, we now need it due to the existence of computers and their immense associated computing power. If we denote by R K,m (f ) the Lindel\u00f6f remainder in Eq. (6), i.e. the difference between the right hand side and the left hand side of Eq. (6), then we have the following upper bound:",
            "cite_spans": [
                {
                    "start": 11,
                    "end": 27,
                    "text": "(Lindel\u00f6f, 1905)",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 89,
                    "end": 92,
                    "text": "(6)",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "annex"
        },
        {
            "text": "First, we extend the 1D-Lindel\u00f6f hypothesis to the bi-dimensional case:Definition 2. We say that a function f : \u03a9 m01 \u00d7 \u03a9 m02 \u2212\u2192 C satisfies the 2D-Lindel\u00f6f hypothesis when: l) is a well-defined function over \u03a9 m01 satisfying the 1D-Lindel\u00f6f hypothesis;Then, using an iteration of (7), we can prove the following: Let us also suppose that ) is a convergent double series. Then:for all integers K.Some of the integrals in Eq. (10) could be explicitely computed; some could not. So, to obtain numerical approximation, we use the mpmath Python library for arbitrary-precision floating-point arithmetic (see [6] ).",
            "cite_spans": [
                {
                    "start": 604,
                    "end": 607,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [
                {
                    "start": 174,
                    "end": 176,
                    "text": "l)",
                    "ref_id": null
                },
                {
                    "start": 339,
                    "end": 340,
                    "text": ")",
                    "ref_id": null
                }
            ],
            "section": "On the 2D-Lindel\u00f6f Formula"
        },
        {
            "text": "Now, we are able to compute a double sum over N 2 by cutting N 2 onto six parts (see Fig. 7 ): f (k, l). (11) ",
            "cite_spans": [
                {
                    "start": 105,
                    "end": 109,
                    "text": "(11)",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [
                {
                    "start": 85,
                    "end": 91,
                    "text": "Fig. 7",
                    "ref_id": null
                }
            ],
            "section": "Computation of a Double Sum over N 2"
        }
    ]
}