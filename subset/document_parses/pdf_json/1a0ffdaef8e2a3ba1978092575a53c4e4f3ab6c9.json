{
    "paper_id": "1a0ffdaef8e2a3ba1978092575a53c4e4f3ab6c9",
    "metadata": {
        "title": "Privacy preserving local analysis of digital trace data: A proof-of-concept",
        "authors": [
            {
                "first": "Laura",
                "middle": [],
                "last": "Boeschoten",
                "suffix": "",
                "affiliation": {},
                "email": "l.boeschoten@uu.nl"
            },
            {
                "first": "Adri\u00ebnne",
                "middle": [],
                "last": "Mendrik",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Emiel",
                "middle": [],
                "last": "Van Der Veen",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Jeroen",
                "middle": [],
                "last": "Vloothuis",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Haili",
                "middle": [],
                "last": "Hu",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Roos",
                "middle": [],
                "last": "Voorvaart",
                "suffix": "",
                "affiliation": {},
                "email": ""
            },
            {
                "first": "Daniel",
                "middle": [
                    "L"
                ],
                "last": "Oberski",
                "suffix": "",
                "affiliation": {},
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "We present PORT, a software platform for local data extraction and analysis of digital trace data. While digital trace data collected by private and public parties hold a huge potential for social-scientific discovery, their most useful parts have been unattainable for academic researchers due to privacy concerns and prohibitive API access. However, the EU General Data Protection Regulation (GDPR) grants all citizens the right to an electronic copy of their personal data. All major data controllers, such as social media platforms, banks, online shops, loyalty card systems and public transportation cards comply with this right by providing their clients with a 'Data Download Package' (DDP). Previously, a conceptual workflow was introduced allowing citizens to donate their data to scientific-researchers. In this workflow, citizens' DDPs are processed locally on their machines before they are asked to provide informed consent to share a subset of the processed data with the researchers. In this paper, we present the newly developed software PORT that implements the local processing part of this workflow, protecting privacy by shielding sensitive data from any contact with outside observers -including the researchers themselves. Thus, PORT enables a host of potential applications of social data science to hitherto unobtainable data.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "The General Data Protection Regulation (GDPR) grants all natural persons within the EU the right to an electronic copy of their personal data as collected by data controllers upon request. All major data controllers, such as social media platforms, banks, online shops, loyalty card systems and public transportation cards comply with this right by providing their clients with a 'Data Download Package' (DDP). However, as only data subjects have the right to receive these DDPs, these digital traces can up until now not be accessed or used for scientific research.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Recently, a workflow was introduced that allows researchers to analyse the digital traces found in these DDPs while preserving the privacy of the research participant Boeschoten et al. (2020) . In this workflow, a research participant downloads the DDP of interest onto their personal device. Next, a local processing step extracts only the features relevant for the research project from the DDP. After inspection and informed General Data",
            "cite_spans": [
                {
                    "start": 167,
                    "end": 191,
                    "text": "Boeschoten et al. (2020)",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Protection Regulation (GDPR) A legislation in the EU that (among other things) grants natural persons the right to receive their personal data from data controllers in a machine readable format Data Controller",
            "cite_spans": [
                {
                    "start": 22,
                    "end": 28,
                    "text": "(GDPR)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "An entity, such as a tech company or public authority, that collects data on natural persons and is therefore required by the GDPR to provide that data in a DDP to the participant Data Download Package (DDP)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "A machine readable electronic file containing the personal data requested from the data controller by the participant Participant A person who is asked by the researcher to donate data from their DDP to the study Researcher A scientist who needs participant data encased in DDPs to answer a (socialscientific) research question Table 1 : An overview and explanation of the key actors when digital trace data is donated for research consent by the participant, these extracted features are then sent to the researcher who can then perform the analysis of interest.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 328,
                    "end": 335,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "In this paper, we introduce a proof of concept of the software that allows the local extraction step to take place in this workflow. More specifically, it is developed in such a way that researchers only need to share a URL with the participants. The local extraction step then takes place locally on the device of the participant within the web browser, and the extracted features are only shared with the researcher after consent is provided by the participant. In Table 1 , an overview of the main actors involved in the workflow can be found.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 467,
                    "end": 474,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "In the first section, we briefly explain the steps of the recently introduced workflow for data donation. Next, we describe how the software works broadly, and discuss its technical specifications. Third, we illustrate the use of the software with two applications. Fourth, we discuss plans for future work and guidelines for ethical use, followed by a conclusion and discussion.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "In this section, we first describe step-by-step the procedure as perceived by the participant. We then describe in more detail the software that has been used to enable this procedure. We have named the software 'PORT', as it serves as a 'port' through which data is transferred from participants to researchers. We also describe the arrangements implemented to stimulate an open scientific approach by researchers when using PORT.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Methods"
        },
        {
            "text": "When a participant is invited to participate in a research project that uses PORT to analyze digital trace data, the first step is always that the participant requests the DDP in which the researcher is interested from the respective data controller. It is the responsibility of the researcher to provide the participant with a clear, detailed and accurate description of how the DDP of interest can be requested, although Step-by-step illustration of the workflow that allows for a privacy preserving analysis of Data Download Package, locally at the device of a research participant. many of the larger data controller companies already provide these descriptions on their websites 4 5 6 7 8 . The amount of time it takes for the participant to actually receive the requested DDP in practice varies between receiving it directly to taking a couple of weeks, depending on the size of the DDP, and the extent to which the data controller has automated the process.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Workflow"
        },
        {
            "text": "In the second step, the participant downloads the DDP to their own device. The way the participant receives the DDP can differ by data controller. In some cases, a file can be downloaded directly, and is stored locally on the device of the participant. At the time of writing, many banks, online stores, energy providers or public transport companies provide this option. However, in most cases, the preparation of the DDP by the data controller takes some time and the participants receive an e-mail or a notification within the platform of the data controller containing a download link. Google provides an option to place the latest version of the DDP on the participant's Google Drive and allows the user to update the DDP automatically.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Workflow"
        },
        {
            "text": "After the DDP of interest is downloaded and stored on the device of the participant, the third step is for the participant to visit the researchers' project website at PORT.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Workflow"
        },
        {
            "text": "In step four, PORT extracts relevant information from the DDP; it does so locally and without communication with a remote server. In the next subsection, more detail regarding this procedure is provided. Note that up until this moment no information is shared with the researcher yet. Once PORT's extraction algorithm is finished, it it displays the extracted information and requests consent from the participant to share this with the researchers. If the participant consents, the extracted information is then encrypted and sent to the researcher for analysis.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Workflow"
        },
        {
            "text": "Once the researcher has obtained the extracted data of all participants, analyses can be performed to answer the research questions of interest in the fifth step.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Workflow"
        },
        {
            "text": "In the workflow, the extraction of relevant features of the digital trace data (the fourth step in Figure 1 ) is crucial. We ensured that this step takes place locally at the device of the participant, thereby preserving the privacy of the participant, by building PORT. PORT is a WebAssembly application that can run within browsers on both PCs and mobile devices. Once the DDP is selected, PORT runs a script in the browser that locally extracts the data from the DDP that is relevant for the researchers (step 4.2). The data extraction script consists of code written by the researcher in Python and it is tailored to the specific research question under investigation, and to the specific DDP that is used to answer this question. In the next section, this idea is illustrated using several scripts and different DDPs.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 99,
                    "end": 107,
                    "text": "Figure 1",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "Software"
        },
        {
            "text": "PORT makes use of Pyodide Pyodide (2021), an open-source library that enables running Python in a web browser through having the Python interpreter compiled to WebAssembly WebAssembly (2021).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Software"
        },
        {
            "text": "WebAssembly is an open standard for portable binary-code format, enabling high-performance applications on the web. Thus, the custom Python scripts will run in a safe, sandboxed environment, while the browser's security and permission policies are enforced. When the participant clicks the \"process\" button in PORT, the DDP is sent to the WebWorker. Then the JavaScript code presents the DDP through the Pyodide bridge API as a regular Python file object. A function in the Python code is invoked which receives this file object and interacts with it.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Software"
        },
        {
            "text": "Once the function has extracted the relevant data it returns the extracted data accompanied by information about what exactly has been extracted. This data is then converted by the Pyodide bridge to Figure 2 : Software. A more detailed illustration of the steps taken by a research participant during the local processing phase of the proposed workflow, which can be performed using the PORT software.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 199,
                    "end": 207,
                    "text": "Figure 2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "Software"
        },
        {
            "text": "JavaScript object types. The JavaScript within the WebWorker creates an event in Java and notifies the primary JavaScript. This JavaScript code then updates the browser domain Mozilla (2021) to present the extracted data to the participant (step 4.3). Conceptually, this step can be considered as if a small system environment is built within the browser, completely separated from the device on which it is run. This is a safe procedure as the environment is able to process the data that is uploaded in the environment, but is not able to access anything other present on the device. In addition, this system environment is destroyed as soon as the browser page closes.",
            "cite_spans": [
                {
                    "start": 176,
                    "end": 190,
                    "text": "Mozilla (2021)",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Software"
        },
        {
            "text": "In the final step (step 4.4), the participant inspects the extracted data and can provide informed consent for sharing this data with the researchers by clicking the respective button. If the participant has freely chosen to do so, the extracted data is shared with the researchers over the internet; note that this is the first communication of the participant's device with a server controlled by the researchers. Alternatively, this moment can also be used to decline consent. PORT currently uses an Elixir, Phoenix server hosted by Eyra B.V.. For future use by applied researchers, integration with preferred online repositories or servers hosted by academic institutions is also possible, allowing for the extracted data to be send directly to the location of interest. If this is possible and how the connection looks like in practice, depends on the institution receiving the data. We provide guidelines and best practices in the subsequent section.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Software"
        },
        {
            "text": "In this section, we illustrate how PORT can be used to extract features from DDPs to collect digital trace data for answering research questions. We provide two applications, in which we select a suitable DDP and develop a Python script that extracts the information needed from the DDP. We initially developed the script by inspecting our personal DDPs. Based on the data structures found here, we simulated a DDP. The simulated DDP is then used to illustrate how PORT is able to locally extract features from it. Next, PORT shows the extracted features, after which informed consent can be provided. After informed consent, the extracted features are send to the repository of the study, currently at the server of Eyra B.V.. The simulated DDPs, the code used to simulate the DDPs and the Python scripts integrated in PORT for these studies can be found at https://github.com/UtrechtUniversity/port-poc. Because we used simulated DDPs, the steps in the applications are fully reproducible.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Example applications"
        },
        {
            "text": "The first application focuses on the hypothetical research question, \"how does travel behavior change in times of a Covid-19 lockdown?\". This research question could be of interest to policy makers or academic researchers. Once supplemented with participant's background characteristics, the same data could also be used to investigate how individual characteristics related to movement behavior during the pandemic.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Measuring differences in where time is spent during Covid-19 Lockdowns"
        },
        {
            "text": "Answering this research question requires location data and the amount of time the person spends at the respective locations. Since self-reporting instruments such as time-use surveys or diaries are prone to recall bias Elevelt et al. (2021) , digital trace data are an interesting alternative. DDPs are particularly relevant here, as the researcher is interested in retrospective data. Such past data are difficult to obtain using, for example, wearables: the researcher has to anticipate that 'something interesting' will happen in the future. In contrast, DDPs that provide location data generally do so for a considerable portion of the past.",
            "cite_spans": [
                {
                    "start": 220,
                    "end": 241,
                    "text": "Elevelt et al. (2021)",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Measuring differences in where time is spent during Covid-19 Lockdowns"
        },
        {
            "text": "When exploring different data controllers that store location information, we focus on DDPs collected by the Android operating system, as Android has the majority market share Statscounter (2021a), which means that it is more likely that a participant actually has the DDP. In more extensive studies, researchers can consider to also collect DDPs that store location information via for example iOS, to reduce the amount of missing data that is induced due to the participants not having an Android DDP. In the variety of DDPs collected by Android and Google (which can be found under 'Google Takeout'), the so-called 'Google Semantic Location History' (GSLH) contains monthly .JSON files with information on geolocations, addresses, time spend in places, activity and more.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Measuring differences in where time is spent during Covid-19 Lockdowns"
        },
        {
            "text": "Information on time spent at locations and travelled distances is easily extracted from the Google Semantic Location History DDP, as it contains start and end time of each visited place and activity, and the travelled distance per activity. We simply need to select and sum the appropriate values per month. Note that the DDP contains time information in milliseconds since January 1, 1970, and distance information in meters. For readability, we convert these to days and kilometers, respectively.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Google Semantic Location History data extraction"
        },
        {
            "text": "Since we generated a synthetic version of the Google Semantic Location History DDP (see Appendix A), we can check if the extracted information is consistent with what we specified in our data faker. Figure  5 shows that we generated 49, 47 and 19 visited places for 2019, 2020, and 2021, respectively. These numbers are close, but not equal to, the number of addresses that were given as input (50, 50, 20) . This is because we selected the visited places with weighted probabilities from the input list. Furthermore, the amount of time spend in places is 80% in 2019 and 2020, and 95% in 2021 as expected. Donating Google Semantic Location History data using PORT When participants are invited to participate in this study, the first step is that they are requested to download their personal DDP, as can be seen in Figure 3 . First, the participant goes to their Google profile, for example by going to https://www.google.com and then click on the profile button at the right upper corner. Here, they click the button 'Manage your Google Account'. Once they arrive at their Google Account, they can click the tab 'Data and personalization', where they can then click on the tile 'manage your data and personalization'. In this new window, they can click the button 'Download your data'. This takes the participant to the 'Google Takeout' section. Here, a list is shown containing all Google products for which a DDP can be downloaded. Here, it is most convenient to first click on 'deselect all' and then re-select only the 'Location History'. This by default contains both Google Location History and Google Semantic Location History in .JSON format, although it is also possible to deselect one of these DDPs or to change the format into .Kml. Next, the participant clicks the button 'Next step' and then 'Create export'. Once Google is finished with preparing the DDP, the participant receives an email guiding them towards the same page that now contains a button 'Download'. If the participant clicks this button, the DDP will be stored at their device. Note that this is the sequence of steps at the time of writing and can be subject to changes over time.",
            "cite_spans": [
                {
                    "start": 394,
                    "end": 398,
                    "text": "(50,",
                    "ref_id": null
                },
                {
                    "start": 399,
                    "end": 402,
                    "text": "50,",
                    "ref_id": null
                },
                {
                    "start": 403,
                    "end": 406,
                    "text": "20)",
                    "ref_id": null
                }
            ],
            "ref_spans": [
                {
                    "start": 199,
                    "end": 208,
                    "text": "Figure  5",
                    "ref_id": "FIGREF4"
                },
                {
                    "start": 817,
                    "end": 825,
                    "text": "Figure 3",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Google Semantic Location History data extraction"
        },
        {
            "text": "Once the Google Semantic Location History DDP is downloaded and stored, the participant can click on the 'select the file location' button at PORT as seen in Figure 3 . Once the DDP is uploaded in PORT, the third step becomes visible on screen, as seen in Figure 4 . At this step, for transparency the extraction script is visible for inspection. Once the participant clicks the 'Process data package' button, the extraction script is run on the selected DDP.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 158,
                    "end": 166,
                    "text": "Figure 3",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 256,
                    "end": 264,
                    "text": "Figure 4",
                    "ref_id": "FIGREF3"
                }
            ],
            "section": "Google Semantic Location History data extraction"
        },
        {
            "text": "Once the script is finished, the extracted information is shown to the participant including an explanation of what the various printed numbers exactly mean, as can be seen in Figure 5 . Note that the extracted data here contains no personal information. The addresses of the top three visited places are replaced with identifiers Place 1, Place 2, and Place 3. If different addresses are in the top three in different years, place identifiers with increasing numbers will be used. In other words, the place identifiers are anonymous replacements of the addresses, and we only show the top three visited places of each year.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 176,
                    "end": 184,
                    "text": "Figure 5",
                    "ref_id": "FIGREF4"
                }
            ],
            "section": "Google Semantic Location History data extraction"
        },
        {
            "text": "Below the extracted information, there is a button 'Donate extracted data'. When the participant clicks this button, the extracted data is transmitted to the server of the researcher to which PORT is connected and the complete DDP was never shared with the researchers. Measuring differences in online news consumption due to the Covid-19 induced curfew",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Google Semantic Location History data extraction"
        },
        {
            "text": "The second application focuses on the research question \"How does news consumption changes during times of a Covid-19 curfew?\", which is closely related to the research conducted by Broersma & Swart (2021) on changes of news habits during the Covid-19 pandemic. Data about a person's page visits to news websites in relation to this person's general browser behavior can help to answer this research question. Google Chrome is the most frequently used browser with a 65% market share Statscounter (2021b) . Therefore, it makes sense to again obtain the information that can help to answer this research question via the DDP of Google, Google Takeout. Within this DDP, the browsing history of the browser Google Chrome is found in the file 'BrowserHistory.JSON'. This .JSON file contains a user's entire compiled browser history, from the moment they started using Google Chrome or since the last time they deleted their browsing history.",
            "cite_spans": [
                {
                    "start": 182,
                    "end": 205,
                    "text": "Broersma & Swart (2021)",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 484,
                    "end": 504,
                    "text": "Statscounter (2021b)",
                    "ref_id": "BIBREF13"
                }
            ],
            "ref_spans": [],
            "section": "Google Semantic Location History data extraction"
        },
        {
            "text": "Similar to the previous application, the DDP was simulated. More detail can be found in Appendix B. Analyzing the search behavior as listed in the BrowserHistory.JSON file consists of a number of steps. First, the \"BrowserHistory.JSON\" file is extracted from the provided Google \"Takeout.zip\"-file, and is loaded as dictionary. Using the timestamp provided for every search in the \"BrowserHistory.JSON\" file (time usec), it can be determined in what period the website was visited: i.e, before the start of the curfew, during the curfew, or after the curfew.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Google Search History data extraction"
        },
        {
            "text": "Second, it is determined whether a certain website is a news-site or not, and for both groups the number of individual visits are counted. To determine whether a website is a news-site or not, each website visit's url is matched with a list of the most popular Dutch news websites according to Wikipedia Wikipedia (n.d.). In addition, for each website visit, it is determined whether the visit took place before, during or after curfew, and during morning, afternoon, evening or night, based on the supplemented timestamp. Finally, all information is combined into a single table, where each row represents a different profile (e.g. newssites/before curfew/morning) and sums the total number of individual website visits corresponding to that profile (see also Figure 7 . When this information is collected from a group of participant, a researcher can determine whether news-consumption increases during a period of curfew, especially in the evening and night, compared to periods without a curfew.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 761,
                    "end": 769,
                    "text": "Figure 7",
                    "ref_id": "FIGREF6"
                }
            ],
            "section": "Google Search History data extraction"
        },
        {
            "text": "Similar to the first application, participants start by requesting their personal DDP via their Google profile, as we could see in Figure 3 . However, instead of requesting their 'Google Location History', they now request their Chrome 'Browser History'. Again, the participant clicks on 'Create export' and receives an email when the file is ready for download. Once the participant has downloaded the 'BrowserHistory.JSON' file and stored them at their device, they can continue to the PORT website.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 131,
                    "end": 139,
                    "text": "Figure 3",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "Donating Google Search History data using PORT"
        },
        {
            "text": "In PORT, the participant then again can click the 'select the file location' button (see Figure 3 ). Once the DDP is uploaded, the third step becomes visible on screen. As can be seen in Figure 6 . Here, the Python extraction script that has been written for this specific application is now shown, as such that it can be again inspected by the participant if this is of interest. Once the participant clicks the 'Process data package' button, this extraction script is run on the selected DDP.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 89,
                    "end": 97,
                    "text": "Figure 3",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 187,
                    "end": 195,
                    "text": "Figure 6",
                    "ref_id": "FIGREF5"
                }
            ],
            "section": "Donating Google Search History data using PORT"
        },
        {
            "text": "The extraction information that is shown to the participant can be seen in 5. Again, a detailed description of what can be found in the data is included. From the explanation and extracted data it can be seen that the extracted data contains no personal information. The output then describes the earliest web search found within the DDP, the period of the curfew, and the date of the latest web search. Next, a frequency table is shown. This table describes how many web visits were made per period (i.e., before, during, or after curfew), per website type (i.e., news or other), per time of day (i.e., morning, afternoon, evening, or night). Once the participant clicks the button 'Donate extracted data', only this table is transmitted to the server to which PORT is connected that can be accessed by the researcher and ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Donating Google Search History data using PORT"
        },
        {
            "text": "Although we are currently only presenting a proof-of-concept of how PORT operates, we want to provide a first set of guidelines to help researchers use PORT in a legal and ethical way. To guide you through our considerations, we discuss the process of using PORT as a researcher in three phases: (1) the participant recruitment phase; (2) the local processing phase and (3) the data extraction phase.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Future work and guidelines for ethical use"
        },
        {
            "text": "The first contact between the participant and the researcher is made at the participant recruitment phase. To enable recruitment of participant, a researcher might use a professional participant recruitment platform or collaborate with an existing panel study. Regardless of the exact structure, it is important to keep in mind that the researcher is responsible for generating unique identifying keys for each participant, that can be used in such a way that once the extracted features are stored, they are labelled with this key and can for example be used for linkage to survey measures, or to make conclusions regarding the selectivity of the final obtained sample. At this stage, it is good practice to inform participants regarding the study aims, the type of data they will exactly share and the process they will go through similar to any other study.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Future work and guidelines for ethical use"
        },
        {
            "text": "For the local processing phase, the researcher prepares a Python script. This Python script should adhere to a number of rules. First, it should extract only the features from the DDP that are relevant for the particular research question. Note that if these extracted features are sensitive, the collected data should be treated as such in the subsequent steps, e.g. the safety measures taken at the data storage facility can be related to this. Second, the script should be able to handle variability in structure and content over DDPs from different research participants. Third, the script should present the extracted features in a clear and intuitive way for the participant to review when providing informed consent, and for the researcher to process for further analysis, including linkage to the data from other participants or linkage of other data sources regarding the same participant, for example survey data. Regarding the presentation of extracted features to the participant, the researcher can present the features in an intuitive way, using a table, a graph or a figure such as a map. However, all features shared with the researcher should have been presented to the participant.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Future work and guidelines for ethical use"
        },
        {
            "text": "When using PORT, we encourage researchers to adhere to the FAIR principles Wilkinson et al. (2016) while retaining the preservation of privacy if the type of features extracted demands this. To encourage findability of the research projects using PORT, a separate project page is available on the website of PORT for each project, which can be accessed from the starting page. At the project page, information about researchers and research findings can be shared, which can be updated throughout the duration of the project. Furthermore, the Python script used to extract features is made publicly available here, so that it can be re-used for other projects. At last, information regarding the location where the data will be stored should be provided.",
            "cite_spans": [
                {
                    "start": 75,
                    "end": 98,
                    "text": "Wilkinson et al. (2016)",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "Future work and guidelines for ethical use"
        },
        {
            "text": "Accessibility of the extracted features very much depends on the sensitivity of its content and different options are possible. Researchers can for example choose to let the collected data be collected at the Eyra server, or to let the extracted features be send directly to a repository in a protected cloud environment. If differs per repository what is exactly possible.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Future work and guidelines for ethical use"
        },
        {
            "text": "As the nature of PORT is interoperable, it can in theory be combined with different participant recruitment and data storage platforms. However, whether a particular platform of interest by the researcher can be combined in practice depends on platform specific characteristics.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Future work and guidelines for ethical use"
        },
        {
            "text": "The prototype of the software used for PORT is developed open sourced (see https://github.com/ eyra/port-poc) and we ask users to share their developed Python scripts open source as well such that they can be reused. Furthermore, once researchers inspected and cleaned the collected data where needed, they can provide information for other researchers if and how their collected data can be reused for other studies.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Future work and guidelines for ethical use"
        },
        {
            "text": "In this paper, a proof-of-concept is introduced of software that locally, on the device of a research participant, extracts relevant features from Data Download Packages (DDPs). Thanks to this software, it is now possible to use digital trace data for research purposes with data that are not publicly available, in an ethical manner. The software allows for privacy preservation of research participants and for true informed consent.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion and Discussion"
        },
        {
            "text": "To use the software for research, it should always be supplemented with a method to recruit participants and with a location where the extracted data can be stored. Currently, the software is hosted, which means that the university of the respective researcher should have a processing agreement with hosting company, Eyra. In future, integration of the software with existing panel studies such as the LISS panel Scherpenzeel (2018) or Understanding Society Buck & McFall (2011) may be of interest. In addition, it is then probably desired that the extracted data is directly sent to the server of the respective organization. Alternatively, researchers might be interested in storing the extracted data directly in a repository for research data, hosted by organizations such as DataVerse King (2007) or Surfdrive Surfsara (2021) .",
            "cite_spans": [
                {
                    "start": 414,
                    "end": 433,
                    "text": "Scherpenzeel (2018)",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 459,
                    "end": 479,
                    "text": "Buck & McFall (2011)",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 791,
                    "end": 802,
                    "text": "King (2007)",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 816,
                    "end": 831,
                    "text": "Surfsara (2021)",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion and Discussion"
        },
        {
            "text": "When using the workflow as proposed by Boeschoten et al. (2020) and the software as presented in this paper for a research project, the only task that remains is that data scientists and applied researchers collaborate to develop a high-quality extraction script in Python that is flexible in terms of handling a variety of data structures. See Boeschoten et al. (2021) for an overview of the data types and structures that are typically found in DDPs from major data controllers. When developing such an extraction script, it is important to find a balance between ensuring on the one hand that all information relevant for answering the research question of interest is extracted, while on the other hand no sensitive sensitive data is unnecessarily collected.",
            "cite_spans": [
                {
                    "start": 39,
                    "end": 63,
                    "text": "Boeschoten et al. (2020)",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 345,
                    "end": 369,
                    "text": "Boeschoten et al. (2021)",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion and Discussion"
        },
        {
            "text": "In addition, it should be noted that using the proposed workflow and additional software is not suitable for every type of research question. For example, in a research project of a more exploratory nature where the researcher aims to find out what type of data can be found in DDPs, or when a researcher aims to develop and evaluate the performance of an extraction or prediction algorithm, an extraction script might not be suitable. However, even in such situations a researcher can consider to use the workflow and software, but instead of using an extraction script, a de-identification script can be more appropriate. An example of such a de-identification script has been developed by Boeschoten et al. (2021) for Instagram DDPs, which only selects the files within the DDP that are of interest for the research and then removes all identifiers from these files. When applying the workflow in such a way, two main study principles are still applied: the privacy of research participants is protected and only the necessary data is collected.",
            "cite_spans": [
                {
                    "start": 692,
                    "end": 716,
                    "text": "Boeschoten et al. (2021)",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "Conclusion and Discussion"
        },
        {
            "text": "In future research, we plan to integrate our system with existing participant recruitment platforms and data archives. In addition, we of course plan to apply the workflow and software for practical research questions and develop more extraction scripts. Furthermore, we hope to focus on a more intuitive way of presenting the extracted data to participants, as such that the extracted information is insightful and useful for the participant, which hopefully leads to more engaged participants. Other expansions of interest are extending the number of Python packages that can be used in the extraction script, including options for visual content, and also a possibility to develop extraction scripts using the R programming language.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion and Discussion"
        },
        {
            "text": "To conclude, PORT opens up vast new research opportunities for researchers with an interest in digital trace data. Digital trace data can be collected in DDPs by a substantive part of the world's population and regarding every aspect of their (digital) lives, such as social media, banks, online shops and shops with loyalty card systems, travel and movement behavior, and health. PORT allows for a privacy-preserving analysis of these digital traces for research purposes, subject to true informed consent.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusion and Discussion"
        },
        {
            "text": "The code used to generate the simulated GSLH DDP builds upon the open source Python packages \"GenSON\" Wolverton (n.d.) , \"Faker\" Faraglia (n.d.) , and \"Faker-Schema\" Gul (n.d.) . GenSON is used to generate a .JSON schema of a personal DDP. The .JSON schema describes the format of the GSLH data, and can be used to generate dummy data with a similar format. Dummy data is then generated by converting the .JSON schema to a custom schema expected by faker-schema in the form of a dictionary, where the keys are field names and the values are the types of the fields. The values represent available data types in Faker, packed in so-called providers. Faker provides a wide variety of data types via providers, for example for names, addresses, and geographical data. This allows us to easily customize the dummy data to our specifications.",
            "cite_spans": [
                {
                    "start": 102,
                    "end": 118,
                    "text": "Wolverton (n.d.)",
                    "ref_id": null
                },
                {
                    "start": 129,
                    "end": 144,
                    "text": "Faraglia (n.d.)",
                    "ref_id": null
                },
                {
                    "start": 166,
                    "end": 176,
                    "text": "Gul (n.d.)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "A Google Semantic Location History data simulation"
        },
        {
            "text": "We generated GSLH dummy data for the years 2019, 2020, and 2021. First we created 50 dummy addresses with Faker, with coordinates in the Netherlands within a radius of 0.1 degrees of each other. For the years 2019 and 2020, the visited locations were randomly chosen with weighted probabilities from all 50 addresses, for 2021 only 20 of these addresses were available for random selection. The weighted probabilities were used to create a top three of most frequently visited locations. We also varied the duration of time spent at locations per year, where in 2019 and 2020 80% of the time is spent at locations and in 2021 95% of the time is spent at locations. The geodesic distances between visited locations were calculated in kilometer using \"GeoPy\" Esmukov (n.d.) .",
            "cite_spans": [
                {
                    "start": 757,
                    "end": 771,
                    "text": "Esmukov (n.d.)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "A Google Semantic Location History data simulation"
        },
        {
            "text": "The BrowserHistory.JSON file is structured in such a way that, for each web search, information about that specific web search is listed in a dictionary. Such a dictionary entails information about how the website was visited (page transition, i.e., 'LINK', 'GENERATED', or 'RELOAD'), the title of the web page (title), the complete url to the weblink (e.g. https://nos.nl/), a unique identifier for the user (client id ), and the timestamp of the visit (time usec). As the BrowserHistory.JSON file is a mere compilation of all these unique search dictionaries stored within one overarching 'Browser History' dictionary, the code used to generate the simulated data is quite straight forward.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B Google Search History data simulation"
        },
        {
            "text": "First, an empty dictionary is created with the above mentioned structure. For each simulated web visit, a random page transition (i.e., 'LINK', 'GENERATED', or 'RELOAD') is chosen using the \"Random\" package in Python Random (n.d.), which uses the Mersenne Twister algorithm Matsumoto & Nishimura (1998) . Second, the title and url of the web page are constructed using the sentence() and website() functions of the open source Python packages \"faker\" Faraglia (n.d.) and \"random\" Random (n.d.), respectively. After the URLs are created, the homepage part of the URL is replaced with a randomly selected Dutch news website for n% of the URL. These news sites are randomly picked from a sampled list of popular Dutch news website as obtained from Wikipedia Wikipedia (n.d.). The client id is created using a random set of letters and digits, making up a string of length 10. Finally, timestamps are generated in such a way that morning, afternoon, evening, and night times occur evenly.",
            "cite_spans": [
                {
                    "start": 274,
                    "end": 302,
                    "text": "Matsumoto & Nishimura (1998)",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 451,
                    "end": 466,
                    "text": "Faraglia (n.d.)",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "B Google Search History data simulation"
        },
        {
            "text": "Note that the simulated browser history data is created in such a way that there is a difference in total number of news versus random website visits before (before 2021-01-23), during (between 2021-01-23 and 2021-04-28), and after (after 2021-04-28) the curfew. The default settings will result in a 'Takeout.zip' file, with a sub-folder 'Chrome' leading to a 'BrowserHistory.JSON' file, i.e., a Browser History dictionary containing a 1000 web searches. During the period of the curfew -compared to the period before or after the curfew -there were 15% more news web visits and, overall, more web visits during the evening.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B Google Search History data simulation"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Digital trace data collection through data donation",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Boeschoten",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Ausloos",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Moeller",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Araujo",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [
                        "L"
                    ],
                    "last": "Oberski",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2011.09851"
                ]
            }
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Automatic deidentification of data download packages. datasciencehub.net",
            "authors": [
                {
                    "first": "L",
                    "middle": [],
                    "last": "Boeschoten",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Voorvaart",
                    "suffix": ""
                },
                {
                    "first": "C",
                    "middle": [],
                    "last": "Kaandorp",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [
                        "V D"
                    ],
                    "last": "Goorbergh",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "De Vos",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Do novel routines stick after the pandemic? the formation of news habits during covid-19",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Broersma",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Swart",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Journalism Studies",
            "volume": "",
            "issn": "",
            "pages": "1--18",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Understanding society: design overview",
            "authors": [
                {
                    "first": "N",
                    "middle": [],
                    "last": "Buck",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Mcfall",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Longitudinal and Life Course Studies",
            "volume": "3",
            "issn": "1",
            "pages": "5--17",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Where you at? using gps locations in an electronic time use diary study to derive functional locations",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Elevelt",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Bernasco",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Lugtig",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ruiter",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Toepoel",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Social Science Computer Review",
            "volume": "39",
            "issn": "4",
            "pages": "509--526",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "GeoPy",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Esmukov",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "5--08",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Faker version 8.11",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Faraglia",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "5--08",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Faker Schema",
            "authors": [
                {
                    "first": "U",
                    "middle": [
                        "E"
                    ],
                    "last": "Gul",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "5--08",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "An introduction to the dataverse network as an infrastructure for data sharing",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "King",
                    "suffix": ""
                }
            ],
            "year": 2007,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Mersenne twister: a 623-dimensionally equidistributed uniform pseudo-random number generator",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Matsumoto",
                    "suffix": ""
                },
                {
                    "first": "T",
                    "middle": [],
                    "last": "Nishimura",
                    "suffix": ""
                }
            ],
            "year": 1998,
            "venue": "ACM Transactions on Modeling and Computer Simulation (TOMACS)",
            "volume": "8",
            "issn": "1",
            "pages": "3--30",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Web technology for developer",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Mozilla",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "5--08",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "true\" longitudinal and probability-based internet panels: Evidence from the netherlands",
            "authors": [
                {
                    "first": "A",
                    "middle": [
                        "C"
                    ],
                    "last": "Scherpenzeel",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "Social and behavioral research and the internet",
            "volume": "",
            "issn": "",
            "pages": "77--104",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Statscounter global stats",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Statscounter",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Statscounter global stats",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Statscounter",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Surfdrive",
            "authors": [
                {
                    "first": "",
                    "middle": [],
                    "last": "Surfsara",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "The fair guiding principles for scientific data management and stewardship",
            "authors": [
                {
                    "first": "M",
                    "middle": [
                        "D"
                    ],
                    "last": "Wilkinson",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Dumontier",
                    "suffix": ""
                },
                {
                    "first": "I",
                    "middle": [
                        "J"
                    ],
                    "last": "Aalbersberg",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Appleton",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Axton",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Baak",
                    "suffix": ""
                }
            ],
            "year": 2016,
            "venue": "Scientific data",
            "volume": "3",
            "issn": "1",
            "pages": "1--9",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "GenSON version 1.2.2",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Wolverton",
                    "suffix": ""
                }
            ],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "5--08",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Workflow.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "provides more detail regarding PORT's functionality. The Figure shows that, first (step 4.1), the participant selects the location in which the DDP is stored at the device.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Once the participant has downloaded their GSLH or other DDP, they can select the file location on their device for data donation using PORT.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "With the 'process data package' button in PORT, the GSLH Python extraction script extracts the relevant features from the selected DDP. For transparency, PORT shows the complete Python script.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "The extracted data from the Google Semantic Location History DDP as displayed to the participant. Below the extracted data, the participant can find the 'Donate extracted data' button.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF5": {
            "text": "With the 'process data package' button in PORT, the Browser History Python extraction script extracts the relevant features from the selected DDP. For transparency, PORT shows the complete Python script.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "The extracted data from the Browser History DDP as displayed to the participant. Below the extracted data, the participant can find the 'Donate extracted data' button. the complete DDP was never shared with the researchers.",
            "latex": null,
            "type": "figure"
        }
    },
    "back_matter": []
}