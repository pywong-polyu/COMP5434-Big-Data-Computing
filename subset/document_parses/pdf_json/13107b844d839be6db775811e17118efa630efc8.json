{"paper_id": "13107b844d839be6db775811e17118efa630efc8", "metadata": {"title": "dK-Microaggregation: Anonymizing Graphs with Differential Privacy Guarantees", "authors": [{"first": "Masooma", "middle": [], "last": "Iftikhar", "suffix": "", "affiliation": {"laboratory": "", "institution": "Australian National University", "location": {"settlement": "Canberra", "country": "Australia"}}, "email": "masooma.iftikhar@anu.edu.au"}, {"first": "Qing", "middle": [], "last": "Wang", "suffix": "", "affiliation": {"laboratory": "", "institution": "Australian National University", "location": {"settlement": "Canberra", "country": "Australia"}}, "email": "qing.wang@anu.edu.au"}, {"first": "Yu", "middle": [], "last": "Lin", "suffix": "", "affiliation": {"laboratory": "", "institution": "Australian National University", "location": {"settlement": "Canberra", "country": "Australia"}}, "email": "yu.lin@anu.edu.au"}]}, "abstract": [{"text": "With the advances of graph analytics, preserving privacy in publishing graph data becomes an important task. However, graph data is highly sensitive to structural changes. Perturbing graph data for achieving differential privacy inevitably leads to inject a large amount of noise and the utility of anonymized graphs is severely limited. In this paper, we propose a microaggregation-based framework for graph anonymization which meets the following requirements: (1) The topological structures of an original graph can be preserved at different levels of granularity; (2) \u03b5-differential privacy is guaranteed for an original graph through adding controlled perturbation to its edges (i.e., edge privacy);", "cite_spans": [], "ref_spans": [], "section": "Abstract"}, {"text": "(3) The utility of graph data is enhanced by reducing the magnitude of noise needed to achieve \u03b5-differential privacy. Within the proposed framework, we further develop a simple yet effective microaggregation algorithm under a distance constraint. We have empirically verified the noise reduction and privacy guarantee of our proposed algorithm on three realworld graph datasets. The experiments show that our proposed framework can significantly reduce noise added to achieve \u03b5-differential privacy over graph data, and thus enhance the utility of anonymized graphs.", "cite_spans": [], "ref_spans": [], "section": "Abstract"}], "body_text": [{"text": "Graph data analysis has been widely performed in real-life applications. For instance, online social networks are explored to analyze human social relationships, election networks are studied to discover different opinions in a community, and co-author networks are used to understand collaboration relationships among researchers [22] . However, such networks often contain sensitive or personally identifiable information, such as social contacts, personal opinions and private communication records. Publishing graph data can thus pose a privacy threat. To preserve graph data privacy, various anonymization techniques for graph data publishing have been proposed in the literature [1, 11, 14, 24] . Nonetheless, even when a graph is anonymized without publishing any identity information, an individual may still be revealed based on structural information of a graph [11] . In recent years, differential privacy [5] has emerged as a widely recognized mathematical framework for privacy. A number of studies [10, 18] have investigated the problem of publishing anonymized graphs under guarantee of differential privacy. However, graph data is highly sensitive to structural changes. Directly perturbing graph data often leads to inject a large amount of random noise and the utility of anonymized graphs is severely impacted. To deal with this issue, several works [19] [20] [21] [22] have explored techniques of indirectly perturbing graph data through a graph abstraction model, such as the dK-graph model [16] and hierarchical random graph (HRG) model [2] , or spectral graph methods. The central ideas behind these works are to first project a graph into a statistical representation (e.g., degree distribution and dendrogram), or a spectral representation (e.g., adjacency matrix), and then add random noise to perturb such representations. Although these techniques are promising, they can only achieve \u03b5-differential privacy over a graph by injecting the magnitude of random noise proportional to the sensitivity of queries, which is fixed to global sensitivity. Due to the high sensitivity of graph data on structural changes, the utility of anonymized graphs being published by these works is still limited.", "cite_spans": [{"start": 331, "end": 335, "text": "[22]", "ref_id": "BIBREF20"}, {"start": 685, "end": 688, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 689, "end": 692, "text": "11,", "ref_id": "BIBREF10"}, {"start": 693, "end": 696, "text": "14,", "ref_id": "BIBREF12"}, {"start": 697, "end": 700, "text": "24]", "ref_id": "BIBREF22"}, {"start": 872, "end": 876, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 917, "end": 920, "text": "[5]", "ref_id": "BIBREF4"}, {"start": 1012, "end": 1016, "text": "[10,", "ref_id": "BIBREF9"}, {"start": 1017, "end": 1020, "text": "18]", "ref_id": "BIBREF16"}, {"start": 1369, "end": 1373, "text": "[19]", "ref_id": "BIBREF17"}, {"start": 1374, "end": 1378, "text": "[20]", "ref_id": "BIBREF18"}, {"start": 1379, "end": 1383, "text": "[21]", "ref_id": "BIBREF19"}, {"start": 1384, "end": 1388, "text": "[22]", "ref_id": "BIBREF20"}, {"start": 1512, "end": 1516, "text": "[16]", "ref_id": "BIBREF14"}, {"start": 1559, "end": 1562, "text": "[2]", "ref_id": "BIBREF1"}], "ref_spans": [], "section": "Introduction"}, {"text": "To alleviate this limitation, we aim to develop a general framework of anonymizing graphs which meets the following requirements: (1) The topological structures of an original graph can be preserved at different levels of granularity; (2) \u03b5-differential privacy is guaranteed for an original graph through adding controlled perturbation to its edges (i.e., edge privacy [13] ); (3) The utility of graph data is enhanced by reducing the magnitude of noise needed to achieve \u03b5-differential privacy. We observe that the dK-graph model [15, 16] for analyzing network topologies can serve as a good basis for generating structure-preserving anonymized graphs. Essentially, the dK-graph model generates dK-graphs by retaining a series of network topology properties being extracted from d-sized subgraphs in an original graph. In order to reduce the amount of random noise without compromising \u03b5-differential privacy, we incorporate microaggregation techniques [4] into the dK graph model to reduce the sensitivity of queries. This enables to apply perturbation on network topology properties at a flexible level of granularity, depending on the degree of microaggregation. Figure 1 provides a high-level overview of our proposed framework. Given two neighboring graphs G \u223c G , network topology properties such as dKdistributions [16] are first extracted from each graph. Then a dK-distribution goes through a microaggregation procedure, which consists of partition and aggregation. After that, the microaggregated dK-distribution is perturbed, yielding a \u03b5-differentially private dK-distribution. Finally, based on the perturbed dKdistribution, \u03b5-differentially private dK-graphs are generated. That is, for two neighboring graphs G \u223c G , their corresponding anonymized graphs generated by this framework are \u03b5-indistinguishable.", "cite_spans": [{"start": 370, "end": 374, "text": "[13]", "ref_id": "BIBREF11"}, {"start": 532, "end": 536, "text": "[15,", "ref_id": "BIBREF13"}, {"start": 537, "end": 540, "text": "16]", "ref_id": "BIBREF14"}, {"start": 955, "end": 958, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 1324, "end": 1328, "text": "[16]", "ref_id": "BIBREF14"}], "ref_spans": [{"start": 1168, "end": 1176, "text": "Figure 1", "ref_id": "FIGREF0"}], "section": "Introduction"}, {"text": "To summarize, our work has the following contributions: (1) We present a novel framework, called dK-microaggregation, that can leverage a series of network topology properties to generate \u03b5-differentially private anonymized graphs. (2) We propose a distance constrained algorithm for approximating dKdistributions of a graph via microaggregation within the proposed framework, which enables us to reduce the amount of noise being added into \u03b5-deferentially private anonymized graphs. (3) We have empirically verified the noise reduction of our proposed framework on three real-world networks. It shows that our algorithm can effectively enhance the utility of generated anonymized graphs by providing better within-cluster homogeneity and reducing the amount of noise, in comparison with the state-of-the-art methods.", "cite_spans": [], "ref_spans": [], "section": "Contributions."}, {"text": "Let G = (V, E) be a simple undirected graph, where V is the set of nodes and E the set of edges in G. We use deg(v) to denote the degree of a node v, and deg(G) to denote the maximum degree of G. Definition 1 (Neighboring graphs). Two graphs G = (V, E) and G = (V , E ) are said to be neighboring graphs, denoted as G \u223c G , iff V = V , E \u2282 E and |E| + 1 = |E |.", "cite_spans": [], "ref_spans": [], "section": "Problem Formulation"}, {"text": "The dK-graph model [16] provides a systematic way of extracting subgraph degree distributions from a given graph, i.e. dK-distributions.", "cite_spans": [{"start": 19, "end": 23, "text": "[16]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Problem Formulation"}, {"text": "Specifically, 1K-distribution captures a degree distribution, 2K-distribution captures a joint degree distribution, i.e. the number of edges between nodes of different degrees, and 3K-distribution captures a clustering coefficient distribution, i.e. the number of triangles and wedges connecting nodes of different degrees. When d = |V |, dK-distribution specifies the entire graph. For larger values of d, dK-distributions capture more complex properties of a graph at the expense of higher computational overhead [16] . To describe how a dK-distribution is extracted from a graph, we define the notion of dK function.", "cite_spans": [{"start": 515, "end": 519, "text": "[16]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Definition 2 (dK-distribution). A dK-distribution dK(G) over a graph G is the probability distribution on the connected subgraphs of size d in G."}, {"text": "Following the previous work [16] , we define dK-graph as a graph that can be constructed through reproducing the corresponding dK-distribution.", "cite_spans": [{"start": 28, "end": 32, "text": "[16]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Definition 3 (dK function). Let"}, {"text": "Definition 4 (dK-graph). A dK-graph over dK(G) is a graph in which connected subgraphs of size d satisfy the probability distribution in dK(G).", "cite_spans": [], "ref_spans": [], "section": "Definition 3 (dK function). Let"}, {"text": "Conceptually, a dK-graph is considered as an anonymized version of an original graph G that retains certain topological properties of G at a chosen level of granularity. In this paper, we aim to generate dK-graphs with \u03b5-differential privacy guarantee for preserving privacy of structural information between nodes of a graph (edge privacy). We formally define differentially private dK-graph below.", "cite_spans": [], "ref_spans": [], "section": "Definition 3 (dK function). Let"}, {"text": "A randomized mechanism K provides \u03b5-differentially private dK-graphs, if for each pair of neighboring graphs G \u223c G and all possible outputs G \u2286 range(K), the following holds", "cite_spans": [], "ref_spans": [], "section": "Definition 5 (Differentially private dK-graphs)."}, {"text": "(1)", "cite_spans": [], "ref_spans": [], "section": "Definition 5 (Differentially private dK-graphs)."}, {"text": "G is a family of dK-graphs, and \u03b5 > 0 is the differential privacy parameter. Smaller values of \u03b5 provide stronger privacy guarantees [5] .", "cite_spans": [{"start": 133, "end": 136, "text": "[5]", "ref_id": "BIBREF4"}], "ref_spans": [], "section": "Definition 5 (Differentially private dK-graphs)."}, {"text": "In this section, we present a novel framework dK-Microaggregation for generating \u03b5-differentially private dK-graphs. Without loss of generality, we will use 2Kdistribution to illustrate our proposed framework. This is due to two reasons:", "cite_spans": [], "ref_spans": [], "section": "dK-Microaggregation Framework"}, {"text": "(1) As previously discussed in [15, 16] , the d = 2 case is sufficient for most practical purposes; (2) dK-generators for d = 2 have been well studied [9, 15] , whereas dK-generators for d \u2265 3 have not been yet discovered [9] . Given a graph", "cite_spans": [{"start": 31, "end": 35, "text": "[15,", "ref_id": "BIBREF13"}, {"start": 36, "end": 39, "text": "16]", "ref_id": "BIBREF14"}, {"start": 151, "end": 154, "text": "[9,", "ref_id": "BIBREF8"}, {"start": 155, "end": 158, "text": "15]", "ref_id": "BIBREF13"}, {"start": 222, "end": 225, "text": "[9]", "ref_id": "BIBREF8"}], "ref_spans": [], "section": "dK-Microaggregation Framework"}, {"text": "Previous studies [19, 20] have shown that, changing a single edge in a graph may result in one or more changes on tuples in its corresponding dK-distribution. The following lemma states the maximum number of changes between the 2Kdistributions of two neighboring graphs.", "cite_spans": [{"start": 17, "end": 21, "text": "[19,", "ref_id": "BIBREF17"}, {"start": 22, "end": 25, "text": "20]", "ref_id": "BIBREF18"}], "ref_spans": [], "section": "dK-Microaggregation Framework"}, {"text": "In our work, for each dK-distribution D, we want to generate D \u03b5 that is an anonymized version of D satisfying \u03b5-differential privacy. Thus, we view the response to a dK function \u03b3 dK for d = 2 as a collection of responses to degree queries, one for each tuple in a 2K distribution. ", "cite_spans": [], "ref_spans": [], "section": "dK-Microaggregation Framework"}, {"text": "To guarantee \u03b5-differential privacy for each q t , we can add random noise into the real response q t (G), yielding a randomized response q t (G) + Lap(\u0394(q t )/\u03b5), where \u0394(q t ) denotes the sensitivity of q t and Lap(\u0394(q t )/\u03b5) denotes random noise drawn from a Laplace distribution.", "cite_spans": [], "ref_spans": [], "section": "dK-Microaggregation Framework"}, {"text": "If we query D with a set of degree queries {q t } t\u2208D and the response to each q t satisfies \u03b5-differential privacy, by the parallel composition property of differential privacy [17] , we can generate D \u03b5 that satisfies \u03b5-differential privacy. However, the total amount of random noise being added into the responses can be very high, particularly when a graph is large. To control the amount of random noise and thus increase the utility of D \u03b5 , we microaggregate similar tuples in D before adding noise. Thus, the dK function \u03b3 dK is replaced by \u03b3 dK \u2022 M, i.e., we run \u03b3 dK on the microaggregated dK-distribution D resulting from running a microaggregation algorithm M over D. The response to \u03b3 dK \u2022 M is a collection of responses to microaggregate degree queries, one for each cluster in D.", "cite_spans": [{"start": 178, "end": 182, "text": "[17]", "ref_id": "BIBREF15"}], "ref_spans": [], "section": "dK-Microaggregation Framework"}, {"text": "Indeed, we can see that q t is a special case of q * T since q t (G) = q * T (G) holds for T = {t}. By Lemma 1, we have the following lemma about q t and q * T .", "cite_spans": [], "ref_spans": [], "section": "dK-Microaggregation Framework"}, {"text": "For each cluster in D that is resulted from running M, only aggregated frequency value for a cluster of tuples is returned by a microaggregate degree query. Thus, \u03b3 dK \u2022 M is less \"sensitive\" when the number of clusters in D is smaller. By Lemma 2 and the fact that changing one edge on a graph may lead to changes on multiple clusters in D, we have the following lemma about the sensitivity of \u03b3 dK \u2022 M. Generally, dK-microaggregation works in the following steps. First, it extracts a dK-distribution from a graph. Then, it microaggregates the dK-distribution and perturbs the microaggregated dK-distribution to generate \u03b5-differentially private dK-distribution. Finally, a dK-graph is generated.", "cite_spans": [], "ref_spans": [], "section": "Lemma 2. The sensitivity of both q t and q * T on a graph G is upper bounded by"}, {"text": "In this section, we discuss algorithms for microaggregating dK-distributions. Generally, a microaggregation algorithm for dK-distributions M = (C, A) consists of two phases: (a) Partition -similar tuples in a dK-distribution are partitioned into the same cluster; (b) Aggregation -the frequency values of tuples in the same cluster are aggregated. As illustrated in Fig. 2 MDAV-dK Algorithm. Given a dK-distribution D = \u03b3 dK (G) over a graph G, a simple way of microaggregating D is to partition D in such a way that each cluster contains at least k tuples. For this, we use a simple microaggregation heuristic, called Maximum Distance to Average Vector (MDAV) [4] , which can generate clusters of the same size k, except one cluster of size between k and 2k \u2212 1. However, unlike a standard version of MDAV that aggregates each cluster by replacing each record in the cluster with a representative record, we perform aggregation to aggregate frequency values of tuples in each cluster into an aggregated frequency value. To avoid ambiguity, we call our MDAV-based algorithm for microaggregating dK-distributions the MDAV-dK algorithm.", "cite_spans": [{"start": 661, "end": 664, "text": "[4]", "ref_id": "BIBREF3"}], "ref_spans": [{"start": 366, "end": 372, "text": "Fig. 2", "ref_id": "FIGREF1"}], "section": "Proposed Algorithm"}, {"text": "It is well-known that, for many real-world networks such as Twitter, their degree distributions are often highly skewed. This often leads to highly skewed dK-distributions for such networks. However, due to inherent limitations of MDAV, e.g. the fixed-size constraint, MDAV-dK would suffer significant information loss when evenly partitioning a highly skewed dK-distribution into clusters of the same size. To address this issue, we propose an algorithm called Maximum Pairwise Distance Constraint (MPDC-dK).", "cite_spans": [], "ref_spans": [], "section": "Proposed Algorithm"}, {"text": "Unlike MDAV-dK, MPDC-dK aims to partition a dK-distribution into clusters under a distance constraint. Specifically, after partitioning, the distances between the corresponding degrees in any two tuples within a cluster should be no greater than a specified distance interval \u03c4 . Take a 2K-distribution D for example. Let t 1 = (g 1 , g 1 , m 1 ) and t 2 = (g 2 , g 2 , m 2 ) be two tuples in a cluster after applying MPDC-dK on D. Then, we say that these two tuples satisfy a distance constraint \u03c4 iff max(|g 1 \u2212 g 2 |, |g 1 \u2212 g 2 |) \u2264 \u03c4 . The clustering problem addressed by MPDC-dK is thus to generate the minimum number of clusters in which every pair of tuples from the same cluster satisfies such a distance constraint \u03c4 . The conceptual ideas behind our MPDC-dK algorithm design is to consider each degree pair (g, g ) as coordinates in a two dimensional space, and also treat the above distance constraint \u03c4 as a \u03c4 -by-\u03c4 box, denoted by ((x, x ), \u03c4) and centered at (x, x ), in the same two dimensional space. Clearly, such a box corresponds to a cluster that satisfies the distance constraint \u03c4 , and a box ((x, x ), \u03c4) covers a degree pair (g, g ) iff x \u2212 \u03c4 /2 \u2264 g \u2264 x + \u03c4 /2 and x \u2212 \u03c4 /2 \u2264 g \u2264 x + \u03c4 /2. MPDC-dK employs a greedy algorithm to find the minimum number of boxes (i.e., clusters) that cover all degree pairs. MDPC-dK first enumerates all boxes that cover at least one degree pair and records the corresponding counts as the number of degree pairs being covered by these boxes. MDPC-dK then recursively selects a box with the maximum count (i.e., covering the maximum number of degree pairs) in a greedy manner, assigns these degree pairs in a new cluster, and removes them from other boxes until all boxes are empty. After that, MDPC-dK performs aggregation to aggregate the frequency values of tuples in each cluster into an aggregated frequency value.", "cite_spans": [], "ref_spans": [], "section": "MPDC-dK Algorithm."}, {"text": "Algorithm 1 describes the details of our MPDC-dK algorithm. Given a dKdistribution D, we start with initializing an empty cluster list D (Line 1) and a list b_list to record each box and its corresponding degree pairs, and the total number of degree pairs covered by the box (Line 2). For each degree pair (g, g ) in D, we enumerate boxes that cover (g, g ) using a function covering_boxes (Line 4). For each enumerated box b i we update the list by adding (g, g ) to b i and increment the count of b i by 1 (Lines 5-6). After creating b_list, we iteratively select a box b max with the maximum count for degree pairs (Line 8), then generate a new cluster of degree pairs in d max , and add it into the cluster list (Lines 9-10). We further remove b max and all degree pairs in b max from b_list and update the counts of affected boxes in b_list (Lines 11-15 ). The algorithm terminates when b_list is empty and returns a set of generated clusters D .", "cite_spans": [], "ref_spans": [{"start": 846, "end": 858, "text": "(Lines 11-15", "ref_id": "FIGREF0"}], "section": "MPDC-dK Algorithm."}, {"text": "Privacy Analysis. Here, we theoretically show that dK-graphs generated in our proposed framework are differentially private. Firstly, by Lemma 2 and 3, we can obtain a \u03b5-differentially dK-distribution D \u03b5 by microaggregating a dK-distribution and calibrating the amount of random noise according to the sensitivity of microaggregated degree queries. As D \u03b5 only contains aggregated frequency values for clusters of tuples in a dK-distribution, we perform postprocessing using a randomized algorithm f to randomly select tuples within each cluster of D \u03b5 until the aggregated frequency value of the cluster is reached. Previously, Dwork and Roth [6] proved that differential privacy is immune to post-processing, i.e., the composition of a randomized algorithm with a differentially private algorithm is differentially private. This leads to the lemma below.", "cite_spans": [{"start": 645, "end": 648, "text": "[6]", "ref_id": "BIBREF5"}], "ref_spans": [], "section": "Theoretical Discussion"}, {"text": "Based on f (D \u03b5 ), a dK-graph can be generated using a dK-graph generator [15, 16] . Following Lemma 4, Definition 5, and the proposition of Dwork and Roth [6] on post-processing, we have the following theorem for our framework, which corresponds to a randomized mechanism K = \u03b3 dK \u2022 M \u2022 K dK \u2022 f \u2022 \u03b3 dK , where \u03b3 dK : D \u2192 G is a dK-graph generator.", "cite_spans": [{"start": 74, "end": 78, "text": "[15,", "ref_id": "BIBREF13"}, {"start": 79, "end": 82, "text": "16]", "ref_id": "BIBREF14"}, {"start": 156, "end": 159, "text": "[6]", "ref_id": "BIBREF5"}], "ref_spans": [], "section": "Lemma 4. Let D \u03b5 be a \u03b5-differentially private dK-distribution and f be a randomized algorithm for post-processing"}, {"text": "Complexity Analysis. We analyze the time complexity of the algorithms MDAV-dK and MPDC-dK. For MDAV-dK with a constraint on the minimum size k of clusters, given a dK-distribution D as input, the complexity of MDAV-dK for clustering is similar to MDAV [4] , i.e. O(n 2 ). For MPDC-dK with a constraint on the distance interval \u03c4 , in order to generate clusters, MPDC-dK needs to perform a sequential search over all degree pairs in D. Firstly, MPDC-dK needs to enumerate boxes for all the degree pairs, and each degree pair is covered by at most (\u03c4 + 1) 2 boxes (Line 4 of Algorithm 1), hence the cost of enumerating boxes is O(\u03c4 2 n) (Line 3-6 of Algorithm 1). Secondly, MPDC-dK sorts the boxes based on the corresponding degree pairs being covered, and selects and removes the box with the maximum count iteratively. Although it takes O(nlogn) to sort and greedily select the box with the maximum count for the first iteration, each later iteration only costs O(\u03c4 2 logn) (Line 8 of Algorithm 1) because each box overlaps with at most 4\u03c4 2 other boxes and removing one box only affects the count of O(\u03c4 2 ) boxes (Lines 11-15 of Algorithm 1). Hence, the cost of selecting and removing boxes is O(\u03c4 2 nlogn) (Lines 7-15 of Algorithm 1). The overall complexity of MPDC-dK for clustering is O(\u03c4 2 nlogn).", "cite_spans": [{"start": 252, "end": 255, "text": "[4]", "ref_id": "BIBREF3"}], "ref_spans": [], "section": "Theorem 1. K generates \u03b5-differentially private dK-graphs."}, {"text": "We have evaluated the proposed framework to answer the following questions: -Q1. How does dK-microaggregation reduce the amount of noise added into dK-distributions while still providing \u03b5-differential privacy guarantee? -Q2. How does our microaggregation algorithms perform in providing better within cluster homogeneity for dK-distributions? -Q3. What are the trade-offs between utility and privacy when generating differentially private dK-graphs? Baseline Methods. In order to evaluate our proposed framework, we considered the following methods: (1) \u03b5-DP, which is a standard \u03b5-differential privacy algorithm in which noise is added using the Laplace mechanism [5] .", "cite_spans": [{"start": 666, "end": 669, "text": "[5]", "ref_id": "BIBREF4"}], "ref_spans": [], "section": "Experiments"}, {"text": "(2) MDAV-dK which extends the standard microaggregation algorithm MDAV [4] for handling dK-distributions. (3) MPDC-dK is our proposed dK-microaggregation algorithm. We used Orbis [15] to generate 2K-distributions.", "cite_spans": [{"start": 71, "end": 74, "text": "[4]", "ref_id": "BIBREF3"}, {"start": 179, "end": 183, "text": "[15]", "ref_id": "BIBREF13"}], "ref_spans": [], "section": "Datasets"}, {"text": "Evaluation Measures. We used Euclidean distance [19] to measure network structural error between original and perturbed dK-distributions. For clustering algorithms, we measure within-cluster homogeneity using the sum of absolute error [7] ", "cite_spans": [{"start": 48, "end": 52, "text": "[19]", "ref_id": "BIBREF17"}, {"start": 235, "end": 238, "text": "[7]", "ref_id": "BIBREF6"}], "ref_spans": [], "section": "Datasets"}, {"text": "\u2200xj \u2208ci |x j \u2212 \u03bc i | where c i is the set of tuples in cluster i and \u03bc i is the mean of cluster i. Experimental Results. To verify the overall utility of \u03b5-differentially private dK-distribution, we first conducted experiments to compare the structural error between original and perturbed dK-distributions generated by our algorithm MDAV-dK, MPDC-dK and the baseline method \u03b5-DP. Figure 3 presents our experimental results. For \u03b5-DP, we used the following privacy parameters \u03b5 = [0.01, 0.1, 1.0, 10.0], which cover the range of differential privacy levels widely used in the literature [12] . The results for \u03b5-DP is displayed as horizontal lines, as \u03b5-DP does not depend on the parameters k and \u03c4 . From Fig. 3 , we can see that, for all three datasets, our proposed algorithms MDAV-dK and MPDC-dK lead to less structural error for every value of \u03b5 as compared to \u03b5-DP. This is because, by approximating a query \u03b3 to \u03b3 \u2022 M via dk-microaggregation, the errors caused by random noise to achieve \u03b5-differential privacy are reduced significantly. Thus, dK-microaggregation introduces overall less noise to achieve differential privacy.", "cite_spans": [{"start": 587, "end": 591, "text": "[12]", "ref_id": null}], "ref_spans": [{"start": 381, "end": 389, "text": "Figure 3", "ref_id": "FIGREF2"}, {"start": 706, "end": 712, "text": "Fig. 3", "ref_id": "FIGREF2"}], "section": "Datasets"}, {"text": "We then conducted experiments to compare the quality of clusters, in terms of within-cluster homogeneity, generated by MDAV-dK and MPDC-dK. The results are shown in Tables 1 and 2 . We observe that, for values of k and \u03c4 at which MDAV-dK and MPDC-dK generate almost the same number of clusters, as highlighted in bold, MPDC-dK outperforms MDAV-dK by producing clusters with less SAE over all three datasets. This is consistent with the previous discussion in Sect. 4. As MPDC-dK always partitions degree pairs under a distance constraint rather than a fixed-size constraint, thus it generates more homogeneous clusters as compared to MDAV-dK.", "cite_spans": [], "ref_spans": [{"start": 165, "end": 179, "text": "Tables 1 and 2", "ref_id": "TABREF0"}], "section": "Datasets"}, {"text": "We analyze the trade-offs between utility and privacy of dK-graphs generated in the proposed framework. To enhance the utility of differentially private dK-graphs, we approximated an original query \u03b3 to \u03b3 \u2022 M. This thus introduces two kinds of errors: one is random noise to guarantee \u03b5-differential privacy, and the other one is due to microaggregation. We have noticed that, the second kind of error can be reduced by generating homogeneous clusters during microaggregation. On the other hand, for the first kind of error which depends on the sensitivity of \u03b3 \u2022 M, it dominates the impact on the utility of differentially private dK-graphs generated via dk-microaggregation. By reducing sensitivity we can increase the utility of dK-graphs without compromising privacy.", "cite_spans": [], "ref_spans": [], "section": "Discussion."}, {"text": "Graph data anonymization has been widely studied in the literature, and many anonymization techniques [1, 11, 14, 24] have been proposed to enforce privacy over graph data. These techniques can be broadly categorized into three areas: nodes and edges perturbation, k-anonymity, and differential privacy. Perturbation-based approaches follow certain principles to process nodes and edges, including identity removal [14] , edge modification [23] , nodes clustering [11] , and so on. Generally, k-anonymity approaches divide an original graph into at least k-sized blocks so that the probability that an adversary can reidentify one node's identity is at most 1/k. Popular k-anonymity approaches for graph anonymization include k-candidate [11] , k-neighborhood anonymity (k-NA) [24] , k-degree anonymity (k-DA) [14] , k-automorphism, and k-isomorphism (k-iso) [1] .", "cite_spans": [{"start": 102, "end": 105, "text": "[1,", "ref_id": "BIBREF0"}, {"start": 106, "end": 109, "text": "11,", "ref_id": "BIBREF10"}, {"start": 110, "end": 113, "text": "14,", "ref_id": "BIBREF12"}, {"start": 114, "end": 117, "text": "24]", "ref_id": "BIBREF22"}, {"start": 415, "end": 419, "text": "[14]", "ref_id": "BIBREF12"}, {"start": 440, "end": 444, "text": "[23]", "ref_id": "BIBREF21"}, {"start": 464, "end": 468, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 738, "end": 742, "text": "[11]", "ref_id": "BIBREF10"}, {"start": 777, "end": 781, "text": "[24]", "ref_id": "BIBREF22"}, {"start": 810, "end": 814, "text": "[14]", "ref_id": "BIBREF12"}, {"start": 859, "end": 862, "text": "[1]", "ref_id": "BIBREF0"}], "ref_spans": [], "section": "Related Work"}, {"text": "Differential privacy on graph data can be roughly divided into two categories, namely: node differential privacy [3] and edge differential privacy [13] . In general, unlike k-anonymity, differential privacy approaches have mathematical proofs of privacy guarantee. Nevertheless, applying differential privacy on graph data limits utility because graph is highly sensitive to structural changes and adding noise directly into graph data can significantly degrade its utility. To address this issue, many approaches [19] [20] [21] [22] perturb various statistical information of a graph by projecting graph data into other domains using feature-abstraction models [2, 16] . This idea is appealing; however it leads to yielding less data utility due to injecting random noise based on the global sensitivity to guarantee \u03b5differential privacy. Our aim is to anonymize graphs under \u03b5-differential privacy using less sensitive queries. In this regard, we proposed a microaggregation-based framework which reduces the sensitivity via microaggregation, thus reducing the overall noise needed to achieve \u03b5-differentially private graphs.", "cite_spans": [{"start": 113, "end": 116, "text": "[3]", "ref_id": "BIBREF2"}, {"start": 147, "end": 151, "text": "[13]", "ref_id": "BIBREF11"}, {"start": 514, "end": 518, "text": "[19]", "ref_id": "BIBREF17"}, {"start": 519, "end": 523, "text": "[20]", "ref_id": "BIBREF18"}, {"start": 524, "end": 528, "text": "[21]", "ref_id": "BIBREF19"}, {"start": 529, "end": 533, "text": "[22]", "ref_id": "BIBREF20"}, {"start": 662, "end": 665, "text": "[2,", "ref_id": "BIBREF1"}, {"start": 666, "end": 669, "text": "16]", "ref_id": "BIBREF14"}], "ref_spans": [], "section": "Related Work"}], "bib_entries": {"BIBREF0": {"ref_id": "b0", "title": "K-isomorphism: privacy preserving network publication against structural attacks", "authors": [{"first": "J", "middle": [], "last": "Cheng", "suffix": ""}, {"first": "A", "middle": ["W C"], "last": "Fu", "suffix": ""}, {"first": "J", "middle": [], "last": "Liu", "suffix": ""}], "year": 2010, "venue": "SIGMOD", "volume": "", "issn": "", "pages": "459--470", "other_ids": {}}, "BIBREF1": {"ref_id": "b1", "title": "Hierarchical structure and the prediction of missing links in networks", "authors": [{"first": "A", "middle": [], "last": "Clauset", "suffix": ""}, {"first": "C", "middle": [], "last": "Moore", "suffix": ""}, {"first": "M", "middle": ["E"], "last": "Newman", "suffix": ""}], "year": 2008, "venue": "Nature", "volume": "453", "issn": "7191", "pages": "98--101", "other_ids": {}}, "BIBREF2": {"ref_id": "b2", "title": "Publishing graph degree distribution with node differential privacy", "authors": [{"first": "W", "middle": ["Y"], "last": "Day", "suffix": ""}, {"first": "N", "middle": [], "last": "Li", "suffix": ""}, {"first": "M", "middle": [], "last": "Lyu", "suffix": ""}], "year": 2016, "venue": "SIGMOD", "volume": "", "issn": "", "pages": "123--138", "other_ids": {}}, "BIBREF3": {"ref_id": "b3", "title": "Ordinal, continuous and heterogeneous k-anonymity through microaggregation", "authors": [{"first": "J", "middle": [], "last": "Domingo-Ferrer", "suffix": ""}, {"first": "V", "middle": [], "last": "Torra", "suffix": ""}], "year": 2005, "venue": "Data Min. Knowl. Discov", "volume": "11", "issn": "2", "pages": "195--212", "other_ids": {"DOI": ["10.1007/s10618-005-0007-5"]}}, "BIBREF4": {"ref_id": "b4", "title": "Calibrating noise to sensitivity in private data analysis", "authors": [{"first": "C", "middle": [], "last": "Dwork", "suffix": ""}, {"first": "F", "middle": [], "last": "Mcsherry", "suffix": ""}, {"first": "K", "middle": [], "last": "Nissim", "suffix": ""}, {"first": "A", "middle": [], "last": "Smith", "suffix": ""}], "year": 2006, "venue": "TCC 2006", "volume": "3876", "issn": "", "pages": "265--284", "other_ids": {"DOI": ["10.1007/11681878_14"]}}, "BIBREF5": {"ref_id": "b5", "title": "The algorithmic foundations of differential privacy", "authors": [{"first": "C", "middle": [], "last": "Dwork", "suffix": ""}, {"first": "A", "middle": [], "last": "Roth", "suffix": ""}], "year": 2014, "venue": "FnT-TCS", "volume": "9", "issn": "3-4", "pages": "211--407", "other_ids": {}}, "BIBREF6": {"ref_id": "b6", "title": "Fast and robust general purpose clustering algorithms", "authors": [{"first": "V", "middle": [], "last": "Estivill-Castro", "suffix": ""}, {"first": "J", "middle": [], "last": "Yang", "suffix": ""}], "year": 2000, "venue": "PRICAI 2000", "volume": "1886", "issn": "", "pages": "208--218", "other_ids": {"DOI": ["10.1007/3-540-44533-1_24"]}}, "BIBREF7": {"ref_id": "b7", "title": "Towards privacy for social networks: a zero-knowledge based definition of privacy", "authors": [{"first": "J", "middle": [], "last": "Gehrke", "suffix": ""}, {"first": "E", "middle": [], "last": "Lui", "suffix": ""}, {"first": "R", "middle": [], "last": "Pass", "suffix": ""}], "year": 2011, "venue": "TCC 2011", "volume": "6597", "issn": "", "pages": "432--449", "other_ids": {"DOI": ["10.1007/978-3-642-19571-6_26"]}}, "BIBREF8": {"ref_id": "b8", "title": "2.5 k-graphs: from sampling to generation", "authors": [{"first": "M", "middle": [], "last": "Gjoka", "suffix": ""}, {"first": "M", "middle": [], "last": "Kurant", "suffix": ""}, {"first": "A", "middle": [], "last": "Markopoulou", "suffix": ""}], "year": 2013, "venue": "", "volume": "", "issn": "", "pages": "1968--1976", "other_ids": {}}, "BIBREF9": {"ref_id": "b9", "title": "Accurate estimation of the degree distribution of private networks", "authors": [{"first": "M", "middle": [], "last": "Hay", "suffix": ""}, {"first": "C", "middle": [], "last": "Li", "suffix": ""}, {"first": "G", "middle": [], "last": "Miklau", "suffix": ""}, {"first": "D", "middle": [], "last": "Jensen", "suffix": ""}], "year": 2009, "venue": "ICDM", "volume": "", "issn": "", "pages": "169--178", "other_ids": {}}, "BIBREF10": {"ref_id": "b10", "title": "Publishing differentially private datasets via stable microaggregation", "authors": [{"first": "M", "middle": [], "last": "Hay", "suffix": ""}, {"first": "G", "middle": [], "last": "Miklau", "suffix": ""}, {"first": "D", "middle": [], "last": "Jensen", "suffix": ""}, {"first": "D", "middle": [], "last": "Towsley", "suffix": ""}, {"first": "P", "middle": [], "last": "Weis", "suffix": ""}, {"first": "M", "middle": [], "last": "Iftikhar", "suffix": ""}, {"first": "Q", "middle": [], "last": "Wang", "suffix": ""}, {"first": "Y", "middle": [], "last": "Lin", "suffix": ""}], "year": 2008, "venue": "", "volume": "", "issn": "", "pages": "662--665", "other_ids": {}}, "BIBREF11": {"ref_id": "b11", "title": "Publishing attributed social graphs with formal privacy guarantees", "authors": [{"first": "Z", "middle": [], "last": "Jorgensen", "suffix": ""}, {"first": "T", "middle": [], "last": "Yu", "suffix": ""}, {"first": "G", "middle": [], "last": "Cormode", "suffix": ""}], "year": 2016, "venue": "SIGMOD", "volume": "", "issn": "", "pages": "107--122", "other_ids": {}}, "BIBREF12": {"ref_id": "b12", "title": "Towards identity anonymization on graphs", "authors": [{"first": "K", "middle": [], "last": "Liu", "suffix": ""}, {"first": "E", "middle": [], "last": "Terzi", "suffix": ""}], "year": 2008, "venue": "", "volume": "", "issn": "", "pages": "93--106", "other_ids": {}}, "BIBREF13": {"ref_id": "b13", "title": "Orbis: rescaling degree correlations to generate annotated internet topologies", "authors": [{"first": "P", "middle": [], "last": "Mahadevan", "suffix": ""}, {"first": "C", "middle": [], "last": "Hubble", "suffix": ""}, {"first": "D", "middle": [], "last": "Krioukov", "suffix": ""}, {"first": "B", "middle": [], "last": "Huffaker", "suffix": ""}, {"first": "A", "middle": [], "last": "Vahdat", "suffix": ""}], "year": 2007, "venue": "SIGCOMM", "volume": "", "issn": "", "pages": "325--336", "other_ids": {}}, "BIBREF14": {"ref_id": "b14", "title": "Systematic topology analysis and generation using degree correlations", "authors": [{"first": "P", "middle": [], "last": "Mahadevan", "suffix": ""}, {"first": "D", "middle": [], "last": "Krioukov", "suffix": ""}, {"first": "K", "middle": [], "last": "Fall", "suffix": ""}, {"first": "A", "middle": [], "last": "Vahdat", "suffix": ""}], "year": 2006, "venue": "SIGCOMM", "volume": "", "issn": "", "pages": "135--146", "other_ids": {}}, "BIBREF15": {"ref_id": "b15", "title": "Privacy integrated queries: an extensible platform for privacypreserving data analysis", "authors": [{"first": "F", "middle": ["D"], "last": "Mcsherry", "suffix": ""}], "year": 2009, "venue": "", "volume": "", "issn": "", "pages": "19--30", "other_ids": {}}, "BIBREF16": {"ref_id": "b16", "title": "Calibrating data to sensitivity in private data analysis", "authors": [{"first": "D", "middle": [], "last": "Proserpio", "suffix": ""}, {"first": "S", "middle": [], "last": "Goldberg", "suffix": ""}, {"first": "F", "middle": [], "last": "Mcsherry", "suffix": ""}], "year": 2014, "venue": "", "volume": "", "issn": "", "pages": "637--648", "other_ids": {}}, "BIBREF17": {"ref_id": "b17", "title": "Sharing graphs using differentially private graph models", "authors": [{"first": "A", "middle": [], "last": "Sala", "suffix": ""}, {"first": "X", "middle": [], "last": "Zhao", "suffix": ""}, {"first": "C", "middle": [], "last": "Wilson", "suffix": ""}, {"first": "H", "middle": [], "last": "Zheng", "suffix": ""}, {"first": "B", "middle": ["Y"], "last": "Zhao", "suffix": ""}], "year": 2011, "venue": "SIGCOMM", "volume": "", "issn": "", "pages": "81--98", "other_ids": {}}, "BIBREF18": {"ref_id": "b18", "title": "Preserving differential privacy in degree-correlation based graph generation", "authors": [{"first": "Y", "middle": [], "last": "Wang", "suffix": ""}, {"first": "X", "middle": [], "last": "Wu", "suffix": ""}], "year": 2013, "venue": "Trans. Data Priv", "volume": "6", "issn": "2", "pages": "127--145", "other_ids": {}}, "BIBREF19": {"ref_id": "b19", "title": "Differential privacy preserving spectral graph analysis", "authors": [{"first": "Y", "middle": [], "last": "Wang", "suffix": ""}, {"first": "X", "middle": [], "last": "Wu", "suffix": ""}, {"first": "L", "middle": [], "last": "Wu", "suffix": ""}, {"first": "J", "middle": [], "last": "Pei", "suffix": ""}, {"first": "V", "middle": ["S"], "last": "Tseng", "suffix": ""}, {"first": "L", "middle": [], "last": "Cao", "suffix": ""}, {"first": "H", "middle": [], "last": "Motoda", "suffix": ""}], "year": 2013, "venue": "PAKDD 2013", "volume": "7819", "issn": "", "pages": "329--340", "other_ids": {"DOI": ["10.1007/978-3-642-37456-2_28"]}}, "BIBREF20": {"ref_id": "b20", "title": "Differentially private network data release via structural inference", "authors": [{"first": "Q", "middle": [], "last": "Xiao", "suffix": ""}, {"first": "R", "middle": [], "last": "Chen", "suffix": ""}, {"first": "K", "middle": ["L"], "last": "Tan", "suffix": ""}], "year": 2014, "venue": "SIGKDD", "volume": "", "issn": "", "pages": "911--920", "other_ids": {}}, "BIBREF21": {"ref_id": "b21", "title": "Randomizing social networks: a spectrum preserving approach", "authors": [{"first": "X", "middle": [], "last": "Ying", "suffix": ""}, {"first": "X", "middle": [], "last": "Wu", "suffix": ""}], "year": 2008, "venue": "SDM", "volume": "", "issn": "", "pages": "739--750", "other_ids": {}}, "BIBREF22": {"ref_id": "b22", "title": "Preserving privacy in social networks against neighborhood attacks", "authors": [{"first": "B", "middle": [], "last": "Zhou", "suffix": ""}, {"first": "J", "middle": [], "last": "Pei", "suffix": ""}], "year": 2008, "venue": "ICDE", "volume": "", "issn": "", "pages": "506--515", "other_ids": {}}}, "ref_entries": {"FIGREF0": {"text": "A high-level overview of the proposed framework (dK-Microaggregation).", "latex": null, "type": "figure"}, "FIGREF1": {"text": "An illustration of our proposed algorithms.", "latex": null, "type": "figure"}, "FIGREF2": {"text": "Let C 1 , . . . C n be the clusters in D resulting from running M over \u03b3 dK (G). Then the sensitivity of \u03b3 dK \u2022 M is upper bounded by (4 \u00d7 g + 1) \u00d7 n.", "latex": null, "type": "figure"}, "FIGREF3": {"text": ", a 2K-distribution D is partitioned into multiple clusters by a clustering function C, i.e. C(D) = D . Then, the frequency values of tuples in each cluster are aggregated by an aggregate function A, i.e. A(D ) = D.", "latex": null, "type": "figure"}, "FIGREF4": {"text": "MPDC-dK Input: D: dK-distribution; \u03c4 : distance interval Output: D : set of clusters 1 D := \u03c6; 2 b list := [ ]; 3 foreach (g, g ) \u2208 D do 4 foreach bi \u2208 covering boxes((g, g ), \u03c4) do 5 Add bi to b list (if not exist) and increase the count of bi by 1 in b list. 6 Add (g, g ) to bi in b list 7 while b list is not empty do 8 bmax \u2190 the box with the maximum count 9 dmax \u2190 the degree pairs in bmax 10 D := D \u222a {dmax} 11 Remove bmax from b list. 12 foreach (g, g ) \u2208 dmax do 13 foreach bi \u2208 covering boxes((g, g ), \u03c4) do 14 Remove (g, g ) from bi in b list 15 Decrease the count of bi in b list by 1 and remove bi if its count is 0 16 Return D", "latex": null, "type": "figure"}, "FIGREF5": {"text": "We used three network datasets in the experiments: (1) polbooks 1 contains 105 nodes and 441 edges. It is a network of books about US politics. (2) ca-GrQc (see footnote 1) contains 5,242 nodes and 14,496 edges. (3) ca-HepTh (see footnote 1) contains 9,877 nodes and 25,998 edges. Both ca-GrQc and ca-HepTh are scientific collaborative networks between authors and papers.", "latex": null, "type": "figure"}, "FIGREF6": {"text": "Comparison on the Euclidean distance between original and perturbed dKdistributions under varying k, \u03c4 , and \u03b5 over three datasets: (a)-(d) polbooks dataset, (e)-(h) ca-GrQc dataset, and (i)-(l) ca-HepTh dataset.", "latex": null, "type": "figure"}, "TABREF0": {"text": "Performance of MDAV-dK under different values of k.", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Datasets polbooks </td><td>Measures </td><td>k=1 </td><td>k=3 </td><td>k=5 </td><td>k=7 </td><td>k=9 </td><td>k=11 </td><td>k=13 </td><td>k=15\n</td></tr><tr><td>SAE </td><td>0 </td><td>144.6 </td><td>184.67 </td><td>224.84 </td><td>273.6 </td><td>292.21 </td><td>299.15 </td><td>334.25\n</td></tr><tr><td>ca-GrQc </td><td># Clusters </td><td>161 </td><td>53 </td><td>32 </td><td>23 </td><td>17 </td><td>14 </td><td>12 </td><td>10\n</td></tr><tr><td>SAE </td><td>0 </td><td>1073.3 </td><td>1476 </td><td>1810.5 </td><td>2166.8 </td><td>2313.7 </td><td>2555.5 </td><td>2730\n</td></tr><tr><td># Clusters </td><td>1233 </td><td>411 </td><td>246 </td><td>176 </td><td>137 </td><td>112 </td><td>94 </td><td>82\n</td></tr><tr><td>ca-HepTh </td><td>SAE </td><td>0 </td><td>968.72 </td><td>1304 </td><td>1599.8 </td><td>1893.9 </td><td>2063 </td><td>2232.9 </td><td>2389.7\n</td></tr><tr><td># Clusters </td><td>1295 </td><td>431 </td><td>259 </td><td>185 </td><td>143 </td><td>117 </td><td>99 </td><td>86\n</td></tr></table></body></html>"}, "TABREF1": {"text": "Performance of MPDC-dK under different values of \u03c4 .", "latex": null, "type": "table", "html": "<html><body><table><tr><td>Datasets polbooks </td><td>Measures </td><td>\u03c4 =1 </td><td>\u03c4 =3 </td><td>\u03c4 =5 </td><td>\u03c4 =7 </td><td>\u03c4 =9 </td><td>\u03c4 =11 </td><td>\u03c4 =13 </td><td>\u03c4 =15\n</td></tr><tr><td>SAE </td><td>90.72 </td><td>192.15 </td><td>328.96 </td><td>424.2 </td><td>563.73 </td><td>617.63 </td><td>723.06 </td><td>795.77\n</td></tr><tr><td>ca-GrQc </td><td># Clusters </td><td>68 </td><td>25 </td><td>13 </td><td>8 </td><td>7 </td><td>5 </td><td>3 </td><td>3\n</td></tr><tr><td>SAE </td><td>725.38 </td><td>1732.1 </td><td>2630.6 </td><td>3470.6 </td><td>4262.9 </td><td>5176.7 </td><td>6170.1 </td><td>7037.7\n</td></tr><tr><td># Clusters </td><td>483 </td><td>178 </td><td>98 </td><td>61 </td><td>42 </td><td>35 </td><td>26 </td><td>20\n</td></tr><tr><td>ca-HepTh </td><td>SAE </td><td>841.87 </td><td>1761.8 </td><td>2773.3 </td><td>3721.4 </td><td>4719.2 </td><td>5623.8 </td><td>6402.6 </td><td>7034.2\n</td></tr><tr><td># Clusters </td><td>412 </td><td>140 </td><td>73 </td><td>37 </td><td>34 </td><td>24 </td><td>19 </td><td>15\n</td></tr></table></body></html>"}}, "back_matter": [{"text": "In this paper, we have formalized a general microaggregation-based framework for anonymizing graphs that preserves the utility of dK-graphs while enforcing \u03b5-differential privacy. Based on the proposed framework, we have proposed an algorithm for microaggregating dK-distributions under a distance constraint. We have theoretically analyzed the privacy property of our framework and the complexity of our algorithm. The effectiveness of our work has been empirically verified over three real-world datasets. Future extensions to this work will consider zero knowledge privacy (ZKP) [8] , to release statistics about social groups in a network while protecting privacy of individuals.", "cite_spans": [{"start": 582, "end": 585, "text": "[8]", "ref_id": "BIBREF7"}], "ref_spans": [], "section": "Conclusion"}]}