{
    "paper_id": "be217adec221d25b2c8d99e3fea10fcaa459dd73",
    "metadata": {
        "title": "Balancing the Spread of Two Opinions in Sparse Social Networks",
        "authors": [
            {
                "first": "Du\u0161an",
                "middle": [],
                "last": "Knop",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Czech Technical University",
                    "location": {
                        "settlement": "Prague, Prague",
                        "country": "Czech Republic"
                    }
                },
                "email": ""
            },
            {
                "first": "\u0160imon",
                "middle": [],
                "last": "Schierreich",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Czech Technical University",
                    "location": {
                        "settlement": "Prague, Prague",
                        "country": "Czech Republic"
                    }
                },
                "email": ""
            },
            {
                "first": "Ond\u0159ej",
                "middle": [],
                "last": "Such\u00fd",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "Czech Technical University",
                    "location": {
                        "settlement": "Prague, Prague",
                        "country": "Czech Republic"
                    }
                },
                "email": ""
            }
        ]
    },
    "abstract": [
        {
            "text": "Inspired by the famous Target Set Selection problem, we propose a new discrete model for simultaneously spreading several opinions within a social network and perform an initial study of its complexity. Here, we are given a social network, a seed-set of agents for each opinion, and two thresholds for each agent. The first threshold represents willingness of an agent to adopt an opinion if the agent has no opinion at all, while the second threshold states for willingness to acquire second opinion. The goal is to add as few agents as possible to the initial seed-sets such that, once the process started with these seed-sets stabilizes, each agent has either both opinions or none.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "We show that the problem is NP-hard. Further, we investigate the complexity from the parameterized point-of-view. The problem is W[1]-hard with respect to the solution size. The problem remains W[1]-hard even for the combination of parameters the solution size and treewidth of the network even if all thresholds are at most 3, or the activation process stabilizes within 4 rounds. On the other hand, the problem is FPT when parameterized by the number of rounds, maximum threshold, and treewidth. This algorithm applies also for combined parameter treedepth and maximum threshold. Finally, we show that the problem is FPT when parameterized by vertex cover number of the input network alone. Our results also implies that the original Target Set Selection problem is FPT when parameterized by 3-PVC.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        },
        {
            "text": "Theory of computation \u2192 Parameterized complexity and exact algorithms; Mathematics of computing \u2192 Graph algorithms",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Our work is motivated by the recently proposed stochastic models in opinion diffusion [18, 1] , where an extension of the Target Set Selection (TSS for short) problem is proposed. TSS was introduced by Domingos and Richardson [14] in order to study influence of direct marketing on a social network (see, e.g., the monographs [4, 6, 23 ] and references therein) and is defined as follows. We are given a (social) network (i.e., an undirected graph G = (V, E)) and a threshold value f (v) \u2208 N for every agent v \u2208 V . The task is to select a set of agents T \u2286 V so that when the following activation process",
            "cite_spans": [
                {
                    "start": 86,
                    "end": 90,
                    "text": "[18,",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 91,
                    "end": 93,
                    "text": "1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 226,
                    "end": 230,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 326,
                    "end": 329,
                    "text": "[4,",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 330,
                    "end": 332,
                    "text": "6,",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 333,
                    "end": 335,
                    "text": "23",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "stabilizes with the set P T (i.e., P T = P T +1 ) the size of P T is maximized; an important setting being we want P T = V . It is worth mentioning that this problem is closely related to the model of cascades [16, Chapter 16] . Later, Garimella et al. [18] extended this model to capture diffusion of two opinions and recently Becker et al. [1] studied three and more opinions. These works are mainly motivated by diffusion in social network where it is desirable for the considered opinions to spread roughly equally and thus preventing unwanted behavior of the social network such as, e.g., echo bubbles or strengthening of extreme agents (see, e.g., [10, Figure 1] ). That is, the most desired outcome is that every agent, in the case for two opinions, either has no opinion or both using a similar activation process as above.",
            "cite_spans": [
                {
                    "start": 210,
                    "end": 214,
                    "text": "[16,",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 215,
                    "end": 226,
                    "text": "Chapter 16]",
                    "ref_id": null
                },
                {
                    "start": 253,
                    "end": 257,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 342,
                    "end": 345,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [
                {
                    "start": 659,
                    "end": 668,
                    "text": "Figure 1]",
                    "ref_id": "FIGREF7"
                }
            ],
            "section": "Introduction"
        },
        {
            "text": "Before we formally define the model we propose in this work (the 2-Opinion Target Set Selection problem; 2OTSS for short), let us briefly mention that in the two and more opinion setting the motivation is to balance the spread and not to maximize one opinion spread. Then we discuss the differences to the model of Garimella et al. [18] in more detail.",
            "cite_spans": [
                {
                    "start": 332,
                    "end": 336,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "Balancing Two Opinions One might ask why to balance the spread of the two opinions already present in a social network. Suppose there are two (rather antagonistic) opinions in a social network-if one knows which of these is the truthful one, they might, e.g., block the other. What can we do if we can't tell which one is truthful? If many agents receive only the opinion which later turns out to be deceptive, then these agents might feel deceived by the network. Instead, we decide to help both the opinions to spread evenly. The agents receiving two different opinions can take adequate meassures to react to the situation. Real world examples of this kind of information spread include, e.g., two experts having different opinions on covid-19 vaccination and both claiming having data supporting their opinion-how can an AI or even a human agent tell which of the two is trustworthy?",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Introduction"
        },
        {
            "text": "We are given a graph G = (V, E), seed sets S a , S b \u2286 V , threshold functions f 1 , f 2 : V \u2192 N, positive integer T \u2208 N, and a positive integer B \u2208 N.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Two-Opinion Target Set Selection"
        },
        {
            "text": "The task is to select two additional seed sets T a , T b \u2286 V with |T a | + |T b | \u2264 B such that the following selection process terminates with P T a = P T +1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Two-Opinion Target Set Selection"
        },
        {
            "text": ". The initialization is by setting P 0 a = S a \u222a T a and P 0 b = S b \u222a T b and the process continues with",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Two-Opinion Target Set Selection"
        },
        {
            "text": "for i \u2265 0 and c \u2208 {a, b}, where \u00acc is the element in the set {a, b} \\ {c}. I.e., an agent v gains opinion c if she has no opinion and the number of her neighbors already having opinion c is at least f 1 (v) or if she already has the other opinion and the number of her neighbors already having opinion c is at least f 2 (v). It is not hard to see that the above process terminates in at most 2n steps, where n = |V |, since in each nonterminal step we add at least one vertex to P i a \u222a P i b (i.e., P i a \\ P i\u22121",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Two-Opinion Target Set Selection"
        },
        {
            "text": ". Thus, letting T = 2n corresponds to putting no restriction on the length of the process. Note that we model the network as an undirected graph. Furthermore, unlike previous works, we do not have opinion-specific threshold values but we rather distinguish the order in which the agent is exposed to the opinions in question. We believe that this is an interesting setting as it can capture different agent's mindsets. First, an agent v might be tougher towards the second opinion (by setting, e.g., f 2 (v) = 3f 1 (v)) for which we can see an application in modeling of, e.g., following political leaders. Second, an agent v might infer the second opinion easily (by setting, e.g., f 2 (v) = 1 4 f 1 (v)) for which we can see an application in modeling of, e.g., spread of different viruses in a population, since the first virus in a human body decreases its ability to resist other viruses. It is worth pointing out that (even in the first mindset) if both opinions are strong enough at the same time, then the agent receives both the opinions (and evaluates the number of neighboring agents having a certain opinion only against the threshold value f 1 (v)). For a running example of the selection process we refer the reader to Figure 2 (in the appendix).",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 1233,
                    "end": 1241,
                    "text": "Figure 2",
                    "ref_id": null
                }
            ],
            "section": "Two-Opinion Target Set Selection"
        },
        {
            "text": "It is easy to note that we can always assume S a \u2229 S b = \u2205 (unless f i is defined as some function of deg(v)); see Reduction Rule 1. Furthermore, without loss of generality, we can assume that B < |S a | + |S b | as otherwise T a = S b and T b = S a is a solution.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Two-Opinion Target Set Selection"
        },
        {
            "text": "Finally, TSS can be modelled by 2OTSS by taking the same network, an empty S a and adding each vertex to S b and treating its f as f 2 . The task is then to select minimum T a such that the process covers the whole vertex set with opinion a. Therefore many known lower bounds for TSS apply also to 2OTSS.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Two-Opinion Target Set Selection"
        },
        {
            "text": "As already mentioned, our work builds on foundations from the study of Target Set Selection. This problem itself was introduced in the context of direct marketing in social networks [14] ; followed by more results and applications (see, e.g., the works Kempe et al. [21] or Richardson and Domingos [33] for the relation to viral marketing). The initial research direction focused on studying the stochastic setting where the threshold values are selected at random and we try to maximize the expected spread of information [21, 22, 23, 29] . It is not surprising that TSS is NP-hard (the \"static\" variant where threshold values are part of the input), moreover, both its natural optimization variants (either maximize the size of P T or minimize the size of T so that P T is the whole vertex set) are hard to approximate. In fact, for the minimization variant Chen [5] gave a polylogarithmic approximation lower bound which holds even if the input graph is bipartite and has bounded degree and all threshold values are either 1 or 2.",
            "cite_spans": [
                {
                    "start": 182,
                    "end": 186,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 266,
                    "end": 270,
                    "text": "[21]",
                    "ref_id": null
                },
                {
                    "start": 289,
                    "end": 302,
                    "text": "Domingos [33]",
                    "ref_id": null
                },
                {
                    "start": 523,
                    "end": 527,
                    "text": "[21,",
                    "ref_id": null
                },
                {
                    "start": 528,
                    "end": 531,
                    "text": "22,",
                    "ref_id": null
                },
                {
                    "start": 532,
                    "end": 535,
                    "text": "23,",
                    "ref_id": null
                },
                {
                    "start": 536,
                    "end": 539,
                    "text": "29]",
                    "ref_id": null
                },
                {
                    "start": 865,
                    "end": 868,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "It is not hard to see that TSS itself captures, e.g., Vertex Cover. It follows from Mathieson [28] that from the parameterized perspective TSS is W[P]-complete (which implies it is W[1]-hard) for the natural parameter (size of the solution set T ); see Luo et al. [25] for the relation of the r-Degenerate Editing problem studied by Mathieson to TSS. Given all of this it is not surprising that some special variants were introduced-such as when all threshold values are bounded by a constant or the majority variant in which all threshold values are set to half of the neighborhood size. Cicalese et al. [9, 8] considered a variant in which the number of rounds of the activation process is bounded. Later Ben-Zwi et al. [2] initiated a systematic study of TSS for structural parameters. Together with sequel works [3, 7, 15, 19, 31] this yields fairly complete understanding of tractability for structural parameters:",
            "cite_spans": [
                {
                    "start": 264,
                    "end": 268,
                    "text": "[25]",
                    "ref_id": null
                },
                {
                    "start": 605,
                    "end": 608,
                    "text": "[9,",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 609,
                    "end": 611,
                    "text": "8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 722,
                    "end": 725,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                },
                {
                    "start": 816,
                    "end": 819,
                    "text": "[3,",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 820,
                    "end": 822,
                    "text": "7,",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 823,
                    "end": 826,
                    "text": "15,",
                    "ref_id": "BIBREF14"
                },
                {
                    "start": 827,
                    "end": 830,
                    "text": "19,",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 831,
                    "end": 834,
                    "text": "31]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "TSS is FPT when parameterized by the vertex cover number, bandwidth, or feedback edge number, the majority variant is FPT for parameters neighborhood diversity or twin-cover number, the majority variant is W[1]-hard for parameter treedepth or modularwidth, and TSS is FPT when parameterized by cliquewidth if all threshold values are bounded by a parameter (or constant).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "As we have already mentioned, the study of related problems concerning more than one opinion has been initiated rather recently [18] . Both Garimella et al. [18] and Becker et al. [1] study related problem in stochastic setting, i.e., they assume the input is a directed graph and there is certain probability that an opinion is passed along an arc. ",
            "cite_spans": [
                {
                    "start": 128,
                    "end": 132,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 157,
                    "end": 161,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 180,
                    "end": 183,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                }
            ],
            "ref_spans": [],
            "section": "Related Work"
        },
        {
            "text": "In this work we propose a new discrete model for spreading information with at least two opinions-via the related computation problem 2-Opinion Target Set Selection-and perform initial study of its (parameterized) complexity. It should be pointed out that our model is (probably) the simplest and most natural combination of the deterministic model of [21] and the probabilistic model of [18] for spreading two (more) opinions. It is worth pointing out that the model we propose is the first allowing a certain level of interaction between the two opinions spreading in the network. In the previously proposed probabilistic model each agent has opinion-specific thresholds. Thus, our model enables the study of spreading opinions where if an agent receives one of them, this directly affects their ability/willingness to acquire the other.",
            "cite_spans": [
                {
                    "start": 352,
                    "end": 356,
                    "text": "[21]",
                    "ref_id": null
                },
                {
                    "start": 388,
                    "end": 392,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                }
            ],
            "ref_spans": [],
            "section": "Our Contribution"
        },
        {
            "text": "The two most natural parameters for this problem are the sizes of the seed-sets (i.e., |S a | + |S b |) and the solution size (i.e., the budget B). The 2OTSS problem is W[1]-hard with respect to both these parameters (Theorem 10) and thus, following the approach for single opinion, we focus on studying its complexity for structural parameters of the input graph. Limiting the structure of the input is further motivated by the recent study of Maniu et al. [26] who showed that many real-world networks exhibit bounded treewidth. However, we show (Theorem 10) that the 2OTSS problem is W[1]-hard for the combination of parameters |S a | + |S b | and the treewidth of the input graph even if we assume that",
            "cite_spans": [
                {
                    "start": 458,
                    "end": 462,
                    "text": "[26]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Our Contribution"
        },
        {
            "text": "It is worth pointing out that the activation process is quite long in this case; thus one may ask what happens if we limit its length. The 2OTSS problem is W[1]-hard for the combination of parameters |S a | + |S b | and the treewidth of the input graph even if we assume that any activation process stabilizes within 4 rounds (Theorem 11) and f 1 (v) \u2264 f 2 (v) for all v \u2208 V (G). In order to more precisely understand the complexity of the problem, we use more fine grained structural parameters such as pathwidth, feedback vertex number, or 4-path vertex cover number; which we defer to the appendix.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Our Contribution"
        },
        {
            "text": "An algorithmic counterpart to the two hardness results is then the following. We show that 2OTSS is fixed-parameter tractable when parameterized by the number of rounds of the activation process, maximum threshold, and the treewidth of the input graph (Theorem 3). The same algorithm applies for the combined parameter treedepth of the input graph and the maximum threshold. Note that we do not assume anything about the relation of f 1 (v) and f 2 (v). We summarize our complexity results in Table 1 .",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 493,
                    "end": 500,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "Our Contribution"
        },
        {
            "text": "Furthermore, 2OTSS is in FPT for the parameter vertex cover number (Theorem 2) and 3-path vertex cover (Theorem 8). We note that the second algorithm applies also to the original TSS and was previously not known.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Our Contribution"
        },
        {
            "text": "Since we model the social network of agents as a graph, we rely on basic graph notions. A graph is a pair G = (V, E), where the elements of V are vertices (representing agents) and E \u2286 V For a set of vertices U the subgraph induced by U is the graph (U, E \u2229 U 2 ). For a set of vertices S the graph G \u2212 S is the subgraph induced by the set V \\ S. For further notions from graph theory we refer the reader to the monograph of Diestel [13] .",
            "cite_spans": [
                {
                    "start": 433,
                    "end": 437,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                }
            ],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "A tree decomposition of a graph G is a triple (T, \u03b2, r), where T is a tree rooted at node r and \u03b2 :",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "Treewidth of a graph G (denoted tw(G)) is the minimum width of a tree decomposition of G over all such decompositions.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "\u25b6 Definition 1. A tree decomposition of a graph G is nice if deg T (r) = 1, \u03b2(r) = \u2205, and each node x \u2208 V (T ) is of one of the following five types:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "Leaf node-x has no children and \u03b2(x) = \u2205; Introduce vertex node-x has exactly one child y and \u03b2(x) = \u03b2(y) \u222a {u} for some u \u2208 V (G) \\ \u03b2(y); Introduce edge node-x has exactly one child y, \u03b2(x) = \u03b2(y), and an edge {u, v} \u2208 E(G) for u, v \u2208 \u03b2(x) is introduced; Forget node-x has exactly one child y and \u03b2(x) = \u03b2(y) \\ {u} for some u \u2208 \u03b2(y); Join node-x has exactly two children y, z and \u03b2(x) = \u03b2(y) = \u03b2(z). Every edge e \u2208 E(G) is introduced exactly once.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "For a tree decomposition (T, \u03b2, r) and a node x \u2208 V (T ), we denote by V x the union of vertices in \u03b2(x) and in \u03b2(y) for all descendants y of x in T . By E x , we denote the set of edges introduced in the subtree of T rooted at x. Altogether, we denote by G x the graph (V x , E x ). We also denote by \u03b1(x) the set V x \\ \u03b2(x). See Cygan et al. [12] for more thorough introduction to treewidth.",
            "cite_spans": [
                {
                    "start": 344,
                    "end": 348,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "Let G = (V, E) be a graph. The treedepth of a graph, denoted td(G), is 1 if G has only a single vertex, 1 + min v\u2208V (G) td(G \u2212 v) if G is connected, and otherwise it is maximum treedepth of connected components of G.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "Let G = (V, E) be a graph and let k be a positive integer. A set U \u2286 V is a k-path vertex cover (k-pvc) if G \u2212 U does not contain path with k vertices as a subgraph. The k-path vertex cover number (k-pvcn) of G is the minimum size of a k-pvc of G. We observe that 2-pvc of G is in fact a vertex cover of the graph G.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "N -fold Integer Programming N -fold integer programming (N -fold IP) is the problem of minimizing a separable convex objective (for us it suffices to minimize a linear objective) over the following set of constraints. Note that x (i) is a set of t i variables (the so-called brick).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "Where we have D i \u2208 Z r\u00d7ti and A i \u2208 Z si\u00d7ti ; let us denote s = max i\u2208[N ] s i and let the dimension be n, i.e., n = i\u2208[N ] t i . The constraints (1) are the so-called linking constraints and the rest are the local constraints. The current best algorithm solving the N -fold IP in (rs\u2206) O(r 2 s 2 ) n 1+o(1) time is by Cslovjecsek et al. [11] , where \u2206 = max i\u2208 [N ] (max(\u2225D i \u2225 \u221e , \u2225A i \u2225 \u221e )).",
            "cite_spans": [
                {
                    "start": 339,
                    "end": 343,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                },
                {
                    "start": 363,
                    "end": 367,
                    "text": "[N ]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "Parameterized Complexity An instance of a parameterized problem is (x, k), where x is the problem input and k \u2208 N is the value of the parameter. A parameterized problem L is fixed-parameter tractable (is in FPT) if it is possible to decide whether (x, k) \u2208 L in f (k) \u00b7 |x| O (1) time, where f : N \u2192 N is a computable function. The class W [1] contains both all problems in FPT and also problems believed not to be in FPT. Hence, if a problem is proven W[1]-hard, then it is presumably not in FPT. For more comprehensive overview of parameterized complexity theory we refer the reader to the monograph of Cygan et al. [12] . Our hardness reductions start from the Partitioned Subgraph Isomorphism (PSI) problem. Here, given two undirected graphs G and H with |V (H)| \u2264 |V (G)| and a mapping \u03c8 : V (G) \u2192 V (H), the task is to determine whether H is isomorphic to a subgraph of G. Since Partitioned Clique, which is W[1]-complete [32] with respect to the size of the clique, is a special case of PSI where H is a complete graph, it follows that PSI is W[1]-hard with respect to |E(H)|.",
            "cite_spans": [
                {
                    "start": 276,
                    "end": 279,
                    "text": "(1)",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 340,
                    "end": 343,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 618,
                    "end": 622,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "Preliminaries"
        },
        {
            "text": "We begin with an easy reduction rule. It is easy to check that it is safe, i.e., the new instance is equivalent to the original one.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Positive Results"
        },
        {
            "text": "In this section we show that 2OTSS is FPT with respect to the vertex cover number of the underlying graph. Let C be a minimum size vertex cover in G and let k = |C|. We first define a couple of reduction rules. We apply the rules as much as possible which bounds the remaining budget B by 2k. We always apply the first applicable rule. Safeness deferred to appendix. Proof. Let (G, S a , S b , f 1 , f 2 , T , B) be an instance of 2OTSS. We assume the input instance to be reduced with respect to the presented reduction rules. If B \u2265 2k, then Reduction Rule 4 applies. Hence we assume B < 2k.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Vertex Cover"
        },
        {
            "text": "We define an equivalence relation \u223c on V \\ C such that for u, v \u2208 V \\ C we have u \u223c v if and only if N (u) = N (v), and for i = 1, 2 it holds that f i (u) = f i (v). The cardinality of the quotient set (V \\ C)/ \u223c is at most 2 k \u00b7 (k + 1) \u00b7 (k + 1) and together with the vertices of vertex cover C we have k + 2 k \u00b7 (k + 1) \u00b7 (k + 1) different kinds of vertices from which we have to select at most min{B, k} vertices into the seed set T a and at most min{B, k} into T b . I.e., at most 2k vertices with at most k + 2 k \u00b7 (k + 1) 2 + 1 \u2264 2 k \u00b7 (k + 2) 2 options each which gives us at most 2 k (k + 2) 2 2k = 2 2k 2 +O(k log k) options in total that can all be checked in 2 2k 2 +O(k log k) \u00b7 n 2 time. \u25c0 To prove Theorem 3, we describe a dynamic programming algorithm working on a nice tree decomposition of G. The idea is as follows. To keep track of the whole process for both opinions from the somewhat limited viewpoint of only vertices in \u03b2(x) we slightly alter the activation process and, more importantly, work with thresholds for specific opinion.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Vertex Cover"
        },
        {
            "text": "For a node x of the decomposition we want to know for every vertex v \u2208 \u03b2(x) in exactly which round the vertex v gains the opinion a (if it gains the opinion) and b-a value r a (v), r b (v) \u2208 {0, . . . , T } \u222a {\u221e}, respectively, (the value \u221e corresponds to not gaining the opinion at all) at least how many neighbors of v in graph G x are already active in opinion a (b) in the round",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": ". . , f max }, respectively, and at most how many neighbors of v in the graph G x are active in opinion a (b) in the round",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": ". . , f max }, resp. We say that the tuple (r a , r b , g a , g b , h a , h b ) is a solution pattern for G x . In the algorithm we only use valid patterns. Fix a node x and a vertex v \u2208 \u03b2(x). We say, that a solution pattern (r a , r b , g a ,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "implies h c (v) = 0 for c \u2208 {a, b} (these values are ignored, but we want the pattern to be always a sextuple). A solution pattern is valid for x if it is valid for all v \u2208 \u03b2(x). Now we define the modified activation process. Let x be a node, let (r a , r b , g a , g b , h a , h b ) be a valid solution pattern for x, and let T x",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "for c \u2208 {a, b}. By a modified activation process P(x, r a , r b , T x a , T x b ) we mean the following process starting from the sets P 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "It is worth pointing out that, unlike in the usual activation process, in P(x, r a , r b , T x a , T x b ) we treat vertices in \u03b2(x) in a different way (by taking into account r a (v) and r b (v)).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "The modified activation process P(x, r a , r b , T x a , T x b ) is viable, roughly speaking, if it corresponds to an activation process for G x in which we treat g a , g b as threshold values (lowerbounds) and h a , h b as upperbounds for vertices in \u03b2(x). More formally, ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "The dynamic programming table DP x (for a node x) stores for each valid solution pattern the size of a smallest solution complying with the pattern (or \u221e if no such solution exists).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "It is easy to observe that sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at root node r. Hence, the answer is found by simply comparing value DP r [\u2205, \u2205, \u2205, \u2205, \u2205, \u2205] computed to B.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "It remains to show how to compute the values of DP x .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treewidth"
        },
        {
            "text": "The dynamic programming table of a leaf node x has only a single entry DP x [\u2205, \u2205, \u2205, \u2205, \u2205, \u2205] = 0. Clearly, the graph G x is an empty graph, the solution (\u2205, \u2205) complies with the pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205), and is of size 0.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Leaf Node"
        },
        {
            "text": "Introduce Vertex Node Let x be a node introducing a vertex v with the child node y.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Leaf Node"
        },
        {
            "text": "We use p| \u03b2(y) to denote the restriction of the pattern p to vertices in \u03b2(y).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "Introduce Edge Node Let x be a node introducing an edge {u, v} with the child node y. Let p = (r a , r b , g a , g b , h a , h b ) be a valid solution pattern for x. Based on this pattern we compute a solution pattern",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "which we then use for the lookup in the table DP y . We let p \u2032 | \u03b2(x)\\{u,v} = p| \u03b2(x)\\{u,v} and p \u2032 | {u,v} be created using the following for c \u2208 {a, b}. We only describe the cases for r c (v) \u2264 r c (u), the others are symmetric. In",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "Forget (Vertex) Node Let x be a node forgetting a vertex v with the child node y and let p be a valid solution pattern for",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "and let Q be obtained from Q \u2032 by removing all sextuples containing \u22121.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "and the values for v are given by q.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "Join Node Let x be a join node with children y and z and let",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "where cost is as in Equation (4) and the infimum is taken over all pairs of valid patterns",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Recall that the newly introduced vertex"
        },
        {
            "text": "In this section we show that the algorithm from Theorem 3 also applies for the combined parameter treedepth of the input graph and the maximum threshold; in fact, we show that if treedepth is bounded, then so is the length of any successful activation process (which might be of independent interest).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treedepth"
        },
        {
            "text": "\u25b6 Lemma 4. Let t \u2265 1 and G be a graph and suppose that there exist sets P 0 a , and P 0 b such that the activation process in G from these sets takes at least t rounds, i.e., P t",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treedepth"
        },
        {
            "text": "It is well known that if a graph contains a path of length h, then its treedepth is at least log 2 (h + 2) (see, e.g., [30, pp. 117]). For the proof of Lemma 4 we need the following generalization of this result. \u25b6 Lemma 5. Let G be a graph and w be a walk of length h in G with a loop added to each vertex such that each vertex of G appears at most r times on w. Then td(G) \u2265 log r+1 (h + 2).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treedepth"
        },
        {
            "text": "It is not hard to see, that a vertex can gain an opinion c in round k > 1 only if in round k \u2212 1 either it gained the opinion \u00acc or some of its neighbors gained the opinion c. Repeating this argument and going from round t to round 0 we obtain a walk of length t in G with a loop added to each vertex. Hence, Lemma 4 follows from Lemma 5 (full proof in appendix).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Treedepth"
        },
        {
            "text": "Suppose now that the input graph has a 3-pvc U with size bounded by the parameter k. Then, by a similar argument to Lemma 4, we get that T \u2208 O(k). Note that the proof of Lemma 4 implies that if the activation process takes t rounds, then there is a walk of length t in G with loops added to each vertex on which each vertex appears at most twice. \u25b6 Lemma 7. Suppose the input graph G has a 3-pvc of size k. Then T can be reduced to 10 \u00b7 k + 3.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Three-Path Vertex Cover"
        },
        {
            "text": "This allows us to first guess for every u \u2208 U and an opinion c \u2208 {a, b} the round r c (u) in which u receives c (or \u221e if this never happens). Furthermore, we observe that Reduction",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": "and v \u2208 V (later we will add some auxiliary variables). We stress here that values of these variables for vertices in U are already fixed by our guess above. First we describe the linking constraints. For a vertex u \u2208 U we set the values g c (u), h c (u) according to their meaning in the previous section, i.e., h c (u) is the upperbound on the number of neighbors of u having an opinion c in the round r c (u) \u2212 2 and g c (u) is the lowerbound on this number for the round r c (u) \u2212 1. Now, we require",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": "Note that the number of these constraints is O(k), that is, the parameter r of the N -fold IP fulfills r \u2208 O(k).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": "Before we move to the local constraints we define for a ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": "]; in any case this is a linear constraint. Now, we require the following.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": "It is not hard to see that these constraints can be made linear using O(1) additional constraints and auxiliary variables (while keeping the largest coefficient two)-see appendix. Finally, we have to require",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": "Note that the local constraints are independent for any nonadjacent vertices, that is, the parameter s of the N -fold IP fulfills s \u2208 O(k). It is not hard to verify that the parameter t",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": ", we get the size of a smallest solution which is compatible with our initial guess. Thus, we may verify if the minimum overall value is at most the budget B. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:10 Balancing the Spread of Two Opinions in Sparse Social Networks"
        },
        {
            "text": "In this section we show that 2OTSS is W[1]-hard with respect to the budget and the treewidth of the input graph, even if all thresholds are bounded by 3, by presenting a reduction from PSI. Let (G, H, \u03c8) be an instance of PSI. Our reduction follows the edge representation strategy introduced by Fellows et al. [17] .",
            "cite_spans": [
                {
                    "start": 311,
                    "end": 315,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "Constant Maximum Threshold"
        },
        {
            "text": "While designing the selection gadget (as well as in the proof of Lemma 9) we used an important trick. One of the leaves of a guard path must receive both opinions, a and b, in the same round of the activation process. We are going to utilize the same trick once again when designing gadget for checking incidence.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Constant Maximum Threshold"
        },
        {
            "text": "The Construction (Sketch) For each edge {ww \u2032 }inE(H) we add a selection gadget for vertices in V w and for edges in",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Constant Maximum Threshold"
        },
        {
            "text": "it should be pointed out that the preselected vertices in the selection gadget for edges are in S b , while those of vertex selection gadget are in S a . Now, the idea is as follows. We connect the selection parts of these gadgets using long paths with a special sentry vertex. The length of a path encodes the selected vertex (the vertex incident to the selected edge, respectively). The thresholds are set for the sentry vertex in such a way that it receives both opinions if and only if the two \"selected paths\" are of the same length (i.e., the vertex is in fact incident to the edge). Otherwise, the sentry vertex receives only one of the two opinions. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Constant Maximum Threshold"
        },
        {
            "text": "In this section we show how our \"colored\" selection gadgets and the ideas presented in the W[1]-hardness reduction (with respect to treewidth) of Ben-Zwi et al. [3] yield a hardness result even if we assume that the length of an activation process is bounded by a constant. The reduction is again from PSI, and again uses the edge representation strategy. Let (G, H, \u03c8) be an instance of PSI.",
            "cite_spans": [
                {
                    "start": 161,
                    "end": 164,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "Constant Duration of Activation Process"
        },
        {
            "text": "The key idea behind the reduction of Ben-Zwi et al. is to assign two enumerations to every",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Constant Duration of Activation Process"
        },
        {
            "text": "if the reader is familiar with the original proof, we must admit that our use of their gadgets works in a somewhat simpler regime. This time all our selection gadgets (i.e., vertex and edge selection gadgets) are the same as in Figure 1 (i.e., we only use T b for the selection) and we set f 1 (v) = f 2 (v) = deg(v) for every selection vertex v in these gadgets. Crucially for us their reduction is highly \"compact\" in the sense that the result of their reduction has very low diameter which then yields a strong bound on the number of rounds of a (successful) selection process. We set the budget B to the number of selection gadgets, i.e., B = |V (H)| + |E(H)|.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 228,
                    "end": 236,
                    "text": "Figure 1",
                    "ref_id": "FIGREF7"
                }
            ],
            "section": "Constant Duration of Activation Process"
        },
        {
            "text": "We introduce an incidence gadget for every edge {w, w \u2032 } \u2208 E(H) and a node w. As usual, the purpose is to check that the selected vertex in the set V w is incident to the selected edge in the set E ww \u2032 . To that end we define the mappings low and high for edges as well, however, now there are two such pairs of mappings for each edge. That is, for an edge e \u2208 E ww \u2032 we have mappings low w , high w , low w \u2032 , and high w \u2032 , where low w (e) = low(V w \u2229 e) and similarly for the other mappings.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "The Construction (Sketch)"
        },
        {
            "text": "We connect each vertex of a selection gadget to |V w | new vertices we divide into groups representing the numbers low and high. Then, we introduce two sentry vertices; one of which checks if low(v) + high w (e) \u2265 |V w |, while the other checks high(v) + low w (e) \u2265 |V w |. This happens for both the sentry vertices if and only if the selected vertex is incident to the selected edge and we check this by some further auxiliary vertices. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "The Construction (Sketch)"
        },
        {
            "text": "We have initiated the study of the 2OTSS problem from the computational complexity perspective. Similarly to TSS most combinations of natural parameters do not lead to efficient algorithms, with the parameterized complexity with respect to the number of rounds T and the maximum threshold of f max (and possibly the budget B) being an interesting open problem. We also showed that there are promising algorithms for networks that are sparse (which is often the case in practice). We believe that identifying and studying important special cases of 2OTSS (such as the majority version of the TSS problem) is an interesting research direction. For our hardness results we heavily use that if both opinions pass the first threshold of an agent at the same time, she receives both these opinions in the next round. What if, in the activation process, the agent prefers one of the opinions; i.e., if both the opinions pass the first threshold she only receives the preferred opinion. We believe that our hardness reductions can be adapted to the case where the preferred opinion is agent-specific. What is the complexity of the problem with one opinion preferred instance-wide? ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Conclusions"
        },
        {
            "text": "The initial state of the network. Agents v2, v5 are part of the initial seed set Sa, agents v7, v9 are part of the initial seed set S b , and the agent v6 is a part of both seed sets Sa and S b . The remaining agents have neither opinion.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "v 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "In the first round of the activation, agent v3 acquires both opinions a (blue) and b (red) at the same time, since the value of threshold function f1 is 1, and she has at least one neighbor with opinion a and at least one neighbor with opinion b. Note that if the agent would gain only one opinion in this round, she would not gain the second opinion at all, due to the value of her threshold function f2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "v 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "In the second round, agent v0 gains opinion a since he finally has at least f1(v0) neighbors with opinion a. He cannot obtain opinion b because there is not enough neighbors with this opinion.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "v 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "In the third round, the agent v0 obtains opinion b. This would not be possible without acquiring opinion a in the previous round.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "v 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "In the fourth round, there are finally enough neighbors of agent v4 and he gets opinion b. The same holds for agent v2 which has both opinions now.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "v 0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "The activation process stabilizes after 5 rounds. Agent v1 has neither opinion due to the value of her threshold functions. Moreover, the opinion a is blocked by agent v4, so there is a need to add an agent into the additional seed set Ta to obtain a balanced spread.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "23:15"
        },
        {
            "text": "A running example of the selection process described by the model.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Figure 2"
        },
        {
            "text": "Pathwidth of a graph G (denoted pw(G)) is the minimum width of a tree decomposition We observe that a vertex cover of the graph G as in fact a 2-pvc of G. We use the following theorem for PSI. Exponential Time Hypothesis (ETH) introduced by Impagliazzo and Paturi [20] states that every algorithm solving 3-SAT needs at least 2 cn time in worstcase, where c is some universal constant and n is the number of variables of the input formula. ",
            "cite_spans": [
                {
                    "start": 264,
                    "end": 268,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                }
            ],
            "ref_spans": [],
            "section": "A Additional Material for Section Preliminaries"
        },
        {
            "text": "Safeness of Reduction Rule 2. Suppose that v \u2208 S a (the other case follows by a symmetric argument). Since Reduction Rule 1 is not applicable, we get v /",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.1 Additional Material for Section Vertex Cover"
        },
        {
            "text": "would not be a target set. Consequently, v \u2208 T b holds for every solution of the given instance. Finally observe that it does not matter whether we put v in T b or S b . We get that the two instances are equivalent. \u25c1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.1 Additional Material for Section Vertex Cover"
        },
        {
            "text": "Regardless of the concrete value of f 1 (v) it holds that v will never gain the first opinion by the natural process, because there are not enough neighbors. This property remains unchanged even when value of f 1 (v) is decreased to deg(v) + 1. The same argument works for the second opinion. \u25c1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Safeness of Reduction Rule 3. Suppose that"
        },
        {
            "text": "Then we set additional seed sets T a , T b to T a = C \\ S a and T b = C \\ S b respectively. After such initialization, every vertex v \u2208 C has already both opinions. Remaining vertices have either one opinion or no opinion at all. We denote by u a vertex with a single opinion. It is clear that u / \u2208 C and u \u2208 S a or u \u2208 S b . Because we cannot apply Reduction Rule 2 on I it holds that f 2 (u) is at most deg(u). But we know that all the neighbors of u have both opinions already and since that vertex u gets second opinion in the next round by the natural process.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Safeness of Reduction Rule 4. Let"
        },
        {
            "text": "The last not yet discussed case is when vertex w has no opinion. For such vertices it holds that w / \u2208 C and w / \u2208 S a \u222a S b . Since we cannot apply Reduction Rule 3 we know that f 1 (w) \u2264 deg(w) + 1. On one hand, when the inequality is strict, then w gets both opinions by a similar argument as in the previous case. On the other hand, when f 1 (w) = deg(w) + 1, then w remains spotless by any opinion at all. \u25c1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Safeness of Reduction Rule 4. Let"
        },
        {
            "text": "Proof. At first, we note that if a bag \u03b2(x) or r a , r b are empty sets, then the modified activation process is equal to the standard activation process. Suppose that sets T a , T b \u2286 V form a solution of an instance (G, S a , S b , f 1 , f 2 , T , B ) of 2OTSS. According to Definition 1 we know that \u03b2(r) = \u2205. Since elements of a solution pattern (r a , r b , g a , g b , h a , h b ) are defined for every v \u2208 \u03b2(x) it follows that the only solution pattern compatible with the root node r has r a = r b = g a = g b = h a = h b = \u2205 and sets T a , T b complies with this solution pattern.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 218,
                    "end": 251,
                    "text": "(G, S a , S b , f 1 , f 2 , T , B",
                    "ref_id": "FIGREF7"
                },
                {
                    "start": 353,
                    "end": 386,
                    "text": "a , r b , g a , g b , h a , h b )",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "On the other hand, let P(x, r a , r b , T r a , T r b ) be a modified activation process viable for SP = (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) in the root node r. Since the modified process is viable for SP the activation process stabilizes at latest in the round T + 1, i.e., P T c = P T +1 c , c \u2208 {a, b}. As stated before the modified process is equal to the standard process. Moreover, the graph G r for which the sets T r a and T r b forming a solution is equal to graph G, and it implies that T a = T r a and T b = T r b . \u25c0 \u25b6 Lemma 16. Let x be a node introducing a vertex v with the child node y. If the DP y was computed correctly, and DP x is computed using the algorithm for Introduce Vertex Node from page 8, then DP x is also computed correctly.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "Proof. Let p = (r a , r b , g a , g b , h a , h b ) be a valid solution pattern for x. Note first that p| \u03b2(y) is valid for y, as p is valid for all v \u2208 \u03b2(x). Further note that the validity does not depend on the graph, only on the sextuple, S a , and S b . Now suppose that g a (v) \u2265 1. This implies that r a (v) / \u2208 {0, \u221e}, as otherwise p would not be valid. Suppose for contradiction that there is a solution T x a , T x b \u2286 V x that complies with p. Then, as P(x, r a , r ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 18,
                    "end": 51,
                    "text": "a , r b , g a , g b , h a , h b )",
                    "ref_id": null
                },
                {
                    "start": 454,
                    "end": 475,
                    "text": "Then, as P(x, r a , r",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "is a contradiction, since v is isolated in G x . Hence, if g a (v) \u2265 1, then no solution complies with p. By a similar argument this also holds if g b (v) \u2265 1 and the answer of the algorithm is correct in these cases. Next we show that if there is a solution T y a , T y b \u2286 V y of size s that complies with p| \u03b2(y) , then there is also a solution T x a , T x b \u2286 V x of size s + cost(a, p, v) + cost(b, p, v) that complies with p. We let T x a = T y a \u222a {v} if r a (v) = 0 and v / \u2208 S a and T x a = T y a otherwise. Similarly, we",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "b}. Now if we denote P i c the sets obtained in the process P(y, r a | \u03b2(y) , r b | \u03b2(y) , T y a , T y b ) and P i c the sets obtained in the process P (x, r a , r ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 152,
                    "end": 163,
                    "text": "(x, r a , r",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "complies with p| \u03b2(y) , the process P(y, r a | \u03b2(y) , Finally, we show that if there is a solution T x a , T x b \u2286 V x of size s that complies with p, then there is also a solution T y cost(a, p, v) and similarly for T y b , hence the size of T y a , T y b is as required. We also have that r \u22121 c (0) = (S c \u222a T y c ) \u2229 \u03b2(y) for c \u2208 {a, b}. If we denote P i c the sets obtained in the process P (x, r a , r b , T x a , T x b ) and P i c the sets obtained in the process P(y, r a | \u03b2(y) , Proof. Let p = (r a , r b , g a , g b , h a , h b ) be a valid solution pattern for x. Suppose first, that h \u2032 c (u) = \u22121 for some c \u2208 {a, b}. This implies that either r c (v) + 1 < r c (u) \u2264 T or r c (v) \u2264 T and r c (u) = \u221e and h c (u) = 0. Assume for contradiction that there is a solution T x a , T x b \u2286 V x that complies with p. Consider the sets P i c obtained in process P(x, r a , r b , T x a , T x b ). As u and v are adjacent in G",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 185,
                    "end": 198,
                    "text": "cost(a, p, v)",
                    "ref_id": null
                },
                {
                    "start": 396,
                    "end": 409,
                    "text": "(x, r a , r b",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": ". In both cases this contradicts the viability of the process",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "then no solution complies with p. By a similar argument this also holds if h \u2032 c (v) = \u22121 and the answer of the algorithm is correct in these cases.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "Note that otherwise p \u2032 is a valid pattern as p is valid and the only way p \u2032 could be invalid is if g c (x) = 0 or h c (x) = 0 and g \u2032 c (x) \u0338 = 0 or h \u2032 c (x) \u0338 = 0 for some x \u2208 {u, v}, which is handled by the maximum in the definition and the previous case, respectively.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "Next we show that if there is a solution T y a , T y b \u2286 V y = V x that complies with p \u2032 , then it also complies with p. The condition that r \u22121",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "b} is the same, as \u03b2(x) = \u03b2(y). As the neighborhood of each vertex in V x \\ \u03b2(x) is the same in G x and G y the sets P i c obtained in the process P(y, r a , r b , T y a , T y b ) are the same as in the process P(x, r a , r b , T y a , T y b ). Note that since T y a , T y b complies with p \u2032 , the process P(y, r a , r b , T y a , T y b ) is viable. The condition P T a = P T +1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "for these vertices, the viability conditions remain valid for these vertices.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "For ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": ", then the argument also holds for u by symmetry",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": ". Therefore, the viability condition also remains valid for u in this case. The other cases follow by a symmetrical argument. Hence the process is viable and T y a , T y b also complies with p. Now we show that if there is a solution T x a , T x b \u2286 V x = V y that complies with p, then it also complies with p \u2032 . As observed above, the only difference between the conditions imposed are the viability conditions for u and v. Let again P i c be the sets obtained in the process P(y, r a , r b , T x a , T x b ) (or the other one, they are the same). ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": ". Therefore, the viability condition also remains valid for u in this case. The other cases follow a symmetrical argument. Hence, the process is viable and T x a , T x b also complies with p \u2032 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "To sum up, let T x a , T x b \u2286 V x be the minimum size solution which complies with p and it is of size s. If we had DP y [p \u2032 ] < s, then, since DP y [p \u2032 ] was computed correctly, there would be a corresponding solution T y a , T y b \u2286 V y which complies with p \u2032 and is of size strictly less than s. But, as we have shown, this solution would comply with p, contradicting the minimality of T x a , T x b . Hence, we have DP y [p \u2032 ] \u2265 s. Moreover, as T x a , T x b complies with p \u2032 , we have DP y [p \u2032 ] \u2264 s, that is, DP y [p \u2032 ] = s. Hence, DP x [p] = s and it is computed correctly. \u25c0 \u25b6 Lemma 18. Let x be a node forgetting a vertex v with the child node y. If the DP y was computed correctly, and DP x is computed using the algorithm for Forget (Vertex) Node from page 8, then DP x is also computed correctly.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "Proof. Let p be a valid solution pattern for x. Let us first note, that for each q = (r a , r b , g a , g b , h a , h b ) in Q the pattern p \u2032 = p \u222a (v \u2192 q) is valid. Indeed, p is valid for all C V I T 2 0 1 6 v \u2032 \u2208 \u03b2(x) and for v we have the following. First, if r a (v) = r a = \u221e, then q = q \u221e,\u221e , thus r b (v) = r b = \u221e, and vice versa. Second, if v \u2208 S c for c \u2208 {a, b}, then for each q = (r a , r b , g a , g b , h a , h b ) in Q we have r c (v) = r c = 0. Third, for each q = (r a , r b , g a , g b , h a , h ",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 88,
                    "end": 121,
                    "text": "a , r b , g a , g b , h a , h b )",
                    "ref_id": null
                },
                {
                    "start": 396,
                    "end": 429,
                    "text": "a , r b , g a , g b , h a , h b )",
                    "ref_id": null
                },
                {
                    "start": 485,
                    "end": 514,
                    "text": "a , r b , g a , g b , h a , h",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "that complies with p, then it also complies with p \u2032 = p \u222a (v \u2192 q) for some q = (r a , r b , g a , g b , h a , h b ) in Q. Consider the sets P i c obtained in process P(x, r a , r b , T x a , T x b ) and let P \u22121",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 78,
                    "end": 116,
                    "text": "= (r a , r b , g a , g b , h a , h b )",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "We want to show that also q ra,r b \u2208 Q and that T x a , T x b complies with p \u2032 = p\u222a(v \u2192 q ra,r b ). Assume that r a \u2264 r b . If r a \u2208 {1, . . . , T }, then, since v \u2208 P ra a \\ P ra\u22121 a and v / \u2208 P ra\u22121 b",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": ",",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "If r b = r a , then we have the same bounds for g b and h b . If",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "|. In particular these inequalities imply that all coordinates of q ra,r b are at least 0 and, hence, q ra,r b \u2208 Q.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "To",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "due to the way we defined r c and consider the sets P i c obtained in process , r b , g a , g b , h a , h b ) in Q, then it also complies with p. Let",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 78,
                    "end": 109,
                    "text": ", r b , g a , g b , h a , h b )",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "Our goal is to show the viability of the process P(x, r a , r b , T y a , T y b ) based on the viability of the process P(y, r \u2032 a , r \u2032 b , T y a , T y b ). To this end let P i c be the sets obtained in process P(y, r \u2032 a , r \u2032 b , T y a , T y b ) and P i c be the sets obtained in process P(x, r a , r b , T y a , T y b ). We claim that P i c = P i c for each i \u2208 {0, . . . , T } and each c \u2208 {a, b}. Once this is proven, the viability of P(x, r a , r b , T y a , T y b ) follows, since p = p \u2032 | \u03b2(x) . We prove the claim by induction on i.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": ", constituting the base case of the induction. For i \u2265 1 note that for each v \u2032 \u2208 V x \\ {v} the conditions for v \u2032 to be included in P i c and in P i c are the same, as P i\u22121",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "If i < r a , then v / \u2208 P i a \u222a P i b and, as the process P(y,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "by induction hypothesis, this implies that v / \u2208 P i a and P i a = P i a . Similar argument works for P i b , even for i = r a < r b . If i = r a , then v \u2208 P i a , and, as the process P(y, ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "The proof for the case r a > r b follows by a symmetric argument. This finishes the proof of the induction step and the proof of the claim.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "To sum up, let T x a , T x b \u2286 V x be a minimum size solution which complies with p and let it be of size s. If we had DP y [p \u2032 ] < s for p \u2032 = p \u222a (v \u2192 q) for some q \u2208 Q, then, since DP y [p \u2032 ] was computed correctly, there would be a corresponding solution T y a , T y b \u2286 V y which complies with p \u2032 and is of size strictly less than s. But, as we have shown, this solution would comply with p, contradicting the minimality of T x a , T x b . Hence we have DP y [p \u2032 ] \u2265 s for every",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": ". Let x be a join node with children y and z. If the DP y and DP z were computed correctly, and DP x is computed using the algorithm for Join Node from page 9, then DP x is also computed correctly.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "in 2 O(\u03c9) \u00b7 n time [12] . For each node there are at most (T + 2) 2(\u03c9 \u2032 +1) \u00b7 (f max + 1) 4(\u03c9 \u2032 +1) solution patterns and hence the table has at most (T + 2) 2(\u03c9 \u2032 +1) \u00b7 (f max + 1) 4(\u03c9 \u2032 +1) entries for each node. By the described algorithm, each entry can be computed by traversing all the entries of the child or children, that is in O(T + 2) 4(\u03c9 \u2032 +1) \u00b7 (f max + 1) 8(\u03c9 \u2032 +1) time. Since the decomposition has \u03c9 O(1) \u00b7 n nodes, the total running time follows. The correctness of the algorithm follows by a bottom-up induction from the correctness of the computation in leaf nodes, Lemmas 16-19, and Observation 15. \u25c0",
            "cite_spans": [
                {
                    "start": 19,
                    "end": 23,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                }
            ],
            "ref_spans": [],
            "section": "\u25b6 Observation 15. Sets T a , T b \u2286 V form a solution if and only if they comply with the solution pattern (\u2205, \u2205, \u2205, \u2205, \u2205, \u2205) at the root node r."
        },
        {
            "text": "Proof of Lemma 5. We prove by induction on the length h of the walk w that td(G) \u2265 \u2308log r+1 (h + 2)\u2309.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.3 Additional Material for Section Treedepth"
        },
        {
            "text": "If G contains a nonempty walk, then it must have at least one vertex and, thus, td(G) \u2265 1. Therefore the lemma is true whenever the length of the walk is h \u2264 r \u2212 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.3 Additional Material for Section Treedepth"
        },
        {
            "text": "Assume now that h \u2265 r and the lemma holds for all shorter walks. Note that the walk contains at least two different vertices and hence |V (G)| > 1. If G is disconnected, then we can limit ourselves to the component which contains the walk, since td(G) = max i\u2208 [k] td(G i ), where G 1 , . . . , G k are connected components of G. Hence, we assume that G is connected. Let u be the vertex such that td(G) = 1 + td(G \\ {u}) = 1 + min v\u2208V (G) td(G \\ {v}). If u is not part of the walk, then the walk w must be contained in a single connected component C of G \\ {u}, and we can apply the lemma to this component, as td(G) = 1 + td(G \\ {u}) \u2265 td(C). Hence, we assume that u is a part of walk w.",
            "cite_spans": [
                {
                    "start": 261,
                    "end": 264,
                    "text": "[k]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "B.3 Additional Material for Section Treedepth"
        },
        {
            "text": "As u appears q \u2264 r times on w, its removal splits the walk into q + 1 parts. Let w 1 be a longest of these parts, its length is at least h\u22122q q+1 = h+2 q+1 \u2212 2 \u2265 h+2 r+1 \u2212 2. As w 1 is a walk not containing u, it must be contained in a single component C of G \\ {u} with loops added on each vertex. As w 1 contains each vertex at most r times, the treedepth of C is at least \u2308log r+1 ( h+2 r+1 \u2212 2 + 2)\u2309 = \u2308(log r+1 (h + 2)) \u2212 log r+1 (r + 1)\u2309 = \u2308log r+1 (h + 2)\u2309 \u2212 1 by induction hypothesis. Hence td(G) = 1 + td(G \\ {u}) \u2265 1 + td(C) is at least \u2308log r+1 (h + 2)\u2309 \u2212 1 + 1 = \u2308log r+1 (h + 2)\u2309. This finishes the proof. \u25c0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.3 Additional Material for Section Treedepth"
        },
        {
            "text": "Proof of Lemma 4. The claim is trivial for t = 1, let us assume that t \u2265 2. Let c t \u2208 {a, b} be such that P t ct \\ P t\u22121 ct \u0338 = \u2205. Let v t be an arbitrary vertex in P t ct \\ P t\u22121 ct . For k = t \u2212 1, . . . , 1, note that for each vertex v \u2208 P k+1",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.3 Additional Material for Section Treedepth"
        },
        {
            "text": "and c k = c k+1 . Otherwise let v k = v k+1 and c k = \u00acc k+1 .",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.3 Additional Material for Section Treedepth"
        },
        {
            "text": "Finally we let v 0 be an arbitrary neighbor of v 1 in P 0 c1 . Each vertex appears in the sequence v 0 , . . . , v t at most twice, once for each opinion. Moreover, v 0 , . . . , v t is a walk of length t in G with a loop added to each vertex. Hence, by Lemma 5, the treedepth of G is at least \u2308log 3 (t + 2)\u2309, as required. \u25c0 Proof of Corollary 6. By Lemma 4 we get that by setting T := max(T , \u2264 3 \u03b4 ) we get an equivalent instance. It is well known that tw(G) \u2264 td(G) for every graph G. Thus, we can apply Theorem 3. \u25c0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.3 Additional Material for Section Treedepth"
        },
        {
            "text": "Making the Constraints Linear First, we add an auxiliary binary variable z ab,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.4 Additional Material for Section Three-Path Vertex Cover"
        },
        {
            "text": "= 0] -this requires the coefficient 2 and O(1) additional (local) variables and constraints; see, e.g., [24, Proof of Theorem 3.4] . Then, we add an auxiliary binary variable y c,t v,1 holding the value of the right-hand side of (7) using the following.",
            "cite_spans": [
                {
                    "start": 118,
                    "end": 130,
                    "text": "Theorem 3.4]",
                    "ref_id": null
                }
            ],
            "ref_spans": [],
            "section": "B.4 Additional Material for Section Three-Path Vertex Cover"
        },
        {
            "text": "Equivalence of the two is rather straightforward to verify. Then (7) translates to x c,t v \u2265 y c,t v,1 . Our aim is to show that at least one IP of the generated IPs is feasible and its optimum is at most B. For every vertex v \u2208 V , c \u2208 {a, b}, and t \u2208 {0, . . . , T + 1} we define",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B.4 Additional Material for Section Three-Path Vertex Cover"
        },
        {
            "text": "where we assume P T +1 c = P T c . Note that this allows us to define variables z c,t v (f ) for v \u2208 X according to (6) . Now, our aim is to prove that under this assignment of variables all of the constraints are fulfilled. First of all we observe that (11) holds for all v \u2208 X, which follows from the fact that v \u2208 P T a if and only if v \u2208 P T b . Verifying (5) is rather straightforward, since the left-hand sides of these constraints evaluate the number of neighbors a vertex v \u2208 U has in P rc(v)\u22122 c and P rc(v)\u22121 c , respectively. It remains to verify (7)-(10) which we do by a case distinction.",
            "cite_spans": [
                {
                    "start": 116,
                    "end": 119,
                    "text": "(6)",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 254,
                    "end": 258,
                    "text": "(11)",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "Suppose",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "Trivially we get that (7)-(9) are fulfilled. Finally, (10) holds, since x c,t\u22121 v = 1 and thus the right-hand side evaluates to (at least) 1.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "Suppose v / \u2208 P t a \u222a P t b . We immediately get that the right-hand sides of (8) and (9) evaluates to 0. The variable z ab,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "\u2208 P t c , we get that z c,t v (f 1 ) = 0 by (6) . Thus, from (7)-(9) we get a (void) constraint x c,t v \u2265 0. Furthermore, since the right-hand side of (10) is a sum of right-hand sides of (7)-(9), we get x c,t v \u2264 0; which is fulfilled if (and only if)",
            "cite_spans": [
                {
                    "start": 44,
                    "end": 47,
                    "text": "(6)",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "but v \u2208 P t a (the case v \u2208 P t b follows from symmetry); i.e., (6)). Thus, the right-hand side of (7) evaluates to 1. It is not hard to see that right-hand sides of (8) and (9) both evaluate to 0. Thus, the right-hand side of (10) is 1 and this collection of constraints is fulfilled if (and only if)",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "= 0 and consequently z ab,t\u22121 v = 0. We immediately get that the right-hand sides of (7) and (9) both evaluate to 0. On the other hand, the right-hand side of (8) evaluates to 1, since by (6) ",
            "cite_spans": [
                {
                    "start": 188,
                    "end": 191,
                    "text": "(6)",
                    "ref_id": "BIBREF5"
                }
            ],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": ". It follows that the right-hand side of (10) evaluates to 1 as well and thus this collection of constraints is fulfilled if (and only if) x b,t v = 1. The theorem now follows, since the mapping (12) is revertible and all the above arguments are equivalent.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "We also claimed that the algorithm is also applicable to the Target Set Selection problem. ",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Proof of"
        },
        {
            "text": "Proof of Lemma 9. Suppose for contradiction that T b \u2229 X = \u2205. Let P be a guard path with vertex set {v 1 , v 2 , v 3 }, where v 2 is the central vertex and v 1 \u2208 S a . Now, in the first round (of the activation process) the vertex v 2 receives opinion a (from v 1 ), i.e., v 2 \u2208 P 1 a . Note that both I \u2229 P 1 a and I \u2229 P 1 b might be non-empty. Nevertheless, we get v 3 \u2208 P 2 a and possibly v 2 \u2208 P 2 b . But, since f 2 (v 3 ) = 2, we get that v 3 / \u2208 P i b for any i \u2208 N. Thus T b is not a valid target set.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "We conclude that in order to have a valid target set one of the following must hold:",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "where v \u2032 2 is the central vertex of the other guard path. Now, v 1 \u2208 P 2 b (as it receives the opinion b from v 2 ) as well as v 3 \u2208 P 2 a and v 3 \u2208 P 2 b (receiving both opinions at the same time from v 2 ). \u25c0 Incidence Gadget. An incidence gadget connects two selection gadgets-one for selection of a vertex in V w = \u03c8 \u22121 (w) (as described above) and one for selection of an edge in",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "(with the preselected vertex in the set S b , i.e., for an edge selection gadget we \"switch\" the role of red vertices). We begin by enumerating vertices in V w by numbers in {1, . . . , n}; let \u03b7 : V w \u2192 {1, . . . , n} be the enumeration. Now, the ww \u2032 -incidence check gadget consists of three connector vertices (which we call vertex-connector, edge-connector, and superconnector), a sentry vertex, and several paths as follows; refer to Figure 3 . We connect the vertex v \u2208 V w to the vertex-connector vertex by a path containing exactly n + \u03b7(v) additional vertices. We connect the vertex e \u2208 E ww \u2032 to the edge-connector vertex by a path containing exactly n + \u03b7(v) additional vertices for v = e \u2229 V w . Finally we connect the sentry vertex and vertex-and edge-connector to the super-connector vertex. We set f 1 (x) = 1 and f 2 (x) = 3 for the sentry vertex x and the super connector vertex x. We set f 1 (x) = 1 and f 2 (x) = 1 for every vertex x in the paths connecting selection vertices to the connector vertex and for the vertex and edge connector vertices x. We denote the constructed underlying graph G. It remains to set the length of the activation process and the budget for the reduced instance which we do by setting T = 2|V ( G)| and B = |V (H)| + |E(H)|. This completes the description of the reduction; we denote the resulting instance I. Observe that one can produce the reduced instance in time polynomial in the size of the given instance of PSI. Note that there are exactly B selection gadgets in I. Thus by Lemma 9 there has to be exactly one vertex in the set T b in each vertex selection gadget and exactly one vertex in the set T a in each edge selection gadget. We call such a pair of sets (T a , T b ) good. It is not hard to see (using Lemma 9) that if a pair of sets (T a , T b ) with T a , T b \u2286 V ( G) is not good, then the pair (T a , T b ) is not a target set for I.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 440,
                    "end": 448,
                    "text": "Figure 3",
                    "ref_id": "FIGREF20"
                }
            ],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "is good, it contains exactly one vertex in every selection gadget (in a vertex selection gadget it is a vertex in T b whereas in an edge selection gadget it is one in T a ). Now observe that in at most 2n rounds we have that every vertex-connector vertex is in P a \u222a P b as the activation process reaches it at latest by the path from the selected vertex (since \u03b7(v) \u2264 n for the selected vertex v); similarly for the edge-connector vertex. To see this recall that all vertices v introduced in the incidence gadget have f 1 (v) = 1. Note that vertex-connector vertex may end up in P a , since the activation process from the edge selection gadget might reach it sooner than the one described above (again, the same holds for edge-connector vertex by symmetry). Then from a connector vertex the activation process continues to the rest of the paths connecting it with its selection gadget. Furthermore, the super-connector vertex and the sentry vertex both receive at least one opinion. Thus, we have shown (together with Lemma 9) that each vertex is in P T a \u222a P T b . \u25c0 It follows from Lemma 20 that if a good pair (T a , T b ) is a target set, then P T a = P T b = V ( G).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "\u25b6 Lemma 21. Let (T a , T b ) be a good pair for G. Let v \u2208 V w and let e \u2208 E ww \u2032 be such that v is selected by T b (i.e., v \u2208 T b ) and e is selected by T a . For a sentry vertex s of the incidence gadget for V w and E ww \u2032 it holds that s \u2208 P T a \u2229 P T b if and only if v \u2208 e.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "Proof. Let c v and c e be the vertex-and edge-connector vertex respectively. Slightly abusing the notation we define \u03b7(e) = \u03b7(V w \u2229 e). It is not hard to verify that if \u03b7(v) \u2264 \u03b7(e), then",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "; similarly if \u03b7(e) \u2264 \u03b7(v), then c e \u2208 P n+\u03b7(e) a . Note that in first 2n rounds there is no interference between any two incidence gadgets, since the \"back propagation\" from a connector vertex to selection vertices uses at least two paths both of length at least n + 1. Consequently, we get that for the super-connector vertex c it holds that c \u2208 P \u2113 a \u222a P \u2113 b for \u2113 = 1 + min{n + \u03b7(v), n + \u03b7(e)}. Furthermore, we have that c \u2208 P \u2113 a \u2229 P \u2113 b if and only if \u03b7(v) = \u03b7(e), as otherwise either c \u2208 P \u2113 a or c \u2208 P \u2113 b depending on the minimizer of min{n + \u03b7(v), n + \u03b7(e)}. It follows that s is in P \u2113+1 Proof. Let us first verify the parameters of our reduction. It is straightforward to check that the maximum threshold max v\u2208V ( G) {f 1 (v), f 2 (v)} is 3. Next if we remove from G all the connector vertices as well as the vertices of both guard paths in each selection gadget (let us denote this set X), we obtain a forest, where each tree has at most one vertex of degree more than 2 (the selection vertex). The pathwidth of such a tree is at most 2.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "As |X| = 2 \u00b7 3 \u00b7 |E(H)| Hence, once we verify the correctness of the reduction, the results will follow from Theorem 14 and the discussion thereafter. From Lemma 21 we conclude that a good pair of sets (T a , T b ) is a target set for G if and only if the selected vertices are incident to selected edges. However, this can only happen when the original instance of PSI is a yes-instance.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "Let (T a , T b ) be a good pair for G such that the selection it imposes yields a solution to the given instance of PSI. We consider the incidence gadget for V w and E ww \u2032 ; let v \u2208 V w and e \u2208 E ww \u2032 be the vertex and edge selected by (T a , T b ), respectively. Since we have v \u2208 e, we have \u03b7(v) = \u03b7(e). Furthermore, it follows from the proof of Lemma 21 that the super-connector vertex c receives both opinions in the round \u2113 = 1 + n + \u03b7(v). Notice that in the round \u2113 \u2212 1 both vertex-and edge-connector received opinion b and a, respectively. Now, in the round \u2113 + 1 the vertex-and edge-connector have both opinions. We observe that in round \u2113 the vertices adjacent to the vertex-connector receive the opinion b (similarly for the vertices adjacent to the edge-connector). Since every vertex u on paths connecting the vertex-connector to the V w selection gadget has f 1 (u) = f 2 (u) = 1, we see that in the round \u2113 + 2 the vertices adjacent to the vertex-connector have both opinions. Now, if a vertex u belongs to a path connecting the vertex-connector and u \u2208 P q b \\ P q\u22121 b for some q \u2208 N (note that such a q exists), then u \u2208 P q+2 a . Thus, in the round \u2113 + 2n + 2 all vertices on all of these paths have both opinions a and b. Furthermore, in the round \u2113 + n + \u03b7(x) the vertex x \u2208 V w \\ {v} receives opinion b and in the round \u2113 + n + \u03b7(x) + 2 a vertex x \u2208 V w receives the other opinion a. Thus, if v \u2208 e, then all vertices of the incidence gadget as well as the selection gadgets in it have both opinions in the round \u2113 + 2n + 3. A symmetric argument holds for the edge selection gadget. Thus, the two instances are equivalent. \u25c0",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C Additional Material for Section Hardness"
        },
        {
            "text": "The incidence gadget connects the selection gadget for V w and E ww \u2032 in the following way; please refer to Figure 4 . We introduce two new checking vertices c 1 ww \u2032 and c 2 ww \u2032 and set their thresholds to f 1 (x) = |V w | and f 2 (x) = deg(x) (for x \u2208 {c 1 ww \u2032 , c 2 ww \u2032 }). For each vertex v \u2208 V w we introduce |V w | new vertices which we all connect to v and then connect low(v) with c 1 ww \u2032 and we connect the rest (i.e., high(v)) to c 2 ww \u2032 . Similarly, we connect the selection vertices in the set E ww \u2032 , however, this time we \"switch the roles\" of c 1 ww \u2032 and c 2 ww \u2032 . For each edge e \u2208 E ww \u2032 we introduce |V w | new vertices which we all connect to e and then connect low w (e) with c 2 ww \u2032 and the rest (i.e., high w (e)) to c 1 ww \u2032 . We set f 1 (x) = f 2 (x) = 1 for all of the just described vertices. The last group of vertices we add is formed by a special vertex Proof. We begin with the first claim. Observe that we have N (c 1 ww \u2032 ) \u2229 P 1 a = N (c 2 ww \u2032 ) \u2229 P 1 a = A ww \u2032 , since every vertex in A ww \u2032 neighbors the special vertex which is in S a . Furthermore, since for c \u2208 {c 1 ww \u2032 , c 2 ww \u2032 } we have |A ww \u2032 | = |V w | = f 1 (c) and since (T a , T b ) is good and thus N (c) \u2229 P 0 b = \u2205, we get that c \u2208 P 2 a . In order to prove the second assertion we observe that The third claim follows from the previous ones. Since vertices in A ww \u2032 \u2286 P 1 a , A ww \u2032 \u2229 P 1 b = \u2205, and A ww \u2032 \u2229 P 2 b = \u2205, we have that x \u2208 P 3 b if and only if N (x) \u2229 P 2 b \u2265 f 2 (x) = 2 for x \u2208 A ww \u2032 . For the special vertex s we have s \u2208 S a and thus in order to have s \u2208 P k b for any k we need A ww \u2032 \u2286 P k\u22121 b . We conclude that A ww \u2032 \u2286 P 3 b if and only if c 1 ww \u2032 , c 2 ww \u2032 \u2208 P 2 b which is if and only if v \u2208 e \u2229 V w . \u25c0",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 108,
                    "end": 116,
                    "text": "Figure 4",
                    "ref_id": null
                }
            ],
            "section": "C.1 Additional Material for Section Constant Duration of Activation Process"
        },
        {
            "text": "We now observe that, irrespective of the selection, the special vertices have the ability to spread their opinion a to every vertex within four rounds.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C.1 Additional Material for Section Constant Duration of Activation Process"
        },
        {
            "text": "\u25b6 Lemma 24. Let (T a , T b ) be a good pair. Then we have that P 4 a = V ( G).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C.1 Additional Material for Section Constant Duration of Activation Process"
        },
        {
            "text": "Proof. By Lemmas 9 and 23 we have that P 2 a contains all vertices in A ww \u2032 , all special vertices, and all vertices in guard paths. Fix a node w \u2208 V (H) and {w, w \u2032 } \u2208 E(H). We get that all low-and high-vertices (i.e., the vertices incident to c i ww \u2032 not in A ww \u2032 for i = 1, 2) are in P 3 a , since the checking vertices are in P 2 a by Lemma 23 and all of these vertices have their respective thresholds set to 1. Thus, for a selection vertex x (either in V w or in E ww \u2032 ) we have that N (x) \u2286 P 3 a . We get that P 4 a = V ( G) and the lemma follows. Proof. Let us again first verify the parameters of our reduction. If we remove from G all the checking vertices as well as the vertices of both guard paths in each selection gadget (let us denote this set X), we obtain a forest, composed of stars of two kinds. Namely, the first kind of stars is formed by a special vertex s ww \u2032 and leaves A ww \u2032 for some {w, w \u2032 } \u2208 E(H).",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C.1 Additional Material for Section Constant Duration of Activation Process"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Balancing spreads of influence in a social network",
            "authors": [
                {
                    "first": "Ruben",
                    "middle": [],
                    "last": "Becker",
                    "suffix": ""
                },
                {
                    "first": "Federico",
                    "middle": [],
                    "last": "Cor\u00f2",
                    "suffix": ""
                },
                {
                    "first": "D&apos;",
                    "middle": [],
                    "last": "Gianlorenzo",
                    "suffix": ""
                },
                {
                    "first": "Hugo",
                    "middle": [],
                    "last": "Angelo",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Gilbert",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "34",
            "issn": "",
            "pages": "3--10",
            "other_ids": {
                "DOI": [
                    "10.1609/aaai.v34i01.5327"
                ]
            }
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "An exact almost optimal algorithm for target set selection in social networks",
            "authors": [
                {
                    "first": "Oren",
                    "middle": [],
                    "last": "Ben-Zwi",
                    "suffix": ""
                },
                {
                    "first": "Danny",
                    "middle": [],
                    "last": "Hermelin",
                    "suffix": ""
                },
                {
                    "first": "Daniel",
                    "middle": [],
                    "last": "Lokshtanov",
                    "suffix": ""
                },
                {
                    "first": "Ilan",
                    "middle": [],
                    "last": "Newman",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "EC 2009",
            "volume": "",
            "issn": "",
            "pages": "355--362",
            "other_ids": {
                "DOI": [
                    "10.1145/1566374.1566424"
                ]
            }
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "Treewidth governs the complexity of target set selection",
            "authors": [
                {
                    "first": "Oren",
                    "middle": [],
                    "last": "Ben-Zwi",
                    "suffix": ""
                },
                {
                    "first": "Danny",
                    "middle": [],
                    "last": "Hermelin",
                    "suffix": ""
                },
                {
                    "first": "Daniel",
                    "middle": [],
                    "last": "Lokshtanov",
                    "suffix": ""
                },
                {
                    "first": "Ilan",
                    "middle": [],
                    "last": "Newman",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "Discrete Optimization",
            "volume": "8",
            "issn": "1",
            "pages": "87--96",
            "other_ids": {
                "DOI": [
                    "10.1016/j.disopt.2010.09.007"
                ]
            }
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Maximizing social influence in nearly optimal time",
            "authors": [
                {
                    "first": "Christian",
                    "middle": [],
                    "last": "Borgs",
                    "suffix": ""
                },
                {
                    "first": "Michael",
                    "middle": [],
                    "last": "Brautbar",
                    "suffix": ""
                },
                {
                    "first": "Jennifer",
                    "middle": [
                        "T"
                    ],
                    "last": "Chayes",
                    "suffix": ""
                },
                {
                    "first": "Brendan",
                    "middle": [],
                    "last": "Lucier",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "SODA 2014",
            "volume": "",
            "issn": "",
            "pages": "946--957",
            "other_ids": {
                "DOI": [
                    "10.1137/1.9781611973402.70"
                ]
            }
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "On the approximability of influence in social networks",
            "authors": [
                {
                    "first": "Ning",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "SIAM J. Discrete Math",
            "volume": "23",
            "issn": "3",
            "pages": "1400--1415",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Information and influence propagation in social networks",
            "authors": [
                {
                    "first": "Wei",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                },
                {
                    "first": "Carlos",
                    "middle": [],
                    "last": "Castillo",
                    "suffix": ""
                },
                {
                    "first": "Laks",
                    "middle": [],
                    "last": "Vs Lakshmanan",
                    "suffix": ""
                }
            ],
            "year": 2013,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Constant thresholds can make target set selection tractable",
            "authors": [
                {
                    "first": "Morgan",
                    "middle": [],
                    "last": "Chopin",
                    "suffix": ""
                },
                {
                    "first": "Andr\u00e9",
                    "middle": [],
                    "last": "Nichterlein",
                    "suffix": ""
                },
                {
                    "first": "Rolf",
                    "middle": [],
                    "last": "Niedermeier",
                    "suffix": ""
                },
                {
                    "first": "Mathias",
                    "middle": [],
                    "last": "Weller",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Theory Comput. Syst",
            "volume": "55",
            "issn": "1",
            "pages": "61--83",
            "other_ids": {
                "DOI": [
                    "10.1007/s00224-013-9499-3"
                ]
            }
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Spread of influence in weighted networks under time and budget constraints",
            "authors": [
                {
                    "first": "Ferdinando",
                    "middle": [],
                    "last": "Cicalese",
                    "suffix": ""
                },
                {
                    "first": "Gennaro",
                    "middle": [],
                    "last": "Cordasco",
                    "suffix": ""
                },
                {
                    "first": "Luisa",
                    "middle": [],
                    "last": "Gargano",
                    "suffix": ""
                },
                {
                    "first": "Martin",
                    "middle": [],
                    "last": "Milani\u010d",
                    "suffix": ""
                },
                {
                    "first": "Joseph",
                    "middle": [],
                    "last": "Peters",
                    "suffix": ""
                },
                {
                    "first": "Ugo",
                    "middle": [],
                    "last": "Vaccaro",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "Theoretical Computer Science",
            "volume": "586",
            "issn": "",
            "pages": "40--58",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Latency-bounded target set selection in social networks",
            "authors": [
                {
                    "first": "Ferdinando",
                    "middle": [],
                    "last": "Cicalese",
                    "suffix": ""
                },
                {
                    "first": "Gennaro",
                    "middle": [],
                    "last": "Cordasco",
                    "suffix": ""
                },
                {
                    "first": "Luisa",
                    "middle": [],
                    "last": "Gargano",
                    "suffix": ""
                },
                {
                    "first": "Martin",
                    "middle": [],
                    "last": "Milani\u010d",
                    "suffix": ""
                },
                {
                    "first": "Ugo",
                    "middle": [],
                    "last": "Vaccaro",
                    "suffix": ""
                }
            ],
            "year": 2014,
            "venue": "Theoretical Computer Science",
            "volume": "535",
            "issn": "",
            "pages": "1--15",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Political polarization on twitter",
            "authors": [
                {
                    "first": "Michael",
                    "middle": [
                        "D"
                    ],
                    "last": "Conover",
                    "suffix": ""
                },
                {
                    "first": "Jacob",
                    "middle": [],
                    "last": "Ratkiewicz",
                    "suffix": ""
                },
                {
                    "first": "Matthew",
                    "middle": [
                        "R"
                    ],
                    "last": "Francisco",
                    "suffix": ""
                },
                {
                    "first": "Bruno",
                    "middle": [],
                    "last": "Gon\u00e7alves",
                    "suffix": ""
                },
                {
                    "first": "Filippo",
                    "middle": [],
                    "last": "Menczer",
                    "suffix": ""
                },
                {
                    "first": "Alessandro",
                    "middle": [],
                    "last": "Flammini",
                    "suffix": ""
                }
            ],
            "year": 2011,
            "venue": "ICWSM 201",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "N-fold integer programming via LP rounding. CoRR, abs",
            "authors": [
                {
                    "first": "Jana",
                    "middle": [],
                    "last": "Cslovjecsek",
                    "suffix": ""
                },
                {
                    "first": "Friedrich",
                    "middle": [],
                    "last": "Eisenbrand",
                    "suffix": ""
                },
                {
                    "first": "Christoph",
                    "middle": [],
                    "last": "Hunkenschr\u00f6der",
                    "suffix": ""
                },
                {
                    "first": "Lars",
                    "middle": [],
                    "last": "Rohwedder",
                    "suffix": ""
                },
                {
                    "first": "Robert",
                    "middle": [],
                    "last": "Weismantel",
                    "suffix": ""
                }
            ],
            "year": 2002,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2002.07745"
                ]
            }
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Marcin Pilipczuk, Micha\u0142 Pilipczuk, and Saket Saurabh. Parameterized Algorithms",
            "authors": [
                {
                    "first": "Marek",
                    "middle": [],
                    "last": "Cygan",
                    "suffix": ""
                },
                {
                    "first": "V",
                    "middle": [],
                    "last": "Fedor",
                    "suffix": ""
                },
                {
                    "first": "\u0141ukasz",
                    "middle": [],
                    "last": "Fomin",
                    "suffix": ""
                },
                {
                    "first": "Daniel",
                    "middle": [],
                    "last": "Kowalik",
                    "suffix": ""
                },
                {
                    "first": "D\u00e1niel",
                    "middle": [],
                    "last": "Lokshtanov",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Marx",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1007/978-3-319-21275-3"
                ]
            }
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Graph Theory, volume 173 of Graduate texts in mathematics",
            "authors": [
                {
                    "first": "Reinhard",
                    "middle": [],
                    "last": "Diestel",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Mining the network value of customers",
            "authors": [
                {
                    "first": "Pedro",
                    "middle": [],
                    "last": "Domingos",
                    "suffix": ""
                },
                {
                    "first": "Matt",
                    "middle": [],
                    "last": "Richardson",
                    "suffix": ""
                }
            ],
            "year": 2001,
            "venue": "SIGKDD",
            "volume": "",
            "issn": "",
            "pages": "57--66",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Target set selection in dense graph classes",
            "authors": [
                {
                    "first": "Pavel",
                    "middle": [],
                    "last": "Dvo\u0159\u00e1k",
                    "suffix": ""
                },
                {
                    "first": "Du\u0161an",
                    "middle": [],
                    "last": "Knop",
                    "suffix": ""
                },
                {
                    "first": "Tom\u00e1\u0161",
                    "middle": [],
                    "last": "Toufar",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "ISAAC 2018, LIPIcs",
            "volume": "18",
            "issn": "",
            "pages": "1--18",
            "other_ids": {
                "DOI": [
                    "10.4230/LIPIcs.ISAAC.2018.18"
                ]
            }
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Networks, Crowds, and Markets -Reasoning About a Highly Connected World",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "David",
                    "suffix": ""
                },
                {
                    "first": "Jon",
                    "middle": [
                        "M"
                    ],
                    "last": "Easley",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Kleinberg",
                    "suffix": ""
                }
            ],
            "year": 2010,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "DOI": [
                    "10.1017/CBO9780511761942"
                ]
            }
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "On the parameterized complexity of multiple-interval graph problems",
            "authors": [
                {
                    "first": "Michael",
                    "middle": [
                        "R"
                    ],
                    "last": "Fellows",
                    "suffix": ""
                },
                {
                    "first": "Danny",
                    "middle": [],
                    "last": "Hermelin",
                    "suffix": ""
                },
                {
                    "first": "Frances",
                    "middle": [
                        "A"
                    ],
                    "last": "Rosamond",
                    "suffix": ""
                },
                {
                    "first": "St\u00e9phane",
                    "middle": [],
                    "last": "Vialette",
                    "suffix": ""
                }
            ],
            "year": 2009,
            "venue": "Theor. Comput. Sci",
            "volume": "410",
            "issn": "1",
            "pages": "53--61",
            "other_ids": {
                "DOI": [
                    "10.1016/j.tcs.2008.09.065"
                ]
            }
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Balancing information exposure in social networks",
            "authors": [
                {
                    "first": "Kiran",
                    "middle": [],
                    "last": "Garimella",
                    "suffix": ""
                },
                {
                    "first": "Aristides",
                    "middle": [],
                    "last": "Gionis",
                    "suffix": ""
                },
                {
                    "first": "Nikos",
                    "middle": [],
                    "last": "Parotsidis",
                    "suffix": ""
                },
                {
                    "first": "Nikolaj",
                    "middle": [],
                    "last": "Tatti",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "NIPS 2017",
            "volume": "",
            "issn": "",
            "pages": "4663--4671",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Target Set Selection Parameterized by Clique-Width and Maximum Threshold",
            "authors": [
                {
                    "first": "Tim",
                    "middle": [
                        "A"
                    ],
                    "last": "Hartmann",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "SOFSEM 2018",
            "volume": "",
            "issn": "",
            "pages": "137--149",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "On the complexity of k-SAT",
            "authors": [
                {
                    "first": "Russell",
                    "middle": [],
                    "last": "Impagliazzo",
                    "suffix": ""
                },
                {
                    "first": "Ramamohan",
                    "middle": [],
                    "last": "Paturi",
                    "suffix": ""
                }
            ],
            "year": 2001,
            "venue": "J. Comput. Syst. Sci",
            "volume": "62",
            "issn": "2",
            "pages": "367--375",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF1": {
            "text": "2 is the set of edges. The neighborhood of a vertex v is the set N (v) = {u \u2208 V | {u, v} \u2208 E}.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "then output a trivial yes-instance.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "Theorem 2. 2-Opinion Target Set Selection is FPT when parameterized by the minimum size k of a vertex cover C of the underlying graph.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF4": {
            "text": "Theorem 3. 2-Opinion Target Set Selection with maximum threshold of f max can be solved in (T \u00b7 f max + 1) O(\u03c9) \u00b7 n time on graphs of treewidth \u03c9.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF6": {
            "text": "Let G be a graph with 3-pvc number k. There is a k O(k 4 ) \u00b7 n 1+o(1) time algorithm solving 2-Opinion Target Set Selection and Target Set Selection.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF7": {
            "text": "An overview of the vertex selection gadget. Red vertices are in the set Sa. Individual values of thresholds f1, f2 are above guard path vertices. All selection vertices have the same thresholds.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF8": {
            "text": "This gadget consists of n W selection vertices which are in one-to-one correspondence to the elements of W and two copies of a path on three vertices (guard paths). The central vertex of each guard path is connected to every selection vertex and one leaf (of each guard path) is in the set S a . We stress that only selection vertices might be connected to other vertices in our hardness reductions.\u25b6 Lemma 9. Let X and I be the vertex set and the set of selection vertices of a selection gadget. Any target set for the selection gadget fulfills |T",
            "latex": null,
            "type": "figure"
        },
        "FIGREF9": {
            "text": "and all vertices of guard paths receive both opinions in the activation process.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF10": {
            "text": "Theorem 10. 2-Opinion Target Set Selection is W[1]-hard when parameterized by |S a | + |S b | and the treewidth of the input graph combined, even if the maximum threshold f max is 3 and f 1 (v) \u2264 f 2 (v) for every vertex v.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF11": {
            "text": "Theorem 11. 2-Opinion Target Set Selection is W[1]-hard when parameterized by the treedepth of the input graph and the budget B combined, even if T = 4 rounds and f 1 (v) \u2264 f 2 (v) for every vertex v.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF12": {
            "text": "the Spread of Two Opinions in Sparse Social Networks(T, \u03b2, r)  of G over all decompositions for which T is a path. \u25b6 Definition 12 (Vertex cover). Let G be a graph. A set of vertices C is a vertex cover of G if each edge of G has at least one endvertex in C.\u25b6 Definition 13 (Feedback vertex number). Let G = (V, E) be a graph. A set U \u2286 V is a feedback vertex set (fvs) of G if G \u2212U is a forest, i.e., does not contain any cycle as a subgraph. The feedback vertex number (fvn) of G is the minimum size of an fvsof G.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF13": {
            "text": "Theorem 14 (Marx [27, Corollary 6.3]). If Partitioned Subgraph Isomorphism can be solved in time f (H)n o(k/ log k) , where f is an arbitrary function and k is the number of edges of the smaller graph H, then ETH fails.Since the problem can be solved for each connected component of H separately, we always assume that |V (H)| \u2264 |E(H)| + 1.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF14": {
            "text": "for c \u2208 {a, b} and, again, the same holds for v \u2032 = v, if applicable, as v is isolated in G x and C V I T 2 0 1 6 23:18 Balancing the Spread of Two Opinions in Sparse Social Networks h c (v) \u2265 0. Hence, the process P(x, r a , r b , T x a , T x b ) is viable for p and the solution T x a , T x b complies with p.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF15": {
            "text": "the minimum size solution which complies with p and it is of size s, then the algorithm did not set DPx [p] to s \u2032 with s \u2032 < s. This could only happen if DP y [p| \u03b2(y) ] = s \u2032 \u2212 cost(a, p, v) \u2212 cost(b, p, v), which would imply existence of a solution T x a , T x b \u2286 V x of size s \u2032 , as we have shown and since DP y [p| \u03b2(y) ] was computed correctly, contradicting the minimality of T x a , T x b . Moreover, there is a solution T y a , T y b \u2286 V y of size s \u2212 cost(a, p, v) \u2212 cost(b, p, v)that complies with p| \u03b2(y) . Thus, as DP y [p| \u03b2(y) ] was computed correctly, DP y [p| \u03b2(y) ] \u2264 s \u2212 cost(a, p, v) \u2212 cost(b, p, v) and therefore DP x [p] is set to at most s by the algorithm. Hence DP x [p] = s and it is computed correctly. \u25c0 \u25b6 Lemma 17. Let x be a node introducing an edge {u, v} with the child node y. If the DP y was computed correctly, and DP x is computed using the algorithm for Introduce Edge Node from page 8, then DP x is also computed correctly.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF16": {
            "text": "then the argument also holds for u by symmetry as g \u2032 c (u) = g c (u) and h \u2032 c (u) = h c (u) in this case. If r c (v) + 1 = r c (u) \u2264 T , then we have |N Gy (u) \u2229 P rc(u)\u22121 c",
            "latex": null,
            "type": "figure"
        },
        "FIGREF17": {
            "text": "due to the way we defined r c we have P i c = P i c for every i \u2208 {0, . . . , T } and each c \u2208 {a, b}. Hence the condition P T a = P T +1 a = P T b = P T +1 b remains valid. Similarly, the viability conditions are satisfied for each vertex v \u2032 \u2208 \u03b2(x) as p \u2032 | \u03b2(x) = p| \u03b2(x) . The viability conditions for the vertex v are given by the inequalities of the previous paragraph. Hence P(y, r \u2032 a , r \u2032 b , T x a , T x b ) is viable and T x a , T x b complies with p \u2032 . Next we show that if there is a solution T y a , T y b",
            "latex": null,
            "type": "figure"
        },
        "FIGREF18": {
            "text": "For each guess of activation rounds for the vertices in a 3-pvc U we build an N -fold IP. Each N -fold IP can be solved in time k O(k 4 ) \u00b7 n 1+o(1) by the result of Cslovjecsek et al.[11], since we have already observed that we have r, s \u2208 O(k) for the parameters of the N -fold IP. Since we generate k O(k) such IPs, the upperbound on the total running time of our algorithm follows.Let us first assume(G, S a , S b , f 1 , f 2 , T , B)is a Yes-instance of 2-Opinion Target Set Selection. Thus, there are sets T a , T b with |T a | + |T b | \u2264 B and an activation process P.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF20": {
            "text": "An overview of the incidence gadget with vertex selection gadget on top and edge selection gadget in bottom. The curvy edge stands for a path of length n. The yellow vertices are the connector vertices and the purple vertex is the sentry vertex.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF21": {
            "text": "as in P T a \u2229 P T b if and only if \u03b7(v) = \u03b7(e), since otherwise it receives only one of the opinions and cannot receive the other due to f 2 (s) > deg G (s). \u25c0 We prove Theorem 10 by showing the following, more general, version of it. \u25b6 Theorem 22. 2-Opinion Target Set Selection is W[1]-hard when parameterized by |S a | + |S b |, the pathwidth, and the feedback vertex number of the input graph combined, even C V I T 2 0 1 6 if the maximum threshold f max is 3 and f 1 (v) \u2264 f 2 (v) for every vertex v. Moreover, unless ETH fails, there is no algorithm for 2-Opinion Target Set Selection with f max = 3 and f 1 (v) \u2264 f 2 (v) for every vertex v running in g(k)n o(k/ log k) , where k is the sum of |S a | + |S b |, the pathwidth, and the feedback vertex number of the input graph and g is an arbitrary function.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF22": {
            "text": "|V (H)| + |E(H)|) = O(|E(H)|), the pathwidth as well as the feedback vertex number of G is O(|E(H)|). Furthermore, as S a \u222a S b \u2286 X, we also have B < |S a | + |S b | = O(|E(H)|).",
            "latex": null,
            "type": "figure"
        },
        "FIGREF23": {
            "text": "(c 1 ww \u2032 ) \u2229 P 1 b = low(v) + high w (e)andN (c 2 ww \u2032 ) \u2229 P 1 b = high(v) + low w (e) .C V I T 2 0 1 623:30 Balancing the Spread of Two Opinions in Sparse Social NetworksThus, we have c 1 ww \u2032 \u2208 P 2 b if and only if low(v) + high w (e) \u2265 |V w |. We get the following set of equivalent expressionslow(v) + high w (e) \u2265 |V w | low(v) + |V w | \u2212 low w (e) \u2265 |V w | low(v) \u2265 low w (e)Similarly we get that c 2ww \u2032 \u2208 P 2 b if and only if low(v) \u2264 low w (e) . Furthermore, we have N (c) \u2229 P 0 a = \u2205 for c \u2208 {c 1 ww \u2032 , c 2 ww \u2032 }. We conclude that c 1 ww \u2032 , c 2 ww \u2032 \u2208 P 2 bif and only if low(v) = low w (e) which is by the definition if and only if v \u2208 e \u2229 V w .",
            "latex": null,
            "type": "figure"
        },
        "FIGREF24": {
            "text": "We prove Theorem 11 by showing the following, more general, version of it.\u25b6 Theorem 25. 2-Opinion Target Set Selection is W[1]-hard when parameterized by the treedepth, the feedback vertex number, the 4-path vertex cover number of the input graph and the budget B combined, even if any successful activation process is guaranteed to stabilize in T = 4 rounds and f 1 (v) \u2264 f 2 (v) for every vertex v. Moreover, unless ETH fails, there is no algorithm for 2-Opinion Target Set Selection running in g(k)n o(k/ log k) , where k is the sum of the budget B, the treedepth, the feedback vertex number, and the 4-path vertex cover number of the input graph and g is an arbitrary function, even if any successful activation process is guaranteed to stabilize in T = 4 rounds and f 1 (v) \u2264 f 2 (v) for every vertex v.",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "Table 1 A table summarizing our results for the 2OTSS problem parameterized by treewidth. The green (light-gray) cells represent FPT results while the red (dark gray) ones represent W[1]-h results.",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "Where the notation [expr] evaluates to 1 if expr holds and evaluates to 0 if it does not hold. Note that this constraint is only needed when",
            "latex": null,
            "type": "table"
        },
        "TABREF2": {
            "text": "21 David Kempe, Jon Kleinberg, and \u00c9va Tardos. Maximizing the spread of influence through a social network. In SIGKDD, pages 137-146. ACM, 2003. 22 David Kempe, Jon M. Kleinberg, and \u00c9va Tardos. Influential nodes in a diffusion model for social networks. In ICALP 2005, pages 1127-1138. Springer, 2005. doi:10.1007/11523468\\ _91. 23 David Kempe, Jon M. Kleinberg, and \u00c9va Tardos. Maximizing the spread of influence through a social network. Theory of Computing, 11:105-147, 2015. doi:10.4086/toc.2015.v011a004. 24 Du\u0161an Knop, Martin Kouteck\u00fd, and Matthias Mnich. Voting and bribing in single-exponential time. ACM Trans. Econ. Luke Mathieson. The parameterized complexity of editing graphs for bounded degeneracy. Elchanan Mossel and S\u00e9bastien Roch. On the submodularity of influence in social networks. In STOC 2007, pages 128-134. ACM, 2007. doi:10.1145/1250790.1250811. 30 Jaroslav Ne\u0161et\u0159il and Patrice Ossona de Mendez. Sparsity -Graphs, Structures, and Algorithms. Andr\u00e9 Nichterlein, Rolf Niedermeier, Johannes Uhlmann, and Mathias Weller. On tractable cases of target set selection. Social Netw. Analys. Krzysztof Pietrzak. On the parameterized complexity of the fixed alphabet shortest common supersequence and longest common subsequence problems. J. Comput. Syst. Matthew Richardson and Pedro Domingos. Mining knowledge-sharing sites for viral marketing.",
            "latex": null,
            "type": "table"
        },
        "TABREF3": {
            "text": "). Hence, the viability condition remains valid for v in this case. Similarly, if r c",
            "latex": null,
            "type": "table"
        },
        "TABREF4": {
            "text": "). Hence, the viability condition remains valid for v in this case. Similarly, if r c",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": [
        {
            "text": "Proof. Note first that, since each edge is introduced only once, for each vertex v \u2208 \u03b2(x) = \u03b2(y) = \u03b2(z) we have N Gx (v) = N Gy (v) \u222a N Gz (v) and N Gy (v) \u2229 N Gz (v) = \u2205. Note also that V y \u2229 V z = \u03b2(x) and for each vertex v \u2208 \u03b1(y) we have N Gx (v) = N Gy (v) \u2286 V y and similarly for v \u2208 \u03b1(z).Let first p = (r a , r b , g a , g b , h a , h b ) be a valid pattern for x, p y = (r y a , r y b , g y a , g y b , h y a , h y b ) be a valid pattern for y, and p z = (r z a , r z b , g z a , g z b , h z a , h z b ) be a valid pattern for z such that for every v \u2208 \u03b2(x) and every c \u2208 {a, b} we have r y c (v) = r z c (v) = r c (v), g y c (v) + g z c (v) = g c (v), and h y c (v) + h z c (v) = h c (v). Let T y a , T y b \u2286 V y be a solution which complies with p y and T z a , T z b \u2286 V z be a solution which complies with p z . We want to show that T x a = T y a \u222aT z a and T x b = T y b \u222aT z b form a solution which complies with p and has size |T y a |+|T y b |+|T z a |+|T z b |\u2212 c\u2208{a,b} v\u2208\u03b2(x) cost(c, p, v). Since T y a , T y b complies with p y we have that v \u2208 \u03b2(y) is in T y c for c \u2208 {a, b} if and only if r y c (v) = 0 and v / \u2208 S c . However, this is exactly when cost(c, p y , v) is 1. Similarly for T z a , T z b . Since r y c = r z c = r c , it follows that T y, giving the size bound. We want to show the viability of the process P(x, r a , r b , T x a , T x b ). To this end let P i (x),c be the sets obtained in process P(x, r a , r b , T x a , T x b ), P i (y),c be the sets obtained in process P(y, r a , r b , T y a , T y b ), and P i (z),c be the sets obtained in process P(z, r a , r b , T z a , T z b ). We claimWe prove the claim by induction on i. This constitutes the base case of the induction.Assume i \u2265 1 and the claim holds for all lesser i.,c if and only if r c (v) \u2265 i, and, as r c = r y c = r z c , the condition for inclusion in P i (z),c and P i (x),c is exactly the same.This finishes the proof of the induction step and the proof of the claim.Since the processes P(y, r a , r b , T y a , T y b ) and P(z,However, this is exactly when cost(c, p, v) is 1. Furthermore, the same holds for T y c and T z c , asgiving the size bound. Before we define p y and p z we consider the modified processes corresponding to the solutions. Let P i (x),c be the sets obtained in process,c be the sets obtained in process P(y, r a , r b , T y a , T y b ), and P i (z),c be the sets obtained in processWe prove the claim by induction on i.This constitutes the base case of the induction. Assume i \u2265 1 and the claim holds for all lesser i.,c if and only if r c (v) \u2265 i, and the condition for inclusion in P i (y),c is exactly the same. For v \u2208 \u03b1(y)This finishes the proof of the induction step and the proof of the claim.A completely analogous argument shows, that . It follows directly from the definition and the notes therein that p y and p z are valid and that the processes P(y, r a , r b , T y a , T y b ) and P(z, r a , r b , T z a , T z b ) are viable for them. Thus T y a , T y b complies with p y and T z a , T z b complies with p z . To sum up, let T x a , T x b \u2286 V x be a minimum size solution which complies with p and let it be of size s. On one hand, if we had DP y [p y ] = s y and DP z [p z ] = s z for some pair of valid patterns p y = (r y a , r y b , g y a , g y b , h y a , h y b ) and p z = (r z a , r z b , g z a , g z b , h z a , h z b ) such that s y + s z \u2212 c\u2208{a,b} v\u2208\u03b2(x) cost(c, p, v) < s and for every v \u2208 \u03b2(x) and every c \u2208 {a, b} we have r y, then, since DP y [p y ] and DP y [p z ] were computed correctly, there would be corresponding solutions T y a , T y b \u2286 V y which complies with p y and is of size s y and T z a , T z b \u2286 V z which complies with p z and is of size s z . But then, as we have shown, there would be a solution which complies with p and is of size s y + s z \u2212 c\u2208{a,b} v\u2208\u03b2(x) cost(c, p, v) < s, contradicting the minimality of T x a , T x b . Hence DP x [p] \u2265 s. On the other hand, there is pair of valid patterns p y = (r y a , r y b , g y a , g y b , h y a , h y b ) and, a solution T y a , T y b \u2286 V y of size s y which complies with p y and a solution T z a , T z b \u2286 V z of size s z which complies with p z such that s y + s z \u2212 c\u2208{a,b} v\u2208\u03b2(x) cost(c, p, v) = s. Thus DP y [p y ] \u2264 s y and (c, p, v) = s Hence DP x [p] = s and it is computed correctly. \u25c0 Proof of Theorem 3. As already mentioned, we use bottom-up dynamic programming along a nice tree decomposition of width \u03c9 \u2032 = O(\u03c9) which has \u03c9 O(1) \u00b7 n nodes and can be foundhigh w (e) This finishes the description of our reduction. We denote the resulting graph G. It is not hard to verify that the graph G can be constructed in time polynomial in the sizes of G and H.By Lemma 9 we get the following T a = \u2205 in every target set of size B for G and T b contains exactly one vertex in each selection gadget in every target set of size B for G.\u25b6 Lemma 23. Let (T a , T b ) be a good pair and let v \u2208 V w and e \u2208 E ww \u2032 be the selected vertex and edge respectively. Then we haveThe second kind is a selection vertex with several groups of adjacent vertices, one for each incidence gadget it is a part of. As both of them are stars, their treedepth is 2 and they contain no paths on 4 vertices. Since |X| = 2 \u00b7 2 \u00b7 |E(H)| + 6(|V (H)| + |E(H)|) = O(|E(H)|), the treedepth, the feedback vertex number, and the 4-path vertex cover number of G are O (|E(H)|) . Furthermore, as S a \u222a S b \u2286 X, we also have B < |S a | + |S b | = O (|E(H)|) . Hence, once we verify the correctness of the reduction, the results will follow from Theorem 14 and the discussion thereafter. Suppose that (T a , T b ) is not good. Then, by Lemma 9 there exists a vertex in a guard path with v \u2208 P T a \\ P T b and thus such a pair cannot be a valid solution. By Lemma 24 we have P 4 a = V ( G), that is, the activation process for a stabilizes in four rounds. By Lemma 23 we have that the checking vertices are in P 2 b if and only if the selected vertices are incident to the selected edges, i.e., if and only if the original instance of PSI is a yes-instance. Note that if there exists a checking vertex c with c / \u2208 P 2 b , then (by Lemma 23) we also have c \u2208 P 2 a . It follows from the proof of Lemma 23 that for the verticesSince we have f 2 (c) = deg(c) and since no vertex in N (A ww \u2032 ) can be in P k b \\ P 2 b , we get that if this is the case, then (T a , T b ) is not a target set for G. Consequently, if there is no good (T a , T b ) which is a target set for G, then the original instance of PSI is a No-instance.On the other hand, if all checking vertices are in P 2 b , then by Lemma 23 we have that A ww \u2032 as well as all special vertices are in P 4 b . Furthermore, we get that all vertices incident to the checking vertices are in P 3 b , as each such vertex v has f 2 (v) equal to the number of checking vertices in N (v). Note that now we have the set V ( G) \\ P 3 b consists only of the selection vertices not in T b ; each such vertex has all its neighbors in P 3 a \u2229 P 3 b . From this it follows that P 4 b = V ( G) and the theorem follows. \u25c0",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 4261,
                    "end": 4270,
                    "text": "(c, p, v)",
                    "ref_id": null
                },
                {
                    "start": 5369,
                    "end": 5377,
                    "text": "(|E(H)|)",
                    "ref_id": null
                },
                {
                    "start": 5448,
                    "end": 5456,
                    "text": "(|E(H)|)",
                    "ref_id": null
                }
            ],
            "section": "annex"
        },
        {
            "text": "Note that we proved Theorems 10 and 11 while using the assumption that for each vertex v it holds that f 1 (v) \u2264 f 2 (v). However, this might not be always the case in applications. Now, we argue that the 2OTSS problem remains hard even if f 1 (v) \u2265 f 2 (v) holds for every vertex v.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "C.2 Constant Duration of Activation Process: Second Opinion Easier"
        },
        {
            "text": "Proof. In this proof we once again take the advantage of the known proof of W[1]-hardness of TSS for parameterization by treedepth. Let (G, f, k) be an instance of TSS where G = (V, E) is an n-vertex graph. We may assume that f (v) \u2264 n for all v \u2208 V and that k < n, as this is the case in the proof of Ben-Zwi et al. [3] . We construct an instance of 2OTSS as follows: We attach n new vertices v 1 , . . . , v n to every vertex v in G and add all of these to the set S a . We leave the set S b empty. Finally, we set f 1 (v) = n and f 2 (v) = f (v) for all v \u2208 V and f 1 (v) = n and f 2 (v) = 1 for all v / \u2208 V . This finishes the description of the 2OTSS instance (H, f 1 , f 2 , S a , S b , 4, k) .Let us first argue that if (G, f, k) is a yes-instance, then (H, f 1 , f 2 , S a , S b , 4, k) is a yesinstance. Let T \u2286 V be a target set for G of size k; it is worth pointing out that it follows C V I T 2 0 1 6 23:32 Balancing the Spread of Two Opinions in Sparse Social Networks from the proof in [3] that T activates G in 4 rounds of the activation process. We show that T a = \u2205 and T b = T is a solution to (H, f 1 , f 2 , S a , S b , k) . We observe the following.\u25b7 Claim 27. We have P 1 a = V (H), since every vertex not in S a has exactly n neighbors in S a = P 0 a . Note that this holds independently of T a and T b . \u25c1 It holds that P 1 b \u2229 V = P 0 b = T b , since k < n. Now, since T is a target set of G and since by the above claim for all vertices v of H the function f 2 (v) applies after first round, we get that V (G) \u2286 P 5 b . Finally, since f 2 (v) = 1 for all newly added vertices v, we get P 6 b = V (H). Let us now argue that if (H, f 1 , f 2 , S a , S b , 4, k) is a yes-instance, then so is (G, f, k) . Let (T a , T b ) be a solution to (H, f 1 , f 2 , S a , S b , k) . By Claim 27 we have P 1 a = V (H) independently of T a . ThereforeIf T a \u0338 = \u2205, then consider sets T a = \u2205 and T b = T a \u222a T b , suppose that P t b = V (H) and let P 0 a , P 0 b , P 1 a , P 1 b , . . . be the activation process arising from T a and T b . We still have P 1 a = V (H) and we have P 1 b \u2229 V = T b = T a \u222a T b \u2287 P 1 b \u2229 V . Therefore, we have P i b \u2287 P i b for every i and, in particular, P t b = V (H). Therefore we can assume that T a = \u2205. Next we observe that we may assume T b \u2286 V (G). To see this suppose we have v i \u2208 T b for some v \u2208 V (G) and i \u2208 [n]. We claim that T b = (T b \\ {v i }) \u222a {v} is a solution to (H, f 1 , f 2 , S a , S b , k) as well (we show this for a single vertex v, however, by a similar reasoning one can do this for all such v i simultaneously). Let P 0 b , P 1 b , . . . , P t b be the activation process arising from T b , i.e., P 0 b = T b , with P t b = V (H). Let P 0 b , P 1 b , . . . , P t b be the activation process arising from T b . We observe that v i has v as a neighbor in P 0 b = T b and f 2 (v i ) = 1, whereas v is the only vertex for which v i is a neighbor in P 0 b = T b . Therefore we have P 1 b \u2287 P 1 b , P i b \u2287 P i b for every i and, thus, P t b = V (H). Therefore we have P 1 b \u2229 V = P 0 b = T b . As P t b \u2229 V = V , by setting T = T b we obtain a solution for (G, f, k), finishing the proof.\u25c0",
            "cite_spans": [
                {
                    "start": 317,
                    "end": 320,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 1000,
                    "end": 1003,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [
                {
                    "start": 665,
                    "end": 698,
                    "text": "(H, f 1 , f 2 , S a , S b , 4, k)",
                    "ref_id": null
                },
                {
                    "start": 1112,
                    "end": 1142,
                    "text": "(H, f 1 , f 2 , S a , S b , k)",
                    "ref_id": null
                },
                {
                    "start": 1652,
                    "end": 1685,
                    "text": "(H, f 1 , f 2 , S a , S b , 4, k)",
                    "ref_id": null
                },
                {
                    "start": 1716,
                    "end": 1725,
                    "text": "(G, f, k)",
                    "ref_id": null
                },
                {
                    "start": 1762,
                    "end": 1792,
                    "text": "(H, f 1 , f 2 , S a , S b , k)",
                    "ref_id": null
                }
            ],
            "section": "\u25b6 Theorem 26. 2-Opinion Target Set Selection is W[1]-hard when parameterized by treedepth of the underlying graph and the budget B combined even if T = 6 rounds and"
        }
    ]
}