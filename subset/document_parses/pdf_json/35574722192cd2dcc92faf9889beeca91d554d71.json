{
    "paper_id": "35574722192cd2dcc92faf9889beeca91d554d71",
    "metadata": {
        "title": "Data Augmentation and CNN Classification For Automatic COVID-19 Diagnosis From CT-Scan Images On Small Dataset",
        "authors": [
            {
                "first": "Weijun",
                "middle": [],
                "last": "Tan",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "LinkSprite Technologies Longmont",
                    "location": {
                        "postCode": "80501",
                        "region": "CO",
                        "country": "USA, China"
                    }
                },
                "email": "weijun.tan@linksprite.com"
            },
            {
                "first": "Hongwei",
                "middle": [],
                "last": "Guo",
                "suffix": "",
                "affiliation": {
                    "laboratory": "",
                    "institution": "LinkSprite Technologies Longmont",
                    "location": {
                        "postCode": "80501",
                        "region": "CO",
                        "country": "USA, China"
                    }
                },
                "email": "hongwei.guo@deepcam.com"
            }
        ]
    },
    "abstract": [
        {
            "text": "We present an automatic COVID1-19 diagnosis framework from lung CT images. The focus is on signal processing and classification on small datasets with efforts putting into exploring data preparation and augmentation to improve the generalization capability of the 2D CNN classification models. We propose a unique and effective data augmentation method using multiple Hounsfield Unit (HU) normalization windows. In addition, the original slice image is cropped to exclude background, and a filter is applied to filter out closed-lung images. For the classification network, we choose to use 2D Densenet and Xception with the feature pyramid network (FPN). To further improve the classification accuracy, an ensemble of multiple CNN models and HU windows is used. On the training/validation dataset, we achieve a patient classification accuracy of 93.39%.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "Abstract"
        }
    ],
    "body_text": [
        {
            "text": "Abstract-We present an automatic COVID1-19 diagnosis framework from lung CT images. The focus is on signal processing and classification on small datasets with efforts putting into exploring data preparation and augmentation to improve the generalization capability of the 2D CNN classification models. We propose a unique and effective data augmentation method using multiple Hounsfield Unit (HU) normalization windows. In addition, the original slice image is cropped to exclude background, and a filter is applied to filter out closed-lung images. For the classification network, we choose to use 2D Densenet and Xception with the feature pyramid network (FPN). To further improve the classification accuracy, an ensemble of multiple CNN models and HU windows is used. On the training/validation dataset, we achieve a patient classification accuracy of 93.39%.",
            "cite_spans": [],
            "ref_spans": [],
            "section": ""
        },
        {
            "text": "The outbreak of the novel COVID-19 coronavirus in late 2019 has put a tremendous threat to the whole world and become one of the worst disaster in the human history. As of end late April 2021, more than 142 millions infections have been identified, more than 3 million lives have been lost, and more than 200 countries have been drastically overwhelmed [1] . Therefore, it is very critical to stop the spreading of the virus. After a person is confirmed to have COVID-19, safety measures and treatments can be taken accordingly. In [2] , thermal imaging is used to detect fever patients and face recognition is used to report and trace patients and their close contacts. Among the techniques to diagnosis COVID-19, Xray and CT-scan images are studied extensively.",
            "cite_spans": [
                {
                    "start": 353,
                    "end": 356,
                    "text": "[1]",
                    "ref_id": "BIBREF0"
                },
                {
                    "start": 532,
                    "end": 535,
                    "text": "[2]",
                    "ref_id": "BIBREF1"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "In this paper, we present an automatic diagnosis framework from chest CT scan images. Our goal is to classify COVID-19, Community-Acquired Pneumonia (CAP), and normal cases from a volume of CT scan images of a patient. We use the dataset provided in the Signal Processing Grand Challenge (SPGC) on COVID-19 of the IEEE ICASSP 2021 [3] . Our preliminary study shows that one major challenge is that the training/validation dataset is small. This challenge is common to many other datasets, and different approaches are studies to address this problem, or the broader across-domain dataset problem, through data augmentation, across-domain adaptation [4] , [5] , [6] , or using the capsule network [7] , [8] .",
            "cite_spans": [
                {
                    "start": 331,
                    "end": 334,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                },
                {
                    "start": 649,
                    "end": 652,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 655,
                    "end": 658,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 661,
                    "end": 664,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 696,
                    "end": 699,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 702,
                    "end": 705,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "In this paper, we propose a novel data augmentation technique using multiple Houndsfeld Unit (HU) normalization windows. This data augmentation aims at improving a CNN model's generalization capability. In addition, it can exploit large COVID-19 CT scan datasets that are available online but without preprocessing details. Other signal processing techniques we use include cropping the chest images to exclude background, and filtering out close-lung images.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "For the classification network, after exploring 3D CNN classification networks, lung mask segmentation networks, and quite a few 2D CNN classification networks, we choose to use Densenet [9] and Xception [10] 2D CNN classification networks with the feature pyramid network (FPN) [11] . To further improve the classification accuracy, an ensemble of multiple CNN models is used. On the provided training/validation dataset, we achieve a patient classification accuracy of 93.39%.",
            "cite_spans": [
                {
                    "start": 187,
                    "end": 190,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 204,
                    "end": 208,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 279,
                    "end": 283,
                    "text": "[11]",
                    "ref_id": "BIBREF10"
                }
            ],
            "ref_spans": [],
            "section": "I. INTRODUCTION"
        },
        {
            "text": "Due to the urgency of control of spreading of the COVID-19 virus, a lot of researches have been done to diagnose it using deep learning approaches, mostly CNNs on CT scan images or X-ray images. A few examples are [4] , [5] , [6] , [12] , [13] , [7] , [8] . For a complete review, please refer to [14] and [15] .",
            "cite_spans": [
                {
                    "start": 214,
                    "end": 217,
                    "text": "[4]",
                    "ref_id": "BIBREF3"
                },
                {
                    "start": 220,
                    "end": 223,
                    "text": "[5]",
                    "ref_id": "BIBREF4"
                },
                {
                    "start": 226,
                    "end": 229,
                    "text": "[6]",
                    "ref_id": "BIBREF5"
                },
                {
                    "start": 232,
                    "end": 236,
                    "text": "[12]",
                    "ref_id": "BIBREF11"
                },
                {
                    "start": 239,
                    "end": 243,
                    "text": "[13]",
                    "ref_id": "BIBREF12"
                },
                {
                    "start": 246,
                    "end": 249,
                    "text": "[7]",
                    "ref_id": "BIBREF6"
                },
                {
                    "start": 252,
                    "end": 255,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 297,
                    "end": 301,
                    "text": "[14]",
                    "ref_id": "BIBREF13"
                },
                {
                    "start": 306,
                    "end": 310,
                    "text": "[15]",
                    "ref_id": "BIBREF14"
                }
            ],
            "ref_spans": [],
            "section": "II. RELATED WORK"
        },
        {
            "text": "These methods can be categorized to 2D, 2D+1D, and 3D based on how information from multiple slice images are aggregated and how the final decision is made. In the 2D method, a 2D CNN classification network in used to make a prediction on slice image individually. Then to make a decision for a patient, some voting method is typically used [16] , [17] , [8] . Others use a 2D CNN network on slice image to generate embedding feature vector for every image, then the feature vectors of selected multiple or all slice images are pooled to a single global feature vector, and finally a small classification network (typically just a few fully-connection (FC) layers) is used to make a final decision. This is called 2D+1D method [18] , [19] , [20] . In these two methods, annotation for slice image is needed. The third method is a pure 3D CNN network, where slice annotation is not needed, and a selected set of or all the slice images are used as input, and the 3D network process all these input images all at once in a 3D channel space [21] , [22] , [23] .",
            "cite_spans": [
                {
                    "start": 341,
                    "end": 345,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                },
                {
                    "start": 348,
                    "end": 352,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 355,
                    "end": 358,
                    "text": "[8]",
                    "ref_id": "BIBREF7"
                },
                {
                    "start": 727,
                    "end": 731,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 734,
                    "end": 738,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 741,
                    "end": 745,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 1038,
                    "end": 1042,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 1045,
                    "end": 1049,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 1052,
                    "end": 1056,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                }
            ],
            "ref_spans": [],
            "section": "II. RELATED WORK"
        },
        {
            "text": "In the 2D CNN method, some use the lung mask segmentation, but most of them directly use the raw slice image. The COVID-MaskNet [24] uses a segmentation network to localize the disease lesion, then use a FasterCNN-based approach to do the classification on the detected lesion regions. The COVID-Net Initiative [25] , [26] have done extensive studies of COVID classification on both CT scan images and X-ray images. They also collect and publish the largest CT image dataset -so called COVIDx CT-2 dataset. In [17] , Resnet50 with FPN is used. In [16] , a combination of infection/non-infection classifier, and a COVID-19/CAP/normal classifier is used.",
            "cite_spans": [
                {
                    "start": 128,
                    "end": 132,
                    "text": "[24]",
                    "ref_id": "BIBREF23"
                },
                {
                    "start": 311,
                    "end": 315,
                    "text": "[25]",
                    "ref_id": "BIBREF24"
                },
                {
                    "start": 318,
                    "end": 322,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 510,
                    "end": 514,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 547,
                    "end": 551,
                    "text": "[16]",
                    "ref_id": "BIBREF15"
                }
            ],
            "ref_spans": [],
            "section": "II. RELATED WORK"
        },
        {
            "text": "In the 2D+1D method, in [18] , a pretrained 2D Resnet classification network is used to extract a feature vector out of every slice image, then all the features are pooled using max-pooling. This feature is sent to a few FC layers to make the final classification prediction. In [19] , a Capsule network is used to extract feature vector for every image, then these feature vectors are pooled using max-pooling into a global feature vector and a decision is made for the volume. It is claimed that this method is good for small training dataset. In [20] , a feature vector is extracted for every image, then multiple pooling methods are ensembled to generate a global feature vector before a final classification is made. In [27] , an RNN is used to aggregate 2D features, but the performance is poor.",
            "cite_spans": [
                {
                    "start": 24,
                    "end": 28,
                    "text": "[18]",
                    "ref_id": "BIBREF17"
                },
                {
                    "start": 279,
                    "end": 283,
                    "text": "[19]",
                    "ref_id": "BIBREF18"
                },
                {
                    "start": 549,
                    "end": 553,
                    "text": "[20]",
                    "ref_id": "BIBREF19"
                },
                {
                    "start": 725,
                    "end": 729,
                    "text": "[27]",
                    "ref_id": "BIBREF26"
                }
            ],
            "ref_spans": [],
            "section": "II. RELATED WORK"
        },
        {
            "text": "In the 3D CNN method, in [21] , a 3D CNN network is used with both the slice image and a segmented lung mask as input. They discard a fixed percentage of slice images at the beginning and end of a CT-scan volume. In [22] , the authors first segment the lung mask from a slice image using traditional morphological transforms, then use this mask to select good slice images and generate lung-only images. To make the number of images a fixed number, they use a 3D cubic interpolation to regenerate slice images. In [23] , a 3D CNN network using a fixed number of slice images as input is used. Instead of using a fixed 3D CNN architecture, an autoML method is used to search for best 3D CNN architecture in the network space with MobileNetV2 [28] block. In [29] , a 3D CNN with BERT is used on selected slice images of a patient. Sampling is used to make the number of slice images a fixed number.",
            "cite_spans": [
                {
                    "start": 25,
                    "end": 29,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 216,
                    "end": 220,
                    "text": "[22]",
                    "ref_id": "BIBREF21"
                },
                {
                    "start": 514,
                    "end": 518,
                    "text": "[23]",
                    "ref_id": "BIBREF22"
                },
                {
                    "start": 741,
                    "end": 745,
                    "text": "[28]",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 756,
                    "end": 760,
                    "text": "[29]",
                    "ref_id": "BIBREF28"
                }
            ],
            "ref_spans": [],
            "section": "II. RELATED WORK"
        },
        {
            "text": "In this section, we discuss all the data preparation and augmentation techniques we explore. This data augmentation is an unique one crucial to our final performance. It applies only to CT images where a HU normalization is needed.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "III. DATA AUGMENTATION AND PROCESSING"
        },
        {
            "text": "The dataset is given in DICOM format and the CT image is in Hounsfield unit (HU). So the first thing is to convert the DICOM format to image format. Most of the public datasets are in PNG or JPG format, except for [17] which uses a TIFF format. We use the PNG format in order to leverage other datasets in PNG format.",
            "cite_spans": [
                {
                    "start": 214,
                    "end": 218,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "A. DICOM to PNG Conversion"
        },
        {
            "text": "We follow the Kaggle tutorial [30] to convert the DICOM to PNG format. After reading the DICOM file, we extract the slice thickness, slope and intercept. The HU value is,",
            "cite_spans": [
                {
                    "start": 30,
                    "end": 34,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [],
            "section": "A. DICOM to PNG Conversion"
        },
        {
            "text": "As explained in the tutorial, different HU values correspond to different materials in human's body, and background. The very important step is to do the HU normalization, from HU value to the PNG value as follows,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. DICOM to PNG Conversion"
        },
        {
            "text": "where clip is a function to limit the value in range [0,1], HU max and HU max are the maximum and minimum HU value for normalization. These pair (HU min , HU max ) is called a HU window.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. DICOM to PNG Conversion"
        },
        {
            "text": "Even though there are a lot of public CT image dataset, unfortunately, we cannot find anywhere what HU window should be used in the DICOM to PNG conversion. The COVIDx-CT-2 [26] uses [-1350, 150] as default value, the [21] uses [-1200, 600]. We test different HU window in our study and find that they give very similar classification results. However, when we want to use other public dataset, our HU window has to match that of the dataset in order to have a reasonable result. We analyze the image intensity histogram of the COVIDx-CT-2 [26] , and find that if we use a HU window [-1200, 0], the SPGC image intensity histogram can match closely that of the COVIDx-CT-2. Shown in Fig. 1 are sample images using these three HU windows and a sample from COVIDx-CT-2. We notice that the Fig. 1 (a) is more natural in human eyes, but it may not be the best for CNN classification. Shown in Fig. 2 are the histograms of these four sample images. We see that the one using the HU window [-1200,0] matches that of the COVIDx-CT-2 sample well.",
            "cite_spans": [
                {
                    "start": 173,
                    "end": 177,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 183,
                    "end": 195,
                    "text": "[-1350, 150]",
                    "ref_id": null
                },
                {
                    "start": 218,
                    "end": 222,
                    "text": "[21]",
                    "ref_id": "BIBREF20"
                },
                {
                    "start": 540,
                    "end": 544,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [
                {
                    "start": 682,
                    "end": 688,
                    "text": "Fig. 1",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 786,
                    "end": 796,
                    "text": "Fig. 1 (a)",
                    "ref_id": "FIGREF0"
                },
                {
                    "start": 888,
                    "end": 894,
                    "text": "Fig. 2",
                    "ref_id": "FIGREF1"
                }
            ],
            "section": "B. HU Augmentation"
        },
        {
            "text": "To solve this problem, we propose the so called HU augmentation -to use multiple HU windows in the HU normalization,",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. HU Augmentation"
        },
        {
            "text": "(3) So the PNG datasets consist of all PNG images from P N G 1 , P N G 2 , P N G 3 , .... This not only may overcome the HU window mismatch problem, but also provides more data for training the classification network. We find in the final benchmarking that this is a crucial contribution to our results due to the improved generalization.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. HU Augmentation"
        },
        {
            "text": "Furthermore, this provides us with another ensemble -the ensemble of test data for prediction. If we use three HU windows to prepare the data, we have three images for every original DICOM slice image, we can have three predictions and we can post process them to get the best performance. we will show these effects in our experiments.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. HU Augmentation"
        },
        {
            "text": "We find that the useless background in the CT image interferes with the training and prediction of the classification network. Therefore, we use lung segmentation mask to cut of the background and only keep the useful portion. This lung segmentation uses traditional image morphological transforms, similar to the Kaggle tutorial [30] . We also train a simple object detection network and its performance is about same as the morphological transform. This process is shown in Fig.  3(b) .",
            "cite_spans": [
                {
                    "start": 330,
                    "end": 334,
                    "text": "[30]",
                    "ref_id": "BIBREF29"
                }
            ],
            "ref_spans": [
                {
                    "start": 476,
                    "end": 486,
                    "text": "Fig.  3(b)",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "C. Cropping Off Background"
        },
        {
            "text": "We use an idea similar to [17] to filter out closed lung images. We use two metrics -the percent of segmented lung in the total image, and the one in [17] . Please note that in [17] , the images are not cropped, so the filter does not work consistently. We use the idea on the cropped images, the so region of interest (ROI) is aligned more consistently on different CT images.",
            "cite_spans": [
                {
                    "start": 26,
                    "end": 30,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 150,
                    "end": 154,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 177,
                    "end": 181,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [],
            "section": "D. Filtering Closed-Lung Images"
        },
        {
            "text": "In the first metric, we keep slice images whose percent of segmented lung is more than 10% of the total image. Shown in Fig. 3(c) is an extracted lung mask. When the percentage of the white pixels is less than 10% of the total pixels, the lung is closed. In the second metric, we count the number of black pixels (intensity value < 100) in the ROI = ([120,240], [370,340]) in a slice image, as shown in the red rectangle in Fig.3(d) . Then among all the slice images of a patient, find the maximum and minimum values, and use a threshold = (maxmin)/factor, where factor is typically 1.5-3. Slice images whose number of black pixels in the ROI is less than the threshold are filtered out [17] .",
            "cite_spans": [
                {
                    "start": 687,
                    "end": 691,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [
                {
                    "start": 120,
                    "end": 129,
                    "text": "Fig. 3(c)",
                    "ref_id": "FIGREF2"
                },
                {
                    "start": 424,
                    "end": 432,
                    "text": "Fig.3(d)",
                    "ref_id": "FIGREF2"
                }
            ],
            "section": "D. Filtering Closed-Lung Images"
        },
        {
            "text": "Even with the HU augmentation, the training dataset is still very small. We explore the CT image dataset available in the literature. There are quite a lot of them, we namely some of them here COVIDx-CT-2 [26] , CNCB [31] , CT-Codeset [17] . Out of all these datasets, COVIDx-CT-2 [26] is the largest one with nearly 200K images, we decide to use it in our study.",
            "cite_spans": [
                {
                    "start": 205,
                    "end": 209,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                },
                {
                    "start": 217,
                    "end": 221,
                    "text": "[31]",
                    "ref_id": "BIBREF30"
                },
                {
                    "start": 235,
                    "end": 239,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                },
                {
                    "start": 281,
                    "end": 285,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [],
            "section": "E. Leveraging other Datasets"
        },
        {
            "text": "However, we do not want these third-party dataset to overrun the SPGC dataset. So we only use a small portion of it, so the total number from it is not more than that in the SPGC dataset. We use this dataset in both the training and validation dataset, but not in the test dataset. We only use the SPGC images in the test dataset.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "E. Leveraging other Datasets"
        },
        {
            "text": "Our 2D CNN classification network is shown in Fig. 4 . We use a network similar to [17] . Three different scale features are generated in the FPN, and a three-class classifier is applied Fig. 4. CNN-FPN classifier for COVID-19 , CAP and normal case. on every feature. At the end, these three classifiers are merged into the final three-class classifier.",
            "cite_spans": [
                {
                    "start": 83,
                    "end": 87,
                    "text": "[17]",
                    "ref_id": "BIBREF16"
                }
            ],
            "ref_spans": [
                {
                    "start": 46,
                    "end": 52,
                    "text": "Fig. 4",
                    "ref_id": null
                },
                {
                    "start": 187,
                    "end": 226,
                    "text": "Fig. 4. CNN-FPN classifier for COVID-19",
                    "ref_id": "FIGREF0"
                }
            ],
            "section": "IV. CLASSIFICATION NETWORK"
        },
        {
            "text": "Some details of our implementation are listed here. We use a three-way classification, no matter the test dataset is a twoway or three-way classification task. We use rotation, shift, and scale transforms. We find that the rotation degree has big impact on the classification performance. We limit it to 15 degree. We use batch normalization after all convolutional layers. We use the image size 224x224 in ResNet50 [32] and DenseNet121/201 [9] , and 299x299 in Xception [10] .",
            "cite_spans": [
                {
                    "start": 416,
                    "end": 420,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 441,
                    "end": 444,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                },
                {
                    "start": 471,
                    "end": 475,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                }
            ],
            "ref_spans": [],
            "section": "IV. CLASSIFICATION NETWORK"
        },
        {
            "text": "We test different networks, including ResNet50 [32] , MobileNetV2 [28] , Xception [10] , DenseNet121 and DenseNet201 [9] . We find that the DenseNet trains faster and achieves good performance. So in our ablation study, we use the DenseNet201. In the final classification benchmarking, we use an ensemble of the Xception, DenseNet121, and DenseNet201. In order not to use too much CPU or GPU memory at a time, we run the three models one by one and post-process the results.",
            "cite_spans": [
                {
                    "start": 47,
                    "end": 51,
                    "text": "[32]",
                    "ref_id": "BIBREF31"
                },
                {
                    "start": 66,
                    "end": 70,
                    "text": "[28]",
                    "ref_id": "BIBREF27"
                },
                {
                    "start": 82,
                    "end": 86,
                    "text": "[10]",
                    "ref_id": "BIBREF9"
                },
                {
                    "start": 117,
                    "end": 120,
                    "text": "[9]",
                    "ref_id": "BIBREF8"
                }
            ],
            "ref_spans": [],
            "section": "IV. CLASSIFICATION NETWORK"
        },
        {
            "text": "We also test a regular 2D CNN classification network without FPN, such as a ResNet50, as well as a small private CNN, we find that they can achieve good accuracy with all our other data augmentation and training techniques. However, the CNN with FPN can achieve a better accuracy, usually 1 \u2212 2% better than the network without FPN.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "IV. CLASSIFICATION NETWORK"
        },
        {
            "text": "We use Keras-2.3.0 and Tensorflow-GPU-2.2 in our implementation. We use learning rate 1E-4 at the beginning then adjust to 1E-5. We use typically 50 epochs to train the CNN network, except for fine tuning where a smaller number of epochs is used. A class weight is used when the numbers of images for the three classes -COVID, CAP, normal are unbalanced.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "V. EXPERIMENTS"
        },
        {
            "text": "The dataset provided by SPGC [3] includes 307 patients, which are diagnosed by medical experts. Out of these patients, 171 patients have COVID-19, 60 patients have CAP, and the rest 76 are normal cases. This dataset is not small, however, only a small portion including 55 COVID-19 patients and 25 CAP patients has slice annotations. This limited slice annotation turns out a big challenge in the slice based classification.",
            "cite_spans": [
                {
                    "start": 29,
                    "end": 32,
                    "text": "[3]",
                    "ref_id": "BIBREF2"
                }
            ],
            "ref_spans": [],
            "section": "A. Dataset"
        },
        {
            "text": "Since we use a slice image based classification model, we use all the annotated slice images as the training and validation datasets. For COVID and normal cases, we use a 7:3 split ratio for training and validation dataset, and use a 9:1 split ratio for the CAP cases since there are a lot less of them. All COVID/CAP patients in the validation dataset are not used in the training, only a small portion of slice images of the normal patients are used in the training. In the patient-wise classification, we use all the patients without slice annotation as the validation dataset.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "A. Dataset"
        },
        {
            "text": "Furthermore, we leverage the CT image dataset we can find online -the COVIDx-CT-2 dataset [26] . The combined dataset makes our trained model generalize much better than using one single HU window alone.",
            "cite_spans": [
                {
                    "start": 90,
                    "end": 94,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [],
            "section": "A. Dataset"
        },
        {
            "text": "The slice based classification network predicts a result for every slice image. Our goal, however, is to have a classification result on patient. Given the number of slice images per patient, we use two metrics to make the final decision. In the first method, we use a slice threshold th s , Please note that, in our final decision, we do not do majority vote on multiple model predictions on every image. Instead, we mix all image predictions from all three models and make a final decision based on the number of predictions be-longing to the three classes. The performance of this rule is noticeably better than the majority vote on a single image.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. From Slice Classification to Patient Classification"
        },
        {
            "text": "At validation/test time, we first do slice image classification, then use the above rule to make decision for a patient. We use the un-annotated patients as the validation patient dataset. We optimize the parameters of our classifier on the validation dataset, then use the optimized parameters on the final test datasets for the challenge submission.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "B. From Slice Classification to Patient Classification"
        },
        {
            "text": "The use of HU augmentation is our unique novelty. So we do some ablation study to demonstrate its effects using the DenseNet201-FPN network. In this experiment we use the factor = 1.5 in the closed-lung filtering. We use three HU windows: SPGC3 = [-1000,400], SPGC4 = [-1200,0], SPGC6 = [-1200,600]. In Table 1 , we list the result of individual HU window in the first panel, and list the result of the HU augmentation (three HU windows combined) in the second panel. From the results in the first panel, we notice that the SPGC3 and SPGC4 are two good HU windows, while SPGC6 is not a good one. From the results in the second panel, the test results of three HU windows are about the same, even though their sensitivities (not shown) are not the same. Even the individually bad HU window (SPGC6) now has a good performance.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 303,
                    "end": 310,
                    "text": "Table 1",
                    "ref_id": null
                }
            ],
            "section": "C. HU Augmentation"
        },
        {
            "text": "In addition to the HU augmentation, we use the COVIDx-CT-2 dataset [26] in our training. As we mentioned before, we only use a small portion of it, so it does not overrun the SPGC dataset. So in our training dataset, we include both the three HU window augmented SPGC dataset, and the selected COVIDx-CT-2 dataset. The patient classification results are listed in the third panel of Table I .",
            "cite_spans": [
                {
                    "start": 67,
                    "end": 71,
                    "text": "[26]",
                    "ref_id": "BIBREF25"
                }
            ],
            "ref_spans": [
                {
                    "start": 383,
                    "end": 390,
                    "text": "Table I",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "D. Leveraging Other Dataset"
        },
        {
            "text": "From the results, we notice that the addition of the extra training data has a big boost to the patient classification accuracy, from previous about 82% to nearly 91%. On the other hand, SPGC6 is a lot worse than the SPGC3 and SPGC4, even though its accuracy is improved from without using COVIDx-CT-2 dataset. Based on the poor performance of SPGC6, we do not use it in the ensemble of HU windows in the final tests.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "D. Leveraging Other Dataset"
        },
        {
            "text": "We test a few classification networks including ResNet50, MobileNetV2, and others. Based on the patient classification accuracy results, we choose to use the Xception, DenseNet101 and DenseNet201. The individual model results are listed in first panel of Table II. The three networks give similar patient classification accuracy results on the two HU window datasets SPGC3 and SPGC4. The DenseNet201 has the best accuracy on SPGC3, and the Xception has best accuracy on SPGC4. Adding all three network into an ensemble, and on the ensemble of SPGC3 and SPGC4, our final accuracy result on the SPGC training/validation dataset is 93.39%.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 255,
                    "end": 264,
                    "text": "Table II.",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "E. Ensemble of Classification Models and HU Windows"
        },
        {
            "text": "On the new test dataset that may come from a different domain, we can tune the thresholds th s and th p on a small portion of the dateset to achieve good performance, then use the two thresholds on the rest of the data. Listed in Table III are the results. Since the ground truth of this dataset has not been released, we cannot optimize the parameters th s and th p other than using the optimized values on the validation dataset.",
            "cite_spans": [],
            "ref_spans": [
                {
                    "start": 230,
                    "end": 239,
                    "text": "Table III",
                    "ref_id": "TABREF0"
                }
            ],
            "section": "F. Results on the Test Dataset"
        },
        {
            "text": "We provide a solution for the COVID-19 automatic diagnosis on the SPGC dataset. The key novelty is a data augmentation using multiple HU normalization windows. With all techniques put together, we achieve a patient classification accuracy 93.39% on the provided training/validation dataset, and an accuracy at least 81.11% on the test dataset.",
            "cite_spans": [],
            "ref_spans": [],
            "section": "VI. CONCLUSIONS"
        }
    ],
    "bib_entries": {
        "BIBREF0": {
            "ref_id": "b0",
            "title": "Coronavirus disease (covid-19) pandemic",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF1": {
            "ref_id": "b1",
            "title": "Application of face recognition in tracing covid-19 patients and close contacts",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE ICMLA",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF2": {
            "ref_id": "b2",
            "title": "2021 ieee icassp signal processing grand challenge (spgc) covid-19 radiomics",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF3": {
            "ref_id": "b3",
            "title": "Hybrid-covid: a novel hybrid 2d/3d cnn based on cross-domain adaptation approach for covid-19 screening from chest x-ray images",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Bayoudh",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Hamdaoui",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Mtibaa",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Physical and Engineering Sciences in Medicine",
            "volume": "43",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF4": {
            "ref_id": "b4",
            "title": "Soda: Detecting covid-19 in chest xrays with semi-supervised open set domain adaptation",
            "authors": [
                {
                    "first": "J",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Jing",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF5": {
            "ref_id": "b5",
            "title": "Contrastive cross-site learning with redesigned net for covid-19 ct classification",
            "authors": [
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Dou",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Journal of Biomedical and Health Informatics",
            "volume": "24",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF6": {
            "ref_id": "b6",
            "title": "Covid-caps: A capsule networkbased framework for identification of covid-19 cases from c-ray images",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Afshar",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Heidarian",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Naderkhani",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Oikonomou",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Plataniotis",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Mohammadi",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Pattern Recognition Letters",
            "volume": "138",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF7": {
            "ref_id": "b7",
            "title": "Covid-fact: A fully-automated capsule network-based framework for identification of covid-19 cases from chest ct scans",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Heidarian",
                    "suffix": ""
                },
                {
                    "first": "P",
                    "middle": [],
                    "last": "Afshar",
                    "suffix": ""
                },
                {
                    "first": "N",
                    "middle": [],
                    "last": "Enshaei",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [],
                    "last": "Naderkhani",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Oikonomou",
                    "suffix": ""
                },
                {
                    "first": "F",
                    "middle": [
                        "B"
                    ],
                    "last": "Fard",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Samimi",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "N"
                    ],
                    "last": "Plataniotis",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Mohammadi",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [
                        "J"
                    ],
                    "last": "Rafiee",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF8": {
            "ref_id": "b8",
            "title": "Densely connected convolutional networks",
            "authors": [
                {
                    "first": "G",
                    "middle": [],
                    "last": "Huang",
                    "suffix": ""
                },
                {
                    "first": "Z",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Maaten",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [
                        "Q"
                    ],
                    "last": "Weinberger",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF9": {
            "ref_id": "b9",
            "title": "Xception: Deep learning with depthwise separable convolutions",
            "authors": [
                {
                    "first": "F",
                    "middle": [],
                    "last": "Chollet",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF10": {
            "ref_id": "b10",
            "title": "Feature pyramid networks for object detection",
            "authors": [
                {
                    "first": "P",
                    "middle": [],
                    "last": "Lin",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Doll\u00e1r",
                    "suffix": ""
                },
                {
                    "first": "K",
                    "middle": [],
                    "last": "Girshick",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Hariharan",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Belongie",
                    "suffix": ""
                }
            ],
            "year": 2017,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF11": {
            "ref_id": "b11",
            "title": "Deep learning approaches for covid-19 detection based on chest x-ray images",
            "authors": [
                {
                    "first": "S",
                    "middle": [],
                    "last": "Sabour",
                    "suffix": ""
                },
                {
                    "first": "G",
                    "middle": [],
                    "last": "Frosst",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Hinton",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Expert Systems with Applications",
            "volume": "164",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF12": {
            "ref_id": "b12",
            "title": "Multi-task deep learning based ct imaging analysis for covid-19 pneumonia: Classification and segmentation",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Amyar",
                    "suffix": ""
                },
                {
                    "first": "R",
                    "middle": [],
                    "last": "Modzelewski",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ruan",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Computers in Biology and Medicine",
            "volume": "126",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF13": {
            "ref_id": "b13",
            "title": "Review on diagnosis of covid-19 from chest ct images using artificial intelligence",
            "authors": [
                {
                    "first": "I",
                    "middle": [],
                    "last": "Ozsahin",
                    "suffix": ""
                },
                {
                    "first": "B",
                    "middle": [],
                    "last": "Sekeroglu",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Musa",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Mustapha",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Ozsahin",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Computational and Mathematical Methods",
            "volume": "2020",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF14": {
            "ref_id": "b14",
            "title": "Systematic review of artificial intelligence techniques in the detection and classification of covid-19 medical images in terms of evaluation and benchmarking: Taxonomy analysis, challenges, future solutions and methodological aspects",
            "authors": [
                {
                    "first": "O",
                    "middle": [],
                    "last": "Albahri",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "J Infect Public Health",
            "volume": "",
            "issn": "",
            "pages": "1381--1396",
            "other_ids": {}
        },
        "BIBREF15": {
            "ref_id": "b15",
            "title": "Detecting covid-19 and community acquired pneumonia using chest ct scan images with deep learning",
            "authors": [
                {
                    "first": "Shubham",
                    "middle": [],
                    "last": "Chaudhary",
                    "suffix": ""
                },
                {
                    "first": "Vinit",
                    "middle": [],
                    "last": "Sadbhawna",
                    "suffix": ""
                },
                {
                    "first": "Badri",
                    "middle": [],
                    "last": "Jakhetiya",
                    "suffix": ""
                },
                {
                    "first": "Ujjwal",
                    "middle": [],
                    "last": "Subudhi",
                    "suffix": ""
                },
                {
                    "first": "Sharath",
                    "middle": [],
                    "last": "Baid",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Guntuku",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "ICASSP",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF16": {
            "ref_id": "b16",
            "title": "A fully automated deep learning-based network for detecting covid-19 from a new and large lung ct scan dataset",
            "authors": [
                {
                    "first": "M",
                    "middle": [],
                    "last": "Rahimzadeh",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Attar",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [
                        "M"
                    ],
                    "last": "Sakhaei",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF17": {
            "ref_id": "b17",
            "title": "Artificial intelligence distinguishes covid-19 from community acquired pneumonia on chest ct",
            "authors": [
                {
                    "first": "Lin",
                    "middle": [],
                    "last": "Li",
                    "suffix": ""
                },
                {
                    "first": "Lixin",
                    "middle": [],
                    "last": "Qin",
                    "suffix": ""
                },
                {
                    "first": "Zeguo",
                    "middle": [],
                    "last": "Xu",
                    "suffix": ""
                },
                {
                    "first": "Youbing",
                    "middle": [],
                    "last": "Yin",
                    "suffix": ""
                },
                {
                    "first": "Xin",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Bin",
                    "middle": [],
                    "last": "Kong",
                    "suffix": ""
                },
                {
                    "first": "Junjie",
                    "middle": [],
                    "last": "Bai",
                    "suffix": ""
                },
                {
                    "first": "Yi",
                    "middle": [],
                    "last": "Lu",
                    "suffix": ""
                },
                {
                    "first": "Zhenghan",
                    "middle": [],
                    "last": "Fang",
                    "suffix": ""
                },
                {
                    "first": "Qi",
                    "middle": [],
                    "last": "Song",
                    "suffix": ""
                },
                {
                    "first": "Kunlin",
                    "middle": [],
                    "last": "Cao",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Radiology",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF18": {
            "ref_id": "b18",
            "title": "Ct-caps: Feature extraction-based automated framework for covid-19 disease identification from chest ct scans using capsule networks",
            "authors": [
                {
                    "first": "Shahin",
                    "middle": [],
                    "last": "Heidarian",
                    "suffix": ""
                },
                {
                    "first": "Parnian",
                    "middle": [],
                    "last": "Afshar",
                    "suffix": ""
                },
                {
                    "first": "Arash",
                    "middle": [],
                    "last": "Mohammadi",
                    "suffix": ""
                },
                {
                    "first": "Javad",
                    "middle": [],
                    "last": "Rafiee",
                    "suffix": ""
                },
                {
                    "first": "Anastasia",
                    "middle": [],
                    "last": "Oikonomou",
                    "suffix": ""
                },
                {
                    "first": "Konstantinos",
                    "middle": [],
                    "last": "Plataniotis",
                    "suffix": ""
                },
                {
                    "first": "Farnoosh",
                    "middle": [],
                    "last": "Naderkhani",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "ICASSP",
            "volume": "",
            "issn": "",
            "pages": "1040--1044",
            "other_ids": {}
        },
        "BIBREF19": {
            "ref_id": "b19",
            "title": "Multi-scale residual network for covid-19 diagnosis using ct-scans",
            "authors": [
                {
                    "first": "Pratyush",
                    "middle": [],
                    "last": "Garg",
                    "suffix": ""
                },
                {
                    "first": "Rishabh",
                    "middle": [],
                    "last": "Ranjan",
                    "suffix": ""
                },
                {
                    "first": "Kamini",
                    "middle": [],
                    "last": "Upadhyay",
                    "suffix": ""
                },
                {
                    "first": "Monika",
                    "middle": [],
                    "last": "Agrawal",
                    "suffix": ""
                },
                {
                    "first": "Desh",
                    "middle": [],
                    "last": "Deepak",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "ICASSP",
            "volume": "",
            "issn": "",
            "pages": "8558--8562",
            "other_ids": {}
        },
        "BIBREF20": {
            "ref_id": "b20",
            "title": "A weakly-supervised framework for covid-19 classification and lesion localization from chest ct",
            "authors": [
                {
                    "first": "X",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Deng",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Fu",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Zhou",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Feng",
                    "suffix": ""
                },
                {
                    "first": "H",
                    "middle": [],
                    "last": "Ma",
                    "suffix": ""
                },
                {
                    "first": "W",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Q",
                    "middle": [],
                    "last": "Zheng",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "IEEE Transactions on Medical Imaging",
            "volume": "39",
            "issn": "",
            "pages": "2615--2625",
            "other_ids": {}
        },
        "BIBREF21": {
            "ref_id": "b21",
            "title": "Covid-19 diagnostic using 3d deep transfer learning for classification of volumetric computerised tomography chest scans",
            "authors": [
                {
                    "first": "Shuohan",
                    "middle": [],
                    "last": "Xue",
                    "suffix": ""
                },
                {
                    "first": "Charith",
                    "middle": [],
                    "last": "Abhayaratne",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "ICASSP",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF22": {
            "ref_id": "b22",
            "title": "Automated model design and benchmarking of 3d deep learning models for covid-19 detection with chest ct scans",
            "authors": [
                {
                    "first": "Xin",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "Shihao",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "Xiaowen",
                    "middle": [],
                    "last": "Chu",
                    "suffix": ""
                },
                {
                    "first": "Shaohuai",
                    "middle": [],
                    "last": "Shi",
                    "suffix": ""
                },
                {
                    "first": "Jiangping",
                    "middle": [],
                    "last": "Tang",
                    "suffix": ""
                },
                {
                    "first": "Xin",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "Chenggang",
                    "middle": [],
                    "last": "Yan",
                    "suffix": ""
                },
                {
                    "first": "Jiyong",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "Guiguang",
                    "middle": [],
                    "last": "Ding",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "Proceedings of the AAAI Conference on Artificial Intelligence",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF23": {
            "ref_id": "b23",
            "title": "Covid-ct-mask-net: Prediction of covid-19 from ct scans using regional features",
            "authors": [
                {
                    "first": "Aram",
                    "middle": [],
                    "last": "Ter-Sarkisov",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF24": {
            "ref_id": "b24",
            "title": "Covidnet-ct: A tailored deep convolutional neural network design for detection of covid-19 cases from chest ct images",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Gunraj",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Wang",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wong",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Frontiers in Medicine",
            "volume": "7",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF25": {
            "ref_id": "b25",
            "title": "Covid-net ct-2: Enhanced deep neural networks for detection of covid-19 from chest ct images through bigger, more diverse learning",
            "authors": [
                {
                    "first": "H",
                    "middle": [],
                    "last": "Gunraj",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Sabri",
                    "suffix": ""
                },
                {
                    "first": "D",
                    "middle": [],
                    "last": "Koff",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Wong",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF26": {
            "ref_id": "b26",
            "title": "Mia-cov19d: Covid-19 detection through 3-d chest ct image analysis",
            "authors": [
                {
                    "first": "D",
                    "middle": [],
                    "last": "Kollias",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Arsenos",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Soukissian",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Kollias",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {
                "arXiv": [
                    "arXiv:2106.07524"
                ]
            }
        },
        "BIBREF27": {
            "ref_id": "b27",
            "title": "Mo-bilenetv2: Inverted residuals and linear bottlenecks",
            "authors": [
                {
                    "first": "A",
                    "middle": [],
                    "last": "Sandler",
                    "suffix": ""
                },
                {
                    "first": "M",
                    "middle": [],
                    "last": "Howard",
                    "suffix": ""
                },
                {
                    "first": "A",
                    "middle": [],
                    "last": "Zhu",
                    "suffix": ""
                },
                {
                    "first": "L",
                    "middle": [],
                    "last": "Zhmoginov",
                    "suffix": ""
                },
                {
                    "first": "",
                    "middle": [],
                    "last": "Chen",
                    "suffix": ""
                }
            ],
            "year": 2018,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF28": {
            "ref_id": "b28",
            "title": "A 3d cnn network with bert for automatic covid-19 diagnosis from ct-scan images",
            "authors": [
                {
                    "first": "W",
                    "middle": [],
                    "last": "Tan",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                }
            ],
            "year": 2021,
            "venue": "ICCV Workshops",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF29": {
            "ref_id": "b29",
            "title": "full-preprocessing-tutorial",
            "authors": [],
            "year": null,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF30": {
            "ref_id": "b30",
            "title": "Clinically applicable ai system for accurate diagnosis, quantitative measurements and prognosis of covid-19 pneumonia using computed tomography",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Liu",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Shen",
                    "suffix": ""
                }
            ],
            "year": 2020,
            "venue": "Cell",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        },
        "BIBREF31": {
            "ref_id": "b31",
            "title": "Deep residual learning for image recognition",
            "authors": [
                {
                    "first": "K",
                    "middle": [],
                    "last": "He",
                    "suffix": ""
                },
                {
                    "first": "X",
                    "middle": [],
                    "last": "Zhang",
                    "suffix": ""
                },
                {
                    "first": "S",
                    "middle": [],
                    "last": "Ren",
                    "suffix": ""
                },
                {
                    "first": "J",
                    "middle": [],
                    "last": "Sun",
                    "suffix": ""
                }
            ],
            "year": 2015,
            "venue": "",
            "volume": "",
            "issn": "",
            "pages": "",
            "other_ids": {}
        }
    },
    "ref_entries": {
        "FIGREF0": {
            "text": "Sample images with three HU windows.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF1": {
            "text": "Histogram of the sample images.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF2": {
            "text": "Processing of CT-scan image, (a) an original image with a circle background mask, (b) after cropping off background, (c) the extracted lung mask, (d) the closed-lung filtering window.",
            "latex": null,
            "type": "figure"
        },
        "FIGREF3": {
            "text": "if n(COV ID) > n(CAP ) >= th s , decision = COV ID else if n(CAP ) > n(COV ID) >= th s , decision = CAP else if n(COV ID) >= th s , decision = COV ID else if n(CAP ) >= th s , decision = CAP else, decision = N ormal (4) where n() is the number of slice classification. We can change this rule to use the percent threshold th p , where the n() is replaced by a percent n() -the ratio of the number of slice classification of each class out of the total slice number of every patient.",
            "latex": null,
            "type": "figure"
        },
        "TABREF0": {
            "text": "",
            "latex": null,
            "type": "table"
        },
        "TABREF1": {
            "text": "CLASSIFICATION ACCURACY AND SENSITIVITY (COVID,CAP,NORMAL) ON THE TRAINING/VALIDATION DATASET.TABLE III PPATIENT CLASSIFICATION ACCURACY AND SENSITIVITY (COVID,CAP,NORMAL) ON THE TEST DATASET.",
            "latex": null,
            "type": "table"
        }
    },
    "back_matter": []
}